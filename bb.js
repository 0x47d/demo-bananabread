var WasmJS = function(Module) {
  Module = Module || {};

var Module;
if (!Module) Module = (typeof WasmJS !== "undefined" ? WasmJS : null) || {};
var moduleOverrides = {};
for (var key in Module) {
 if (Module.hasOwnProperty(key)) {
  moduleOverrides[key] = Module[key];
 }
}
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;
if (Module["ENVIRONMENT"]) {
 if (Module["ENVIRONMENT"] === "WEB") {
  ENVIRONMENT_IS_WEB = true;
 } else if (Module["ENVIRONMENT"] === "WORKER") {
  ENVIRONMENT_IS_WORKER = true;
 } else if (Module["ENVIRONMENT"] === "NODE") {
  ENVIRONMENT_IS_NODE = true;
 } else if (Module["ENVIRONMENT"] === "SHELL") {
  ENVIRONMENT_IS_SHELL = true;
 } else {
  throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");
 }
} else {
 ENVIRONMENT_IS_WEB = typeof window === "object";
 ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
 ENVIRONMENT_IS_NODE = typeof process === "object" && typeof require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
 ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}
if (ENVIRONMENT_IS_NODE) {
 if (!Module["print"]) Module["print"] = console.log;
 if (!Module["printErr"]) Module["printErr"] = console.warn;
 var nodeFS;
 var nodePath;
 Module["read"] = function read(filename, binary) {
  if (!nodeFS) nodeFS = require("fs");
  if (!nodePath) nodePath = require("path");
  filename = nodePath["normalize"](filename);
  var ret = nodeFS["readFileSync"](filename);
  if (!ret && filename != nodePath["resolve"](filename)) {
   filename = path.join(__dirname, "..", "src", filename);
   ret = nodeFS["readFileSync"](filename);
  }
  if (ret && !binary) ret = ret.toString();
  return ret;
 };
 Module["readBinary"] = function readBinary(filename) {
  var ret = Module["read"](filename, true);
  if (!ret.buffer) {
   ret = new Uint8Array(ret);
  }
  assert(ret.buffer);
  return ret;
 };
 Module["load"] = function load(f) {
  globalEval(read(f));
 };
 if (!Module["thisProgram"]) {
  if (process["argv"].length > 1) {
   Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
  } else {
   Module["thisProgram"] = "unknown-program";
  }
 }
 Module["arguments"] = process["argv"].slice(2);
 if (typeof module !== "undefined") {
  module["exports"] = Module;
 }
 process["on"]("uncaughtException", (function(ex) {
  if (!(ex instanceof ExitStatus)) {
   throw ex;
  }
 }));
 Module["inspect"] = (function() {
  return "[Emscripten Module object]";
 });
} else if (ENVIRONMENT_IS_SHELL) {
 if (!Module["print"]) Module["print"] = print;
 if (typeof printErr != "undefined") Module["printErr"] = printErr;
 if (typeof read != "undefined") {
  Module["read"] = read;
 } else {
  Module["read"] = function read() {
   throw "no read() available (jsc?)";
  };
 }
 Module["readBinary"] = function readBinary(f) {
  if (typeof readbuffer === "function") {
   return new Uint8Array(readbuffer(f));
  }
  var data = read(f, "binary");
  assert(typeof data === "object");
  return data;
 };
 if (typeof scriptArgs != "undefined") {
  Module["arguments"] = scriptArgs;
 } else if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 Module["read"] = function read(url) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, false);
  xhr.send(null);
  return xhr.responseText;
 };
 Module["readAsync"] = function readAsync(url, onload, onerror) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, true);
  xhr.responseType = "arraybuffer";
  xhr.onload = function xhr_onload() {
   if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
    onload(xhr.response);
   } else {
    onerror();
   }
  };
  xhr.onerror = onerror;
  xhr.send(null);
 };
 if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
 if (typeof console !== "undefined") {
  if (!Module["print"]) Module["print"] = function print(x) {
   console.log(x);
  };
  if (!Module["printErr"]) Module["printErr"] = function printErr(x) {
   console.warn(x);
  };
 } else {
  var TRY_USE_DUMP = false;
  if (!Module["print"]) Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? (function(x) {
   dump(x);
  }) : (function(x) {});
 }
 if (ENVIRONMENT_IS_WORKER) {
  Module["load"] = importScripts;
 }
 if (typeof Module["setWindowTitle"] === "undefined") {
  Module["setWindowTitle"] = (function(title) {
   document.title = title;
  });
 }
} else {
 throw "Unknown runtime environment. Where are we?";
}
function globalEval(x) {
 eval.call(null, x);
}
if (!Module["load"] && Module["read"]) {
 Module["load"] = function load(f) {
  globalEval(Module["read"](f));
 };
}
if (!Module["print"]) {
 Module["print"] = (function() {});
}
if (!Module["printErr"]) {
 Module["printErr"] = Module["print"];
}
if (!Module["arguments"]) {
 Module["arguments"] = [];
}
if (!Module["thisProgram"]) {
 Module["thisProgram"] = "./this.program";
}
Module.print = Module["print"];
Module.printErr = Module["printErr"];
Module["preRun"] = [];
Module["postRun"] = [];
for (var key in moduleOverrides) {
 if (moduleOverrides.hasOwnProperty(key)) {
  Module[key] = moduleOverrides[key];
 }
}
moduleOverrides = undefined;
var Runtime = {
 setTempRet0: (function(value) {
  tempRet0 = value;
 }),
 getTempRet0: (function() {
  return tempRet0;
 }),
 stackSave: (function() {
  return STACKTOP;
 }),
 stackRestore: (function(stackTop) {
  STACKTOP = stackTop;
 }),
 getNativeTypeSize: (function(type) {
  switch (type) {
  case "i1":
  case "i8":
   return 1;
  case "i16":
   return 2;
  case "i32":
   return 4;
  case "i64":
   return 8;
  case "float":
   return 4;
  case "double":
   return 8;
  default:
   {
    if (type[type.length - 1] === "*") {
     return Runtime.QUANTUM_SIZE;
    } else if (type[0] === "i") {
     var bits = parseInt(type.substr(1));
     assert(bits % 8 === 0);
     return bits / 8;
    } else {
     return 0;
    }
   }
  }
 }),
 getNativeFieldSize: (function(type) {
  return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
 }),
 STACK_ALIGN: 16,
 prepVararg: (function(ptr, type) {
  if (type === "double" || type === "i64") {
   if (ptr & 7) {
    assert((ptr & 7) === 4);
    ptr += 4;
   }
  } else {
   assert((ptr & 3) === 0);
  }
  return ptr;
 }),
 getAlignSize: (function(type, size, vararg) {
  if (!vararg && (type == "i64" || type == "double")) return 8;
  if (!type) return Math.min(size, 8);
  return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
 }),
 dynCall: (function(sig, ptr, args) {
  if (args && args.length) {
   if (!args.splice) args = Array.prototype.slice.call(args);
   args.splice(0, 0, ptr);
   return Module["dynCall_" + sig].apply(null, args);
  } else {
   return Module["dynCall_" + sig].call(null, ptr);
  }
 }),
 functionPointers: [],
 addFunction: (function(func) {
  for (var i = 0; i < Runtime.functionPointers.length; i++) {
   if (!Runtime.functionPointers[i]) {
    Runtime.functionPointers[i] = func;
    return 2 * (1 + i);
   }
  }
  throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
 }),
 removeFunction: (function(index) {
  Runtime.functionPointers[(index - 2) / 2] = null;
 }),
 warnOnce: (function(text) {
  if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
  if (!Runtime.warnOnce.shown[text]) {
   Runtime.warnOnce.shown[text] = 1;
   Module.printErr(text);
  }
 }),
 funcWrappers: {},
 getFuncWrapper: (function(func, sig) {
  assert(sig);
  if (!Runtime.funcWrappers[sig]) {
   Runtime.funcWrappers[sig] = {};
  }
  var sigCache = Runtime.funcWrappers[sig];
  if (!sigCache[func]) {
   sigCache[func] = function dynCall_wrapper() {
    return Runtime.dynCall(sig, func, arguments);
   };
  }
  return sigCache[func];
 }),
 getCompilerSetting: (function(name) {
  throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
 }),
 stackAlloc: (function(size) {
  var ret = STACKTOP;
  STACKTOP = STACKTOP + size | 0;
  STACKTOP = STACKTOP + 15 & -16;
  return ret;
 }),
 staticAlloc: (function(size) {
  var ret = STATICTOP;
  STATICTOP = STATICTOP + size | 0;
  STATICTOP = STATICTOP + 15 & -16;
  return ret;
 }),
 dynamicAlloc: (function(size) {
  var ret = DYNAMICTOP;
  DYNAMICTOP = DYNAMICTOP + size | 0;
  DYNAMICTOP = DYNAMICTOP + 15 & -16;
  if (DYNAMICTOP >= TOTAL_MEMORY) {
   var success = enlargeMemory();
   if (!success) {
    DYNAMICTOP = ret;
    return 0;
   }
  }
  return ret;
 }),
 alignMemory: (function(size, quantum) {
  var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
  return ret;
 }),
 makeBigInt: (function(low, high, unsigned) {
  var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * +4294967296 : +(low >>> 0) + +(high | 0) * +4294967296;
  return ret;
 }),
 GLOBAL_BASE: 8,
 QUANTUM_SIZE: 4,
 __dummy__: 0
};
Module["Runtime"] = Runtime;
var ABORT = false;
var EXITSTATUS = 0;
function assert(condition, text) {
 if (!condition) {
  abort("Assertion failed: " + text);
 }
}
function getCFunc(ident) {
 var func = Module["_" + ident];
 if (!func) {
  try {
   func = eval("_" + ident);
  } catch (e) {}
 }
 assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");
 return func;
}
var cwrap, ccall;
((function() {
 var JSfuncs = {
  "stackSave": (function() {
   Runtime.stackSave();
  }),
  "stackRestore": (function() {
   Runtime.stackRestore();
  }),
  "arrayToC": (function(arr) {
   var ret = Runtime.stackAlloc(arr.length);
   writeArrayToMemory(arr, ret);
   return ret;
  }),
  "stringToC": (function(str) {
   var ret = 0;
   if (str !== null && str !== undefined && str !== 0) {
    ret = Runtime.stackAlloc((str.length << 2) + 1);
    writeStringToMemory(str, ret);
   }
   return ret;
  })
 };
 var toC = {
  "string": JSfuncs["stringToC"],
  "array": JSfuncs["arrayToC"]
 };
 ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  if (args) {
   for (var i = 0; i < args.length; i++) {
    var converter = toC[argTypes[i]];
    if (converter) {
     if (stack === 0) stack = Runtime.stackSave();
     cArgs[i] = converter(args[i]);
    } else {
     cArgs[i] = args[i];
    }
   }
  }
  var ret = func.apply(null, cArgs);
  if (returnType === "string") ret = Pointer_stringify(ret);
  if (stack !== 0) {
   if (opts && opts.async) {
    EmterpreterAsync.asyncFinalizers.push((function() {
     Runtime.stackRestore(stack);
    }));
    return;
   }
   Runtime.stackRestore(stack);
  }
  return ret;
 };
 var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
 function parseJSFunc(jsfunc) {
  var parsed = jsfunc.toString().match(sourceRegex).slice(1);
  return {
   arguments: parsed[0],
   body: parsed[1],
   returnValue: parsed[2]
  };
 }
 var JSsource = null;
 function ensureJSsource() {
  if (!JSsource) {
   JSsource = {};
   for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
     JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
   }
  }
 }
 cwrap = function cwrap(ident, returnType, argTypes) {
  argTypes = argTypes || [];
  var cfunc = getCFunc(ident);
  var numericArgs = argTypes.every((function(type) {
   return type === "number";
  }));
  var numericRet = returnType !== "string";
  if (numericRet && numericArgs) {
   return cfunc;
  }
  var argNames = argTypes.map((function(x, i) {
   return "$" + i;
  }));
  var funcstr = "(function(" + argNames.join(",") + ") {";
  var nargs = argTypes.length;
  if (!numericArgs) {
   ensureJSsource();
   funcstr += "var stack = " + JSsource["stackSave"].body + ";";
   for (var i = 0; i < nargs; i++) {
    var arg = argNames[i], type = argTypes[i];
    if (type === "number") continue;
    var convertCode = JSsource[type + "ToC"];
    funcstr += "var " + convertCode.arguments + " = " + arg + ";";
    funcstr += convertCode.body + ";";
    funcstr += arg + "=(" + convertCode.returnValue + ");";
   }
  }
  var cfuncname = parseJSFunc((function() {
   return cfunc;
  })).returnValue;
  funcstr += "var ret = " + cfuncname + "(" + argNames.join(",") + ");";
  if (!numericRet) {
   var strgfy = parseJSFunc((function() {
    return Pointer_stringify;
   })).returnValue;
   funcstr += "ret = " + strgfy + "(ret);";
  }
  if (!numericArgs) {
   ensureJSsource();
   funcstr += JSsource["stackRestore"].body.replace("()", "(stack)") + ";";
  }
  funcstr += "return ret})";
  return eval(funcstr);
 };
}))();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;
function setValue(ptr, value, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  HEAP8[ptr >> 0] = value;
  break;
 case "i8":
  HEAP8[ptr >> 0] = value;
  break;
 case "i16":
  HEAP16[ptr >> 1] = value;
  break;
 case "i32":
  HEAP32[ptr >> 2] = value;
  break;
 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
  break;
 case "float":
  HEAPF32[ptr >> 2] = value;
  break;
 case "double":
  HEAPF64[ptr >> 3] = value;
  break;
 default:
  abort("invalid type for setValue: " + type);
 }
}
Module["setValue"] = setValue;
function getValue(ptr, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  return HEAP8[ptr >> 0];
 case "i8":
  return HEAP8[ptr >> 0];
 case "i16":
  return HEAP16[ptr >> 1];
 case "i32":
  return HEAP32[ptr >> 2];
 case "i64":
  return HEAP32[ptr >> 2];
 case "float":
  return HEAPF32[ptr >> 2];
 case "double":
  return HEAPF64[ptr >> 3];
 default:
  abort("invalid type for setValue: " + type);
 }
 return null;
}
Module["getValue"] = getValue;
var ALLOC_NORMAL = 0;
var ALLOC_STACK = 1;
var ALLOC_STATIC = 2;
var ALLOC_DYNAMIC = 3;
var ALLOC_NONE = 4;
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;
function allocate(slab, types, allocator, ptr) {
 var zeroinit, size;
 if (typeof slab === "number") {
  zeroinit = true;
  size = slab;
 } else {
  zeroinit = false;
  size = slab.length;
 }
 var singleType = typeof types === "string" ? types : null;
 var ret;
 if (allocator == ALLOC_NONE) {
  ret = ptr;
 } else {
  ret = [ typeof _malloc === "function" ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc ][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
 }
 if (zeroinit) {
  var ptr = ret, stop;
  assert((ret & 3) == 0);
  stop = ret + (size & ~3);
  for (; ptr < stop; ptr += 4) {
   HEAP32[ptr >> 2] = 0;
  }
  stop = ret + size;
  while (ptr < stop) {
   HEAP8[ptr++ >> 0] = 0;
  }
  return ret;
 }
 if (singleType === "i8") {
  if (slab.subarray || slab.slice) {
   HEAPU8.set(slab, ret);
  } else {
   HEAPU8.set(new Uint8Array(slab), ret);
  }
  return ret;
 }
 var i = 0, type, typeSize, previousType;
 while (i < size) {
  var curr = slab[i];
  if (typeof curr === "function") {
   curr = Runtime.getFunctionIndex(curr);
  }
  type = singleType || types[i];
  if (type === 0) {
   i++;
   continue;
  }
  if (type == "i64") type = "i32";
  setValue(ret + i, curr, type);
  if (previousType !== type) {
   typeSize = Runtime.getNativeTypeSize(type);
   previousType = type;
  }
  i += typeSize;
 }
 return ret;
}
Module["allocate"] = allocate;
function getMemory(size) {
 if (!staticSealed) return Runtime.staticAlloc(size);
 if (typeof _sbrk !== "undefined" && !_sbrk.called || !runtimeInitialized) return Runtime.dynamicAlloc(size);
 return _malloc(size);
}
Module["getMemory"] = getMemory;
function Pointer_stringify(ptr, length) {
 if (length === 0 || !ptr) return "";
 var hasUtf = 0;
 var t;
 var i = 0;
 while (1) {
  t = HEAPU8[ptr + i >> 0];
  hasUtf |= t;
  if (t == 0 && !length) break;
  i++;
  if (length && i == length) break;
 }
 if (!length) length = i;
 var ret = "";
 if (hasUtf < 128) {
  var MAX_CHUNK = 1024;
  var curr;
  while (length > 0) {
   curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
   ret = ret ? ret + curr : curr;
   ptr += MAX_CHUNK;
   length -= MAX_CHUNK;
  }
  return ret;
 }
 return Module["UTF8ToString"](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;
function AsciiToString(ptr) {
 var str = "";
 while (1) {
  var ch = HEAP8[ptr++ >> 0];
  if (!ch) return str;
  str += String.fromCharCode(ch);
 }
}
Module["AsciiToString"] = AsciiToString;
function stringToAscii(str, outPtr) {
 return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;
function UTF8ArrayToString(u8Array, idx) {
 var u0, u1, u2, u3, u4, u5;
 var str = "";
 while (1) {
  u0 = u8Array[idx++];
  if (!u0) return str;
  if (!(u0 & 128)) {
   str += String.fromCharCode(u0);
   continue;
  }
  u1 = u8Array[idx++] & 63;
  if ((u0 & 224) == 192) {
   str += String.fromCharCode((u0 & 31) << 6 | u1);
   continue;
  }
  u2 = u8Array[idx++] & 63;
  if ((u0 & 240) == 224) {
   u0 = (u0 & 15) << 12 | u1 << 6 | u2;
  } else {
   u3 = u8Array[idx++] & 63;
   if ((u0 & 248) == 240) {
    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
   } else {
    u4 = u8Array[idx++] & 63;
    if ((u0 & 252) == 248) {
     u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
    } else {
     u5 = u8Array[idx++] & 63;
     u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
    }
   }
  }
  if (u0 < 65536) {
   str += String.fromCharCode(u0);
  } else {
   var ch = u0 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  }
 }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;
function UTF8ToString(ptr) {
 return UTF8ArrayToString(HEAPU8, ptr);
}
Module["UTF8ToString"] = UTF8ToString;
function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   outU8Array[outIdx++] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   outU8Array[outIdx++] = 192 | u >> 6;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   outU8Array[outIdx++] = 224 | u >> 12;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 2097151) {
   if (outIdx + 3 >= endIdx) break;
   outU8Array[outIdx++] = 240 | u >> 18;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 67108863) {
   if (outIdx + 4 >= endIdx) break;
   outU8Array[outIdx++] = 248 | u >> 24;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else {
   if (outIdx + 5 >= endIdx) break;
   outU8Array[outIdx++] = 252 | u >> 30;
   outU8Array[outIdx++] = 128 | u >> 24 & 63;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  }
 }
 outU8Array[outIdx] = 0;
 return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;
function stringToUTF8(str, outPtr, maxBytesToWrite) {
 return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;
function lengthBytesUTF8(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   ++len;
  } else if (u <= 2047) {
   len += 2;
  } else if (u <= 65535) {
   len += 3;
  } else if (u <= 2097151) {
   len += 4;
  } else if (u <= 67108863) {
   len += 5;
  } else {
   len += 6;
  }
 }
 return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;
function demangle(func) {
 var hasLibcxxabi = !!Module["___cxa_demangle"];
 if (hasLibcxxabi) {
  try {
   var buf = _malloc(func.length);
   writeStringToMemory(func.substr(1), buf);
   var status = _malloc(4);
   var ret = Module["___cxa_demangle"](buf, 0, 0, status);
   if (getValue(status, "i32") === 0 && ret) {
    return Pointer_stringify(ret);
   }
  } catch (e) {
   return func;
  } finally {
   if (buf) _free(buf);
   if (status) _free(status);
   if (ret) _free(ret);
  }
 }
 Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
 return func;
}
function demangleAll(text) {
 return text.replace(/__Z[\w\d_]+/g, (function(x) {
  var y = demangle(x);
  return x === y ? x : x + " [" + y + "]";
 }));
}
function jsStackTrace() {
 var err = new Error;
 if (!err.stack) {
  try {
   throw new Error(0);
  } catch (e) {
   err = e;
  }
  if (!err.stack) {
   return "(no stack trace available)";
  }
 }
 return err.stack.toString();
}
function stackTrace() {
 return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
 if (x % 4096 > 0) {
  x += 4096 - x % 4096;
 }
 return x;
}
var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
function updateGlobalBuffer(buf) {
 Module["buffer"] = buffer = buf;
}
function updateGlobalBufferViews() {
 Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
 Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
 Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
}
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false;
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0;
var DYNAMIC_BASE = 0, DYNAMICTOP = 0;
if (!Module["reallocBuffer"]) Module["reallocBuffer"] = (function(size) {
 var ret;
 try {
  if (ArrayBuffer.transfer) {
   ret = ArrayBuffer.transfer(buffer, size);
  } else {
   var oldHEAP8 = HEAP8;
   ret = new ArrayBuffer(size);
   var temp = new Int8Array(ret);
   temp.set(oldHEAP8);
  }
 } catch (e) {
  return false;
 }
 var success = _emscripten_replace_memory(ret);
 if (!success) return false;
 return ret;
});
function enlargeMemory() {
 var LIMIT = Math.pow(2, 31);
 if (DYNAMICTOP >= LIMIT) return false;
 while (TOTAL_MEMORY <= DYNAMICTOP) {
  if (TOTAL_MEMORY < LIMIT / 2) {
   TOTAL_MEMORY = alignMemoryPage(2 * TOTAL_MEMORY);
  } else {
   var last = TOTAL_MEMORY;
   TOTAL_MEMORY = alignMemoryPage((3 * TOTAL_MEMORY + LIMIT) / 4);
   if (TOTAL_MEMORY <= last) return false;
  }
 }
 TOTAL_MEMORY = Math.max(TOTAL_MEMORY, 16 * 1024 * 1024);
 if (TOTAL_MEMORY >= LIMIT) return false;
 var replacement = Module["reallocBuffer"](TOTAL_MEMORY);
 if (!replacement) return false;
 updateGlobalBuffer(replacement);
 updateGlobalBufferViews();
 return true;
}
var byteLength;
try {
 byteLength = Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, "byteLength").get);
 byteLength(new ArrayBuffer(4));
} catch (e) {
 byteLength = (function(buffer) {
  return buffer.byteLength;
 });
}
var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 16777216;
var totalMemory = 64 * 1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
 if (totalMemory < 16 * 1024 * 1024) {
  totalMemory *= 2;
 } else {
  totalMemory += 16 * 1024 * 1024;
 }
}
totalMemory = Math.max(totalMemory, 16 * 1024 * 1024);
if (totalMemory !== TOTAL_MEMORY) {
 TOTAL_MEMORY = totalMemory;
}
if (Module["buffer"]) {
 buffer = Module["buffer"];
} else {
 buffer = new ArrayBuffer(TOTAL_MEMORY);
}
updateGlobalBufferViews();
HEAP32[0] = 255;
if (HEAPU8[0] !== 255 || HEAPU8[3] !== 0) throw "Typed arrays 2 must be run on a little-endian system";
Module["HEAP"] = HEAP;
Module["buffer"] = buffer;
Module["HEAP8"] = HEAP8;
Module["HEAP16"] = HEAP16;
Module["HEAP32"] = HEAP32;
Module["HEAPU8"] = HEAPU8;
Module["HEAPU16"] = HEAPU16;
Module["HEAPU32"] = HEAPU32;
Module["HEAPF32"] = HEAPF32;
Module["HEAPF64"] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
 while (callbacks.length > 0) {
  var callback = callbacks.shift();
  if (typeof callback == "function") {
   callback();
   continue;
  }
  var func = callback.func;
  if (typeof func === "number") {
   if (callback.arg === undefined) {
    Runtime.dynCall("v", func);
   } else {
    Runtime.dynCall("vi", func, [ callback.arg ]);
   }
  } else {
   func(callback.arg === undefined ? null : callback.arg);
  }
 }
}
var __ATPRERUN__ = [];
var __ATINIT__ = [];
var __ATMAIN__ = [];
var __ATEXIT__ = [];
var __ATPOSTRUN__ = [];
var runtimeInitialized = false;
var runtimeExited = false;
function preRun() {
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
 if (runtimeInitialized) return;
 runtimeInitialized = true;
 callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
 callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
 callRuntimeCallbacks(__ATEXIT__);
 runtimeExited = true;
}
function postRun() {
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;
function addOnInit(cb) {
 __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;
function addOnPreMain(cb) {
 __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;
function addOnExit(cb) {
 __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;
function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;
function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}
Module["intArrayFromString"] = intArrayFromString;
function intArrayToString(array) {
 var ret = [];
 for (var i = 0; i < array.length; i++) {
  var chr = array[i];
  if (chr > 255) {
   chr &= 255;
  }
  ret.push(String.fromCharCode(chr));
 }
 return ret.join("");
}
Module["intArrayToString"] = intArrayToString;
function writeStringToMemory(string, buffer, dontAddNull) {
 var array = intArrayFromString(string, dontAddNull);
 var i = 0;
 while (i < array.length) {
  var chr = array[i];
  HEAP8[buffer + i >> 0] = chr;
  i = i + 1;
 }
}
Module["writeStringToMemory"] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
 for (var i = 0; i < array.length; i++) {
  HEAP8[buffer++ >> 0] = array[i];
 }
}
Module["writeArrayToMemory"] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
 for (var i = 0; i < str.length; ++i) {
  HEAP8[buffer++ >> 0] = str.charCodeAt(i);
 }
 if (!dontAddNull) HEAP8[buffer >> 0] = 0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;
if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5) Math["imul"] = function imul(a, b) {
 var ah = a >>> 16;
 var al = a & 65535;
 var bh = b >>> 16;
 var bl = b & 65535;
 return al * bl + (ah * bl + al * bh << 16) | 0;
};
Math.imul = Math["imul"];
if (!Math["clz32"]) Math["clz32"] = (function(x) {
 x = x >>> 0;
 for (var i = 0; i < 32; i++) {
  if (x & 1 << 31 - i) return i;
 }
 return 32;
});
Math.clz32 = Math["clz32"];
if (!Math["trunc"]) Math["trunc"] = (function(x) {
 return x < 0 ? Math.ceil(x) : Math.floor(x);
});
Math.trunc = Math["trunc"];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null;
function getUniqueRunDependency(id) {
 return id;
}
function addRunDependency(id) {
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
}
Module["addRunDependency"] = addRunDependency;
function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}
Module["removeRunDependency"] = removeRunDependency;
Module["preloadedImages"] = {};
Module["preloadedAudios"] = {};
var ASM_CONSTS = [ (function() {
 {
  return Module["providedTotalMemory"];
 }
}), (function($0, $1) {
 {
  return Module["lookupImport"](Pointer_stringify($0), Pointer_stringify($1));
 }
}), (function($0, $1) {
 {
  Module["info"].parent["HEAP32"][$0 >> 2] = $1;
 }
}), (function($0, $1) {
 {
  Module["info"].parent["HEAPF32"][$0 >> 2] = $1;
 }
}), (function($0, $1) {
 {
  Module["info"].parent["HEAPF64"][$0 >> 3] = $1;
 }
}), (function() {
 {
  return !!Module["outside"]["WASM_JS_DEBUG"];
 }
}), (function() {
 {
  Module["asmExports"] = {};
 }
}), (function($0) {
 {
  var name = Pointer_stringify($0);
  Module["asmExports"][name] = (function() {
   Module["tempArguments"] = Array.prototype.slice.call(arguments);
   Module["_call_from_js"]($0);
   return Module["tempReturn"];
  });
 }
}), (function() {
 {
  return Module["tempArguments"].length;
 }
}), (function($0) {
 {
  return Module["tempArguments"][$0];
 }
}), (function() {
 {
  Module["tempReturn"] = undefined;
 }
}), (function($0) {
 {
  Module["tempReturn"] = $0;
 }
}), (function($0) {
 {
  Module["outside"]["newBuffer"] = new ArrayBuffer($0);
 }
}), (function($0, $1, $2) {
 {
  var source = Module["HEAP8"].subarray($1, $1 + $2);
  var target = new Int8Array(Module["outside"]["newBuffer"]);
  target.set(source, $0);
 }
}), (function() {
 {
  Module["tempArguments"] = [];
 }
}), (function($0, $1) {
 {
  var mod = Pointer_stringify($0);
  var base = Pointer_stringify($1);
  var tempArguments = Module["tempArguments"];
  Module["tempArguments"] = null;
  var lookup = Module["lookupImport"](mod, base);
  return lookup.apply(null, tempArguments);
 }
}), (function($0) {
 {
  Module["tempArguments"].push($0);
 }
}), (function($0, $1, $2, $3) {
 {
  var addr = $0;
  var bytes = $1;
  var isFloat = $2;
  var isSigned = $3;
  var save0 = HEAP32[0];
  var save1 = HEAP32[1];
  for (var i = 0; i < bytes; i++) {
   HEAPU8[i] = Module["info"].parent["HEAPU8"][addr + i];
  }
  var ret;
  if (!isFloat) {
   if (bytes === 1) ret = isSigned ? HEAP8[0] : HEAPU8[0]; else if (bytes === 2) ret = isSigned ? HEAP16[0] : HEAPU16[0]; else if (bytes === 4) ret = isSigned ? HEAP32[0] : HEAPU32[0]; else abort();
  } else {
   if (bytes === 4) ret = HEAPF32[0]; else if (bytes === 8) ret = HEAPF64[0]; else abort();
  }
  HEAP32[0] = save0;
  HEAP32[1] = save1;
  return ret;
 }
}), (function($0) {
 {
  return Module["info"].parent["HEAP8"][$0];
 }
}), (function($0) {
 {
  return Module["info"].parent["HEAPU8"][$0];
 }
}), (function($0) {
 {
  return Module["info"].parent["HEAP16"][$0 >> 1];
 }
}), (function($0) {
 {
  return Module["info"].parent["HEAPU16"][$0 >> 1];
 }
}), (function($0) {
 {
  return Module["info"].parent["HEAP32"][$0 >> 2];
 }
}), (function($0) {
 {
  return Module["info"].parent["HEAPU32"][$0 >> 2];
 }
}), (function($0) {
 {
  return Module["info"].parent["HEAPF32"][$0 >> 2];
 }
}), (function($0) {
 {
  return Module["info"].parent["HEAPF64"][$0 >> 3];
 }
}), (function($0, $1, $2, $3) {
 {
  var addr = $0;
  var bytes = $1;
  var isFloat = $2;
  var value = $3;
  var save0 = HEAP32[0];
  var save1 = HEAP32[1];
  if (!isFloat) {
   if (bytes === 1) HEAPU8[0] = value; else if (bytes === 2) HEAPU16[0] = value; else if (bytes === 4) HEAPU32[0] = value; else abort();
  } else {
   if (bytes === 4) HEAPF32[0] = value; else if (bytes === 8) HEAPF64[0] = value; else abort();
  }
  for (var i = 0; i < bytes; i++) {
   Module["info"].parent["HEAPU8"][addr + i] = HEAPU8[i];
  }
  HEAP32[0] = save0;
  HEAP32[1] = save1;
 }
}), (function($0, $1) {
 {
  Module["info"].parent["HEAP8"][$0] = $1;
 }
}), (function($0, $1) {
 {
  Module["info"].parent["HEAP16"][$0 >> 1] = $1;
 }
}), (function($0) {
 {
  var size = $0;
  var buffer;
  try {
   buffer = new ArrayBuffer(size);
  } catch (e) {
   return;
  }
  var oldHEAP8 = Module["outside"]["HEAP8"];
  var temp = new Int8Array(buffer);
  temp.set(oldHEAP8);
  Module["outside"]["buffer"] = buffer;
 }
}), (function($0) {
 {
  abort("wasm trap: " + Pointer_stringify($0));
 }
}) ];
function _emscripten_asm_const_ii(code, a0) {
 return ASM_CONSTS[code](a0);
}
function _emscripten_asm_const_dii(code, a0, a1) {
 return ASM_CONSTS[code](a0, a1);
}
function _emscripten_asm_const_di(code, a0) {
 return ASM_CONSTS[code](a0);
}
function _emscripten_asm_const_i(code) {
 return ASM_CONSTS[code]();
}
function _emscripten_asm_const_iid(code, a0, a1) {
 return ASM_CONSTS[code](a0, a1);
}
function _emscripten_asm_const_diiii(code, a0, a1, a2, a3) {
 return ASM_CONSTS[code](a0, a1, a2, a3);
}
function _emscripten_asm_const_diiid(code, a0, a1, a2, a3) {
 return ASM_CONSTS[code](a0, a1, a2, a3);
}
function _emscripten_asm_const_did(code, a0, a1) {
 return ASM_CONSTS[code](a0, a1);
}
function _emscripten_asm_const_iiii(code, a0, a1, a2) {
 return ASM_CONSTS[code](a0, a1, a2);
}
function _emscripten_asm_const_v(code) {
 return ASM_CONSTS[code]();
}
function _emscripten_asm_const_iii(code, a0, a1) {
 return ASM_CONSTS[code](a0, a1);
}
function _emscripten_asm_const_id(code, a0) {
 return ASM_CONSTS[code](a0);
}
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 49120;
__ATINIT__.push({
 func: (function() {
  __GLOBAL__I_000101();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_wasm_js_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_MergeBlocks_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_Print_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_RemoveUnusedBrs_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_RemoveUnusedNames_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_PostEmscripten_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_SimplifyLocals_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_ReorderLocals_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_parser_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_simple_ast_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_optimizer_shared_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_iostream_cpp();
 })
});
allocate([ 4, 47, 0, 0, 146, 62, 0, 0, 44, 47, 0, 0, 65, 62, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 244, 61, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 186, 61, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 48, 64, 0, 0, 44, 47, 0, 0, 183, 63, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 66, 63, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 224, 62, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 182, 64, 0, 0, 224, 5, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 252, 64, 0, 0, 208, 5, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 95, 67, 0, 0, 200, 10, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 80, 69, 0, 0, 44, 47, 0, 0, 43, 69, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 67, 80, 0, 0, 44, 47, 0, 0, 198, 79, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 167, 81, 0, 0, 64, 6, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 133, 85, 0, 0, 44, 47, 0, 0, 1, 85, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 73, 89, 0, 0, 4, 47, 0, 0, 11, 90, 0, 0, 44, 47, 0, 0, 134, 89, 0, 0, 8, 1, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 98, 90, 0, 0, 44, 47, 0, 0, 159, 90, 0, 0, 8, 1, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 36, 91, 0, 0, 4, 47, 0, 0, 83, 96, 0, 0, 44, 47, 0, 0, 6, 96, 0, 0, 64, 1, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 157, 96, 0, 0, 44, 47, 0, 0, 36, 97, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 155, 97, 0, 0, 44, 47, 0, 0, 201, 97, 0, 0, 136, 1, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 222, 97, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 168, 1, 0, 0, 2, 0, 0, 0, 176, 1, 0, 0, 2, 4, 0, 0, 4, 47, 0, 0, 24, 98, 0, 0, 44, 47, 0, 0, 37, 98, 0, 0, 192, 1, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 77, 98, 0, 0, 208, 1, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 121, 98, 0, 0, 44, 47, 0, 0, 162, 98, 0, 0, 232, 1, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 221, 98, 0, 0, 248, 1, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 47, 99, 0, 0, 4, 47, 0, 0, 126, 99, 0, 0, 44, 47, 0, 0, 182, 99, 0, 0, 168, 1, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 198, 99, 0, 0, 40, 2, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 224, 99, 0, 0, 44, 47, 0, 0, 81, 103, 0, 0, 8, 2, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 141, 103, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 255, 103, 0, 0, 44, 47, 0, 0, 103, 104, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 226, 104, 0, 0, 44, 47, 0, 0, 105, 105, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 228, 105, 0, 0, 144, 2, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 253, 105, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 168, 1, 0, 0, 2, 0, 0, 0, 176, 2, 0, 0, 2, 4, 0, 0, 44, 47, 0, 0, 59, 106, 0, 0, 192, 2, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 103, 106, 0, 0, 208, 2, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 151, 106, 0, 0, 44, 47, 0, 0, 196, 106, 0, 0, 232, 2, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 3, 107, 0, 0, 248, 2, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 89, 107, 0, 0, 4, 47, 0, 0, 192, 107, 0, 0, 44, 47, 0, 0, 72, 108, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 197, 108, 0, 0, 40, 3, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 224, 108, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 168, 1, 0, 0, 2, 0, 0, 0, 72, 3, 0, 0, 2, 4, 0, 0, 44, 47, 0, 0, 32, 109, 0, 0, 88, 3, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 78, 109, 0, 0, 104, 3, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 128, 109, 0, 0, 44, 47, 0, 0, 175, 109, 0, 0, 128, 3, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 240, 109, 0, 0, 144, 3, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 72, 110, 0, 0, 4, 47, 0, 0, 157, 110, 0, 0, 44, 47, 0, 0, 37, 111, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 159, 111, 0, 0, 192, 3, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 183, 111, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 168, 1, 0, 0, 2, 0, 0, 0, 224, 3, 0, 0, 2, 4, 0, 0, 44, 47, 0, 0, 244, 111, 0, 0, 240, 3, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 31, 112, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 78, 112, 0, 0, 44, 47, 0, 0, 122, 112, 0, 0, 24, 4, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 184, 112, 0, 0, 40, 4, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 13, 113, 0, 0, 4, 47, 0, 0, 156, 113, 0, 0, 44, 47, 0, 0, 18, 114, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 140, 114, 0, 0, 88, 4, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 164, 114, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 168, 1, 0, 0, 2, 0, 0, 0, 120, 4, 0, 0, 2, 4, 0, 0, 44, 47, 0, 0, 225, 114, 0, 0, 136, 4, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 12, 115, 0, 0, 152, 4, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 59, 115, 0, 0, 44, 47, 0, 0, 103, 115, 0, 0, 176, 4, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 165, 115, 0, 0, 192, 4, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 250, 115, 0, 0, 4, 47, 0, 0, 76, 116, 0, 0, 44, 47, 0, 0, 183, 116, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 48, 117, 0, 0, 240, 4, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 71, 117, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 168, 1, 0, 0, 2, 0, 0, 0, 16, 5, 0, 0, 2, 4, 0, 0, 44, 47, 0, 0, 131, 117, 0, 0, 32, 5, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 173, 117, 0, 0, 48, 5, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 219, 117, 0, 0, 44, 47, 0, 0, 36, 118, 0, 0, 72, 5, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 97, 118, 0, 0, 88, 5, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 181, 118, 0, 0, 4, 47, 0, 0, 17, 119, 0, 0, 44, 47, 0, 0, 53, 134, 0, 0, 208, 5, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 115, 134, 0, 0, 208, 5, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 140, 134, 0, 0, 216, 5, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 164, 134, 0, 0, 216, 5, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 97, 135, 0, 0, 184, 5, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 139, 135, 0, 0, 44, 47, 0, 0, 157, 135, 0, 0, 184, 5, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 199, 135, 0, 0, 4, 47, 0, 0, 248, 135, 0, 0, 108, 47, 0, 0, 41, 136, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 168, 5, 0, 0, 3, 244, 255, 255, 108, 47, 0, 0, 88, 136, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 192, 5, 0, 0, 3, 244, 255, 255, 108, 47, 0, 0, 135, 136, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 168, 5, 0, 0, 3, 244, 255, 255, 108, 47, 0, 0, 182, 136, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 192, 5, 0, 0, 3, 244, 255, 255, 108, 47, 0, 0, 229, 136, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 224, 5, 0, 0, 2, 0, 0, 0, 16, 6, 0, 0, 2, 8, 0, 0, 44, 47, 0, 0, 21, 137, 0, 0, 112, 6, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 41, 137, 0, 0, 192, 10, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 63, 137, 0, 0, 112, 6, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 83, 137, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 176, 6, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 151, 137, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 200, 6, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 173, 137, 0, 0, 108, 47, 0, 0, 236, 137, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 240, 6, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 48, 138, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 200, 6, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 70, 138, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 40, 7, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 138, 138, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 64, 7, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 160, 138, 0, 0, 108, 47, 0, 0, 199, 138, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 104, 7, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 11, 139, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 64, 7, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 33, 139, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 168, 7, 0, 0, 2, 0, 0, 0, 176, 7, 0, 0, 0, 8, 0, 0, 4, 47, 0, 0, 102, 139, 0, 0, 4, 47, 0, 0, 121, 139, 0, 0, 108, 47, 0, 0, 219, 140, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 168, 7, 0, 0, 2, 0, 0, 0, 224, 7, 0, 0, 0, 8, 0, 0, 4, 47, 0, 0, 32, 141, 0, 0, 108, 47, 0, 0, 66, 141, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 8, 8, 0, 0, 0, 8, 0, 0, 4, 47, 0, 0, 135, 141, 0, 0, 108, 47, 0, 0, 156, 141, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 8, 8, 0, 0, 0, 8, 0, 0, 108, 47, 0, 0, 225, 141, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 80, 8, 0, 0, 2, 0, 0, 0, 4, 47, 0, 0, 253, 141, 0, 0, 108, 47, 0, 0, 18, 142, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 80, 8, 0, 0, 2, 0, 0, 0, 108, 47, 0, 0, 46, 142, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 80, 8, 0, 0, 2, 0, 0, 0, 108, 47, 0, 0, 74, 142, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 80, 8, 0, 0, 2, 0, 0, 0, 108, 47, 0, 0, 102, 142, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 216, 8, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 172, 142, 0, 0, 108, 47, 0, 0, 212, 142, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 26, 143, 0, 0, 108, 47, 0, 0, 62, 143, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 40, 9, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 132, 143, 0, 0, 108, 47, 0, 0, 163, 143, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 80, 9, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 233, 143, 0, 0, 108, 47, 0, 0, 2, 144, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 120, 9, 0, 0, 2, 0, 0, 0, 4, 47, 0, 0, 23, 144, 0, 0, 108, 47, 0, 0, 47, 144, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 120, 9, 0, 0, 2, 0, 0, 0, 44, 47, 0, 0, 68, 144, 0, 0, 176, 9, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 102, 144, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 208, 9, 0, 0, 2, 0, 0, 0, 4, 47, 0, 0, 137, 144, 0, 0, 44, 47, 0, 0, 160, 144, 0, 0, 176, 9, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 195, 144, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 208, 9, 0, 0, 2, 0, 0, 0, 108, 47, 0, 0, 229, 144, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 208, 9, 0, 0, 2, 0, 0, 0, 108, 47, 0, 0, 7, 145, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 208, 9, 0, 0, 2, 0, 0, 0, 44, 47, 0, 0, 42, 145, 0, 0, 112, 6, 0, 0, 0, 0, 0, 0, 108, 47, 0, 0, 64, 145, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 120, 10, 0, 0, 2, 0, 0, 0, 4, 47, 0, 0, 82, 145, 0, 0, 108, 47, 0, 0, 103, 145, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 6, 0, 0, 2, 0, 0, 0, 120, 10, 0, 0, 2, 0, 0, 0, 44, 47, 0, 0, 121, 145, 0, 0, 112, 6, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 142, 145, 0, 0, 112, 6, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 98, 146, 0, 0, 4, 47, 0, 0, 136, 147, 0, 0, 44, 47, 0, 0, 102, 147, 0, 0, 240, 10, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 19, 147, 0, 0, 208, 10, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 56, 147, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 4, 47, 0, 0, 89, 147, 0, 0, 44, 47, 0, 0, 78, 148, 0, 0, 200, 10, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 157, 148, 0, 0, 240, 10, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 121, 148, 0, 0, 24, 11, 0, 0, 0, 0, 0, 0, 44, 47, 0, 0, 191, 148, 0, 0, 208, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 196, 255, 255, 255, 196, 255, 255, 255, 120, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 140, 11, 0, 0, 196, 11, 0, 0, 216, 11, 0, 0, 160, 11, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 224, 5, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 196, 255, 255, 255, 196, 255, 255, 255, 224, 5, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 8, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 216, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 56, 0, 0, 0, 248, 255, 255, 255, 216, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 192, 255, 255, 255, 192, 255, 255, 255, 216, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 112, 12, 0, 0, 212, 12, 0, 0, 16, 13, 0, 0, 36, 13, 0, 0, 56, 13, 0, 0, 76, 13, 0, 0, 252, 12, 0, 0, 232, 12, 0, 0, 152, 12, 0, 0, 132, 12, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 64, 6, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 56, 0, 0, 0, 248, 255, 255, 255, 64, 6, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 192, 255, 255, 255, 192, 255, 255, 255, 64, 6, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 224, 5, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 192, 255, 255, 255, 192, 255, 255, 255, 224, 5, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 16, 6, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 200, 255, 255, 255, 200, 255, 255, 255, 16, 6, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 218, 175, 0, 0, 194, 179, 0, 0, 0, 0, 0, 0, 240, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 6, 0, 0, 0, 10, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 16, 1, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 8, 0, 0, 0, 11, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 40, 1, 0, 0, 39, 0, 0, 0, 43, 0, 0, 0, 10, 0, 0, 0, 12, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 72, 1, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 7, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 96, 1, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 15, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 252, 255, 255, 255, 120, 1, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 216, 1, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 8, 2, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 24, 2, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 48, 2, 0, 0, 61, 0, 0, 0, 65, 0, 0, 0, 2, 0, 0, 0, 6, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 64, 2, 0, 0, 51, 0, 0, 0, 66, 0, 0, 0, 17, 0, 0, 0, 21, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 18, 0, 0, 0, 9, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 88, 2, 0, 0, 51, 0, 0, 0, 69, 0, 0, 0, 20, 0, 0, 0, 22, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 21, 0, 0, 0, 10, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 112, 2, 0, 0, 51, 0, 0, 0, 72, 0, 0, 0, 23, 0, 0, 0, 23, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 24, 0, 0, 0, 11, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 128, 2, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 2, 0, 0, 0, 7, 0, 0, 0, 4, 0, 0, 0, 252, 255, 255, 255, 128, 2, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 216, 2, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 8, 3, 0, 0, 51, 0, 0, 0, 81, 0, 0, 0, 26, 0, 0, 0, 30, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 27, 0, 0, 0, 12, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 24, 3, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 252, 255, 255, 255, 24, 3, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 112, 3, 0, 0, 88, 0, 0, 0, 89, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 160, 3, 0, 0, 51, 0, 0, 0, 90, 0, 0, 0, 29, 0, 0, 0, 37, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 30, 0, 0, 0, 13, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 176, 3, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 2, 0, 0, 0, 9, 0, 0, 0, 4, 0, 0, 0, 252, 255, 255, 255, 176, 3, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 8, 4, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 56, 4, 0, 0, 51, 0, 0, 0, 99, 0, 0, 0, 32, 0, 0, 0, 44, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 33, 0, 0, 0, 14, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 72, 4, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 2, 0, 0, 0, 10, 0, 0, 0, 4, 0, 0, 0, 252, 255, 255, 255, 72, 4, 0, 0, 104, 0, 0, 0, 105, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 160, 4, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 208, 4, 0, 0, 51, 0, 0, 0, 108, 0, 0, 0, 35, 0, 0, 0, 51, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 36, 0, 0, 0, 15, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 224, 4, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 2, 0, 0, 0, 11, 0, 0, 0, 4, 0, 0, 0, 252, 255, 255, 255, 224, 4, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 56, 5, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 75, 119, 0, 0, 93, 119, 0, 0, 184, 17, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 195, 183, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 18, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 7, 0, 0, 0, 203, 183, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 18, 0, 0, 164, 18, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 211, 187, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 192, 3, 0, 0, 192, 4, 0, 0, 192, 5, 0, 0, 192, 6, 0, 0, 192, 7, 0, 0, 192, 8, 0, 0, 192, 9, 0, 0, 192, 10, 0, 0, 192, 11, 0, 0, 192, 12, 0, 0, 192, 13, 0, 0, 192, 14, 0, 0, 192, 15, 0, 0, 192, 16, 0, 0, 192, 17, 0, 0, 192, 18, 0, 0, 192, 19, 0, 0, 192, 20, 0, 0, 192, 21, 0, 0, 192, 22, 0, 0, 192, 23, 0, 0, 192, 24, 0, 0, 192, 25, 0, 0, 192, 26, 0, 0, 192, 27, 0, 0, 192, 28, 0, 0, 192, 29, 0, 0, 192, 30, 0, 0, 192, 31, 0, 0, 192, 0, 0, 0, 179, 1, 0, 0, 195, 2, 0, 0, 195, 3, 0, 0, 195, 4, 0, 0, 195, 5, 0, 0, 195, 6, 0, 0, 195, 7, 0, 0, 195, 8, 0, 0, 195, 9, 0, 0, 195, 10, 0, 0, 195, 11, 0, 0, 195, 12, 0, 0, 195, 13, 0, 0, 211, 14, 0, 0, 195, 15, 0, 0, 195, 0, 0, 12, 187, 1, 0, 12, 195, 2, 0, 12, 195, 3, 0, 12, 195, 4, 0, 12, 211, 10, 0, 0, 0, 100, 0, 0, 0, 232, 3, 0, 0, 16, 39, 0, 0, 160, 134, 1, 0, 64, 66, 15, 0, 128, 150, 152, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 140, 48, 0, 0, 120, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 88, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 125, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 121, 0, 0, 0, 122, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 96, 0, 0, 0, 97, 0, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 102, 0, 0, 0, 103, 0, 0, 0, 104, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 113, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 119, 0, 0, 0, 120, 0, 0, 0, 121, 0, 0, 0, 122, 0, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 125, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 5, 0, 0, 117, 0, 0, 0, 118, 0, 0, 0, 58, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 39, 0, 0, 0, 40, 0, 0, 0, 16, 0, 0, 0, 3, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 120, 5, 0, 0, 117, 0, 0, 0, 119, 0, 0, 0, 59, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 41, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 42, 0, 0, 0, 4, 0, 0, 0, 18, 0, 0, 0, 11, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 136, 5, 0, 0, 120, 0, 0, 0, 121, 0, 0, 0, 60, 0, 0, 0, 12, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 13, 0, 0, 0, 45, 0, 0, 0, 46, 0, 0, 0, 20, 0, 0, 0, 14, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 152, 5, 0, 0, 120, 0, 0, 0, 122, 0, 0, 0, 61, 0, 0, 0, 12, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 47, 0, 0, 0, 44, 0, 0, 0, 13, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 22, 0, 0, 0, 15, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 7, 0, 0, 0, 11, 0, 0, 0, 13, 0, 0, 0, 17, 0, 0, 0, 19, 0, 0, 0, 23, 0, 0, 0, 29, 0, 0, 0, 31, 0, 0, 0, 37, 0, 0, 0, 41, 0, 0, 0, 43, 0, 0, 0, 47, 0, 0, 0, 53, 0, 0, 0, 59, 0, 0, 0, 61, 0, 0, 0, 67, 0, 0, 0, 71, 0, 0, 0, 73, 0, 0, 0, 79, 0, 0, 0, 83, 0, 0, 0, 89, 0, 0, 0, 97, 0, 0, 0, 101, 0, 0, 0, 103, 0, 0, 0, 107, 0, 0, 0, 109, 0, 0, 0, 113, 0, 0, 0, 127, 0, 0, 0, 131, 0, 0, 0, 137, 0, 0, 0, 139, 0, 0, 0, 149, 0, 0, 0, 151, 0, 0, 0, 157, 0, 0, 0, 163, 0, 0, 0, 167, 0, 0, 0, 173, 0, 0, 0, 179, 0, 0, 0, 181, 0, 0, 0, 191, 0, 0, 0, 193, 0, 0, 0, 197, 0, 0, 0, 199, 0, 0, 0, 211, 0, 0, 0, 1, 0, 0, 0, 11, 0, 0, 0, 13, 0, 0, 0, 17, 0, 0, 0, 19, 0, 0, 0, 23, 0, 0, 0, 29, 0, 0, 0, 31, 0, 0, 0, 37, 0, 0, 0, 41, 0, 0, 0, 43, 0, 0, 0, 47, 0, 0, 0, 53, 0, 0, 0, 59, 0, 0, 0, 61, 0, 0, 0, 67, 0, 0, 0, 71, 0, 0, 0, 73, 0, 0, 0, 79, 0, 0, 0, 83, 0, 0, 0, 89, 0, 0, 0, 97, 0, 0, 0, 101, 0, 0, 0, 103, 0, 0, 0, 107, 0, 0, 0, 109, 0, 0, 0, 113, 0, 0, 0, 121, 0, 0, 0, 127, 0, 0, 0, 131, 0, 0, 0, 137, 0, 0, 0, 139, 0, 0, 0, 143, 0, 0, 0, 149, 0, 0, 0, 151, 0, 0, 0, 157, 0, 0, 0, 163, 0, 0, 0, 167, 0, 0, 0, 169, 0, 0, 0, 173, 0, 0, 0, 179, 0, 0, 0, 181, 0, 0, 0, 187, 0, 0, 0, 191, 0, 0, 0, 193, 0, 0, 0, 197, 0, 0, 0, 199, 0, 0, 0, 209, 0, 0, 0, 0, 0, 0, 0, 184, 5, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 208, 5, 0, 0, 117, 0, 0, 0, 125, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 42, 0, 0, 0, 4, 0, 0, 0, 18, 0, 0, 0, 3, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 216, 5, 0, 0, 120, 0, 0, 0, 126, 0, 0, 0, 62, 0, 0, 0, 12, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 43, 0, 0, 0, 44, 0, 0, 0, 13, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 22, 0, 0, 0, 14, 0, 0, 0, 21, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 224, 5, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 248, 255, 255, 255, 248, 255, 255, 255, 224, 5, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 248, 5, 0, 0, 127, 0, 0, 0, 128, 0, 0, 0, 248, 255, 255, 255, 248, 255, 255, 255, 248, 5, 0, 0, 129, 0, 0, 0, 130, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 6, 0, 0, 31, 0, 0, 0, 32, 0, 0, 0, 252, 255, 255, 255, 252, 255, 255, 255, 16, 6, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 40, 6, 0, 0, 131, 0, 0, 0, 132, 0, 0, 0, 252, 255, 255, 255, 252, 255, 255, 255, 40, 6, 0, 0, 133, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 96, 6, 0, 0, 135, 0, 0, 0, 136, 0, 0, 0, 137, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 128, 6, 0, 0, 138, 0, 0, 0, 139, 0, 0, 0, 137, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 144, 6, 0, 0, 140, 0, 0, 0, 141, 0, 0, 0, 137, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 208, 6, 0, 0, 142, 0, 0, 0, 143, 0, 0, 0, 137, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 8, 7, 0, 0, 144, 0, 0, 0, 145, 0, 0, 0, 137, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 23, 0, 0, 0, 5, 0, 0, 0, 24, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 72, 7, 0, 0, 146, 0, 0, 0, 147, 0, 0, 0, 137, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 25, 0, 0, 0, 9, 0, 0, 0, 26, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 128, 7, 0, 0, 148, 0, 0, 0, 149, 0, 0, 0, 137, 0, 0, 0, 50, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 29, 0, 0, 0, 30, 0, 0, 0, 31, 0, 0, 0, 1, 0, 0, 0, 248, 255, 255, 255, 128, 7, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 184, 7, 0, 0, 150, 0, 0, 0, 151, 0, 0, 0, 137, 0, 0, 0, 58, 0, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 2, 0, 0, 0, 248, 255, 255, 255, 184, 7, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 65, 0, 0, 0, 37, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 37, 0, 0, 0, 109, 0, 0, 0, 47, 0, 0, 0, 37, 0, 0, 0, 100, 0, 0, 0, 47, 0, 0, 0, 37, 0, 0, 0, 121, 0, 0, 0, 37, 0, 0, 0, 89, 0, 0, 0, 45, 0, 0, 0, 37, 0, 0, 0, 109, 0, 0, 0, 45, 0, 0, 0, 37, 0, 0, 0, 100, 0, 0, 0, 37, 0, 0, 0, 73, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 112, 0, 0, 0, 37, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 37, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 83, 0, 0, 0, 117, 0, 0, 0, 110, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 111, 0, 0, 0, 110, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 117, 0, 0, 0, 101, 0, 0, 0, 115, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 101, 0, 0, 0, 100, 0, 0, 0, 110, 0, 0, 0, 101, 0, 0, 0, 115, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 104, 0, 0, 0, 117, 0, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 114, 0, 0, 0, 105, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 97, 0, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 114, 0, 0, 0, 100, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 117, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 111, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 117, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 101, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 104, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 114, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 97 ], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
allocate([ 116, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 97, 0, 0, 0, 110, 0, 0, 0, 117, 0, 0, 0, 97, 0, 0, 0, 114, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 101, 0, 0, 0, 98, 0, 0, 0, 114, 0, 0, 0, 117, 0, 0, 0, 97, 0, 0, 0, 114, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 97, 0, 0, 0, 114, 0, 0, 0, 99, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 112, 0, 0, 0, 114, 0, 0, 0, 105, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 97, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 117, 0, 0, 0, 110, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 117, 0, 0, 0, 108, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 117, 0, 0, 0, 103, 0, 0, 0, 117, 0, 0, 0, 115, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 101, 0, 0, 0, 112, 0, 0, 0, 116, 0, 0, 0, 101, 0, 0, 0, 109, 0, 0, 0, 98, 0, 0, 0, 101, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 79, 0, 0, 0, 99, 0, 0, 0, 116, 0, 0, 0, 111, 0, 0, 0, 98, 0, 0, 0, 101, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 111, 0, 0, 0, 118, 0, 0, 0, 101, 0, 0, 0, 109, 0, 0, 0, 98, 0, 0, 0, 101, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 101, 0, 0, 0, 99, 0, 0, 0, 101, 0, 0, 0, 109, 0, 0, 0, 98, 0, 0, 0, 101, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 97, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 101, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 97, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 112, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 117, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 117, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 117, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 101, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 79, 0, 0, 0, 99, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 111, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 101, 0, 0, 0, 99, 0, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 97, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 98, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 100, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 73, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 32, 0, 0, 0, 37, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 109, 0, 0, 0, 47, 0, 0, 0, 37, 0, 0, 0, 100, 0, 0, 0, 47, 0, 0, 0, 37, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 72, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 77, 0, 0, 0, 58, 0, 0, 0, 37, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 7, 0, 0, 152, 0, 0, 0, 153, 0, 0, 0, 137, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 16, 8, 0, 0, 154, 0, 0, 0, 155, 0, 0, 0, 137, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 48, 8, 0, 0, 156, 0, 0, 0, 157, 0, 0, 0, 137, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 68, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 88, 8, 0, 0, 158, 0, 0, 0, 159, 0, 0, 0, 137, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 69, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 72, 0, 0, 0, 71, 0, 0, 0, 73, 0, 0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 120, 8, 0, 0, 160, 0, 0, 0, 161, 0, 0, 0, 137, 0, 0, 0, 72, 0, 0, 0, 73, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 74, 0, 0, 0, 79, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 152, 8, 0, 0, 162, 0, 0, 0, 163, 0, 0, 0, 137, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 84, 0, 0, 0, 77, 0, 0, 0, 85, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 184, 8, 0, 0, 164, 0, 0, 0, 165, 0, 0, 0, 137, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 224, 8, 0, 0, 166, 0, 0, 0, 167, 0, 0, 0, 137, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 8, 9, 0, 0, 168, 0, 0, 0, 169, 0, 0, 0, 137, 0, 0, 0, 1, 0, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 48, 9, 0, 0, 170, 0, 0, 0, 171, 0, 0, 0, 137, 0, 0, 0, 2, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 88, 9, 0, 0, 172, 0, 0, 0, 173, 0, 0, 0, 137, 0, 0, 0, 18, 0, 0, 0, 4, 0, 0, 0, 87, 0, 0, 0, 0, 0, 0, 0, 128, 9, 0, 0, 174, 0, 0, 0, 175, 0, 0, 0, 137, 0, 0, 0, 19, 0, 0, 0, 5, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 160, 9, 0, 0, 176, 0, 0, 0, 177, 0, 0, 0, 137, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 11, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 12, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 216, 9, 0, 0, 176, 0, 0, 0, 178, 0, 0, 0, 137, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 11, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 12, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 8, 10, 0, 0, 179, 0, 0, 0, 180, 0, 0, 0, 137, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 13, 0, 0, 0, 81, 0, 0, 0, 82, 0, 0, 0, 14, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 0, 72, 10, 0, 0, 181, 0, 0, 0, 182, 0, 0, 0, 137, 0, 0, 0, 0, 0, 0, 0, 88, 10, 0, 0, 183, 0, 0, 0, 184, 0, 0, 0, 137, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 25, 0, 0, 0, 21, 0, 0, 0, 26, 0, 0, 0, 1, 0, 0, 0, 22, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 160, 10, 0, 0, 185, 0, 0, 0, 186, 0, 0, 0, 137, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 176, 10, 0, 0, 187, 0, 0, 0, 188, 0, 0, 0, 137, 0, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 94, 0, 0, 0, 116, 0, 0, 0, 114, 0, 0, 0, 117, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 97, 0, 0, 0, 108, 0, 0, 0, 115, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 6, 0, 0, 176, 0, 0, 0, 189, 0, 0, 0, 137, 0, 0, 0, 0, 0, 0, 0, 128, 10, 0, 0, 176, 0, 0, 0, 190, 0, 0, 0, 137, 0, 0, 0, 23, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 27, 0, 0, 0, 24, 0, 0, 0, 28, 0, 0, 0, 25, 0, 0, 0, 29, 0, 0, 0, 5, 0, 0, 0, 26, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 232, 9, 0, 0, 176, 0, 0, 0, 191, 0, 0, 0, 137, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 17, 0, 0, 0, 88, 0, 0, 0, 89, 0, 0, 0, 18, 0, 0, 0, 90, 0, 0, 0, 0, 0, 0, 0, 40, 10, 0, 0, 176, 0, 0, 0, 192, 0, 0, 0, 137, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 19, 0, 0, 0, 91, 0, 0, 0, 92, 0, 0, 0, 20, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 176, 9, 0, 0, 176, 0, 0, 0, 193, 0, 0, 0, 137, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 11, 0, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 12, 0, 0, 0, 80, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 208, 10, 0, 0, 194, 0, 0, 0, 195, 0, 0, 0, 196, 0, 0, 0, 197, 0, 0, 0, 27, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 224, 10, 0, 0, 194, 0, 0, 0, 198, 0, 0, 0, 196, 0, 0, 0, 197, 0, 0, 0, 27, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 10, 0, 0, 0, 149, 147, 0, 0, 0, 0, 0, 0, 8, 11, 0, 0, 199, 0, 0, 0, 200, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 56, 11, 0, 0, 194, 0, 0, 0, 201, 0, 0, 0, 196, 0, 0, 0, 197, 0, 0, 0, 27, 0, 0, 0, 8, 0, 0, 0, 3, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 3, 32, 2, 32, 2, 32, 2, 32, 2, 32, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 0, 1, 96, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 8, 216, 8, 216, 8, 216, 8, 216, 8, 216, 8, 216, 8, 216, 8, 216, 8, 216, 8, 216, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 8, 213, 8, 213, 8, 213, 8, 213, 8, 213, 8, 213, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 8, 197, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 4, 192, 8, 214, 8, 214, 8, 214, 8, 214, 8, 214, 8, 214, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 8, 198, 4, 192, 4, 192, 4, 192, 4, 192, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 108, 111, 98, 97, 108, 0, 78, 97, 78, 0, 73, 110, 102, 105, 110, 105, 116, 121, 0, 116, 111, 112, 109, 111, 115, 116, 0, 73, 110, 116, 56, 65, 114, 114, 97, 121, 0, 73, 110, 116, 49, 54, 65, 114, 114, 97, 121, 0, 73, 110, 116, 51, 50, 65, 114, 114, 97, 121, 0, 85, 105, 110, 116, 56, 65, 114, 114, 97, 121, 0, 85, 105, 110, 116, 49, 54, 65, 114, 114, 97, 121, 0, 85, 105, 110, 116, 51, 50, 65, 114, 114, 97, 121, 0, 70, 108, 111, 97, 116, 51, 50, 65, 114, 114, 97, 121, 0, 70, 108, 111, 97, 116, 54, 52, 65, 114, 114, 97, 121, 0, 105, 109, 112, 111, 115, 115, 105, 98, 108, 101, 45, 99, 111, 110, 116, 105, 110, 117, 101, 0, 77, 97, 116, 104, 0, 105, 109, 117, 108, 0, 99, 108, 122, 51, 50, 0, 102, 114, 111, 117, 110, 100, 0, 97, 115, 109, 50, 119, 97, 115, 109, 0, 102, 54, 52, 45, 114, 101, 109, 0, 102, 54, 52, 45, 116, 111, 45, 105, 110, 116, 0, 103, 108, 111, 98, 97, 108, 46, 77, 97, 116, 104, 0, 97, 115, 109, 50, 119, 97, 115, 109, 95, 105, 51, 50, 95, 116, 101, 109, 112, 0, 100, 101, 98, 117, 103, 103, 101, 114, 0, 95, 95, 103, 114, 111, 119, 87, 97, 115, 109, 77, 101, 109, 111, 114, 121, 0, 110, 101, 119, 83, 105, 122, 101, 0, 102, 117, 110, 99, 0, 114, 101, 115, 117, 108, 116, 0, 115, 101, 103, 109, 101, 110, 116, 0, 101, 120, 112, 111, 114, 116, 0, 105, 109, 112, 111, 114, 116, 0, 108, 111, 99, 97, 108, 0, 99, 97, 108, 108, 95, 105, 109, 112, 111, 114, 116, 0, 99, 97, 108, 108, 95, 105, 110, 100, 105, 114, 101, 99, 116, 0, 98, 114, 95, 105, 102, 0, 45, 105, 110, 102, 105, 110, 105, 116, 121, 0, 45, 110, 97, 110, 0, 117, 115, 101, 32, 97, 115, 109, 0, 98, 117, 102, 102, 101, 114, 0, 101, 110, 118, 0, 102, 97, 107, 101, 95, 114, 101, 116, 117, 114, 110, 95, 119, 97, 107, 97, 49, 50, 51, 0, 77, 97, 116, 104, 95, 105, 109, 117, 108, 0, 77, 97, 116, 104, 95, 99, 108, 122, 51, 50, 0, 77, 97, 116, 104, 95, 99, 116, 122, 51, 50, 0, 77, 97, 116, 104, 95, 112, 111, 112, 99, 110, 116, 51, 50, 0, 77, 97, 116, 104, 95, 97, 98, 115, 0, 77, 97, 116, 104, 95, 99, 101, 105, 108, 0, 77, 97, 116, 104, 95, 102, 108, 111, 111, 114, 0, 77, 97, 116, 104, 95, 116, 114, 117, 110, 99, 0, 77, 97, 116, 104, 95, 78, 69, 65, 82, 69, 83, 84, 0, 77, 97, 116, 104, 95, 115, 113, 114, 116, 0, 77, 97, 116, 104, 95, 109, 97, 120, 0, 77, 97, 116, 104, 95, 109, 105, 110, 0, 70, 85, 78, 67, 83, 73, 71, 36, 0, 97, 115, 116, 91, 48, 93, 32, 61, 61, 32, 84, 79, 80, 76, 69, 86, 69, 76, 0, 115, 114, 99, 47, 97, 115, 109, 50, 119, 97, 115, 109, 46, 104, 0, 112, 114, 111, 99, 101, 115, 115, 65, 115, 109, 0, 97, 115, 109, 70, 117, 110, 99, 116, 105, 111, 110, 91, 48, 93, 32, 61, 61, 32, 68, 69, 70, 85, 78, 0, 97, 108, 109, 111, 115, 116, 32, 97, 115, 109, 0, 98, 111, 100, 121, 91, 48, 93, 91, 48, 93, 32, 61, 61, 32, 83, 84, 65, 84, 32, 38, 38, 32, 98, 111, 100, 121, 91, 48, 93, 91, 49, 93, 91, 48, 93, 32, 61, 61, 32, 83, 84, 82, 73, 78, 71, 32, 38, 38, 32, 40, 98, 111, 100, 121, 91, 48, 93, 91, 49, 93, 91, 49, 93, 45, 62, 103, 101, 116, 73, 83, 116, 114, 105, 110, 103, 40, 41, 32, 61, 61, 32, 73, 83, 116, 114, 105, 110, 103, 40, 34, 117, 115, 101, 32, 97, 115, 109, 34, 41, 32, 124, 124, 32, 98, 111, 100, 121, 91, 48, 93, 91, 49, 93, 91, 49, 93, 45, 62, 103, 101, 116, 73, 83, 116, 114, 105, 110, 103, 40, 41, 32, 61, 61, 32, 73, 83, 116, 114, 105, 110, 103, 40, 34, 97, 108, 109, 111, 115, 116, 32, 97, 115, 109, 34, 41, 41, 0, 118, 97, 108, 117, 101, 91, 49, 93, 45, 62, 103, 101, 116, 78, 117, 109, 98, 101, 114, 40, 41, 32, 61, 61, 32, 48, 0, 118, 97, 108, 117, 101, 91, 49, 93, 32, 61, 61, 32, 79, 82, 32, 38, 38, 32, 118, 97, 108, 117, 101, 91, 51, 93, 91, 48, 93, 32, 61, 61, 32, 78, 85, 77, 32, 38, 38, 32, 118, 97, 108, 117, 101, 91, 51, 93, 91, 49, 93, 45, 62, 103, 101, 116, 78, 117, 109, 98, 101, 114, 40, 41, 32, 61, 61, 32, 48, 0, 118, 97, 108, 117, 101, 91, 49, 93, 32, 61, 61, 32, 80, 76, 85, 83, 0, 105, 109, 112, 111, 114, 116, 91, 49, 93, 45, 62, 103, 101, 116, 78, 117, 109, 98, 101, 114, 40, 41, 32, 61, 61, 32, 48, 0, 118, 97, 108, 117, 101, 91, 49, 93, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 32, 38, 38, 32, 118, 97, 108, 117, 101, 91, 49, 93, 91, 49, 93, 32, 61, 61, 32, 77, 97, 116, 104, 95, 102, 114, 111, 117, 110, 100, 32, 38, 38, 32, 118, 97, 108, 117, 101, 91, 50, 93, 91, 48, 93, 91, 48, 93, 32, 61, 61, 32, 78, 85, 77, 32, 38, 38, 32, 118, 97, 108, 117, 101, 91, 50, 93, 91, 48, 93, 91, 49, 93, 45, 62, 103, 101, 116, 78, 117, 109, 98, 101, 114, 40, 41, 32, 61, 61, 32, 48, 0, 118, 97, 108, 117, 101, 91, 48, 93, 32, 61, 61, 32, 67, 65, 76, 76, 0, 105, 110, 118, 97, 108, 105, 100, 32, 118, 105, 101, 119, 32, 105, 109, 112, 111, 114, 116, 0, 99, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 0, 105, 110, 118, 97, 108, 105, 100, 32, 115, 104, 111, 114, 116, 32, 118, 105, 101, 119, 32, 105, 109, 112, 111, 114, 116, 0, 118, 105, 101, 119, 115, 46, 102, 105, 110, 100, 40, 110, 97, 109, 101, 41, 32, 61, 61, 32, 118, 105, 101, 119, 115, 46, 101, 110, 100, 40, 41, 0, 105, 110, 118, 97, 108, 105, 100, 32, 118, 97, 114, 32, 101, 108, 101, 109, 101, 110, 116, 0, 118, 97, 108, 117, 101, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 0, 102, 117, 110, 99, 116, 105, 111, 110, 84, 97, 98, 108, 101, 83, 116, 97, 114, 116, 115, 46, 102, 105, 110, 100, 40, 116, 97, 98, 108, 101, 78, 97, 109, 101, 41, 32, 33, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 84, 97, 98, 108, 101, 83, 116, 97, 114, 116, 115, 46, 101, 110, 100, 40, 41, 0, 10, 102, 117, 110, 99, 58, 32, 0, 99, 117, 114, 114, 91, 48, 93, 32, 61, 61, 32, 83, 84, 65, 84, 0, 112, 114, 111, 99, 101, 115, 115, 70, 117, 110, 99, 116, 105, 111, 110, 0, 99, 117, 114, 114, 91, 48, 93, 32, 61, 61, 32, 65, 83, 83, 73, 71, 78, 32, 38, 38, 32, 99, 117, 114, 114, 91, 50, 93, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 0, 98, 114, 101, 97, 107, 83, 116, 97, 99, 107, 46, 115, 105, 122, 101, 40, 41, 32, 61, 61, 32, 48, 32, 38, 38, 32, 99, 111, 110, 116, 105, 110, 117, 101, 83, 116, 97, 99, 107, 46, 115, 105, 122, 101, 40, 41, 32, 61, 61, 32, 48, 0, 112, 97, 114, 101, 110, 116, 76, 97, 98, 101, 108, 46, 105, 115, 78, 117, 108, 108, 40, 41, 0, 119, 97, 115, 109, 0, 42, 114, 101, 116, 117, 114, 110, 58, 41, 42, 0, 109, 111, 100, 105, 102, 105, 101, 114, 32, 63, 32, 112, 111, 115, 105, 116, 105, 118, 101, 91, 52, 93, 32, 61, 61, 32, 39, 48, 39, 32, 38, 38, 32, 112, 111, 115, 105, 116, 105, 118, 101, 91, 53, 93, 32, 61, 61, 32, 39, 120, 39, 32, 58, 32, 49, 0, 115, 114, 99, 47, 112, 97, 114, 115, 105, 110, 103, 46, 104, 0, 112, 97, 114, 115, 101, 67, 111, 110, 115, 116, 0, 114, 101, 116, 45, 62, 118, 97, 108, 117, 101, 46, 116, 121, 112, 101, 32, 61, 61, 32, 116, 121, 112, 101, 0, 97, 115, 109, 32, 112, 97, 114, 115, 105, 110, 103, 46, 46, 46, 10, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 112, 114, 111, 118, 105, 100, 101, 100, 84, 111, 116, 97, 108, 77, 101, 109, 111, 114, 121, 39, 93, 59, 32, 125, 0, 119, 97, 115, 109, 105, 110, 103, 46, 46, 46, 10, 0, 111, 112, 116, 105, 109, 105, 122, 105, 110, 103, 46, 46, 46, 10, 0, 109, 97, 112, 112, 105, 110, 103, 32, 103, 108, 111, 98, 97, 108, 115, 46, 46, 46, 10, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 108, 111, 111, 107, 117, 112, 73, 109, 112, 111, 114, 116, 39, 93, 40, 80, 111, 105, 110, 116, 101, 114, 95, 115, 116, 114, 105, 110, 103, 105, 102, 121, 40, 36, 48, 41, 44, 32, 80, 111, 105, 110, 116, 101, 114, 95, 115, 116, 114, 105, 110, 103, 105, 102, 121, 40, 36, 49, 41, 41, 32, 125, 0, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 51, 50, 39, 93, 91, 36, 48, 32, 62, 62, 32, 50, 93, 32, 61, 32, 36, 49, 32, 125, 0, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 70, 51, 50, 39, 93, 91, 36, 48, 32, 62, 62, 32, 50, 93, 32, 61, 32, 36, 49, 32, 125, 0, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 70, 54, 52, 39, 93, 91, 36, 48, 32, 62, 62, 32, 51, 93, 32, 61, 32, 36, 49, 32, 125, 0, 119, 97, 115, 109, 45, 115, 45, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 112, 97, 114, 115, 105, 110, 103, 46, 46, 46, 10, 0, 105, 110, 115, 116, 97, 110, 116, 105, 97, 116, 105, 110, 103, 32, 109, 111, 100, 117, 108, 101, 58, 32, 10, 0, 103, 101, 110, 101, 114, 97, 116, 105, 110, 103, 32, 101, 120, 112, 111, 114, 116, 115, 46, 46, 46, 10, 0, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 97, 115, 109, 69, 120, 112, 111, 114, 116, 115, 39, 93, 32, 61, 32, 123, 125, 59, 32, 125, 0, 123, 32, 118, 97, 114, 32, 110, 97, 109, 101, 32, 61, 32, 80, 111, 105, 110, 116, 101, 114, 95, 115, 116, 114, 105, 110, 103, 105, 102, 121, 40, 36, 48, 41, 59, 32, 77, 111, 100, 117, 108, 101, 91, 39, 97, 115, 109, 69, 120, 112, 111, 114, 116, 115, 39, 93, 91, 110, 97, 109, 101, 93, 32, 61, 32, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 116, 101, 109, 112, 65, 114, 103, 117, 109, 101, 110, 116, 115, 39, 93, 32, 61, 32, 65, 114, 114, 97, 121, 46, 112, 114, 111, 116, 111, 116, 121, 112, 101, 46, 115, 108, 105, 99, 101, 46, 99, 97, 108, 108, 40, 97, 114, 103, 117, 109, 101, 110, 116, 115, 41, 59, 32, 77, 111, 100, 117, 108, 101, 91, 39, 95, 99, 97, 108, 108, 95, 102, 114, 111, 109, 95, 106, 115, 39, 93, 40, 36, 48, 41, 59, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 116, 101, 109, 112, 82, 101, 116, 117, 114, 110, 39, 93, 59, 32, 125, 59, 32, 125, 0, 99, 114, 101, 97, 116, 105, 110, 103, 32, 105, 110, 115, 116, 97, 110, 99, 101, 46, 46, 46, 10, 0, 99, 97, 108, 108, 95, 102, 114, 111, 109, 95, 106, 115, 32, 0, 115, 114, 99, 47, 119, 97, 115, 109, 45, 106, 115, 46, 99, 112, 112, 0, 99, 97, 108, 108, 95, 102, 114, 111, 109, 95, 106, 115, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 116, 101, 109, 112, 65, 114, 103, 117, 109, 101, 110, 116, 115, 39, 93, 46, 108, 101, 110, 103, 116, 104, 32, 125, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 116, 101, 109, 112, 65, 114, 103, 117, 109, 101, 110, 116, 115, 39, 93, 91, 36, 48, 93, 32, 125, 0, 99, 97, 108, 108, 95, 102, 114, 111, 109, 95, 106, 115, 32, 114, 101, 116, 117, 114, 110, 105, 110, 103, 32, 0, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 116, 101, 109, 112, 82, 101, 116, 117, 114, 110, 39, 93, 32, 61, 32, 117, 110, 100, 101, 102, 105, 110, 101, 100, 32, 125, 0, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 116, 101, 109, 112, 82, 101, 116, 117, 114, 110, 39, 93, 32, 61, 32, 36, 48, 32, 125, 0, 115, 0, 115, 114, 99, 47, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 45, 111, 112, 116, 105, 109, 105, 122, 101, 114, 47, 105, 115, 116, 114, 105, 110, 103, 46, 104, 0, 73, 83, 116, 114, 105, 110, 103, 0, 105, 115, 83, 116, 114, 105, 110, 103, 40, 41, 0, 103, 101, 116, 73, 83, 116, 114, 105, 110, 103, 0, 115, 105, 122, 101, 0, 105, 115, 78, 117, 109, 98, 101, 114, 40, 41, 0, 103, 101, 116, 78, 117, 109, 98, 101, 114, 0, 109, 97, 112, 112, 101, 100, 71, 108, 111, 98, 97, 108, 115, 46, 102, 105, 110, 100, 40, 110, 97, 109, 101, 41, 32, 61, 61, 32, 109, 97, 112, 112, 101, 100, 71, 108, 111, 98, 97, 108, 115, 46, 101, 110, 100, 40, 41, 0, 97, 108, 108, 111, 99, 97, 116, 101, 71, 108, 111, 98, 97, 108, 0, 110, 101, 120, 116, 71, 108, 111, 98, 97, 108, 32, 60, 32, 109, 97, 120, 71, 108, 111, 98, 97, 108, 0, 105, 109, 112, 111, 114, 116, 101, 100, 91, 48, 93, 32, 61, 61, 32, 68, 79, 84, 0, 109, 111, 100, 117, 108, 101, 91, 49, 93, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 0, 77, 97, 116, 104, 95, 105, 109, 117, 108, 46, 105, 115, 78, 117, 108, 108, 40, 41, 0, 77, 97, 116, 104, 95, 99, 108, 122, 51, 50, 46, 105, 115, 78, 117, 108, 108, 40, 41, 0, 77, 97, 116, 104, 95, 102, 114, 111, 117, 110, 100, 46, 105, 115, 78, 117, 108, 108, 40, 41, 0, 77, 97, 116, 104, 95, 97, 98, 115, 46, 105, 115, 78, 117, 108, 108, 40, 41, 0, 77, 97, 116, 104, 95, 102, 108, 111, 111, 114, 46, 105, 115, 78, 117, 108, 108, 40, 41, 0, 77, 97, 116, 104, 95, 99, 101, 105, 108, 46, 105, 115, 78, 117, 108, 108, 40, 41, 0, 77, 97, 116, 104, 95, 115, 113, 114, 116, 46, 105, 115, 78, 117, 108, 108, 40, 41, 0, 109, 111, 100, 117, 108, 101, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 0, 103, 101, 116, 67, 83, 116, 114, 105, 110, 103, 0, 111, 112, 101, 114, 97, 110, 100, 115, 32, 38, 38, 32, 111, 112, 101, 114, 97, 110, 100, 115, 45, 62, 115, 105, 122, 101, 40, 41, 32, 61, 61, 32, 49, 0, 103, 101, 116, 66, 117, 105, 108, 116, 105, 110, 70, 117, 110, 99, 116, 105, 111, 110, 84, 121, 112, 101, 0, 105, 105, 0, 102, 102, 0, 100, 100, 0, 34, 40, 110, 117, 108, 108, 41, 34, 0, 91, 93, 0, 110, 117, 108, 108, 0, 34, 58, 32, 0, 90, 78, 52, 119, 97, 115, 109, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 56, 111, 112, 116, 105, 109, 105, 122, 101, 69, 118, 69, 49, 57, 66, 108, 111, 99, 107, 66, 114, 101, 97, 107, 79, 112, 116, 105, 109, 105, 122, 101, 114, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 90, 78, 83, 95, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 56, 111, 112, 116, 105, 109, 105, 122, 101, 69, 118, 69, 49, 57, 66, 108, 111, 99, 107, 66, 114, 101, 97, 107, 79, 112, 116, 105, 109, 105, 122, 101, 114, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 90, 78, 83, 95, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 56, 111, 112, 116, 105, 109, 105, 122, 101, 69, 118, 69, 49, 57, 66, 108, 111, 99, 107, 66, 114, 101, 97, 107, 79, 112, 116, 105, 109, 105, 122, 101, 114, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 90, 78, 83, 95, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 56, 111, 112, 116, 105, 109, 105, 122, 101, 69, 118, 69, 49, 57, 66, 108, 111, 99, 107, 66, 114, 101, 97, 107, 79, 112, 116, 105, 109, 105, 122, 101, 114, 118, 69, 69, 0, 90, 90, 78, 52, 119, 97, 115, 109, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 56, 111, 112, 116, 105, 109, 105, 122, 101, 69, 118, 69, 78, 49, 57, 66, 108, 111, 99, 107, 66, 114, 101, 97, 107, 79, 112, 116, 105, 109, 105, 122, 101, 114, 49, 48, 118, 105, 115, 105, 116, 66, 108, 111, 99, 107, 69, 80, 78, 83, 95, 53, 66, 108, 111, 99, 107, 69, 69, 49, 49, 66, 114, 101, 97, 107, 83, 101, 101, 107, 101, 114, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 90, 90, 78, 83, 95, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 56, 111, 112, 116, 105, 109, 105, 122, 101, 69, 118, 69, 78, 49, 57, 66, 108, 111, 99, 107, 66, 114, 101, 97, 107, 79, 112, 116, 105, 109, 105, 122, 101, 114, 49, 48, 118, 105, 115, 105, 116, 66, 108, 111, 99, 107, 69, 80, 78, 83, 95, 53, 66, 108, 111, 99, 107, 69, 69, 49, 49, 66, 114, 101, 97, 107, 83, 101, 101, 107, 101, 114, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 90, 90, 78, 83, 95, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 56, 111, 112, 116, 105, 109, 105, 122, 101, 69, 118, 69, 78, 49, 57, 66, 108, 111, 99, 107, 66, 114, 101, 97, 107, 79, 112, 116, 105, 109, 105, 122, 101, 114, 49, 48, 118, 105, 115, 105, 116, 66, 108, 111, 99, 107, 69, 80, 78, 83, 95, 53, 66, 108, 111, 99, 107, 69, 69, 49, 49, 66, 114, 101, 97, 107, 83, 101, 101, 107, 101, 114, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 90, 90, 78, 83, 95, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 56, 111, 112, 116, 105, 109, 105, 122, 101, 69, 118, 69, 78, 49, 57, 66, 108, 111, 99, 107, 66, 114, 101, 97, 107, 79, 112, 116, 105, 109, 105, 122, 101, 114, 49, 48, 118, 105, 115, 105, 116, 66, 108, 111, 99, 107, 69, 80, 78, 83, 95, 53, 66, 108, 111, 99, 107, 69, 69, 49, 49, 66, 114, 101, 97, 107, 83, 101, 101, 107, 101, 114, 118, 69, 69, 0, 112, 97, 115, 115, 0, 115, 114, 99, 47, 112, 97, 115, 115, 46, 104, 0, 78, 83, 116, 51, 95, 95, 49, 49, 57, 98, 97, 115, 105, 99, 95, 105, 115, 116, 114, 105, 110, 103, 115, 116, 114, 101, 97, 109, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 53, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 98, 117, 102, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 116, 121, 112, 101, 32, 61, 61, 32, 87, 97, 115, 109, 84, 121, 112, 101, 58, 58, 105, 51, 50, 0, 99, 97, 115, 116, 84, 111, 70, 51, 50, 0, 116, 121, 112, 101, 32, 61, 61, 32, 87, 97, 115, 109, 84, 121, 112, 101, 58, 58, 105, 54, 52, 0, 99, 97, 115, 116, 84, 111, 70, 54, 52, 0, 97, 115, 109, 50, 119, 97, 115, 109, 32, 61, 61, 32, 110, 117, 108, 108, 112, 116, 114, 32, 38, 38, 32, 115, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 80, 97, 114, 115, 101, 114, 32, 61, 61, 32, 110, 117, 108, 108, 112, 116, 114, 32, 38, 38, 32, 115, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 32, 61, 61, 32, 110, 117, 108, 108, 112, 116, 114, 32, 38, 38, 32, 105, 110, 115, 116, 97, 110, 99, 101, 32, 61, 61, 32, 110, 117, 108, 108, 112, 116, 114, 0, 112, 114, 101, 112, 97, 114, 101, 50, 119, 97, 115, 109, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 33, 33, 77, 111, 100, 117, 108, 101, 91, 39, 111, 117, 116, 115, 105, 100, 101, 39, 93, 91, 39, 87, 65, 83, 77, 95, 74, 83, 95, 68, 69, 66, 85, 71, 39, 93, 32, 125, 0, 47, 47, 32, 69, 77, 83, 67, 82, 73, 80, 84, 69, 78, 95, 83, 84, 65, 82, 84, 95, 70, 85, 78, 67, 83, 0, 114, 101, 116, 117, 114, 110, 32, 116, 114, 117, 101, 59, 0, 102, 117, 110, 99, 116, 105, 111, 110, 32, 0, 115, 116, 114, 115, 116, 114, 40, 103, 114, 111, 119, 116, 104, 70, 117, 110, 99, 83, 116, 97, 114, 116, 32, 43, 32, 49, 44, 32, 34, 102, 117, 110, 99, 116, 105, 111, 110, 32, 34, 41, 32, 61, 61, 32, 48, 0, 112, 114, 111, 99, 101, 115, 115, 0, 103, 114, 111, 119, 116, 104, 70, 117, 110, 99, 69, 110, 100, 32, 62, 32, 103, 114, 111, 119, 116, 104, 70, 117, 110, 99, 83, 116, 97, 114, 116, 32, 43, 32, 53, 0, 59, 41, 0, 105, 110, 112, 117, 116, 0, 115, 114, 99, 47, 119, 97, 115, 109, 45, 115, 45, 112, 97, 114, 115, 101, 114, 46, 104, 0, 112, 97, 114, 115, 101, 73, 110, 110, 101, 114, 76, 105, 115, 116, 0, 105, 110, 112, 117, 116, 91, 48, 93, 32, 61, 61, 32, 39, 41, 39, 0, 112, 97, 114, 115, 101, 0, 105, 115, 76, 105, 115, 116, 95, 0, 108, 105, 115, 116, 0, 32, 41, 0, 109, 111, 100, 117, 108, 101, 91, 48, 93, 45, 62, 115, 116, 114, 40, 41, 32, 61, 61, 32, 77, 79, 68, 85, 76, 69, 0, 83, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 0, 33, 105, 115, 76, 105, 115, 116, 95, 0, 115, 116, 114, 0, 102, 117, 110, 99, 46, 105, 115, 76, 105, 115, 116, 40, 41, 0, 112, 97, 114, 115, 101, 84, 121, 112, 101, 0, 78, 83, 116, 51, 95, 95, 49, 49, 55, 98, 97, 100, 95, 102, 117, 110, 99, 116, 105, 111, 110, 95, 99, 97, 108, 108, 69, 0, 114, 101, 115, 117, 108, 116, 91, 48, 93, 45, 62, 115, 116, 114, 40, 41, 32, 61, 61, 32, 82, 69, 83, 85, 76, 84, 0, 112, 97, 114, 115, 101, 73, 109, 112, 111, 114, 116, 0, 98, 97, 100, 32, 109, 111, 100, 117, 108, 101, 32, 101, 108, 101, 109, 101, 110, 116, 32, 0, 112, 97, 114, 115, 101, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 0, 110, 97, 109, 101, 46, 115, 116, 114, 0, 97, 98, 111, 114, 116, 105, 110, 103, 32, 111, 110, 32, 0, 108, 101, 102, 116, 45, 62, 116, 121, 112, 101, 32, 33, 61, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 32, 38, 38, 32, 114, 105, 103, 104, 116, 45, 62, 116, 121, 112, 101, 32, 33, 61, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 32, 63, 32, 108, 101, 102, 116, 45, 62, 116, 121, 112, 101, 32, 61, 61, 32, 114, 105, 103, 104, 116, 45, 62, 116, 121, 112, 101, 32, 58, 32, 116, 114, 117, 101, 0, 102, 105, 110, 97, 108, 105, 122, 101, 0, 101, 120, 116, 114, 97, 91, 49, 93, 32, 61, 61, 32, 39, 54, 39, 0, 109, 97, 107, 101, 76, 111, 97, 100, 0, 101, 120, 116, 114, 97, 91, 49, 93, 32, 61, 61, 32, 39, 50, 39, 0, 99, 95, 115, 116, 114, 0, 109, 97, 107, 101, 83, 116, 111, 114, 101, 0, 105, 110, 118, 97, 108, 105, 100, 0, 119, 97, 115, 109, 46, 102, 117, 110, 99, 116, 105, 111, 110, 84, 121, 112, 101, 115, 77, 97, 112, 46, 102, 105, 110, 100, 40, 116, 121, 112, 101, 41, 32, 33, 61, 32, 119, 97, 115, 109, 46, 102, 117, 110, 99, 116, 105, 111, 110, 84, 121, 112, 101, 115, 77, 97, 112, 46, 101, 110, 100, 40, 41, 0, 109, 97, 107, 101, 67, 97, 108, 108, 73, 110, 100, 105, 114, 101, 99, 116, 0, 108, 111, 111, 112, 45, 111, 117, 116, 0, 108, 111, 111, 112, 45, 105, 110, 0, 99, 117, 114, 114, 91, 48, 93, 45, 62, 115, 116, 114, 40, 41, 32, 61, 61, 32, 67, 65, 83, 69, 0, 109, 97, 107, 101, 83, 119, 105, 116, 99, 104, 0, 99, 117, 114, 114, 91, 48, 93, 45, 62, 115, 116, 114, 40, 41, 32, 61, 61, 32, 83, 69, 71, 77, 69, 78, 84, 0, 112, 97, 114, 115, 101, 77, 101, 109, 111, 114, 121, 0, 90, 49, 49, 105, 110, 115, 116, 97, 110, 116, 105, 97, 116, 101, 69, 49, 57, 74, 83, 69, 120, 116, 101, 114, 110, 97, 108, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 78, 52, 119, 97, 115, 109, 49, 52, 77, 111, 100, 117, 108, 101, 73, 110, 115, 116, 97, 110, 99, 101, 49, 55, 69, 120, 116, 101, 114, 110, 97, 108, 73, 110, 116, 101, 114, 102, 97, 99, 101, 69, 0, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 111, 117, 116, 115, 105, 100, 101, 39, 93, 91, 39, 110, 101, 119, 66, 117, 102, 102, 101, 114, 39, 93, 32, 61, 32, 110, 101, 119, 32, 65, 114, 114, 97, 121, 66, 117, 102, 102, 101, 114, 40, 36, 48, 41, 59, 32, 125, 0, 123, 32, 118, 97, 114, 32, 115, 111, 117, 114, 99, 101, 32, 61, 32, 77, 111, 100, 117, 108, 101, 91, 39, 72, 69, 65, 80, 56, 39, 93, 46, 115, 117, 98, 97, 114, 114, 97, 121, 40, 36, 49, 44, 32, 36, 49, 32, 43, 32, 36, 50, 41, 59, 32, 118, 97, 114, 32, 116, 97, 114, 103, 101, 116, 32, 61, 32, 110, 101, 119, 32, 73, 110, 116, 56, 65, 114, 114, 97, 121, 40, 77, 111, 100, 117, 108, 101, 91, 39, 111, 117, 116, 115, 105, 100, 101, 39, 93, 91, 39, 110, 101, 119, 66, 117, 102, 102, 101, 114, 39, 93, 41, 59, 32, 116, 97, 114, 103, 101, 116, 46, 115, 101, 116, 40, 115, 111, 117, 114, 99, 101, 44, 32, 36, 48, 41, 59, 32, 125, 0, 99, 97, 108, 108, 105, 110, 103, 32, 105, 109, 112, 111, 114, 116, 32, 0, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 116, 101, 109, 112, 65, 114, 103, 117, 109, 101, 110, 116, 115, 39, 93, 32, 61, 32, 91, 93, 59, 32, 125, 0, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 116, 101, 109, 112, 65, 114, 103, 117, 109, 101, 110, 116, 115, 39, 93, 46, 112, 117, 115, 104, 40, 36, 48, 41, 32, 125, 0, 123, 32, 118, 97, 114, 32, 109, 111, 100, 32, 61, 32, 80, 111, 105, 110, 116, 101, 114, 95, 115, 116, 114, 105, 110, 103, 105, 102, 121, 40, 36, 48, 41, 59, 32, 118, 97, 114, 32, 98, 97, 115, 101, 32, 61, 32, 80, 111, 105, 110, 116, 101, 114, 95, 115, 116, 114, 105, 110, 103, 105, 102, 121, 40, 36, 49, 41, 59, 32, 118, 97, 114, 32, 116, 101, 109, 112, 65, 114, 103, 117, 109, 101, 110, 116, 115, 32, 61, 32, 77, 111, 100, 117, 108, 101, 91, 39, 116, 101, 109, 112, 65, 114, 103, 117, 109, 101, 110, 116, 115, 39, 93, 59, 32, 77, 111, 100, 117, 108, 101, 91, 39, 116, 101, 109, 112, 65, 114, 103, 117, 109, 101, 110, 116, 115, 39, 93, 32, 61, 32, 110, 117, 108, 108, 59, 32, 118, 97, 114, 32, 108, 111, 111, 107, 117, 112, 32, 61, 32, 77, 111, 100, 117, 108, 101, 91, 39, 108, 111, 111, 107, 117, 112, 73, 109, 112, 111, 114, 116, 39, 93, 40, 109, 111, 100, 44, 32, 98, 97, 115, 101, 41, 59, 32, 114, 101, 116, 117, 114, 110, 32, 108, 111, 111, 107, 117, 112, 46, 97, 112, 112, 108, 121, 40, 110, 117, 108, 108, 44, 32, 116, 101, 109, 112, 65, 114, 103, 117, 109, 101, 110, 116, 115, 41, 59, 32, 125, 0, 99, 97, 108, 108, 105, 110, 103, 32, 105, 109, 112, 111, 114, 116, 32, 114, 101, 116, 117, 114, 110, 105, 110, 103, 32, 0, 123, 32, 118, 97, 114, 32, 97, 100, 100, 114, 32, 61, 32, 36, 48, 59, 32, 118, 97, 114, 32, 98, 121, 116, 101, 115, 32, 61, 32, 36, 49, 59, 32, 118, 97, 114, 32, 105, 115, 70, 108, 111, 97, 116, 32, 61, 32, 36, 50, 59, 32, 118, 97, 114, 32, 105, 115, 83, 105, 103, 110, 101, 100, 32, 61, 32, 36, 51, 59, 32, 118, 97, 114, 32, 115, 97, 118, 101, 48, 32, 61, 32, 72, 69, 65, 80, 51, 50, 91, 48, 93, 59, 32, 118, 97, 114, 32, 115, 97, 118, 101, 49, 32, 61, 32, 72, 69, 65, 80, 51, 50, 91, 49, 93, 59, 32, 102, 111, 114, 32, 40, 118, 97, 114, 32, 105, 32, 61, 32, 48, 59, 32, 105, 32, 60, 32, 98, 121, 116, 101, 115, 59, 32, 105, 43, 43, 41, 32, 123, 32, 72, 69, 65, 80, 85, 56, 91, 105, 93, 32, 61, 32, 77, 111, 100, 117, 108, 101, 91, 34, 105, 110, 102, 111, 34, 93, 46, 112, 97, 114, 101, 110, 116, 91, 34, 72, 69, 65, 80, 85, 56, 34, 93, 91, 97, 100, 100, 114, 32, 43, 32, 105, 93, 59, 32, 125, 32, 118, 97, 114, 32, 114, 101, 116, 59, 32, 105, 102, 32, 40, 33, 105, 115, 70, 108, 111, 97, 116, 41, 32, 123, 32, 105, 102, 32, 40, 98, 121, 116, 101, 115, 32, 61, 61, 61, 32, 49, 41, 32, 114, 101, 116, 32, 61, 32, 105, 115, 83, 105, 103, 110, 101, 100, 32, 63, 32, 72, 69, 65, 80, 56, 91, 48, 93, 32, 58, 32, 72, 69, 65, 80, 85, 56, 91, 48, 93, 59, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40, 98, 121, 116, 101, 115, 32, 61, 61, 61, 32, 50, 41, 32, 114, 101, 116, 32, 61, 32, 105, 115, 83, 105, 103, 110, 101, 100, 32, 63, 32, 72, 69, 65, 80, 49, 54, 91, 48, 93, 32, 58, 32, 72, 69, 65, 80, 85, 49, 54, 91, 48, 93, 59, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40, 98, 121, 116, 101, 115, 32, 61, 61, 61, 32, 52, 41, 32, 114, 101, 116, 32, 61, 32, 105, 115, 83, 105, 103, 110, 101, 100, 32, 63, 32, 72, 69, 65, 80, 51, 50, 91, 48, 93, 32, 58, 32, 72, 69, 65, 80, 85, 51, 50, 91, 48, 93, 59, 32, 101, 108, 115, 101, 32, 97, 98, 111, 114, 116, 40, 41, 59, 32, 125, 32, 101, 108, 115, 101, 32, 123, 32, 105, 102, 32, 40, 98, 121, 116, 101, 115, 32, 61, 61, 61, 32, 52, 41, 32, 114, 101, 116, 32, 61, 32, 72, 69, 65, 80, 70, 51, 50, 91, 48, 93, 59, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40, 98, 121, 116, 101, 115, 32, 61, 61, 61, 32, 56, 41, 32, 114, 101, 116, 32, 61, 32, 72, 69, 65, 80, 70, 54, 52, 91, 48, 93, 59, 32, 101, 108, 115, 101, 32, 97, 98, 111, 114, 116, 40, 41, 59, 32, 125, 32, 72, 69, 65, 80, 51, 50, 91, 48, 93, 32, 61, 32, 115, 97, 118, 101, 48, 59, 32, 72, 69, 65, 80, 51, 50, 91, 49, 93, 32, 61, 32, 115, 97, 118, 101, 49, 59, 32, 114, 101, 116, 117, 114, 110, 32, 114, 101, 116, 59, 32, 125, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 56, 39, 93, 91, 36, 48, 93, 32, 125, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 85, 56, 39, 93, 91, 36, 48, 93, 32, 125, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 49, 54, 39, 93, 91, 36, 48, 32, 62, 62, 32, 49, 93, 32, 125, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 85, 49, 54, 39, 93, 91, 36, 48, 32, 62, 62, 32, 49, 93, 32, 125, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 51, 50, 39, 93, 91, 36, 48, 32, 62, 62, 32, 50, 93, 32, 125, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 85, 51, 50, 39, 93, 91, 36, 48, 32, 62, 62, 32, 50, 93, 32, 125, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 70, 51, 50, 39, 93, 91, 36, 48, 32, 62, 62, 32, 50, 93, 32, 125, 0, 123, 32, 114, 101, 116, 117, 114, 110, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 70, 54, 52, 39, 93, 91, 36, 48, 32, 62, 62, 32, 51, 93, 32, 125, 0, 123, 32, 118, 97, 114, 32, 97, 100, 100, 114, 32, 61, 32, 36, 48, 59, 32, 118, 97, 114, 32, 98, 121, 116, 101, 115, 32, 61, 32, 36, 49, 59, 32, 118, 97, 114, 32, 105, 115, 70, 108, 111, 97, 116, 32, 61, 32, 36, 50, 59, 32, 118, 97, 114, 32, 118, 97, 108, 117, 101, 32, 61, 32, 36, 51, 59, 32, 118, 97, 114, 32, 115, 97, 118, 101, 48, 32, 61, 32, 72, 69, 65, 80, 51, 50, 91, 48, 93, 59, 32, 118, 97, 114, 32, 115, 97, 118, 101, 49, 32, 61, 32, 72, 69, 65, 80, 51, 50, 91, 49, 93, 59, 32, 105, 102, 32, 40, 33, 105, 115, 70, 108, 111, 97, 116, 41, 32, 123, 32, 105, 102, 32, 40, 98, 121, 116, 101, 115, 32, 61, 61, 61, 32, 49, 41, 32, 72, 69, 65, 80, 85, 56, 91, 48, 93, 32, 61, 32, 118, 97, 108, 117, 101, 59, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40, 98, 121, 116, 101, 115, 32, 61, 61, 61, 32, 50, 41, 32, 72, 69, 65, 80, 85, 49, 54, 91, 48, 93, 32, 61, 32, 118, 97, 108, 117, 101, 59, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40, 98, 121, 116, 101, 115, 32, 61, 61, 61, 32, 52, 41, 32, 72, 69, 65, 80, 85, 51, 50, 91, 48, 93, 32, 61, 32, 118, 97, 108, 117, 101, 59, 32, 101, 108, 115, 101, 32, 97, 98, 111, 114, 116, 40, 41, 59, 32, 125, 32, 101, 108, 115, 101, 32, 123, 32, 105, 102, 32, 40, 98, 121, 116, 101, 115, 32, 61, 61, 61, 32, 52, 41, 32, 72, 69, 65, 80, 70, 51, 50, 91, 48, 93, 32, 61, 32, 118, 97, 108, 117, 101, 59, 32, 101, 108, 115, 101, 32, 105, 102, 32, 40, 98, 121, 116, 101, 115, 32, 61, 61, 61, 32, 56, 41, 32, 72, 69, 65, 80, 70, 54, 52, 91, 48, 93, 32, 61, 32, 118, 97, 108, 117, 101, 59, 32, 101, 108, 115, 101, 32, 97, 98, 111, 114, 116, 40, 41, 59, 32, 125, 32, 102, 111, 114, 32, 40, 118, 97, 114, 32, 105, 32, 61, 32, 48, 59, 32, 105, 32, 60, 32, 98, 121, 116, 101, 115, 59, 32, 105, 43, 43, 41, 32, 123, 32, 77, 111, 100, 117, 108, 101, 91, 34, 105, 110, 102, 111, 34, 93, 46, 112, 97, 114, 101, 110, 116, 91, 34, 72, 69, 65, 80, 85, 56, 34, 93, 91, 97, 100, 100, 114, 32, 43, 32, 105, 93, 32, 61, 32, 72, 69, 65, 80, 85, 56, 91, 105, 93, 59, 32, 125, 32, 72, 69, 65, 80, 51, 50, 91, 48, 93, 32, 61, 32, 115, 97, 118, 101, 48, 59, 32, 72, 69, 65, 80, 51, 50, 91, 49, 93, 32, 61, 32, 115, 97, 118, 101, 49, 59, 32, 125, 0, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 56, 39, 93, 91, 36, 48, 93, 32, 61, 32, 36, 49, 32, 125, 0, 123, 32, 77, 111, 100, 117, 108, 101, 91, 39, 105, 110, 102, 111, 39, 93, 46, 112, 97, 114, 101, 110, 116, 91, 39, 72, 69, 65, 80, 49, 54, 39, 93, 91, 36, 48, 32, 62, 62, 32, 49, 93, 32, 61, 32, 36, 49, 32, 125, 0, 103, 101, 116, 105, 54, 52, 0, 123, 32, 118, 97, 114, 32, 115, 105, 122, 101, 32, 61, 32, 36, 48, 59, 32, 118, 97, 114, 32, 98, 117, 102, 102, 101, 114, 59, 32, 116, 114, 121, 32, 123, 32, 98, 117, 102, 102, 101, 114, 32, 61, 32, 110, 101, 119, 32, 65, 114, 114, 97, 121, 66, 117, 102, 102, 101, 114, 40, 115, 105, 122, 101, 41, 59, 32, 125, 32, 99, 97, 116, 99, 104, 40, 101, 41, 32, 123, 32, 114, 101, 116, 117, 114, 110, 59, 32, 125, 32, 118, 97, 114, 32, 111, 108, 100, 72, 69, 65, 80, 56, 32, 61, 32, 77, 111, 100, 117, 108, 101, 91, 39, 111, 117, 116, 115, 105, 100, 101, 39, 93, 91, 39, 72, 69, 65, 80, 56, 39, 93, 59, 32, 118, 97, 114, 32, 116, 101, 109, 112, 32, 61, 32, 110, 101, 119, 32, 73, 110, 116, 56, 65, 114, 114, 97, 121, 40, 98, 117, 102, 102, 101, 114, 41, 59, 32, 116, 101, 109, 112, 46, 115, 101, 116, 40, 111, 108, 100, 72, 69, 65, 80, 56, 41, 59, 32, 77, 111, 100, 117, 108, 101, 91, 39, 111, 117, 116, 115, 105, 100, 101, 39, 93, 91, 39, 98, 117, 102, 102, 101, 114, 39, 93, 32, 61, 32, 98, 117, 102, 102, 101, 114, 59, 32, 125, 0, 123, 32, 97, 98, 111, 114, 116, 40, 34, 119, 97, 115, 109, 32, 116, 114, 97, 112, 58, 32, 34, 32, 43, 32, 80, 111, 105, 110, 116, 101, 114, 95, 115, 116, 114, 105, 110, 103, 105, 102, 121, 40, 36, 48, 41, 41, 59, 32, 125, 0, 115, 116, 97, 99, 107, 32, 108, 105, 109, 105, 116, 0, 115, 114, 99, 47, 119, 97, 115, 109, 45, 105, 110, 116, 101, 114, 112, 114, 101, 116, 101, 114, 46, 104, 0, 99, 97, 108, 108, 70, 117, 110, 99, 116, 105, 111, 110, 0, 33, 102, 108, 111, 119, 46, 98, 114, 101, 97, 107, 105, 110, 103, 40, 41, 32, 124, 124, 32, 102, 108, 111, 119, 46, 98, 114, 101, 97, 107, 84, 111, 32, 61, 61, 32, 82, 69, 84, 85, 82, 78, 95, 70, 76, 79, 87, 0, 102, 117, 110, 99, 116, 105, 111, 110, 45, 62, 114, 101, 115, 117, 108, 116, 32, 61, 61, 32, 114, 101, 116, 46, 116, 121, 112, 101, 0, 70, 117, 110, 99, 116, 105, 111, 110, 32, 96, 0, 96, 32, 101, 120, 112, 101, 99, 116, 115, 32, 0, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 44, 32, 103, 111, 116, 32, 0, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 46, 0, 96, 32, 101, 120, 112, 101, 99, 116, 115, 32, 116, 121, 112, 101, 32, 0, 32, 102, 111, 114, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 0, 44, 32, 103, 111, 116, 32, 0, 110, 111, 110, 101, 0, 90, 78, 52, 119, 97, 115, 109, 49, 52, 77, 111, 100, 117, 108, 101, 73, 110, 115, 116, 97, 110, 99, 101, 49, 50, 99, 97, 108, 108, 70, 117, 110, 99, 116, 105, 111, 110, 69, 78, 54, 99, 97, 115, 104, 101, 119, 55, 73, 83, 116, 114, 105, 110, 103, 69, 82, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101 ], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 10240);
allocate([ 99, 116, 111, 114, 73, 78, 83, 95, 55, 76, 105, 116, 101, 114, 97, 108, 69, 78, 83, 51, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 53, 95, 69, 69, 69, 69, 69, 49, 54, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 82, 117, 110, 110, 101, 114, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 90, 78, 83, 95, 49, 52, 77, 111, 100, 117, 108, 101, 73, 110, 115, 116, 97, 110, 99, 101, 49, 50, 99, 97, 108, 108, 70, 117, 110, 99, 116, 105, 111, 110, 69, 78, 54, 99, 97, 115, 104, 101, 119, 55, 73, 83, 116, 114, 105, 110, 103, 69, 82, 78, 83, 116, 51, 95, 95, 49, 54, 118, 101, 99, 116, 111, 114, 73, 78, 83, 95, 55, 76, 105, 116, 101, 114, 97, 108, 69, 78, 83, 52, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 54, 95, 69, 69, 69, 69, 69, 49, 54, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 82, 117, 110, 110, 101, 114, 78, 83, 95, 52, 70, 108, 111, 119, 69, 69, 69, 0, 99, 97, 115, 101, 73, 110, 100, 101, 120, 32, 60, 32, 99, 117, 114, 114, 45, 62, 99, 97, 115, 101, 115, 46, 115, 105, 122, 101, 40, 41, 0, 118, 105, 115, 105, 116, 83, 119, 105, 116, 99, 104, 0, 99, 97, 108, 108, 73, 110, 100, 105, 114, 101, 99, 116, 58, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 99, 97, 108, 108, 73, 110, 100, 105, 114, 101, 99, 116, 58, 32, 98, 97, 100, 32, 116, 121, 112, 101, 0, 102, 108, 111, 119, 46, 118, 97, 108, 117, 101, 46, 116, 121, 112, 101, 32, 61, 61, 32, 99, 117, 114, 114, 45, 62, 116, 121, 112, 101, 0, 118, 105, 115, 105, 116, 83, 101, 116, 76, 111, 99, 97, 108, 0, 111, 102, 102, 115, 101, 116, 32, 62, 32, 109, 101, 109, 111, 114, 121, 0, 102, 105, 110, 97, 108, 32, 62, 32, 109, 101, 109, 111, 114, 121, 0, 98, 121, 116, 101, 115, 32, 62, 32, 109, 101, 109, 111, 114, 121, 0, 104, 105, 103, 104, 101, 115, 116, 32, 62, 32, 109, 101, 109, 111, 114, 121, 0, 58, 32, 0, 32, 62, 32, 0, 78, 83, 116, 51, 95, 95, 49, 49, 56, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 115, 116, 114, 101, 97, 109, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 101, 120, 116, 101, 110, 100, 84, 111, 83, 73, 54, 52, 0, 101, 120, 116, 101, 110, 100, 84, 111, 85, 73, 54, 52, 0, 116, 114, 117, 110, 99, 97, 116, 101, 84, 111, 73, 51, 50, 0, 116, 114, 117, 110, 99, 83, 70, 108, 111, 97, 116, 32, 111, 102, 32, 110, 97, 110, 0, 105, 51, 50, 46, 116, 114, 117, 110, 99, 83, 70, 108, 111, 97, 116, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 116, 114, 117, 110, 99, 85, 70, 108, 111, 97, 116, 32, 111, 102, 32, 110, 97, 110, 0, 105, 54, 52, 46, 116, 114, 117, 110, 99, 85, 70, 108, 111, 97, 116, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 116, 121, 112, 101, 32, 61, 61, 32, 87, 97, 115, 109, 84, 121, 112, 101, 58, 58, 102, 51, 50, 0, 99, 97, 115, 116, 84, 111, 73, 51, 50, 0, 101, 120, 116, 101, 110, 100, 84, 111, 70, 54, 52, 0, 116, 121, 112, 101, 32, 61, 61, 32, 87, 97, 115, 109, 84, 121, 112, 101, 58, 58, 102, 54, 52, 0, 99, 97, 115, 116, 84, 111, 73, 54, 52, 0, 116, 114, 117, 110, 99, 97, 116, 101, 84, 111, 70, 51, 50, 0, 105, 115, 67, 111, 110, 99, 114, 101, 116, 101, 87, 97, 115, 109, 84, 121, 112, 101, 40, 99, 117, 114, 114, 45, 62, 108, 101, 102, 116, 45, 62, 116, 121, 112, 101, 41, 32, 63, 32, 108, 101, 102, 116, 46, 116, 121, 112, 101, 32, 61, 61, 32, 99, 117, 114, 114, 45, 62, 108, 101, 102, 116, 45, 62, 116, 121, 112, 101, 32, 58, 32, 116, 114, 117, 101, 0, 118, 105, 115, 105, 116, 66, 105, 110, 97, 114, 121, 0, 105, 115, 67, 111, 110, 99, 114, 101, 116, 101, 87, 97, 115, 109, 84, 121, 112, 101, 40, 99, 117, 114, 114, 45, 62, 114, 105, 103, 104, 116, 45, 62, 116, 121, 112, 101, 41, 32, 63, 32, 114, 105, 103, 104, 116, 46, 116, 121, 112, 101, 32, 61, 61, 32, 99, 117, 114, 114, 45, 62, 114, 105, 103, 104, 116, 45, 62, 116, 121, 112, 101, 32, 58, 32, 116, 114, 117, 101, 0, 105, 51, 50, 46, 100, 105, 118, 95, 115, 32, 98, 121, 32, 48, 0, 105, 51, 50, 46, 100, 105, 118, 95, 115, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 105, 51, 50, 46, 100, 105, 118, 95, 117, 32, 98, 121, 32, 48, 0, 105, 51, 50, 46, 114, 101, 109, 95, 115, 32, 98, 121, 32, 48, 0, 105, 51, 50, 46, 114, 101, 109, 95, 117, 32, 98, 121, 32, 48, 0, 105, 54, 52, 46, 100, 105, 118, 95, 115, 32, 98, 121, 32, 48, 0, 105, 54, 52, 46, 100, 105, 118, 95, 115, 32, 111, 118, 101, 114, 102, 108, 111, 119, 0, 105, 54, 52, 46, 100, 105, 118, 95, 117, 32, 98, 121, 32, 48, 0, 105, 54, 52, 46, 114, 101, 109, 95, 115, 32, 98, 121, 32, 48, 0, 105, 54, 52, 46, 114, 101, 109, 95, 117, 32, 98, 121, 32, 48, 0, 103, 114, 111, 119, 77, 101, 109, 111, 114, 121, 58, 32, 100, 101, 108, 116, 97, 32, 110, 111, 116, 32, 109, 117, 108, 116, 105, 112, 108, 101, 0, 103, 114, 111, 119, 77, 101, 109, 111, 114, 121, 58, 32, 100, 101, 108, 116, 97, 32, 114, 101, 108, 97, 116, 105, 118, 101, 108, 121, 32, 116, 111, 111, 32, 98, 105, 103, 0, 103, 114, 111, 119, 77, 101, 109, 111, 114, 121, 58, 32, 100, 101, 108, 116, 97, 32, 111, 98, 106, 101, 99, 116, 105, 118, 101, 108, 121, 32, 116, 111, 111, 32, 98, 105, 103, 0, 103, 114, 111, 119, 77, 101, 109, 111, 114, 121, 58, 32, 101, 120, 99, 101, 101, 100, 115, 32, 109, 97, 120, 0, 99, 97, 108, 108, 69, 120, 112, 111, 114, 116, 32, 110, 111, 116, 32, 102, 111, 117, 110, 100, 0, 46, 99, 111, 110, 115, 116, 32, 0, 58, 48, 120, 0, 45, 48, 0, 37, 108, 102, 0, 100, 32, 62, 61, 32, 48, 0, 110, 117, 109, 84, 111, 83, 116, 114, 105, 110, 103, 0, 48, 120, 37, 108, 108, 120, 0, 37, 108, 108, 117, 0, 37, 108, 108, 120, 0, 37, 101, 0, 37, 46, 48, 102, 0, 110, 117, 109, 32, 60, 32, 49, 48, 48, 48, 0, 103, 101, 116, 105, 51, 50, 0, 103, 101, 116, 102, 51, 50, 0, 103, 101, 116, 102, 54, 52, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 78, 52, 119, 97, 115, 109, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 49, 53, 112, 114, 111, 99, 101, 115, 115, 70, 117, 110, 99, 116, 105, 111, 110, 69, 78, 54, 99, 97, 115, 104, 101, 119, 51, 82, 101, 102, 69, 69, 51, 36, 95, 49, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 54, 95, 69, 69, 70, 80, 78, 83, 50, 95, 49, 48, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 69, 83, 53, 95, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 98, 97, 115, 101, 73, 70, 80, 78, 52, 119, 97, 115, 109, 49, 48, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 69, 78, 54, 99, 97, 115, 104, 101, 119, 51, 82, 101, 102, 69, 69, 69, 69, 0, 97, 116, 58, 32, 0, 109, 97, 112, 112, 101, 100, 71, 108, 111, 98, 97, 108, 115, 46, 102, 105, 110, 100, 40, 110, 97, 109, 101, 41, 32, 33, 61, 32, 109, 97, 112, 112, 101, 100, 71, 108, 111, 98, 97, 108, 115, 46, 101, 110, 100, 40, 41, 0, 116, 97, 114, 103, 101, 116, 91, 49, 93, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 0, 118, 105, 101, 119, 115, 46, 102, 105, 110, 100, 40, 104, 101, 97, 112, 41, 32, 33, 61, 32, 118, 105, 101, 119, 115, 46, 101, 110, 100, 40, 41, 0, 99, 111, 110, 102, 117, 115, 105, 110, 103, 32, 97, 115, 115, 105, 103, 110, 0, 100, 100, 100, 0, 118, 0, 116, 97, 114, 103, 101, 116, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 0, 114, 101, 116, 45, 62, 108, 101, 102, 116, 45, 62, 116, 121, 112, 101, 32, 61, 61, 32, 114, 101, 116, 45, 62, 114, 105, 103, 104, 116, 45, 62, 116, 121, 112, 101, 0, 98, 97, 100, 32, 117, 110, 97, 114, 121, 0, 97, 115, 116, 91, 50, 93, 45, 62, 115, 105, 122, 101, 40, 41, 32, 61, 61, 32, 50, 0, 97, 115, 116, 91, 50, 93, 45, 62, 115, 105, 122, 101, 40, 41, 32, 61, 61, 32, 49, 0, 99, 111, 110, 102, 117, 115, 105, 110, 103, 32, 102, 114, 111, 117, 110, 100, 32, 116, 97, 114, 103, 101, 116, 0, 116, 97, 114, 103, 101, 116, 91, 48, 93, 32, 61, 61, 32, 83, 85, 66, 32, 38, 38, 32, 116, 97, 114, 103, 101, 116, 91, 49, 93, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 32, 38, 38, 32, 116, 97, 114, 103, 101, 116, 91, 50, 93, 91, 48, 93, 32, 61, 61, 32, 66, 73, 78, 65, 82, 89, 32, 38, 38, 32, 116, 97, 114, 103, 101, 116, 91, 50, 93, 91, 49, 93, 32, 61, 61, 32, 65, 78, 68, 32, 38, 38, 32, 116, 97, 114, 103, 101, 116, 91, 50, 93, 91, 51, 93, 91, 48, 93, 32, 61, 61, 32, 78, 85, 77, 0, 102, 117, 110, 99, 116, 105, 111, 110, 45, 62, 114, 101, 115, 117, 108, 116, 32, 61, 61, 32, 116, 121, 112, 101, 0, 98, 114, 101, 97, 107, 83, 116, 97, 99, 107, 46, 115, 105, 122, 101, 40, 41, 32, 62, 32, 48, 0, 99, 111, 110, 116, 105, 110, 117, 101, 83, 116, 97, 99, 107, 46, 115, 105, 122, 101, 40, 41, 32, 62, 32, 48, 0, 119, 104, 105, 108, 101, 45, 111, 117, 116, 0, 119, 104, 105, 108, 101, 45, 105, 110, 0, 100, 111, 45, 111, 110, 99, 101, 0, 100, 111, 45, 111, 117, 116, 0, 100, 111, 45, 105, 110, 0, 102, 111, 114, 45, 111, 117, 116, 0, 102, 111, 114, 45, 105, 110, 0, 114, 101, 116, 45, 62, 118, 97, 108, 117, 101, 45, 62, 116, 121, 112, 101, 32, 61, 61, 32, 105, 51, 50, 0, 99, 111, 110, 100, 105, 116, 105, 111, 110, 91, 48, 93, 32, 61, 61, 32, 78, 85, 77, 32, 124, 124, 32, 99, 111, 110, 100, 105, 116, 105, 111, 110, 91, 48, 93, 32, 61, 61, 32, 85, 78, 65, 82, 89, 95, 80, 82, 69, 70, 73, 88, 0, 115, 119, 105, 116, 99, 104, 45, 100, 101, 102, 97, 117, 108, 116, 0, 105, 110, 100, 101, 120, 32, 62, 61, 32, 109, 105, 110, 0, 105, 110, 100, 101, 120, 32, 62, 61, 32, 48, 0, 115, 119, 105, 116, 99, 104, 45, 99, 97, 115, 101, 0, 99, 111, 110, 102, 117, 115, 105, 110, 103, 32, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 0, 98, 97, 100, 32, 119, 97, 115, 109, 32, 98, 105, 110, 97, 114, 121, 32, 111, 112, 0, 102, 97, 108, 115, 101, 32, 38, 38, 32, 34, 101, 120, 112, 101, 99, 116, 101, 100, 32, 115, 105, 103, 110, 101, 100, 32, 111, 114, 32, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 51, 50, 34, 0, 99, 104, 101, 99, 107, 76, 105, 116, 101, 114, 97, 108, 0, 100, 101, 116, 101, 99, 116, 65, 115, 109, 84, 121, 112, 101, 0, 97, 115, 116, 91, 48, 93, 32, 61, 61, 32, 67, 65, 76, 76, 32, 38, 38, 32, 97, 115, 116, 91, 49, 93, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 0, 110, 111, 116, 101, 73, 109, 112, 111, 114, 116, 101, 100, 70, 117, 110, 99, 116, 105, 111, 110, 67, 97, 108, 108, 0, 116, 121, 112, 101, 36, 0, 108, 97, 98, 101, 108, 36, 98, 114, 101, 97, 107, 36, 0, 108, 97, 98, 101, 108, 36, 99, 111, 110, 116, 105, 110, 117, 101, 36, 0, 102, 109, 111, 100, 40, 103, 101, 116, 78, 117, 109, 98, 101, 114, 40, 41, 44, 32, 49, 41, 32, 61, 61, 32, 48, 0, 103, 101, 116, 73, 110, 116, 101, 103, 101, 114, 0, 100, 111, 117, 98, 108, 101, 40, 114, 101, 116, 41, 32, 61, 61, 32, 103, 101, 116, 78, 117, 109, 98, 101, 114, 40, 41, 0, 90, 78, 52, 119, 97, 115, 109, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 49, 53, 112, 114, 111, 99, 101, 115, 115, 70, 117, 110, 99, 116, 105, 111, 110, 69, 78, 54, 99, 97, 115, 104, 101, 119, 51, 82, 101, 102, 69, 69, 51, 36, 95, 49, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 78, 52, 119, 97, 115, 109, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 49, 53, 112, 114, 111, 99, 101, 115, 115, 70, 117, 110, 99, 116, 105, 111, 110, 69, 78, 54, 99, 97, 115, 104, 101, 119, 51, 82, 101, 102, 69, 69, 51, 36, 95, 50, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 54, 95, 69, 69, 70, 80, 78, 83, 50, 95, 49, 48, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 69, 83, 53, 95, 106, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 98, 97, 115, 101, 73, 70, 80, 78, 52, 119, 97, 115, 109, 49, 48, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 69, 78, 54, 99, 97, 115, 104, 101, 119, 51, 82, 101, 102, 69, 106, 69, 69, 69, 0, 98, 97, 100, 32, 112, 114, 111, 99, 101, 115, 115, 85, 110, 115, 104, 105, 102, 116, 101, 100, 0, 90, 78, 52, 119, 97, 115, 109, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 49, 53, 112, 114, 111, 99, 101, 115, 115, 70, 117, 110, 99, 116, 105, 111, 110, 69, 78, 54, 99, 97, 115, 104, 101, 119, 51, 82, 101, 102, 69, 69, 51, 36, 95, 50, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 78, 52, 119, 97, 115, 109, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 49, 53, 112, 114, 111, 99, 101, 115, 115, 70, 117, 110, 99, 116, 105, 111, 110, 69, 78, 54, 99, 97, 115, 104, 101, 119, 51, 82, 101, 102, 69, 69, 51, 36, 95, 51, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 54, 95, 69, 69, 70, 80, 78, 83, 50, 95, 49, 48, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 69, 83, 53, 95, 106, 69, 69, 69, 0, 90, 78, 52, 119, 97, 115, 109, 49, 53, 65, 115, 109, 50, 87, 97, 115, 109, 66, 117, 105, 108, 100, 101, 114, 49, 53, 112, 114, 111, 99, 101, 115, 115, 70, 117, 110, 99, 116, 105, 111, 110, 69, 78, 54, 99, 97, 115, 104, 101, 119, 51, 82, 101, 102, 69, 69, 51, 36, 95, 51, 0, 59, 0, 112, 117, 115, 104, 95, 98, 97, 99, 107, 0, 103, 101, 116, 65, 114, 114, 97, 121, 0, 115, 114, 99, 32, 62, 32, 115, 116, 97, 114, 116, 0, 115, 114, 99, 47, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 45, 111, 112, 116, 105, 109, 105, 122, 101, 114, 47, 112, 97, 114, 115, 101, 114, 46, 104, 0, 70, 114, 97, 103, 0, 115, 116, 114, 99, 109, 112, 40, 115, 116, 114, 46, 115, 116, 114, 44, 32, 115, 116, 97, 114, 116, 41, 32, 61, 61, 32, 48, 0, 102, 114, 97, 103, 32, 112, 97, 114, 115, 105, 110, 103, 0, 37, 115, 58, 10, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 10, 0, 10, 10, 0, 110, 97, 109, 101, 46, 116, 121, 112, 101, 32, 61, 61, 32, 83, 69, 80, 65, 82, 65, 84, 79, 82, 32, 38, 38, 32, 110, 97, 109, 101, 46, 115, 116, 114, 91, 48, 93, 32, 61, 61, 32, 39, 40, 39, 0, 112, 97, 114, 115, 101, 70, 117, 110, 99, 116, 105, 111, 110, 0, 42, 115, 114, 99, 32, 61, 61, 32, 39, 40, 39, 0, 97, 114, 103, 46, 116, 121, 112, 101, 32, 61, 61, 32, 73, 68, 69, 78, 84, 0, 102, 117, 110, 99, 91, 48, 93, 32, 61, 61, 32, 68, 69, 70, 85, 78, 0, 97, 112, 112, 101, 110, 100, 65, 114, 103, 117, 109, 101, 110, 116, 84, 111, 70, 117, 110, 99, 116, 105, 111, 110, 0, 42, 115, 114, 99, 32, 61, 61, 32, 39, 123, 39, 0, 112, 97, 114, 115, 101, 66, 114, 97, 99, 107, 101, 116, 101, 100, 66, 108, 111, 99, 107, 0, 59, 125, 0, 42, 115, 114, 99, 32, 61, 61, 32, 39, 125, 39, 0, 110, 97, 109, 101, 46, 116, 121, 112, 101, 32, 61, 61, 32, 73, 68, 69, 78, 84, 0, 112, 97, 114, 115, 101, 86, 97, 114, 0, 59, 44, 0, 118, 97, 114, 91, 48, 93, 32, 61, 61, 32, 86, 65, 82, 0, 97, 112, 112, 101, 110, 100, 84, 111, 86, 97, 114, 0, 104, 97, 115, 67, 104, 97, 114, 40, 115, 101, 112, 115, 44, 32, 42, 115, 114, 99, 41, 0, 112, 97, 114, 115, 101, 82, 101, 116, 117, 114, 110, 0, 112, 97, 114, 115, 101, 80, 97, 114, 101, 110, 110, 101, 100, 0, 42, 115, 114, 99, 32, 61, 61, 32, 39, 41, 39, 0, 110, 101, 120, 116, 46, 116, 121, 112, 101, 32, 61, 61, 32, 75, 69, 89, 87, 79, 82, 68, 32, 38, 38, 32, 110, 101, 120, 116, 46, 115, 116, 114, 32, 61, 61, 32, 87, 72, 73, 76, 69, 0, 112, 97, 114, 115, 101, 68, 111, 0, 112, 97, 114, 115, 101, 83, 119, 105, 116, 99, 104, 0, 118, 97, 108, 117, 101, 46, 116, 121, 112, 101, 32, 61, 61, 32, 79, 80, 69, 82, 65, 84, 79, 82, 0, 118, 97, 108, 117, 101, 46, 115, 116, 114, 32, 61, 61, 32, 77, 73, 78, 85, 83, 0, 118, 97, 108, 117, 101, 50, 46, 105, 115, 78, 117, 109, 98, 101, 114, 40, 41, 0, 42, 115, 114, 99, 32, 61, 61, 32, 39, 58, 39, 0, 115, 119, 105, 116, 99, 104, 95, 91, 48, 93, 32, 61, 61, 32, 83, 87, 73, 84, 67, 72, 0, 97, 112, 112, 101, 110, 100, 67, 97, 115, 101, 84, 111, 83, 119, 105, 116, 99, 104, 0, 97, 112, 112, 101, 110, 100, 68, 101, 102, 97, 117, 108, 116, 84, 111, 83, 119, 105, 116, 99, 104, 0, 97, 112, 112, 101, 110, 100, 67, 111, 100, 101, 84, 111, 83, 119, 105, 116, 99, 104, 0, 99, 111, 100, 101, 91, 48, 93, 32, 61, 61, 32, 66, 76, 79, 67, 75, 0, 98, 97, 99, 107, 0, 112, 97, 114, 115, 101, 70, 111, 114, 0, 42, 115, 114, 99, 32, 61, 61, 32, 39, 59, 39, 0, 112, 97, 114, 115, 101, 67, 97, 108, 108, 0, 44, 41, 0, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 80, 97, 114, 116, 115, 83, 116, 97, 99, 107, 46, 98, 97, 99, 107, 40, 41, 46, 115, 105, 122, 101, 40, 41, 32, 61, 61, 32, 48, 0, 99, 97, 108, 108, 91, 48, 93, 32, 61, 61, 32, 67, 65, 76, 76, 0, 97, 112, 112, 101, 110, 100, 84, 111, 67, 97, 108, 108, 0, 42, 115, 114, 99, 32, 61, 61, 32, 39, 91, 39, 0, 112, 97, 114, 115, 101, 73, 110, 100, 101, 120, 105, 110, 103, 0, 42, 115, 114, 99, 32, 61, 61, 32, 39, 93, 39, 0, 42, 115, 114, 99, 32, 61, 61, 32, 39, 46, 39, 0, 112, 97, 114, 115, 101, 68, 111, 116, 116, 105, 110, 103, 0, 107, 101, 121, 46, 116, 121, 112, 101, 32, 61, 61, 32, 73, 68, 69, 78, 84, 0, 98, 97, 100, 32, 112, 97, 114, 115, 101, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 115, 116, 97, 116, 101, 0, 105, 32, 60, 32, 40, 105, 110, 116, 41, 112, 97, 114, 116, 115, 46, 115, 105, 122, 101, 40, 41, 45, 49, 32, 38, 38, 32, 105, 32, 62, 61, 32, 51, 0, 112, 97, 114, 115, 101, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 0, 112, 97, 114, 116, 115, 46, 115, 105, 122, 101, 40, 41, 32, 61, 61, 32, 49, 0, 105, 115, 78, 111, 100, 101, 0, 103, 101, 116, 78, 111, 100, 101, 0, 33, 105, 115, 78, 111, 100, 101, 0, 103, 101, 116, 79, 112, 0, 107, 101, 121, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 0, 109, 97, 107, 101, 68, 111, 116, 0, 112, 97, 114, 115, 101, 65, 102, 116, 101, 114, 80, 97, 114, 101, 110, 0, 42, 115, 114, 99, 0, 112, 97, 114, 115, 101, 65, 102, 116, 101, 114, 66, 114, 97, 99, 101, 0, 44, 93, 0, 97, 114, 114, 97, 121, 91, 48, 93, 32, 61, 61, 32, 65, 82, 82, 65, 89, 0, 97, 112, 112, 101, 110, 100, 84, 111, 65, 114, 114, 97, 121, 0, 112, 97, 114, 115, 101, 65, 102, 116, 101, 114, 67, 117, 114, 108, 121, 0, 107, 101, 121, 46, 116, 121, 112, 101, 32, 61, 61, 32, 73, 68, 69, 78, 84, 32, 124, 124, 32, 107, 101, 121, 46, 116, 121, 112, 101, 32, 61, 61, 32, 83, 84, 82, 73, 78, 71, 0, 44, 125, 0, 97, 114, 114, 97, 121, 91, 48, 93, 32, 61, 61, 32, 79, 66, 74, 69, 67, 84, 0, 97, 112, 112, 101, 110, 100, 84, 111, 79, 98, 106, 101, 99, 116, 0, 98, 108, 111, 99, 107, 91, 48, 93, 32, 61, 61, 32, 66, 76, 79, 67, 75, 0, 97, 112, 112, 101, 110, 100, 84, 111, 66, 108, 111, 99, 107, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 49, 54, 108, 111, 97, 100, 95, 115, 95, 101, 120, 112, 114, 50, 119, 97, 115, 109, 69, 51, 36, 95, 52, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 50, 95, 69, 69, 70, 118, 118, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 98, 97, 115, 101, 73, 70, 118, 118, 69, 69, 69, 0, 101, 114, 114, 111, 114, 32, 105, 110, 32, 112, 97, 114, 115, 105, 110, 103, 32, 115, 45, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 115, 32, 116, 111, 32, 119, 97, 115, 109, 10, 0, 90, 49, 54, 108, 111, 97, 100, 95, 115, 95, 101, 120, 112, 114, 50, 119, 97, 115, 109, 69, 51, 36, 95, 52, 0, 112, 97, 115, 115, 73, 110, 102, 111, 115, 46, 102, 105, 110, 100, 40, 110, 97, 109, 101, 41, 32, 61, 61, 32, 112, 97, 115, 115, 73, 110, 102, 111, 115, 46, 101, 110, 100, 40, 41, 0, 115, 114, 99, 47, 112, 97, 115, 115, 46, 99, 112, 112, 0, 114, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 0, 109, 101, 114, 103, 101, 45, 98, 108, 111, 99, 107, 115, 0, 109, 101, 114, 103, 101, 115, 32, 98, 108, 111, 99, 107, 115, 32, 116, 111, 32, 116, 104, 101, 105, 114, 32, 112, 97, 114, 101, 110, 116, 115, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 50, 95, 49, 49, 77, 101, 114, 103, 101, 66, 108, 111, 99, 107, 115, 69, 69, 67, 49, 69, 80, 75, 99, 83, 55, 95, 69, 85, 108, 118, 69, 95, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 56, 95, 69, 69, 70, 80, 78, 83, 50, 95, 52, 80, 97, 115, 115, 69, 118, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 98, 97, 115, 101, 73, 70, 80, 78, 52, 119, 97, 115, 109, 52, 80, 97, 115, 115, 69, 118, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 77, 101, 114, 103, 101, 66, 108, 111, 99, 107, 115, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 108, 107, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 49, 77, 101, 114, 103, 101, 66, 108, 111, 99, 107, 115, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 52, 80, 97, 115, 115, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 49, 77, 101, 114, 103, 101, 66, 108, 111, 99, 107, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 49, 77, 101, 114, 103, 101, 66, 108, 111, 99, 107, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 49, 77, 101, 114, 103, 101, 66, 108, 111, 99, 107, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 49, 77, 101, 114, 103, 101, 66, 108, 111, 99, 107, 115, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 49, 77, 101, 114, 103, 101, 66, 108, 111, 99, 107, 115, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 49, 77, 101, 114, 103, 101, 66, 108, 111, 99, 107, 115, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 49, 77, 101, 114, 103, 101, 66, 108, 111, 99, 107, 115, 69, 69, 67, 49, 69, 80, 75, 99, 83, 52, 95, 69, 85, 108, 118, 69, 95, 0, 78, 52, 119, 97, 115, 109, 55, 80, 114, 105, 110, 116, 101, 114, 69, 0, 78, 52, 119, 97, 115, 109, 49, 54, 80, 114, 105, 110, 116, 83, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 54, 80, 114, 105, 110, 116, 83, 69, 120, 112, 114, 101, 115, 115, 105, 111, 110, 69, 118, 69, 69, 0, 10, 0, 109, 111, 100, 117, 108, 101, 0, 27, 91, 51, 49, 109, 0, 27, 91, 49, 109, 0, 27, 91, 51, 53, 109, 0, 27, 91, 48, 109, 0, 32, 32, 0, 109, 101, 109, 111, 114, 121, 0, 32, 32, 32, 32, 0, 40, 115, 101, 103, 109, 101, 110, 116, 32, 0, 32, 34, 0, 34, 41, 0, 92, 110, 0, 92, 48, 100, 0, 92, 116, 0, 92, 48, 99, 0, 92, 48, 56, 0, 92, 92, 0, 92, 34, 0, 92, 39, 0, 10, 32, 32, 0, 115, 116, 97, 114, 116, 0, 116, 121, 112, 101, 0, 32, 40, 102, 117, 110, 99, 0, 112, 97, 114, 97, 109, 0, 27, 91, 51, 51, 109, 0, 114, 101, 115, 117, 108, 116, 32, 0, 41, 41, 0, 105, 109, 112, 111, 114, 116, 32, 0, 27, 91, 51, 50, 109, 0, 101, 120, 112, 111, 114, 116, 32, 0, 116, 97, 98, 108, 101, 0, 102, 117, 110, 99, 32, 0, 40, 116, 121, 112, 101, 32, 0, 112, 97, 114, 97, 109, 32, 0, 108, 111, 99, 97, 108, 32, 0, 105, 102, 95, 101, 108, 115, 101, 0, 108, 111, 111, 112, 0, 99, 117, 114, 114, 45, 62, 105, 110, 46, 105, 115, 40, 41, 0, 115, 114, 99, 47, 112, 97, 115, 115, 101, 115, 47, 80, 114, 105, 110, 116, 46, 99, 112, 112, 0, 118, 105, 115, 105, 116, 76, 111, 111, 112, 0, 98, 114, 95, 105, 102, 32, 0, 98, 114, 32, 0, 116, 97, 98, 108, 101, 115, 119, 105, 116, 99, 104, 32, 0, 40, 116, 97, 98, 108, 101, 0, 98, 114, 0, 99, 97, 115, 101, 32, 0, 99, 97, 108, 108, 32, 0, 99, 97, 108, 108, 95, 105, 109, 112, 111, 114, 116, 32, 0, 99, 97, 108, 108, 95, 105, 110, 100, 105, 114, 101, 99, 116, 32, 0, 103, 101, 116, 95, 108, 111, 99, 97, 108, 32, 0, 115, 101, 116, 95, 108, 111, 99, 97, 108, 32, 0, 46, 108, 111, 97, 100, 0, 49, 54, 0, 51, 50, 0, 95, 115, 0, 95, 117, 0, 32, 111, 102, 102, 115, 101, 116, 61, 0, 32, 97, 108, 105, 103, 110, 61, 0, 46, 115, 116, 111, 114, 101, 0, 99, 108, 122, 0, 99, 116, 122, 0, 112, 111, 112, 99, 110, 116, 0, 110, 101, 103, 0, 97, 98, 115, 0, 99, 101, 105, 108, 0, 102, 108, 111, 111, 114, 0, 116, 114, 117, 110, 99, 0, 110, 101, 97, 114, 101, 115, 116, 0, 115, 113, 114, 116, 0, 101, 120, 116, 101, 110, 100, 95, 115, 47, 105, 51, 50, 0, 101, 120, 116, 101, 110, 100, 95, 117, 47, 105, 51, 50, 0, 119, 114, 97, 112, 47, 105, 54, 52, 0, 116, 114, 117, 110, 99, 95, 115, 47, 102, 51, 50, 0, 116, 114, 117, 110, 99, 95, 117, 47, 102, 51, 50, 0, 116, 114, 117, 110, 99, 95, 115, 47, 102, 54, 52, 0, 116, 114, 117, 110, 99, 95, 117, 47, 102, 54, 52, 0, 114, 101, 105, 110, 116, 101, 114, 112, 114, 101, 116, 47, 0, 102, 54, 52, 0, 102, 51, 50, 0, 99, 111, 110, 118, 101, 114, 116, 95, 117, 47, 105, 51, 50, 0, 99, 111, 110, 118, 101, 114, 116, 95, 115, 47, 105, 51, 50, 0, 99, 111, 110, 118, 101, 114, 116, 95, 117, 47, 105, 54, 52, 0, 99, 111, 110, 118, 101, 114, 116, 95, 115, 47, 105, 54, 52, 0, 112, 114, 111, 109, 111, 116, 101, 47, 102, 51, 50, 0, 100, 101, 109, 111, 116, 101, 47, 102, 54, 52, 0, 105, 54, 52, 0, 105, 51, 50, 0, 97, 100, 100, 0, 109, 117, 108, 0, 100, 105, 118, 95, 115, 0, 100, 105, 118, 95, 117, 0, 114, 101, 109, 95, 115, 0, 114, 101, 109, 95, 117, 0, 97, 110, 100, 0, 111, 114, 0, 120, 111, 114, 0, 115, 104, 108, 0, 115, 104, 114, 95, 117, 0, 115, 104, 114, 95, 115, 0, 100, 105, 118, 0, 99, 111, 112, 121, 115, 105, 103, 110, 0, 109, 105, 110, 0, 109, 97, 120, 0, 101, 113, 0, 110, 101, 0, 108, 116, 95, 115, 0, 108, 116, 95, 117, 0, 108, 101, 95, 115, 0, 108, 101, 95, 117, 0, 103, 116, 95, 115, 0, 103, 116, 95, 117, 0, 103, 101, 95, 115, 0, 103, 101, 95, 117, 0, 108, 116, 0, 108, 101, 0, 103, 116, 0, 103, 101, 0, 115, 101, 108, 101, 99, 116, 0, 112, 97, 103, 101, 115, 105, 122, 101, 0, 109, 101, 109, 111, 114, 121, 95, 115, 105, 122, 101, 0, 103, 114, 111, 119, 95, 109, 101, 109, 111, 114, 121, 0, 104, 97, 115, 102, 101, 97, 116, 117, 114, 101, 32, 0, 110, 111, 112, 0, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 78, 52, 119, 97, 115, 109, 49, 53, 77, 105, 110, 105, 102, 105, 101, 100, 80, 114, 105, 110, 116, 101, 114, 69, 0, 112, 114, 105, 110, 116, 0, 112, 114, 105, 110, 116, 32, 105, 110, 32, 115, 45, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 102, 111, 114, 109, 97, 116, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 50, 95, 55, 80, 114, 105, 110, 116, 101, 114, 69, 69, 67, 49, 69, 80, 75, 99, 83, 55, 95, 69, 85, 108, 118, 69, 95, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 56, 95, 69, 69, 70, 80, 78, 83, 50, 95, 52, 80, 97, 115, 115, 69, 118, 69, 69, 69, 0, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 55, 80, 114, 105, 110, 116, 101, 114, 69, 69, 67, 49, 69, 80, 75, 99, 83, 52, 95, 69, 85, 108, 118, 69, 95, 0, 112, 114, 105, 110, 116, 45, 109, 105, 110, 105, 102, 105, 101, 100, 0, 112, 114, 105, 110, 116, 32, 105, 110, 32, 109, 105, 110, 105, 102, 105, 101, 100, 32, 115, 45, 101, 120, 112, 114, 101, 115, 115, 105, 111, 110, 32, 102, 111, 114, 109, 97, 116, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 50, 95, 49, 53, 77, 105, 110, 105, 102, 105, 101, 100, 80, 114, 105, 110, 116, 101, 114, 69, 69, 67, 49, 69, 80, 75, 99, 83, 55, 95, 69, 85, 108, 118, 69, 95, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 56, 95, 69, 69, 70, 80, 78, 83, 50, 95, 52, 80, 97, 115, 115, 69, 118, 69, 69, 69, 0, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 53, 77, 105, 110, 105, 102, 105, 101, 100, 80, 114, 105, 110, 116, 101, 114, 69, 69, 67, 49, 69, 80, 75, 99, 83, 52, 95, 69, 85, 108, 118, 69, 95, 0, 114, 101, 109, 111, 118, 101, 45, 117, 110, 117, 115, 101, 100, 45, 98, 114, 115, 0, 114, 101, 109, 111, 118, 101, 115, 32, 98, 114, 101, 97, 107, 115, 32, 102, 114, 111, 109, 32, 108, 111, 99, 97, 116, 105, 111, 110, 115, 32, 116, 104, 97, 116, 32, 97, 114, 101, 32, 110, 101, 118, 101, 114, 32, 98, 114, 97, 110, 99, 104, 101, 100, 32, 116, 111, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 50, 95, 49, 53, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 66, 114, 115, 69, 69, 67, 49, 69, 80, 75, 99, 83, 55, 95, 69, 85, 108, 118, 69, 95, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 56, 95, 69, 69, 70, 80, 78, 83, 50, 95, 52, 80, 97, 115, 115, 69, 118, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 53, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 66, 114, 115, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 108, 107, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 53, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 66, 114, 115, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 53, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 66, 114, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 53, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 66, 114, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 53, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 66, 114, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 53, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 66, 114, 115, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 53, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 66, 114, 115, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 53, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 66, 114, 115, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 95, 105, 100, 32, 61, 61, 32, 84, 40, 41, 46, 95, 105, 100, 0, 99, 97, 115, 116, 0, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 53, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 66, 114, 115, 69, 69, 67, 49, 69, 80, 75, 99, 83, 52, 95, 69, 85, 108, 118, 69, 95, 0, 114, 101, 109, 111, 118, 101, 45, 117, 110, 117, 115, 101, 100, 45, 110, 97, 109, 101, 115, 0, 114, 101, 109, 111, 118, 101, 115, 32, 110, 97, 109, 101, 115, 32, 102, 114, 111, 109, 32, 108, 111, 99, 97, 116, 105, 111, 110, 115, 32, 116, 104, 97, 116, 32, 97, 114, 101, 32, 110, 101, 118, 101, 114, 32, 98, 114, 97, 110, 99, 104, 101, 100, 32, 116, 111, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 50, 95, 49, 55, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 78, 97, 109, 101, 115, 69, 69, 67, 49, 69, 80, 75, 99, 83, 55, 95, 69, 85, 108, 118, 69, 95, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 56, 95, 69, 69, 70, 80, 78, 83, 50, 95, 52, 80, 97, 115, 115, 69, 118, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 55, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 78, 97, 109, 101, 115, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 108, 107, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 55, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 78, 97, 109, 101, 115, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 55, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 78, 97, 109, 101, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 55, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 78, 97, 109, 101, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 55, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 78, 97, 109, 101, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 55, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 78, 97, 109, 101, 115, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 55, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 78, 97, 109, 101, 115, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 55, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 78, 97, 109, 101, 115, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 55, 82, 101, 109, 111, 118, 101, 85, 110, 117, 115, 101, 100, 78, 97, 109, 101, 115, 69, 69, 67, 49, 69, 80, 75, 99, 83, 52, 95, 69, 85, 108, 118, 69, 95, 0, 112, 111, 115, 116, 45, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 0, 109, 105, 115, 99, 101, 108, 108, 97, 110, 101, 111, 117, 115, 32, 111, 112, 116, 105, 109, 105, 122, 97, 116, 105, 111, 110, 115, 32, 102, 111, 114, 32, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 45, 103, 101, 110, 101, 114, 97, 116, 101, 100, 32, 99, 111, 100, 101, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 50, 95, 49, 52, 80, 111, 115, 116, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 69, 69, 67, 49, 69, 80, 75, 99, 83, 55, 95, 69, 85, 108, 118, 69, 95, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 56, 95, 69, 69, 70, 80, 78, 83, 50, 95, 52, 80, 97, 115, 115, 69, 118, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 80, 111, 115, 116, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 108, 107, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 52, 80, 111, 115, 116, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 52, 80, 111, 115, 116, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 52, 80, 111, 115, 116, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 52, 80, 111, 115, 116, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 52, 80, 111, 115, 116, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 52, 80, 111, 115, 116, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 52, 80, 111, 115, 116, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 97, 100, 100, 45, 62, 116, 121, 112, 101, 32, 61, 61, 32, 105, 51, 50, 0, 115, 114, 99, 47, 112, 97, 115, 115, 101, 115, 47, 80, 111, 115, 116, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 46, 99, 112, 112, 0, 118, 105, 115, 105, 116, 77, 101, 109, 111, 114, 121, 79, 112, 0, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 52, 80, 111, 115, 116, 69, 109, 115, 99, 114, 105, 112, 116, 101, 110, 69, 69, 67, 49, 69, 80, 75, 99, 83, 52, 95, 69, 85, 108, 118, 69, 95, 0, 115, 105, 109, 112, 108, 105, 102, 121, 45, 108, 111, 99, 97, 108, 115, 0, 109, 105, 115, 99, 101, 108, 108, 97, 110, 101, 111, 117, 115, 32, 108, 111, 99, 97, 108, 115, 45, 114, 101, 108, 97, 116, 101, 100, 32, 111, 112, 116, 105, 109, 105, 122, 97, 116, 105, 111, 110, 115, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 50, 95, 49, 52, 83, 105, 109, 112, 108, 105, 102, 121, 76, 111, 99, 97, 108, 115, 69, 69, 67, 49, 69, 80, 75, 99, 83, 55, 95, 69, 85, 108, 118, 69, 95, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 56, 95, 69, 69, 70, 80, 78, 83, 50, 95, 52, 80, 97, 115, 115, 69, 118, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 83, 105, 109, 112, 108, 105, 102, 121, 76, 111, 99, 97, 108, 115, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 108, 107, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 52, 83, 105, 109, 112, 108, 105, 102, 121, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 52, 83, 105, 109, 112, 108, 105, 102, 121, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 52, 83, 105, 109, 112, 108, 105, 102, 121, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 52, 83, 105, 109, 112, 108, 105, 102, 121, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 52, 83, 105, 109, 112, 108, 105, 102, 121, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 52, 83, 105, 109, 112, 108, 105, 102, 121, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 52, 83, 105, 109, 112, 108, 105, 102, 121, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 52, 83, 105, 109, 112, 108, 105, 102, 121, 76, 111, 99, 97, 108, 115, 69, 69, 67, 49, 69, 80, 75, 99, 83, 52, 95, 69, 85, 108, 118, 69, 95, 0, 114, 101, 111, 114, 100, 101, 114, 45, 108, 111, 99, 97, 108, 115, 0, 115, 111, 114, 116, 115, 32, 108, 111, 99, 97, 108, 115, 32, 98, 121, 32, 97, 99, 99, 101, 115, 115, 32, 102, 114, 101, 113, 117, 101, 110, 99, 121, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 102, 117, 110, 99, 116, 105, 111, 110, 54, 95, 95, 102, 117, 110, 99, 73, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 50, 95, 49, 51, 82, 101, 111, 114, 100, 101, 114, 76, 111, 99, 97, 108, 115, 69, 69, 67, 49, 69, 80, 75, 99, 83, 55, 95, 69, 85, 108, 118, 69, 95, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 83, 56, 95, 69, 69, 70, 80, 78, 83, 50, 95, 52, 80, 97, 115, 115, 69, 118, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 51, 82, 101, 111, 114, 100, 101, 114, 76, 111, 99, 97, 108, 115, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 108, 107, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 51, 82, 101, 111, 114, 100, 101, 114, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 51, 82, 101, 111, 114, 100, 101, 114, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 51, 82, 101, 111, 114, 100, 101, 114, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 51, 82, 101, 111, 114, 100, 101, 114, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 0, 33, 114, 101, 112, 108, 97, 99, 101, 0, 115, 114, 99, 47, 119, 97, 115, 109, 46, 104, 0, 115, 116, 97, 114, 116, 87, 97, 108, 107, 0, 78, 52, 119, 97, 115, 109, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 51, 82, 101, 111, 114, 100, 101, 114, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 52, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 66, 97, 115, 101, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 51, 82, 101, 111, 114, 100, 101, 114, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 78, 52, 119, 97, 115, 109, 49, 49, 87, 97, 115, 109, 86, 105, 115, 105, 116, 111, 114, 73, 78, 83, 95, 49, 49, 67, 104, 105, 108, 100, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 48, 87, 97, 115, 109, 87, 97, 108, 107, 101, 114, 73, 78, 83, 95, 49, 51, 82, 101, 111, 114, 100, 101, 114, 76, 111, 99, 97, 108, 115, 69, 118, 69, 69, 69, 69, 118, 69, 69, 0, 99, 117, 114, 114, 0, 118, 105, 115, 105, 116, 0, 90, 78, 52, 119, 97, 115, 109, 49, 50, 82, 101, 103, 105, 115, 116, 101, 114, 80, 97, 115, 115, 73, 78, 83, 95, 49, 51, 82, 101, 111, 114, 100, 101, 114, 76, 111, 99, 97, 108, 115, 69, 69, 67, 49, 69, 80, 75, 99, 83, 52, 95, 69, 85, 108, 118, 69, 95, 0, 43, 45, 42, 47, 37, 60, 62, 38, 94, 124, 126, 61, 33, 44, 63, 58, 46, 0, 40, 91, 59, 123, 125, 0, 116, 111, 112, 108, 101, 118, 101, 108, 0, 100, 101, 102, 117, 110, 0, 98, 108, 111, 99, 107, 0, 115, 116, 97, 116, 0, 97, 115, 115, 105, 103, 110, 0, 110, 97, 109, 101, 0, 118, 97, 114, 0, 99, 111, 110, 115, 116, 0, 99, 111, 110, 100, 105, 116, 105, 111, 110, 97, 108, 0, 98, 105, 110, 97, 114, 121, 0, 114, 101, 116, 117, 114, 110, 0, 105, 102, 0, 101, 108, 115, 101, 0, 119, 104, 105, 108, 101, 0, 100, 111, 0, 102, 111, 114, 0, 115, 101, 113, 0, 115, 117, 98, 0, 99, 97, 108, 108, 0, 110, 117, 109, 0, 108, 97, 98, 101, 108, 0, 98, 114, 101, 97, 107, 0, 99, 111, 110, 116, 105, 110, 117, 101, 0, 115, 119, 105, 116, 99, 104, 0, 115, 116, 114, 105, 110, 103, 0, 116, 101, 109, 112, 82, 101, 116, 48, 0, 117, 110, 97, 114, 121, 45, 112, 114, 101 ], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 20480);
allocate([ 102, 105, 120, 0, 117, 110, 97, 114, 121, 45, 112, 111, 115, 116, 102, 105, 120, 0, 77, 97, 116, 104, 95, 102, 114, 111, 117, 110, 100, 0, 83, 73, 77, 68, 95, 70, 108, 111, 97, 116, 51, 50, 120, 52, 0, 83, 73, 77, 68, 95, 70, 108, 111, 97, 116, 54, 52, 120, 50, 0, 83, 73, 77, 68, 95, 73, 110, 116, 56, 120, 49, 54, 0, 83, 73, 77, 68, 95, 73, 110, 116, 49, 54, 120, 56, 0, 83, 73, 77, 68, 95, 73, 110, 116, 51, 50, 120, 52, 0, 62, 62, 62, 0, 116, 101, 109, 112, 68, 111, 117, 98, 108, 101, 80, 116, 114, 0, 72, 69, 65, 80, 56, 0, 72, 69, 65, 80, 49, 54, 0, 72, 69, 65, 80, 51, 50, 0, 72, 69, 65, 80, 70, 51, 50, 0, 72, 69, 65, 80, 85, 56, 0, 72, 69, 65, 80, 85, 49, 54, 0, 72, 69, 65, 80, 85, 51, 50, 0, 72, 69, 65, 80, 70, 54, 52, 0, 102, 48, 0, 102, 117, 110, 99, 116, 105, 111, 110, 0, 91, 0, 123, 0, 125, 0, 63, 0, 58, 0, 99, 97, 115, 101, 0, 100, 101, 102, 97, 117, 108, 116, 0, 100, 111, 116, 0, 110, 101, 119, 0, 97, 114, 114, 97, 121, 0, 111, 98, 106, 101, 99, 116, 0, 118, 97, 114, 32, 99, 111, 110, 115, 116, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 105, 102, 32, 101, 108, 115, 101, 32, 100, 111, 32, 119, 104, 105, 108, 101, 32, 102, 111, 114, 32, 98, 114, 101, 97, 107, 32, 99, 111, 110, 116, 105, 110, 117, 101, 32, 114, 101, 116, 117, 114, 110, 32, 115, 119, 105, 116, 99, 104, 32, 99, 97, 115, 101, 32, 100, 101, 102, 97, 117, 108, 116, 32, 116, 104, 114, 111, 119, 32, 116, 114, 121, 32, 99, 97, 116, 99, 104, 32, 102, 105, 110, 97, 108, 108, 121, 32, 116, 114, 117, 101, 32, 102, 97, 108, 115, 101, 32, 110, 117, 108, 108, 32, 110, 101, 119, 0, 33, 32, 126, 32, 43, 32, 45, 0, 42, 32, 47, 32, 37, 0, 43, 32, 45, 0, 60, 60, 32, 62, 62, 32, 62, 62, 62, 0, 60, 32, 60, 61, 32, 62, 32, 62, 61, 0, 61, 61, 32, 33, 61, 0, 63, 32, 58, 0, 97, 115, 115, 105, 103, 110, 32, 99, 97, 108, 108, 32, 98, 105, 110, 97, 114, 121, 32, 117, 110, 97, 114, 121, 45, 112, 114, 101, 102, 105, 120, 32, 110, 97, 109, 101, 32, 110, 117, 109, 32, 99, 111, 110, 100, 105, 116, 105, 111, 110, 97, 108, 32, 100, 111, 116, 32, 110, 101, 119, 32, 115, 117, 98, 32, 115, 101, 113, 32, 115, 116, 114, 105, 110, 103, 32, 111, 98, 106, 101, 99, 116, 32, 97, 114, 114, 97, 121, 0, 105, 115, 65, 114, 114, 97, 121, 40, 41, 0, 115, 114, 99, 47, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 45, 111, 112, 116, 105, 109, 105, 122, 101, 114, 47, 115, 105, 109, 112, 108, 101, 95, 97, 115, 116, 46, 104, 0, 83, 73, 77, 68, 95, 73, 110, 116, 56, 120, 49, 54, 95, 99, 104, 101, 99, 107, 0, 83, 73, 77, 68, 95, 73, 110, 116, 49, 54, 120, 56, 95, 99, 104, 101, 99, 107, 0, 83, 73, 77, 68, 95, 73, 110, 116, 51, 50, 120, 52, 95, 99, 104, 101, 99, 107, 0, 83, 73, 77, 68, 95, 70, 108, 111, 97, 116, 51, 50, 120, 52, 95, 99, 104, 101, 99, 107, 0, 83, 73, 77, 68, 95, 70, 108, 111, 97, 116, 54, 52, 120, 50, 95, 99, 104, 101, 99, 107, 0, 110, 111, 100, 101, 91, 49, 93, 32, 61, 61, 32, 65, 83, 77, 95, 70, 76, 79, 65, 84, 95, 90, 69, 82, 79, 0, 115, 114, 99, 47, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 45, 111, 112, 116, 105, 109, 105, 122, 101, 114, 47, 111, 112, 116, 105, 109, 105, 122, 101, 114, 45, 115, 104, 97, 114, 101, 100, 46, 99, 112, 112, 0, 100, 101, 116, 101, 99, 116, 84, 121, 112, 101, 0, 110, 111, 100, 101, 91, 49, 93, 91, 48, 93, 32, 61, 61, 32, 78, 65, 77, 69, 0, 105, 115, 85, 73, 110, 116, 101, 103, 101, 114, 51, 50, 40, 120, 41, 0, 115, 114, 99, 47, 115, 117, 112, 112, 111, 114, 116, 47, 115, 97, 102, 101, 95, 105, 110, 116, 101, 103, 101, 114, 46, 99, 112, 112, 0, 116, 111, 85, 73, 110, 116, 101, 103, 101, 114, 51, 50, 0, 105, 115, 83, 73, 110, 116, 101, 103, 101, 114, 51, 50, 40, 120, 41, 0, 116, 111, 83, 73, 110, 116, 101, 103, 101, 114, 51, 50, 0, 105, 115, 85, 73, 110, 116, 101, 103, 101, 114, 54, 52, 40, 120, 41, 0, 116, 111, 85, 73, 110, 116, 101, 103, 101, 114, 54, 52, 0, 0, 1, 28, 2, 29, 14, 24, 3, 30, 22, 20, 15, 25, 17, 4, 8, 31, 27, 13, 23, 21, 19, 16, 7, 26, 12, 18, 6, 11, 5, 10, 9, 31, 22, 30, 21, 18, 10, 29, 2, 20, 17, 15, 13, 9, 6, 28, 1, 23, 19, 11, 3, 16, 14, 7, 24, 12, 4, 8, 25, 5, 26, 27, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 255, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 4, 7, 3, 6, 5, 0, 105, 110, 102, 105, 110, 105, 116, 121, 0, 17, 0, 10, 0, 17, 17, 17, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 15, 10, 17, 17, 17, 3, 10, 7, 0, 1, 19, 9, 11, 11, 0, 0, 9, 6, 11, 0, 0, 11, 0, 6, 17, 0, 0, 0, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 10, 17, 17, 17, 0, 10, 0, 0, 2, 0, 9, 11, 0, 0, 0, 9, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 4, 13, 0, 0, 0, 0, 9, 14, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 15, 0, 0, 0, 0, 9, 16, 0, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 9, 11, 0, 0, 0, 0, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 45, 43, 32, 32, 32, 48, 88, 48, 120, 0, 84, 33, 34, 25, 13, 1, 2, 3, 17, 75, 28, 12, 16, 4, 11, 29, 18, 30, 39, 104, 110, 111, 112, 113, 98, 32, 5, 6, 15, 19, 20, 21, 26, 8, 22, 7, 40, 36, 23, 24, 9, 10, 14, 27, 31, 37, 35, 131, 130, 125, 38, 42, 43, 60, 61, 62, 63, 67, 71, 74, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 114, 115, 116, 121, 122, 123, 124, 0, 73, 108, 108, 101, 103, 97, 108, 32, 98, 121, 116, 101, 32, 115, 101, 113, 117, 101, 110, 99, 101, 0, 68, 111, 109, 97, 105, 110, 32, 101, 114, 114, 111, 114, 0, 82, 101, 115, 117, 108, 116, 32, 110, 111, 116, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 98, 108, 101, 0, 78, 111, 116, 32, 97, 32, 116, 116, 121, 0, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 100, 101, 110, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 110, 111, 116, 32, 112, 101, 114, 109, 105, 116, 116, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 102, 105, 108, 101, 32, 111, 114, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 78, 111, 32, 115, 117, 99, 104, 32, 112, 114, 111, 99, 101, 115, 115, 0, 70, 105, 108, 101, 32, 101, 120, 105, 115, 116, 115, 0, 86, 97, 108, 117, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 32, 102, 111, 114, 32, 100, 97, 116, 97, 32, 116, 121, 112, 101, 0, 78, 111, 32, 115, 112, 97, 99, 101, 32, 108, 101, 102, 116, 32, 111, 110, 32, 100, 101, 118, 105, 99, 101, 0, 79, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 98, 117, 115, 121, 0, 73, 110, 116, 101, 114, 114, 117, 112, 116, 101, 100, 32, 115, 121, 115, 116, 101, 109, 32, 99, 97, 108, 108, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 116, 101, 109, 112, 111, 114, 97, 114, 105, 108, 121, 32, 117, 110, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 73, 110, 118, 97, 108, 105, 100, 32, 115, 101, 101, 107, 0, 67, 114, 111, 115, 115, 45, 100, 101, 118, 105, 99, 101, 32, 108, 105, 110, 107, 0, 82, 101, 97, 100, 45, 111, 110, 108, 121, 32, 102, 105, 108, 101, 32, 115, 121, 115, 116, 101, 109, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 111, 116, 32, 101, 109, 112, 116, 121, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 112, 101, 101, 114, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 102, 117, 115, 101, 100, 0, 72, 111, 115, 116, 32, 105, 115, 32, 100, 111, 119, 110, 0, 72, 111, 115, 116, 32, 105, 115, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 65, 100, 100, 114, 101, 115, 115, 32, 105, 110, 32, 117, 115, 101, 0, 66, 114, 111, 107, 101, 110, 32, 112, 105, 112, 101, 0, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 32, 111, 114, 32, 97, 100, 100, 114, 101, 115, 115, 0, 66, 108, 111, 99, 107, 32, 100, 101, 118, 105, 99, 101, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 0, 78, 111, 116, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 73, 115, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 84, 101, 120, 116, 32, 102, 105, 108, 101, 32, 98, 117, 115, 121, 0, 69, 120, 101, 99, 32, 102, 111, 114, 109, 97, 116, 32, 101, 114, 114, 111, 114, 0, 73, 110, 118, 97, 108, 105, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 0, 65, 114, 103, 117, 109, 101, 110, 116, 32, 108, 105, 115, 116, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 83, 121, 109, 98, 111, 108, 105, 99, 32, 108, 105, 110, 107, 32, 108, 111, 111, 112, 0, 70, 105, 108, 101, 110, 97, 109, 101, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 115, 32, 105, 110, 32, 115, 121, 115, 116, 101, 109, 0, 78, 111, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 66, 97, 100, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 0, 78, 111, 32, 99, 104, 105, 108, 100, 32, 112, 114, 111, 99, 101, 115, 115, 0, 66, 97, 100, 32, 97, 100, 100, 114, 101, 115, 115, 0, 70, 105, 108, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 108, 105, 110, 107, 115, 0, 78, 111, 32, 108, 111, 99, 107, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 100, 101, 97, 100, 108, 111, 99, 107, 32, 119, 111, 117, 108, 100, 32, 111, 99, 99, 117, 114, 0, 83, 116, 97, 116, 101, 32, 110, 111, 116, 32, 114, 101, 99, 111, 118, 101, 114, 97, 98, 108, 101, 0, 80, 114, 101, 118, 105, 111, 117, 115, 32, 111, 119, 110, 101, 114, 32, 100, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 99, 97, 110, 99, 101, 108, 101, 100, 0, 70, 117, 110, 99, 116, 105, 111, 110, 32, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 0, 78, 111, 32, 109, 101, 115, 115, 97, 103, 101, 32, 111, 102, 32, 100, 101, 115, 105, 114, 101, 100, 32, 116, 121, 112, 101, 0, 73, 100, 101, 110, 116, 105, 102, 105, 101, 114, 32, 114, 101, 109, 111, 118, 101, 100, 0, 68, 101, 118, 105, 99, 101, 32, 110, 111, 116, 32, 97, 32, 115, 116, 114, 101, 97, 109, 0, 78, 111, 32, 100, 97, 116, 97, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 68, 101, 118, 105, 99, 101, 32, 116, 105, 109, 101, 111, 117, 116, 0, 79, 117, 116, 32, 111, 102, 32, 115, 116, 114, 101, 97, 109, 115, 32, 114, 101, 115, 111, 117, 114, 99, 101, 115, 0, 76, 105, 110, 107, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 101, 118, 101, 114, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 101, 114, 114, 111, 114, 0, 66, 97, 100, 32, 109, 101, 115, 115, 97, 103, 101, 0, 70, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 105, 110, 32, 98, 97, 100, 32, 115, 116, 97, 116, 101, 0, 78, 111, 116, 32, 97, 32, 115, 111, 99, 107, 101, 116, 0, 68, 101, 115, 116, 105, 110, 97, 116, 105, 111, 110, 32, 97, 100, 100, 114, 101, 115, 115, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 77, 101, 115, 115, 97, 103, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 119, 114, 111, 110, 103, 32, 116, 121, 112, 101, 32, 102, 111, 114, 32, 115, 111, 99, 107, 101, 116, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 116, 121, 112, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 78, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 65, 100, 100, 114, 101, 115, 115, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 98, 121, 32, 112, 114, 111, 116, 111, 99, 111, 108, 0, 65, 100, 100, 114, 101, 115, 115, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 78, 101, 116, 119, 111, 114, 107, 32, 105, 115, 32, 100, 111, 119, 110, 0, 78, 101, 116, 119, 111, 114, 107, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 110, 101, 116, 119, 111, 114, 107, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 97, 98, 111, 114, 116, 101, 100, 0, 78, 111, 32, 98, 117, 102, 102, 101, 114, 32, 115, 112, 97, 99, 101, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 83, 111, 99, 107, 101, 116, 32, 105, 115, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 110, 111, 116, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 67, 97, 110, 110, 111, 116, 32, 115, 101, 110, 100, 32, 97, 102, 116, 101, 114, 32, 115, 111, 99, 107, 101, 116, 32, 115, 104, 117, 116, 100, 111, 119, 110, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 97, 108, 114, 101, 97, 100, 121, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 83, 116, 97, 108, 101, 32, 102, 105, 108, 101, 32, 104, 97, 110, 100, 108, 101, 0, 82, 101, 109, 111, 116, 101, 32, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 81, 117, 111, 116, 97, 32, 101, 120, 99, 101, 101, 100, 101, 100, 0, 78, 111, 32, 109, 101, 100, 105, 117, 109, 32, 102, 111, 117, 110, 100, 0, 87, 114, 111, 110, 103, 32, 109, 101, 100, 105, 117, 109, 32, 116, 121, 112, 101, 0, 78, 111, 32, 101, 114, 114, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 0, 0, 40, 110, 117, 108, 108, 41, 0, 45, 48, 88, 43, 48, 88, 32, 48, 88, 45, 48, 120, 43, 48, 120, 32, 48, 120, 0, 105, 110, 102, 0, 73, 78, 70, 0, 110, 97, 110, 0, 78, 65, 78, 0, 80, 79, 83, 73, 88, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 115, 116, 100, 105, 110, 98, 117, 102, 73, 99, 69, 69, 0, 117, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 108, 111, 99, 97, 108, 101, 32, 102, 111, 114, 32, 115, 116, 97, 110, 100, 97, 114, 100, 32, 105, 110, 112, 117, 116, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 115, 116, 100, 111, 117, 116, 98, 117, 102, 73, 99, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 115, 116, 100, 105, 110, 98, 117, 102, 73, 119, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 115, 116, 100, 111, 117, 116, 98, 117, 102, 73, 119, 69, 69, 0, 33, 34, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 32, 108, 101, 110, 103, 116, 104, 95, 101, 114, 114, 111, 114, 34, 0, 47, 109, 101, 100, 105, 97, 47, 97, 108, 111, 110, 47, 100, 54, 57, 100, 100, 57, 98, 50, 45, 52, 55, 57, 49, 45, 52, 98, 56, 101, 45, 97, 101, 98, 51, 45, 102, 54, 51, 53, 51, 98, 52, 53, 100, 55, 49, 48, 47, 104, 111, 109, 101, 47, 97, 108, 111, 110, 47, 68, 101, 118, 47, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 47, 115, 121, 115, 116, 101, 109, 47, 105, 110, 99, 108, 117, 100, 101, 47, 108, 105, 98, 99, 120, 120, 47, 115, 116, 114, 105, 110, 103, 0, 33, 34, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 32, 111, 117, 116, 95, 111, 102, 95, 114, 97, 110, 103, 101, 34, 0, 37, 117, 0, 78, 83, 116, 51, 95, 95, 49, 57, 98, 97, 115, 105, 99, 95, 105, 111, 115, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 56, 105, 111, 115, 95, 98, 97, 115, 101, 69, 0, 78, 83, 116, 51, 95, 95, 49, 57, 98, 97, 115, 105, 99, 95, 105, 111, 115, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 53, 98, 97, 115, 105, 99, 95, 115, 116, 114, 101, 97, 109, 98, 117, 102, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 53, 98, 97, 115, 105, 99, 95, 115, 116, 114, 101, 97, 109, 98, 117, 102, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 51, 98, 97, 115, 105, 99, 95, 105, 115, 116, 114, 101, 97, 109, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 51, 98, 97, 115, 105, 99, 95, 105, 115, 116, 114, 101, 97, 109, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 51, 98, 97, 115, 105, 99, 95, 111, 115, 116, 114, 101, 97, 109, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 51, 98, 97, 115, 105, 99, 95, 111, 115, 116, 114, 101, 97, 109, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 52, 98, 97, 115, 105, 99, 95, 105, 111, 115, 116, 114, 101, 97, 109, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 108, 108, 97, 116, 101, 73, 99, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 54, 108, 111, 99, 97, 108, 101, 53, 102, 97, 99, 101, 116, 69, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 108, 108, 97, 116, 101, 73, 119, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 55, 110, 117, 109, 95, 103, 101, 116, 73, 99, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 57, 95, 95, 110, 117, 109, 95, 103, 101, 116, 73, 99, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 52, 95, 95, 110, 117, 109, 95, 103, 101, 116, 95, 98, 97, 115, 101, 69, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 65, 66, 67, 68, 69, 70, 120, 88, 43, 45, 112, 80, 105, 73, 110, 78, 0, 67, 0, 37, 112, 0, 78, 83, 116, 51, 95, 95, 49, 55, 110, 117, 109, 95, 103, 101, 116, 73, 119, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 57, 95, 95, 110, 117, 109, 95, 103, 101, 116, 73, 119, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 55, 110, 117, 109, 95, 112, 117, 116, 73, 99, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 57, 95, 95, 110, 117, 109, 95, 112, 117, 116, 73, 99, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 52, 95, 95, 110, 117, 109, 95, 112, 117, 116, 95, 98, 97, 115, 101, 69, 0, 37, 0, 0, 0, 0, 0, 76, 0, 37, 112, 0, 0, 0, 0, 78, 83, 116, 51, 95, 95, 49, 55, 110, 117, 109, 95, 112, 117, 116, 73, 119, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 57, 95, 95, 110, 117, 109, 95, 112, 117, 116, 73, 119, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 56, 116, 105, 109, 101, 95, 103, 101, 116, 73, 99, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 57, 116, 105, 109, 101, 95, 98, 97, 115, 101, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 116, 105, 109, 101, 95, 103, 101, 116, 95, 99, 95, 115, 116, 111, 114, 97, 103, 101, 73, 99, 69, 69, 0, 37, 72, 58, 37, 77, 58, 37, 83, 37, 109, 47, 37, 100, 47, 37, 121, 37, 89, 45, 37, 109, 45, 37, 100, 37, 73, 58, 37, 77, 58, 37, 83, 32, 37, 112, 37, 72, 58, 37, 77, 37, 72, 58, 37, 77, 58, 37, 83, 83, 117, 110, 100, 97, 121, 0, 77, 111, 110, 100, 97, 121, 0, 84, 117, 101, 115, 100, 97, 121, 0, 87, 101, 100, 110, 101, 115, 100, 97, 121, 0, 84, 104, 117, 114, 115, 100, 97, 121, 0, 70, 114, 105, 100, 97, 121, 0, 83, 97, 116, 117, 114, 100, 97, 121, 0, 83, 117, 110, 0, 77, 111, 110, 0, 84, 117, 101, 0, 87, 101, 100, 0, 84, 104, 117, 0, 70, 114, 105, 0, 83, 97, 116, 0, 74, 97, 110, 117, 97, 114, 121, 0, 70, 101, 98, 114, 117, 97, 114, 121, 0, 77, 97, 114, 99, 104, 0, 65, 112, 114, 105, 108, 0, 77, 97, 121, 0, 74, 117, 110, 101, 0, 74, 117, 108, 121, 0, 65, 117, 103, 117, 115, 116, 0, 83, 101, 112, 116, 101, 109, 98, 101, 114, 0, 79, 99, 116, 111, 98, 101, 114, 0, 78, 111, 118, 101, 109, 98, 101, 114, 0, 68, 101, 99, 101, 109, 98, 101, 114, 0, 74, 97, 110, 0, 70, 101, 98, 0, 77, 97, 114, 0, 65, 112, 114, 0, 74, 117, 110, 0, 74, 117, 108, 0, 65, 117, 103, 0, 83, 101, 112, 0, 79, 99, 116, 0, 78, 111, 118, 0, 68, 101, 99, 0, 65, 77, 0, 80, 77, 0, 37, 97, 32, 37, 98, 32, 37, 100, 32, 37, 72, 58, 37, 77, 58, 37, 83, 32, 37, 89, 0, 37, 73, 58, 37, 77, 58, 37, 83, 32, 37, 112, 0, 37, 109, 47, 37, 100, 47, 37, 121, 0, 37, 72, 58, 37, 77, 58, 37, 83, 0, 78, 83, 116, 51, 95, 95, 49, 56, 116, 105, 109, 101, 95, 103, 101, 116, 73, 119, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 48, 95, 95, 116, 105, 109, 101, 95, 103, 101, 116, 95, 99, 95, 115, 116, 111, 114, 97, 103, 101, 73, 119, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 56, 116, 105, 109, 101, 95, 112, 117, 116, 73, 99, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 95, 95, 116, 105, 109, 101, 95, 112, 117, 116, 69, 0, 78, 83, 116, 51, 95, 95, 49, 56, 116, 105, 109, 101, 95, 112, 117, 116, 73, 119, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 109, 111, 110, 101, 121, 112, 117, 110, 99, 116, 73, 99, 76, 98, 48, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 109, 111, 110, 101, 121, 95, 98, 97, 115, 101, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 109, 111, 110, 101, 121, 112, 117, 110, 99, 116, 73, 99, 76, 98, 49, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 109, 111, 110, 101, 121, 112, 117, 110, 99, 116, 73, 119, 76, 98, 48, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 109, 111, 110, 101, 121, 112, 117, 110, 99, 116, 73, 119, 76, 98, 49, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 57, 109, 111, 110, 101, 121, 95, 103, 101, 116, 73, 99, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 109, 111, 110, 101, 121, 95, 103, 101, 116, 73, 99, 69, 69, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0, 37, 76, 102, 0, 78, 83, 116, 51, 95, 95, 49, 57, 109, 111, 110, 101, 121, 95, 103, 101, 116, 73, 119, 78, 83, 95, 49, 57, 105, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 109, 111, 110, 101, 121, 95, 103, 101, 116, 73, 119, 69, 69, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0, 78, 83, 116, 51, 95, 95, 49, 57, 109, 111, 110, 101, 121, 95, 112, 117, 116, 73, 99, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 109, 111, 110, 101, 121, 95, 112, 117, 116, 73, 99, 69, 69, 0, 37, 46, 48, 76, 102, 0, 78, 83, 116, 51, 95, 95, 49, 57, 109, 111, 110, 101, 121, 95, 112, 117, 116, 73, 119, 78, 83, 95, 49, 57, 111, 115, 116, 114, 101, 97, 109, 98, 117, 102, 95, 105, 116, 101, 114, 97, 116, 111, 114, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 49, 95, 95, 109, 111, 110, 101, 121, 95, 112, 117, 116, 73, 119, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 56, 109, 101, 115, 115, 97, 103, 101, 115, 73, 99, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 51, 109, 101, 115, 115, 97, 103, 101, 115, 95, 98, 97, 115, 101, 69, 0, 78, 83, 116, 51, 95, 95, 49, 56, 109, 101, 115, 115, 97, 103, 101, 115, 73, 119, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 54, 95, 95, 110, 97, 114, 114, 111, 119, 95, 116, 111, 95, 117, 116, 102, 56, 73, 76, 106, 51, 50, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 100, 101, 99, 118, 116, 73, 68, 105, 99, 49, 49, 95, 95, 109, 98, 115, 116, 97, 116, 101, 95, 116, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 99, 111, 100, 101, 99, 118, 116, 95, 98, 97, 115, 101, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 55, 95, 95, 119, 105, 100, 101, 110, 95, 102, 114, 111, 109, 95, 117, 116, 102, 56, 73, 76, 106, 51, 50, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 100, 101, 99, 118, 116, 73, 99, 99, 49, 49, 95, 95, 109, 98, 115, 116, 97, 116, 101, 95, 116, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 100, 101, 99, 118, 116, 73, 119, 99, 49, 49, 95, 95, 109, 98, 115, 116, 97, 116, 101, 95, 116, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 55, 99, 111, 100, 101, 99, 118, 116, 73, 68, 115, 99, 49, 49, 95, 95, 109, 98, 115, 116, 97, 116, 101, 95, 116, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 54, 108, 111, 99, 97, 108, 101, 53, 95, 95, 105, 109, 112, 69, 0, 78, 83, 116, 51, 95, 95, 49, 53, 99, 116, 121, 112, 101, 73, 99, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 48, 99, 116, 121, 112, 101, 95, 98, 97, 115, 101, 69, 0, 78, 83, 116, 51, 95, 95, 49, 53, 99, 116, 121, 112, 101, 73, 119, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 56, 110, 117, 109, 112, 117, 110, 99, 116, 73, 99, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 56, 110, 117, 109, 112, 117, 110, 99, 116, 73, 119, 69, 69, 0, 33, 34, 118, 101, 99, 116, 111, 114, 32, 108, 101, 110, 103, 116, 104, 95, 101, 114, 114, 111, 114, 34, 0, 47, 109, 101, 100, 105, 97, 47, 97, 108, 111, 110, 47, 100, 54, 57, 100, 100, 57, 98, 50, 45, 52, 55, 57, 49, 45, 52, 98, 56, 101, 45, 97, 101, 98, 51, 45, 102, 54, 51, 53, 51, 98, 52, 53, 100, 55, 49, 48, 47, 104, 111, 109, 101, 47, 97, 108, 111, 110, 47, 68, 101, 118, 47, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 47, 115, 121, 115, 116, 101, 109, 47, 105, 110, 99, 108, 117, 100, 101, 47, 108, 105, 98, 99, 120, 120, 47, 118, 101, 99, 116, 111, 114, 0, 95, 95, 116, 104, 114, 111, 119, 95, 108, 101, 110, 103, 116, 104, 95, 101, 114, 114, 111, 114, 0, 33, 34, 118, 101, 99, 116, 111, 114, 32, 111, 117, 116, 95, 111, 102, 95, 114, 97, 110, 103, 101, 34, 0, 95, 95, 116, 104, 114, 111, 119, 95, 111, 117, 116, 95, 111, 102, 95, 114, 97, 110, 103, 101, 0, 78, 83, 116, 51, 95, 95, 49, 49, 52, 95, 95, 115, 104, 97, 114, 101, 100, 95, 99, 111, 117, 110, 116, 69, 0, 99, 97, 110, 110, 111, 116, 32, 122, 101, 114, 111, 32, 111, 117, 116, 32, 116, 104, 114, 101, 97, 100, 32, 118, 97, 108, 117, 101, 32, 102, 111, 114, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 40, 41, 0, 99, 97, 110, 110, 111, 116, 32, 99, 114, 101, 97, 116, 101, 32, 112, 116, 104, 114, 101, 97, 100, 32, 107, 101, 121, 32, 102, 111, 114, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 40, 41, 0, 112, 116, 104, 114, 101, 97, 100, 95, 111, 110, 99, 101, 32, 102, 97, 105, 108, 117, 114, 101, 32, 105, 110, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 95, 102, 97, 115, 116, 40, 41, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 48, 95, 95, 115, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 54, 95, 95, 115, 104, 105, 109, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 83, 116, 57, 116, 121, 112, 101, 95, 105, 110, 102, 111, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 83, 116, 57, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 117, 110, 99, 97, 117, 103, 104, 116, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 116, 121, 112, 101, 32, 37, 115, 58, 32, 37, 115, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 116, 121, 112, 101, 32, 37, 115, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 102, 111, 114, 101, 105, 103, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 0, 116, 101, 114, 109, 105, 110, 97, 116, 101, 95, 104, 97, 110, 100, 108, 101, 114, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 108, 121, 32, 114, 101, 116, 117, 114, 110, 101, 100, 0, 83, 116, 57, 98, 97, 100, 95, 97, 108, 108, 111, 99, 0, 115, 116, 100, 58, 58, 98, 97, 100, 95, 97, 108, 108, 111, 99, 0, 115, 116, 100, 58, 58, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 57, 95, 95, 112, 111, 105, 110, 116, 101, 114, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 112, 98, 97, 115, 101, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 49, 95, 95, 118, 109, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 32, 99, 111, 110, 115, 116, 0, 32, 118, 111, 108, 97, 116, 105, 108, 101, 0, 32, 114, 101, 115, 116, 114, 105, 99, 116, 0, 118, 111, 105, 100, 0, 119, 99, 104, 97, 114, 95, 116, 0, 98, 111, 111, 108, 0, 99, 104, 97, 114, 0, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 0, 115, 104, 111, 114, 116, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 115, 104, 111, 114, 116, 0, 105, 110, 116, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0, 108, 111, 110, 103, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 0, 108, 111, 110, 103, 32, 108, 111, 110, 103, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 32, 108, 111, 110, 103, 0, 95, 95, 105, 110, 116, 49, 50, 56, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 95, 95, 105, 110, 116, 49, 50, 56, 0, 102, 108, 111, 97, 116, 0, 100, 111, 117, 98, 108, 101, 0, 108, 111, 110, 103, 32, 100, 111, 117, 98, 108, 101, 0, 95, 95, 102, 108, 111, 97, 116, 49, 50, 56, 0, 46, 46, 46, 0, 95, 71, 76, 79, 66, 65, 76, 95, 95, 78, 0, 40, 97, 110, 111, 110, 121, 109, 111, 117, 115, 32, 110, 97, 109, 101, 115, 112, 97, 99, 101, 41, 0, 100, 101, 99, 105, 109, 97, 108, 54, 52, 0, 100, 101, 99, 105, 109, 97, 108, 49, 50, 56, 0, 100, 101, 99, 105, 109, 97, 108, 51, 50, 0, 100, 101, 99, 105, 109, 97, 108, 49, 54, 0, 99, 104, 97, 114, 51, 50, 95, 116, 0, 99, 104, 97, 114, 49, 54, 95, 116, 0, 97, 117, 116, 111, 0, 115, 116, 100, 58, 58, 110, 117, 108, 108, 112, 116, 114, 95, 116, 0, 32, 91, 0, 32, 91, 93, 0, 93, 0, 40, 0, 41, 0, 102, 97, 108, 115, 101, 0, 116, 114, 117, 101, 0, 117, 0, 108, 0, 117, 108, 0, 108, 108, 0, 117, 108, 108, 0, 37, 97, 102, 0, 37, 97, 0, 37, 76, 97, 76, 0, 102, 112, 0, 38, 38, 0, 62, 0, 41, 32, 0, 32, 40, 0, 38, 0, 38, 61, 0, 61, 0, 97, 108, 105, 103, 110, 111, 102, 32, 40, 0, 99, 111, 110, 115, 116, 95, 99, 97, 115, 116, 60, 0, 62, 40, 0, 44, 0, 126, 0, 41, 40, 0, 58, 58, 0, 100, 101, 108, 101, 116, 101, 91, 93, 32, 0, 100, 121, 110, 97, 109, 105, 99, 95, 99, 97, 115, 116, 60, 0, 42, 0, 100, 101, 108, 101, 116, 101, 32, 0, 111, 112, 101, 114, 97, 116, 111, 114, 38, 38, 0, 111, 112, 101, 114, 97, 116, 111, 114, 38, 0, 111, 112, 101, 114, 97, 116, 111, 114, 38, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 40, 41, 0, 111, 112, 101, 114, 97, 116, 111, 114, 44, 0, 111, 112, 101, 114, 97, 116, 111, 114, 126, 0, 111, 112, 101, 114, 97, 116, 111, 114, 32, 0, 111, 112, 101, 114, 97, 116, 111, 114, 32, 100, 101, 108, 101, 116, 101, 91, 93, 0, 111, 112, 101, 114, 97, 116, 111, 114, 42, 0, 111, 112, 101, 114, 97, 116, 111, 114, 32, 100, 101, 108, 101, 116, 101, 0, 111, 112, 101, 114, 97, 116, 111, 114, 47, 0, 111, 112, 101, 114, 97, 116, 111, 114, 47, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 94, 0, 111, 112, 101, 114, 97, 116, 111, 114, 94, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 61, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 62, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 62, 0, 111, 112, 101, 114, 97, 116, 111, 114, 91, 93, 0, 111, 112, 101, 114, 97, 116, 111, 114, 60, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 34, 34, 32, 0, 111, 112, 101, 114, 97, 116, 111, 114, 60, 60, 0, 111, 112, 101, 114, 97, 116, 111, 114, 60, 60, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 60, 0, 111, 112, 101, 114, 97, 116, 111, 114, 45, 0, 111, 112, 101, 114, 97, 116, 111, 114, 45, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 42, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 45, 45, 0, 111, 112, 101, 114, 97, 116, 111, 114, 32, 110, 101, 119, 91, 93, 0, 111, 112, 101, 114, 97, 116, 111, 114, 33, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 33, 0, 111, 112, 101, 114, 97, 116, 111, 114, 32, 110, 101, 119, 0, 111, 112, 101, 114, 97, 116, 111, 114, 124, 124, 0, 111, 112, 101, 114, 97, 116, 111, 114, 124, 0, 111, 112, 101, 114, 97, 116, 111, 114, 124, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 45, 62, 42, 0, 111, 112, 101, 114, 97, 116, 111, 114, 43, 0, 111, 112, 101, 114, 97, 116, 111, 114, 43, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 43, 43, 0, 111, 112, 101, 114, 97, 116, 111, 114, 45, 62, 0, 111, 112, 101, 114, 97, 116, 111, 114, 63, 0, 111, 112, 101, 114, 97, 116, 111, 114, 37, 0, 111, 112, 101, 114, 97, 116, 111, 114, 37, 61, 0, 111, 112, 101, 114, 97, 116, 111, 114, 62, 62, 0, 111, 112, 101, 114, 97, 116, 111, 114, 62, 62, 61, 0, 60, 0, 44, 32, 0, 32, 62, 0, 100, 101, 99, 108, 116, 121, 112, 101, 40, 0, 115, 116, 100, 58, 58, 97, 108, 108, 111, 99, 97, 116, 111, 114, 0, 115, 116, 100, 58, 58, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 0, 115, 116, 100, 58, 58, 115, 116, 114, 105, 110, 103, 0, 115, 116, 100, 58, 58, 105, 115, 116, 114, 101, 97, 109, 0, 115, 116, 100, 58, 58, 111, 115, 116, 114, 101, 97, 109, 0, 115, 116, 100, 58, 58, 105, 111, 115, 116, 114, 101, 97, 109, 0, 115, 116, 100, 58, 58, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 60, 99, 104, 97, 114, 44, 32, 115, 116, 100, 58, 58, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 60, 99, 104, 97, 114, 62, 44, 32, 115, 116, 100, 58, 58, 97, 108, 108, 111, 99, 97, 116, 111, 114, 60, 99, 104, 97, 114, 62, 32, 62, 0, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 0, 115, 116, 100, 58, 58, 98, 97, 115, 105, 99, 95, 105, 115, 116, 114, 101, 97, 109, 60, 99, 104, 97, 114, 44, 32, 115, 116, 100, 58, 58, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 60, 99, 104, 97, 114, 62, 32, 62, 0, 98, 97, 115, 105, 99, 95, 105, 115, 116, 114, 101, 97, 109, 0, 115, 116, 100, 58, 58, 98, 97, 115, 105, 99, 95, 111, 115, 116, 114, 101, 97, 109, 60, 99, 104, 97, 114, 44, 32, 115, 116, 100, 58, 58, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 60, 99, 104, 97, 114, 62, 32, 62, 0, 98, 97, 115, 105, 99, 95, 111, 115, 116, 114, 101, 97, 109, 0, 115, 116, 100, 58, 58, 98, 97, 115, 105, 99, 95, 105, 111, 115, 116, 114, 101, 97, 109, 60, 99, 104, 97, 114, 44, 32, 115, 116, 100, 58, 58, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 60, 99, 104, 97, 114, 62, 32, 62, 0, 98, 97, 115, 105, 99, 95, 105, 111, 115, 116, 114, 101, 97, 109, 0, 39, 117, 110, 110, 97, 109, 101, 100, 0, 39, 108, 97, 109, 98, 100, 97, 39, 40, 0, 115, 116, 100, 58, 58, 0, 46, 42, 0, 46, 0, 47, 0, 47, 61, 0, 94, 0, 94, 61, 0, 61, 61, 0, 62, 61, 0, 41, 91, 0, 60, 61, 0, 60, 60, 0, 60, 60, 61, 0, 45, 0, 45, 61, 0, 42, 61, 0, 45, 45, 0, 41, 45, 45, 0, 91, 93, 32, 0, 32, 0, 33, 61, 0, 33, 0, 110, 111, 101, 120, 99, 101, 112, 116, 32, 40, 0, 124, 124, 0, 124, 0, 124, 61, 0, 45, 62, 42, 0, 43, 0, 43, 61, 0, 43, 43, 0, 41, 43, 43, 0, 45, 62, 0, 41, 32, 63, 32, 40, 0, 41, 32, 58, 32, 40, 0, 114, 101, 105, 110, 116, 101, 114, 112, 114, 101, 116, 95, 99, 97, 115, 116, 60, 0, 37, 0, 37, 61, 0, 62, 62, 0, 62, 62, 61, 0, 115, 116, 97, 116, 105, 99, 95, 99, 97, 115, 116, 60, 0, 115, 105, 122, 101, 111, 102, 32, 40, 0, 115, 105, 122, 101, 111, 102, 46, 46, 46, 40, 0, 116, 121, 112, 101, 105, 100, 40, 0, 116, 104, 114, 111, 119, 0, 116, 104, 114, 111, 119, 32, 0, 32, 99, 111, 109, 112, 108, 101, 120, 0, 32, 38, 0, 32, 38, 38, 0, 32, 105, 109, 97, 103, 105, 110, 97, 114, 121, 0, 58, 58, 42, 0, 111, 98, 106, 99, 95, 111, 98, 106, 101, 99, 116, 60, 0, 105, 100, 0, 111, 98, 106, 99, 112, 114, 111, 116, 111, 0, 115, 116, 100, 0, 58, 58, 115, 116, 114, 105, 110, 103, 32, 108, 105, 116, 101, 114, 97, 108, 0, 32, 118, 101, 99, 116, 111, 114, 91, 0, 112, 105, 120, 101, 108, 32, 118, 101, 99, 116, 111, 114, 91, 0, 118, 116, 97, 98, 108, 101, 32, 102, 111, 114, 32, 0, 86, 84, 84, 32, 102, 111, 114, 32, 0, 116, 121, 112, 101, 105, 110, 102, 111, 32, 102, 111, 114, 32, 0, 116, 121, 112, 101, 105, 110, 102, 111, 32, 110, 97, 109, 101, 32, 102, 111, 114, 32, 0, 99, 111, 118, 97, 114, 105, 97, 110, 116, 32, 114, 101, 116, 117, 114, 110, 32, 116, 104, 117, 110, 107, 32, 116, 111, 32, 0, 99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 118, 116, 97, 98, 108, 101, 32, 102, 111, 114, 32, 0, 45, 105, 110, 45, 0, 118, 105, 114, 116, 117, 97, 108, 32, 116, 104, 117, 110, 107, 32, 116, 111, 32, 0, 110, 111, 110, 45, 118, 105, 114, 116, 117, 97, 108, 32, 116, 104, 117, 110, 107, 32, 116, 111, 32, 0, 103, 117, 97, 114, 100, 32, 118, 97, 114, 105, 97, 98, 108, 101, 32, 102, 111, 114, 32, 0, 114, 101, 102, 101, 114, 101, 110, 99, 101, 32, 116, 101, 109, 112, 111, 114, 97, 114, 121, 32, 102, 111, 114, 32, 0, 95, 98, 108, 111, 99, 107, 95, 105, 110, 118, 111, 107, 101, 0, 105, 110, 118, 111, 99, 97, 116, 105, 111, 110, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 102, 111, 114, 32, 98, 108, 111, 99, 107, 32, 105, 110, 32, 0 ], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 30720);
var tempDoublePtr = STATICTOP;
STATICTOP += 16;
function _atexit(func, arg) {
 __ATEXIT__.unshift({
  func: func,
  arg: arg
 });
}
function ___cxa_atexit() {
 return _atexit.apply(null, arguments);
}
Module["_i64Subtract"] = _i64Subtract;
function ___assert_fail(condition, filename, line, func) {
 ABORT = true;
 throw "Assertion failed: " + Pointer_stringify(condition) + ", at: " + [ filename ? Pointer_stringify(filename) : "unknown filename", line, func ? Pointer_stringify(func) : "unknown function" ] + " at " + stackTrace();
}
function __ZSt18uncaught_exceptionv() {
 return !!__ZSt18uncaught_exceptionv.uncaught_exception;
}
var EXCEPTIONS = {
 last: 0,
 caught: [],
 infos: {},
 deAdjust: (function(adjusted) {
  if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
  for (var ptr in EXCEPTIONS.infos) {
   var info = EXCEPTIONS.infos[ptr];
   if (info.adjusted === adjusted) {
    return ptr;
   }
  }
  return adjusted;
 }),
 addRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount++;
 }),
 decRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  assert(info.refcount > 0);
  info.refcount--;
  if (info.refcount === 0) {
   if (info.destructor) {
    Runtime.dynCall("vi", info.destructor, [ ptr ]);
   }
   delete EXCEPTIONS.infos[ptr];
   ___cxa_free_exception(ptr);
  }
 }),
 clearRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount = 0;
 })
};
function ___resumeException(ptr) {
 if (!EXCEPTIONS.last) {
  EXCEPTIONS.last = ptr;
 }
 EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));
 throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}
function ___cxa_find_matching_catch() {
 var thrown = EXCEPTIONS.last;
 if (!thrown) {
  return (asm["setTempRet0"](0), 0) | 0;
 }
 var info = EXCEPTIONS.infos[thrown];
 var throwntype = info.type;
 if (!throwntype) {
  return (asm["setTempRet0"](0), thrown) | 0;
 }
 var typeArray = Array.prototype.slice.call(arguments);
 var pointer = Module["___cxa_is_pointer_type"](throwntype);
 if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
 HEAP32[___cxa_find_matching_catch.buffer >> 2] = thrown;
 thrown = ___cxa_find_matching_catch.buffer;
 for (var i = 0; i < typeArray.length; i++) {
  if (typeArray[i] && Module["___cxa_can_catch"](typeArray[i], throwntype, thrown)) {
   thrown = HEAP32[thrown >> 2];
   info.adjusted = thrown;
   return (asm["setTempRet0"](typeArray[i]), thrown) | 0;
  }
 }
 thrown = HEAP32[thrown >> 2];
 return (asm["setTempRet0"](throwntype), thrown) | 0;
}
function ___cxa_throw(ptr, type, destructor) {
 EXCEPTIONS.infos[ptr] = {
  ptr: ptr,
  adjusted: ptr,
  type: type,
  destructor: destructor,
  refcount: 0
 };
 EXCEPTIONS.last = ptr;
 if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
  __ZSt18uncaught_exceptionv.uncaught_exception = 1;
 } else {
  __ZSt18uncaught_exceptionv.uncaught_exception++;
 }
 throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}
Module["_memset"] = _memset;
function _pthread_mutex_lock() {}
function __isLeapYear(year) {
 return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function __arraySum(array, index) {
 var sum = 0;
 for (var i = 0; i <= index; sum += array[i++]) ;
 return sum;
}
var __MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
var __MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
function __addDays(date, days) {
 var newDate = new Date(date.getTime());
 while (days > 0) {
  var leap = __isLeapYear(newDate.getFullYear());
  var currentMonth = newDate.getMonth();
  var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  if (days > daysInCurrentMonth - newDate.getDate()) {
   days -= daysInCurrentMonth - newDate.getDate() + 1;
   newDate.setDate(1);
   if (currentMonth < 11) {
    newDate.setMonth(currentMonth + 1);
   } else {
    newDate.setMonth(0);
    newDate.setFullYear(newDate.getFullYear() + 1);
   }
  } else {
   newDate.setDate(newDate.getDate() + days);
   return newDate;
  }
 }
 return newDate;
}
function _strftime(s, maxsize, format, tm) {
 var tm_zone = HEAP32[tm + 40 >> 2];
 var date = {
  tm_sec: HEAP32[tm >> 2],
  tm_min: HEAP32[tm + 4 >> 2],
  tm_hour: HEAP32[tm + 8 >> 2],
  tm_mday: HEAP32[tm + 12 >> 2],
  tm_mon: HEAP32[tm + 16 >> 2],
  tm_year: HEAP32[tm + 20 >> 2],
  tm_wday: HEAP32[tm + 24 >> 2],
  tm_yday: HEAP32[tm + 28 >> 2],
  tm_isdst: HEAP32[tm + 32 >> 2],
  tm_gmtoff: HEAP32[tm + 36 >> 2],
  tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ""
 };
 var pattern = Pointer_stringify(format);
 var EXPANSION_RULES_1 = {
  "%c": "%a %b %d %H:%M:%S %Y",
  "%D": "%m/%d/%y",
  "%F": "%Y-%m-%d",
  "%h": "%b",
  "%r": "%I:%M:%S %p",
  "%R": "%H:%M",
  "%T": "%H:%M:%S",
  "%x": "%m/%d/%y",
  "%X": "%H:%M:%S"
 };
 for (var rule in EXPANSION_RULES_1) {
  pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
 }
 var WEEKDAYS = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
 var MONTHS = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
 function leadingSomething(value, digits, character) {
  var str = typeof value === "number" ? value.toString() : value || "";
  while (str.length < digits) {
   str = character[0] + str;
  }
  return str;
 }
 function leadingNulls(value, digits) {
  return leadingSomething(value, digits, "0");
 }
 function compareByDay(date1, date2) {
  function sgn(value) {
   return value < 0 ? -1 : value > 0 ? 1 : 0;
  }
  var compare;
  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
    compare = sgn(date1.getDate() - date2.getDate());
   }
  }
  return compare;
 }
 function getFirstWeekStartDate(janFourth) {
  switch (janFourth.getDay()) {
  case 0:
   return new Date(janFourth.getFullYear() - 1, 11, 29);
  case 1:
   return janFourth;
  case 2:
   return new Date(janFourth.getFullYear(), 0, 3);
  case 3:
   return new Date(janFourth.getFullYear(), 0, 2);
  case 4:
   return new Date(janFourth.getFullYear(), 0, 1);
  case 5:
   return new Date(janFourth.getFullYear() - 1, 11, 31);
  case 6:
   return new Date(janFourth.getFullYear() - 1, 11, 30);
  }
 }
 function getWeekBasedYear(date) {
  var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
    return thisDate.getFullYear() + 1;
   } else {
    return thisDate.getFullYear();
   }
  } else {
   return thisDate.getFullYear() - 1;
  }
 }
 var EXPANSION_RULES_2 = {
  "%a": (function(date) {
   return WEEKDAYS[date.tm_wday].substring(0, 3);
  }),
  "%A": (function(date) {
   return WEEKDAYS[date.tm_wday];
  }),
  "%b": (function(date) {
   return MONTHS[date.tm_mon].substring(0, 3);
  }),
  "%B": (function(date) {
   return MONTHS[date.tm_mon];
  }),
  "%C": (function(date) {
   var year = date.tm_year + 1900;
   return leadingNulls(year / 100 | 0, 2);
  }),
  "%d": (function(date) {
   return leadingNulls(date.tm_mday, 2);
  }),
  "%e": (function(date) {
   return leadingSomething(date.tm_mday, 2, " ");
  }),
  "%g": (function(date) {
   return getWeekBasedYear(date).toString().substring(2);
  }),
  "%G": (function(date) {
   return getWeekBasedYear(date);
  }),
  "%H": (function(date) {
   return leadingNulls(date.tm_hour, 2);
  }),
  "%I": (function(date) {
   var twelveHour = date.tm_hour;
   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;
   return leadingNulls(twelveHour, 2);
  }),
  "%j": (function(date) {
   return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
  }),
  "%m": (function(date) {
   return leadingNulls(date.tm_mon + 1, 2);
  }),
  "%M": (function(date) {
   return leadingNulls(date.tm_min, 2);
  }),
  "%n": (function() {
   return "\n";
  }),
  "%p": (function(date) {
   if (date.tm_hour >= 0 && date.tm_hour < 12) {
    return "AM";
   } else {
    return "PM";
   }
  }),
  "%S": (function(date) {
   return leadingNulls(date.tm_sec, 2);
  }),
  "%t": (function() {
   return "\t";
  }),
  "%u": (function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay() || 7;
  }),
  "%U": (function(date) {
   var janFirst = new Date(date.tm_year + 1900, 0, 1);
   var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstSunday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();
    var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstSunday, janFirst) === 0 ? "01" : "00";
  }),
  "%V": (function(date) {
   var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);
   var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);
   var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
   var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
   var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
   if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
    return "53";
   }
   if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
    return "01";
   }
   var daysDifference;
   if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {
    daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();
   } else {
    daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();
   }
   return leadingNulls(Math.ceil(daysDifference / 7), 2);
  }),
  "%w": (function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay();
  }),
  "%W": (function(date) {
   var janFirst = new Date(date.tm_year, 0, 1);
   var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstMonday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();
    var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstMonday, janFirst) === 0 ? "01" : "00";
  }),
  "%y": (function(date) {
   return (date.tm_year + 1900).toString().substring(2);
  }),
  "%Y": (function(date) {
   return date.tm_year + 1900;
  }),
  "%z": (function(date) {
   var off = date.tm_gmtoff;
   var ahead = off >= 0;
   off = Math.abs(off) / 60;
   off = off / 60 * 100 + off % 60;
   return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
  }),
  "%Z": (function(date) {
   return date.tm_zone;
  }),
  "%%": (function() {
   return "%";
  })
 };
 for (var rule in EXPANSION_RULES_2) {
  if (pattern.indexOf(rule) >= 0) {
   pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
  }
 }
 var bytes = intArrayFromString(pattern, false);
 if (bytes.length > maxsize) {
  return 0;
 }
 writeArrayToMemory(bytes, s);
 return bytes.length - 1;
}
function _strftime_l(s, maxsize, format, tm) {
 return _strftime(s, maxsize, format, tm);
}
function _abort() {
 Module["abort"]();
}
function _pthread_once(ptr, func) {
 if (!_pthread_once.seen) _pthread_once.seen = {};
 if (ptr in _pthread_once.seen) return;
 Runtime.dynCall("v", func);
 _pthread_once.seen[ptr] = 1;
}
function ___lock() {}
function ___unlock() {}
var PTHREAD_SPECIFIC = {};
function _pthread_getspecific(key) {
 return PTHREAD_SPECIFIC[key] || 0;
}
var _llvm_fabs_f64 = Math_abs;
function ___setErrNo(value) {
 if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value;
 return value;
}
var ERRNO_CODES = {
 EPERM: 1,
 ENOENT: 2,
 ESRCH: 3,
 EINTR: 4,
 EIO: 5,
 ENXIO: 6,
 E2BIG: 7,
 ENOEXEC: 8,
 EBADF: 9,
 ECHILD: 10,
 EAGAIN: 11,
 EWOULDBLOCK: 11,
 ENOMEM: 12,
 EACCES: 13,
 EFAULT: 14,
 ENOTBLK: 15,
 EBUSY: 16,
 EEXIST: 17,
 EXDEV: 18,
 ENODEV: 19,
 ENOTDIR: 20,
 EISDIR: 21,
 EINVAL: 22,
 ENFILE: 23,
 EMFILE: 24,
 ENOTTY: 25,
 ETXTBSY: 26,
 EFBIG: 27,
 ENOSPC: 28,
 ESPIPE: 29,
 EROFS: 30,
 EMLINK: 31,
 EPIPE: 32,
 EDOM: 33,
 ERANGE: 34,
 ENOMSG: 42,
 EIDRM: 43,
 ECHRNG: 44,
 EL2NSYNC: 45,
 EL3HLT: 46,
 EL3RST: 47,
 ELNRNG: 48,
 EUNATCH: 49,
 ENOCSI: 50,
 EL2HLT: 51,
 EDEADLK: 35,
 ENOLCK: 37,
 EBADE: 52,
 EBADR: 53,
 EXFULL: 54,
 ENOANO: 55,
 EBADRQC: 56,
 EBADSLT: 57,
 EDEADLOCK: 35,
 EBFONT: 59,
 ENOSTR: 60,
 ENODATA: 61,
 ETIME: 62,
 ENOSR: 63,
 ENONET: 64,
 ENOPKG: 65,
 EREMOTE: 66,
 ENOLINK: 67,
 EADV: 68,
 ESRMNT: 69,
 ECOMM: 70,
 EPROTO: 71,
 EMULTIHOP: 72,
 EDOTDOT: 73,
 EBADMSG: 74,
 ENOTUNIQ: 76,
 EBADFD: 77,
 EREMCHG: 78,
 ELIBACC: 79,
 ELIBBAD: 80,
 ELIBSCN: 81,
 ELIBMAX: 82,
 ELIBEXEC: 83,
 ENOSYS: 38,
 ENOTEMPTY: 39,
 ENAMETOOLONG: 36,
 ELOOP: 40,
 EOPNOTSUPP: 95,
 EPFNOSUPPORT: 96,
 ECONNRESET: 104,
 ENOBUFS: 105,
 EAFNOSUPPORT: 97,
 EPROTOTYPE: 91,
 ENOTSOCK: 88,
 ENOPROTOOPT: 92,
 ESHUTDOWN: 108,
 ECONNREFUSED: 111,
 EADDRINUSE: 98,
 ECONNABORTED: 103,
 ENETUNREACH: 101,
 ENETDOWN: 100,
 ETIMEDOUT: 110,
 EHOSTDOWN: 112,
 EHOSTUNREACH: 113,
 EINPROGRESS: 115,
 EALREADY: 114,
 EDESTADDRREQ: 89,
 EMSGSIZE: 90,
 EPROTONOSUPPORT: 93,
 ESOCKTNOSUPPORT: 94,
 EADDRNOTAVAIL: 99,
 ENETRESET: 102,
 EISCONN: 106,
 ENOTCONN: 107,
 ETOOMANYREFS: 109,
 EUSERS: 87,
 EDQUOT: 122,
 ESTALE: 116,
 ENOTSUP: 95,
 ENOMEDIUM: 123,
 EILSEQ: 84,
 EOVERFLOW: 75,
 ECANCELED: 125,
 ENOTRECOVERABLE: 131,
 EOWNERDEAD: 130,
 ESTRPIPE: 86
};
function _sysconf(name) {
 switch (name) {
 case 30:
  return PAGE_SIZE;
 case 85:
  return totalMemory / PAGE_SIZE;
 case 132:
 case 133:
 case 12:
 case 137:
 case 138:
 case 15:
 case 235:
 case 16:
 case 17:
 case 18:
 case 19:
 case 20:
 case 149:
 case 13:
 case 10:
 case 236:
 case 153:
 case 9:
 case 21:
 case 22:
 case 159:
 case 154:
 case 14:
 case 77:
 case 78:
 case 139:
 case 80:
 case 81:
 case 82:
 case 68:
 case 67:
 case 164:
 case 11:
 case 29:
 case 47:
 case 48:
 case 95:
 case 52:
 case 51:
 case 46:
  return 200809;
 case 79:
  return 0;
 case 27:
 case 246:
 case 127:
 case 128:
 case 23:
 case 24:
 case 160:
 case 161:
 case 181:
 case 182:
 case 242:
 case 183:
 case 184:
 case 243:
 case 244:
 case 245:
 case 165:
 case 178:
 case 179:
 case 49:
 case 50:
 case 168:
 case 169:
 case 175:
 case 170:
 case 171:
 case 172:
 case 97:
 case 76:
 case 32:
 case 173:
 case 35:
  return -1;
 case 176:
 case 177:
 case 7:
 case 155:
 case 8:
 case 157:
 case 125:
 case 126:
 case 92:
 case 93:
 case 129:
 case 130:
 case 131:
 case 94:
 case 91:
  return 1;
 case 74:
 case 60:
 case 69:
 case 70:
 case 4:
  return 1024;
 case 31:
 case 42:
 case 72:
  return 32;
 case 87:
 case 26:
 case 33:
  return 2147483647;
 case 34:
 case 1:
  return 47839;
 case 38:
 case 36:
  return 99;
 case 43:
 case 37:
  return 2048;
 case 0:
  return 2097152;
 case 3:
  return 65536;
 case 28:
  return 32768;
 case 44:
  return 32767;
 case 75:
  return 16384;
 case 39:
  return 1e3;
 case 89:
  return 700;
 case 71:
  return 256;
 case 40:
  return 255;
 case 2:
  return 100;
 case 180:
  return 64;
 case 25:
  return 20;
 case 5:
  return 16;
 case 6:
  return 6;
 case 73:
  return 4;
 case 84:
  {
   if (typeof navigator === "object") return navigator["hardwareConcurrency"] || 1;
   return 1;
  }
 }
 ___setErrNo(ERRNO_CODES.EINVAL);
 return -1;
}
var PTHREAD_SPECIFIC_NEXT_KEY = 1;
function _pthread_key_create(key, destructor) {
 if (key == 0) {
  return ERRNO_CODES.EINVAL;
 }
 HEAP32[key >> 2] = PTHREAD_SPECIFIC_NEXT_KEY;
 PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
 PTHREAD_SPECIFIC_NEXT_KEY++;
 return 0;
}
function _pthread_setspecific(key, value) {
 if (!(key in PTHREAD_SPECIFIC)) {
  return ERRNO_CODES.EINVAL;
 }
 PTHREAD_SPECIFIC[key] = value;
 return 0;
}
function _malloc(bytes) {
 var ptr = Runtime.dynamicAlloc(bytes + 8);
 return ptr + 8 & 4294967288;
}
Module["_malloc"] = _malloc;
function ___cxa_allocate_exception(size) {
 return _malloc(size);
}
var ERRNO_MESSAGES = {
 0: "Success",
 1: "Not super-user",
 2: "No such file or directory",
 3: "No such process",
 4: "Interrupted system call",
 5: "I/O error",
 6: "No such device or address",
 7: "Arg list too long",
 8: "Exec format error",
 9: "Bad file number",
 10: "No children",
 11: "No more processes",
 12: "Not enough core",
 13: "Permission denied",
 14: "Bad address",
 15: "Block device required",
 16: "Mount device busy",
 17: "File exists",
 18: "Cross-device link",
 19: "No such device",
 20: "Not a directory",
 21: "Is a directory",
 22: "Invalid argument",
 23: "Too many open files in system",
 24: "Too many open files",
 25: "Not a typewriter",
 26: "Text file busy",
 27: "File too large",
 28: "No space left on device",
 29: "Illegal seek",
 30: "Read only file system",
 31: "Too many links",
 32: "Broken pipe",
 33: "Math arg out of domain of func",
 34: "Math result not representable",
 35: "File locking deadlock error",
 36: "File or path name too long",
 37: "No record locks available",
 38: "Function not implemented",
 39: "Directory not empty",
 40: "Too many symbolic links",
 42: "No message of desired type",
 43: "Identifier removed",
 44: "Channel number out of range",
 45: "Level 2 not synchronized",
 46: "Level 3 halted",
 47: "Level 3 reset",
 48: "Link number out of range",
 49: "Protocol driver not attached",
 50: "No CSI structure available",
 51: "Level 2 halted",
 52: "Invalid exchange",
 53: "Invalid request descriptor",
 54: "Exchange full",
 55: "No anode",
 56: "Invalid request code",
 57: "Invalid slot",
 59: "Bad font file fmt",
 60: "Device not a stream",
 61: "No data (for no delay io)",
 62: "Timer expired",
 63: "Out of streams resources",
 64: "Machine is not on the network",
 65: "Package not installed",
 66: "The object is remote",
 67: "The link has been severed",
 68: "Advertise error",
 69: "Srmount error",
 70: "Communication error on send",
 71: "Protocol error",
 72: "Multihop attempted",
 73: "Cross mount point (not really error)",
 74: "Trying to read unreadable message",
 75: "Value too large for defined data type",
 76: "Given log. name not unique",
 77: "f.d. invalid for this operation",
 78: "Remote address changed",
 79: "Can   access a needed shared lib",
 80: "Accessing a corrupted shared lib",
 81: ".lib section in a.out corrupted",
 82: "Attempting to link in too many libs",
 83: "Attempting to exec a shared library",
 84: "Illegal byte sequence",
 86: "Streams pipe error",
 87: "Too many users",
 88: "Socket operation on non-socket",
 89: "Destination address required",
 90: "Message too long",
 91: "Protocol wrong type for socket",
 92: "Protocol not available",
 93: "Unknown protocol",
 94: "Socket type not supported",
 95: "Not supported",
 96: "Protocol family not supported",
 97: "Address family not supported by protocol family",
 98: "Address already in use",
 99: "Address not available",
 100: "Network interface is not configured",
 101: "Network is unreachable",
 102: "Connection reset by network",
 103: "Connection aborted",
 104: "Connection reset by peer",
 105: "No buffer space available",
 106: "Socket is already connected",
 107: "Socket is not connected",
 108: "Can't send after socket shutdown",
 109: "Too many references",
 110: "Connection timed out",
 111: "Connection refused",
 112: "Host is down",
 113: "Host is unreachable",
 114: "Socket already connected",
 115: "Connection already in progress",
 116: "Stale file handle",
 122: "Quota exceeded",
 123: "No medium (in tape drive)",
 125: "Operation canceled",
 130: "Previous owner died",
 131: "State not recoverable"
};
var PATH = {
 splitPath: (function(filename) {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 }),
 normalizeArray: (function(parts, allowAboveRoot) {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (; up--; up) {
    parts.unshift("..");
   }
  }
  return parts;
 }),
 normalize: (function(path) {
  var isAbsolute = path.charAt(0) === "/", trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 }),
 dirname: (function(path) {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 }),
 basename: (function(path) {
  if (path === "/") return "/";
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 }),
 extname: (function(path) {
  return PATH.splitPath(path)[3];
 }),
 join: (function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return PATH.normalize(paths.join("/"));
 }),
 join2: (function(l, r) {
  return PATH.normalize(l + "/" + r);
 }),
 resolve: (function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path !== "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = path.charAt(0) === "/";
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter((function(p) {
   return !!p;
  })), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 }),
 relative: (function(from, to) {
  from = PATH.resolve(from).substr(1);
  to = PATH.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (; start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (; end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 })
};
var TTY = {
 ttys: [],
 init: (function() {}),
 shutdown: (function() {}),
 register: (function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 }),
 stream_ops: {
  open: (function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   stream.tty = tty;
   stream.seekable = false;
  }),
  close: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  flush: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  read: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  }),
  write: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   for (var i = 0; i < length; i++) {
    try {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  })
 },
 default_tty_ops: {
  get_char: (function(tty) {
   if (!tty.input.length) {
    var result = null;
    if (ENVIRONMENT_IS_NODE) {
     var BUFSIZE = 256;
     var buf = new Buffer(BUFSIZE);
     var bytesRead = 0;
     var fd = process.stdin.fd;
     var usingDevice = false;
     try {
      fd = fs.openSync("/dev/stdin", "r");
      usingDevice = true;
     } catch (e) {}
     bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
     if (usingDevice) {
      fs.closeSync(fd);
     }
     if (bytesRead > 0) {
      result = buf.slice(0, bytesRead).toString("utf-8");
     } else {
      result = null;
     }
    } else if (typeof window != "undefined" && typeof window.prompt == "function") {
     result = window.prompt("Input: ");
     if (result !== null) {
      result += "\n";
     }
    } else if (typeof readline == "function") {
     result = readline();
     if (result !== null) {
      result += "\n";
     }
    }
    if (!result) {
     return null;
    }
    tty.input = intArrayFromString(result, true);
   }
   return tty.input.shift();
  }),
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 },
 default_tty1_ops: {
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 }
};
var MEMFS = {
 ops_table: null,
 mount: (function(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 getFileDataAsRegularArray: (function(node) {
  if (node.contents && node.contents.subarray) {
   var arr = [];
   for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
   return arr;
  }
  return node.contents;
 }),
 getFileDataAsTypedArray: (function(node) {
  if (!node.contents) return new Uint8Array;
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 }),
 expandFileStorage: (function(node, newCapacity) {
  if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
   node.contents = MEMFS.getFileDataAsRegularArray(node);
   node.usedBytes = node.contents.length;
  }
  if (!node.contents || node.contents.subarray) {
   var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
   if (prevCapacity >= newCapacity) return;
   var CAPACITY_DOUBLING_MAX = 1024 * 1024;
   newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
   if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
   var oldContents = node.contents;
   node.contents = new Uint8Array(newCapacity);
   if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
   return;
  }
  if (!node.contents && newCapacity > 0) node.contents = [];
  while (node.contents.length < newCapacity) node.contents.push(0);
 }),
 resizeFileStorage: (function(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
   return;
  }
  if (!node.contents || node.contents.subarray) {
   var oldContents = node.contents;
   node.contents = new Uint8Array(new ArrayBuffer(newSize));
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
   return;
  }
  if (!node.contents) node.contents = [];
  if (node.contents.length > newSize) node.contents.length = newSize; else while (node.contents.length < newSize) node.contents.push(0);
  node.usedBytes = newSize;
 }),
 node_ops: {
  getattr: (function(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  }),
  lookup: (function(parent, name) {
   throw FS.genericErrors[ERRNO_CODES.ENOENT];
  }),
  mknod: (function(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  }),
  rename: (function(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   old_node.parent = new_dir;
  }),
  unlink: (function(parent, name) {
   delete parent.contents[name];
  }),
  rmdir: (function(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
   }
   delete parent.contents[name];
  }),
  readdir: (function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  }),
  symlink: (function(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  }),
  readlink: (function(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return node.link;
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   assert(size >= 0);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  }),
  write: (function(stream, buffer, offset, length, position, canOwn) {
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  }),
  allocate: (function(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  }),
  mmap: (function(stream, buffer, offset, length, position, prot, flags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < stream.node.usedBytes) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = _malloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
    }
    buffer.set(contents, ptr);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  }),
  msync: (function(stream, buffer, offset, length, mmapFlags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   if (mmapFlags & 2) {
    return 0;
   }
   var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  })
 }
};
var IDBFS = {
 dbs: {},
 indexedDB: (function() {
  if (typeof indexedDB !== "undefined") return indexedDB;
  var ret = null;
  if (typeof window === "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
  assert(ret, "IDBFS used, but indexedDB not supported");
  return ret;
 }),
 DB_VERSION: 21,
 DB_STORE_NAME: "FILE_DATA",
 mount: (function(mount) {
  return MEMFS.mount.apply(null, arguments);
 }),
 syncfs: (function(mount, populate, callback) {
  IDBFS.getLocalSet(mount, (function(err, local) {
   if (err) return callback(err);
   IDBFS.getRemoteSet(mount, (function(err, remote) {
    if (err) return callback(err);
    var src = populate ? remote : local;
    var dst = populate ? local : remote;
    IDBFS.reconcile(src, dst, callback);
   }));
  }));
 }),
 getDB: (function(name, callback) {
  var db = IDBFS.dbs[name];
  if (db) {
   return callback(null, db);
  }
  var req;
  try {
   req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
  } catch (e) {
   return callback(e);
  }
  req.onupgradeneeded = (function(e) {
   var db = e.target.result;
   var transaction = e.target.transaction;
   var fileStore;
   if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
    fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
   } else {
    fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
   }
   if (!fileStore.indexNames.contains("timestamp")) {
    fileStore.createIndex("timestamp", "timestamp", {
     unique: false
    });
   }
  });
  req.onsuccess = (function() {
   db = req.result;
   IDBFS.dbs[name] = db;
   callback(null, db);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 getLocalSet: (function(mount, callback) {
  var entries = {};
  function isRealDir(p) {
   return p !== "." && p !== "..";
  }
  function toAbsolute(root) {
   return (function(p) {
    return PATH.join2(root, p);
   });
  }
  var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  while (check.length) {
   var path = check.pop();
   var stat;
   try {
    stat = FS.stat(path);
   } catch (e) {
    return callback(e);
   }
   if (FS.isDir(stat.mode)) {
    check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
   }
   entries[path] = {
    timestamp: stat.mtime
   };
  }
  return callback(null, {
   type: "local",
   entries: entries
  });
 }),
 getRemoteSet: (function(mount, callback) {
  var entries = {};
  IDBFS.getDB(mount.mountpoint, (function(err, db) {
   if (err) return callback(err);
   var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readonly");
   transaction.onerror = (function(e) {
    callback(this.error);
    e.preventDefault();
   });
   var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
   var index = store.index("timestamp");
   index.openKeyCursor().onsuccess = (function(event) {
    var cursor = event.target.result;
    if (!cursor) {
     return callback(null, {
      type: "remote",
      db: db,
      entries: entries
     });
    }
    entries[cursor.primaryKey] = {
     timestamp: cursor.key
    };
    cursor.continue();
   });
  }));
 }),
 loadLocalEntry: (function(path, callback) {
  var stat, node;
  try {
   var lookup = FS.lookupPath(path);
   node = lookup.node;
   stat = FS.stat(path);
  } catch (e) {
   return callback(e);
  }
  if (FS.isDir(stat.mode)) {
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode
   });
  } else if (FS.isFile(stat.mode)) {
   node.contents = MEMFS.getFileDataAsTypedArray(node);
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode,
    contents: node.contents
   });
  } else {
   return callback(new Error("node type not supported"));
  }
 }),
 storeLocalEntry: (function(path, entry, callback) {
  try {
   if (FS.isDir(entry.mode)) {
    FS.mkdir(path, entry.mode);
   } else if (FS.isFile(entry.mode)) {
    FS.writeFile(path, entry.contents, {
     encoding: "binary",
     canOwn: true
    });
   } else {
    return callback(new Error("node type not supported"));
   }
   FS.chmod(path, entry.mode);
   FS.utime(path, entry.timestamp, entry.timestamp);
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 removeLocalEntry: (function(path, callback) {
  try {
   var lookup = FS.lookupPath(path);
   var stat = FS.stat(path);
   if (FS.isDir(stat.mode)) {
    FS.rmdir(path);
   } else if (FS.isFile(stat.mode)) {
    FS.unlink(path);
   }
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 loadRemoteEntry: (function(store, path, callback) {
  var req = store.get(path);
  req.onsuccess = (function(event) {
   callback(null, event.target.result);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 storeRemoteEntry: (function(store, path, entry, callback) {
  var req = store.put(entry, path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 removeRemoteEntry: (function(store, path, callback) {
  var req = store.delete(path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 reconcile: (function(src, dst, callback) {
  var total = 0;
  var create = [];
  Object.keys(src.entries).forEach((function(key) {
   var e = src.entries[key];
   var e2 = dst.entries[key];
   if (!e2 || e.timestamp > e2.timestamp) {
    create.push(key);
    total++;
   }
  }));
  var remove = [];
  Object.keys(dst.entries).forEach((function(key) {
   var e = dst.entries[key];
   var e2 = src.entries[key];
   if (!e2) {
    remove.push(key);
    total++;
   }
  }));
  if (!total) {
   return callback(null);
  }
  var completed = 0;
  var db = src.type === "remote" ? src.db : dst.db;
  var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readwrite");
  var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return callback(err);
    }
    return;
   }
   if (++completed >= total) {
    return callback(null);
   }
  }
  transaction.onerror = (function(e) {
   done(this.error);
   e.preventDefault();
  });
  create.sort().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.loadRemoteEntry(store, path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeLocalEntry(path, entry, done);
    }));
   } else {
    IDBFS.loadLocalEntry(path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeRemoteEntry(store, path, entry, done);
    }));
   }
  }));
  remove.sort().reverse().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.removeLocalEntry(path, done);
   } else {
    IDBFS.removeRemoteEntry(store, path, done);
   }
  }));
 })
};
var NODEFS = {
 isWindows: false,
 staticInit: (function() {
  NODEFS.isWindows = !!process.platform.match(/^win/);
 }),
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_NODE);
  return NODEFS.createNode(null, "/", NODEFS.getMode(mount.opts.root), 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = FS.createNode(parent, name, mode);
  node.node_ops = NODEFS.node_ops;
  node.stream_ops = NODEFS.stream_ops;
  return node;
 }),
 getMode: (function(path) {
  var stat;
  try {
   stat = fs.lstatSync(path);
   if (NODEFS.isWindows) {
    stat.mode = stat.mode | (stat.mode & 146) >> 1;
   }
  } catch (e) {
   if (!e.code) throw e;
   throw new FS.ErrnoError(ERRNO_CODES[e.code]);
  }
  return stat.mode;
 }),
 realPath: (function(node) {
  var parts = [];
  while (node.parent !== node) {
   parts.push(node.name);
   node = node.parent;
  }
  parts.push(node.mount.opts.root);
  parts.reverse();
  return PATH.join.apply(null, parts);
 }),
 flagsToPermissionStringMap: {
  0: "r",
  1: "r+",
  2: "r+",
  64: "r",
  65: "r+",
  66: "r+",
  129: "rx+",
  193: "rx+",
  514: "w+",
  577: "w",
  578: "w+",
  705: "wx",
  706: "wx+",
  1024: "a",
  1025: "a",
  1026: "a+",
  1089: "a",
  1090: "a+",
  1153: "ax",
  1154: "ax+",
  1217: "ax",
  1218: "ax+",
  4096: "rs",
  4098: "rs+"
 },
 flagsToPermissionString: (function(flags) {
  flags &= ~32768;
  flags &= ~524288;
  if (flags in NODEFS.flagsToPermissionStringMap) {
   return NODEFS.flagsToPermissionStringMap[flags];
  } else {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
 }),
 node_ops: {
  getattr: (function(node) {
   var path = NODEFS.realPath(node);
   var stat;
   try {
    stat = fs.lstatSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   if (NODEFS.isWindows && !stat.blksize) {
    stat.blksize = 4096;
   }
   if (NODEFS.isWindows && !stat.blocks) {
    stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
   }
   return {
    dev: stat.dev,
    ino: stat.ino,
    mode: stat.mode,
    nlink: stat.nlink,
    uid: stat.uid,
    gid: stat.gid,
    rdev: stat.rdev,
    size: stat.size,
    atime: stat.atime,
    mtime: stat.mtime,
    ctime: stat.ctime,
    blksize: stat.blksize,
    blocks: stat.blocks
   };
  }),
  setattr: (function(node, attr) {
   var path = NODEFS.realPath(node);
   try {
    if (attr.mode !== undefined) {
     fs.chmodSync(path, attr.mode);
     node.mode = attr.mode;
    }
    if (attr.timestamp !== undefined) {
     var date = new Date(attr.timestamp);
     fs.utimesSync(path, date, date);
    }
    if (attr.size !== undefined) {
     fs.truncateSync(path, attr.size);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  lookup: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   var mode = NODEFS.getMode(path);
   return NODEFS.createNode(parent, name, mode);
  }),
  mknod: (function(parent, name, mode, dev) {
   var node = NODEFS.createNode(parent, name, mode, dev);
   var path = NODEFS.realPath(node);
   try {
    if (FS.isDir(node.mode)) {
     fs.mkdirSync(path, node.mode);
    } else {
     fs.writeFileSync(path, "", {
      mode: node.mode
     });
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   return node;
  }),
  rename: (function(oldNode, newDir, newName) {
   var oldPath = NODEFS.realPath(oldNode);
   var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
   try {
    fs.renameSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  unlink: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.unlinkSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  rmdir: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.rmdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readdir: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    return fs.readdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  symlink: (function(parent, newName, oldPath) {
   var newPath = PATH.join2(NODEFS.realPath(parent), newName);
   try {
    fs.symlinkSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readlink: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    path = fs.readlinkSync(path);
    path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
    return path;
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  })
 },
 stream_ops: {
  open: (function(stream) {
   var path = NODEFS.realPath(stream.node);
   try {
    if (FS.isFile(stream.node.mode)) {
     stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  close: (function(stream) {
   try {
    if (FS.isFile(stream.node.mode) && stream.nfd) {
     fs.closeSync(stream.nfd);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  read: (function(stream, buffer, offset, length, position) {
   if (length === 0) return 0;
   var nbuffer = new Buffer(length);
   var res;
   try {
    res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   if (res > 0) {
    for (var i = 0; i < res; i++) {
     buffer[offset + i] = nbuffer[i];
    }
   }
   return res;
  }),
  write: (function(stream, buffer, offset, length, position) {
   var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
   var res;
   try {
    res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   return res;
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     try {
      var stat = fs.fstatSync(stream.nfd);
      position += stat.size;
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES[e.code]);
     }
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
var WORKERFS = {
 DIR_MODE: 16895,
 FILE_MODE: 33279,
 reader: null,
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_WORKER);
  if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync;
  var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);
  var createdParents = {};
  function ensureParent(path) {
   var parts = path.split("/");
   var parent = root;
   for (var i = 0; i < parts.length - 1; i++) {
    var curr = parts.slice(0, i + 1).join("/");
    if (!createdParents[curr]) {
     createdParents[curr] = WORKERFS.createNode(parent, curr, WORKERFS.DIR_MODE, 0);
    }
    parent = createdParents[curr];
   }
   return parent;
  }
  function base(path) {
   var parts = path.split("/");
   return parts[parts.length - 1];
  }
  Array.prototype.forEach.call(mount.opts["files"] || [], (function(file) {
   WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
  }));
  (mount.opts["blobs"] || []).forEach((function(obj) {
   WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
  }));
  (mount.opts["packages"] || []).forEach((function(pack) {
   pack["metadata"].files.forEach((function(file) {
    var name = file.filename.substr(1);
    WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
   }));
  }));
  return root;
 }),
 createNode: (function(parent, name, mode, dev, contents, mtime) {
  var node = FS.createNode(parent, name, mode);
  node.mode = mode;
  node.node_ops = WORKERFS.node_ops;
  node.stream_ops = WORKERFS.stream_ops;
  node.timestamp = (mtime || new Date).getTime();
  assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
  if (mode === WORKERFS.FILE_MODE) {
   node.size = contents.size;
   node.contents = contents;
  } else {
   node.size = 4096;
   node.contents = {};
  }
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 node_ops: {
  getattr: (function(node) {
   return {
    dev: 1,
    ino: undefined,
    mode: node.mode,
    nlink: 1,
    uid: 0,
    gid: 0,
    rdev: undefined,
    size: node.size,
    atime: new Date(node.timestamp),
    mtime: new Date(node.timestamp),
    ctime: new Date(node.timestamp),
    blksize: 4096,
    blocks: Math.ceil(node.size / 4096)
   };
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
  }),
  lookup: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }),
  mknod: (function(parent, name, mode, dev) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rename: (function(oldNode, newDir, newName) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  unlink: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rmdir: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readdir: (function(node) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  symlink: (function(parent, newName, oldPath) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readlink: (function(node) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   if (position >= stream.node.size) return 0;
   var chunk = stream.node.contents.slice(position, position + length);
   var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
   buffer.set(new Uint8Array(ab), offset);
   return chunk.size;
  }),
  write: (function(stream, buffer, offset, length, position) {
   throw new FS.ErrnoError(ERRNO_CODES.EIO);
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.size;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
STATICTOP += 16;
STATICTOP += 16;
STATICTOP += 16;
var FS = {
 root: null,
 mounts: [],
 devices: [ null ],
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 trackingDelegate: {},
 tracking: {
  openFlags: {
   READ: 1,
   WRITE: 2
  }
 },
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 syncFSRequests: 0,
 handleFSError: (function(e) {
  if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();
  return ___setErrNo(e.errno);
 }),
 lookupPath: (function(path, opts) {
  path = PATH.resolve(FS.cwd(), path);
  opts = opts || {};
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  for (var key in defaults) {
   if (opts[key] === undefined) {
    opts[key] = defaults[key];
   }
  }
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
  }
  var parts = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), false);
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 }),
 getPath: (function(node) {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
   }
   path = path ? node.name + "/" + path : node.name;
   node = node.parent;
  }
 }),
 hashName: (function(parentid, name) {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 }),
 hashAddNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 }),
 hashRemoveNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 }),
 lookupNode: (function(parent, name) {
  var err = FS.mayLookup(parent);
  if (err) {
   throw new FS.ErrnoError(err, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 }),
 createNode: (function(parent, name, mode, rdev) {
  if (!FS.FSNode) {
   FS.FSNode = (function(parent, name, mode, rdev) {
    if (!parent) {
     parent = this;
    }
    this.parent = parent;
    this.mount = parent.mount;
    this.mounted = null;
    this.id = FS.nextInode++;
    this.name = name;
    this.mode = mode;
    this.node_ops = {};
    this.stream_ops = {};
    this.rdev = rdev;
   });
   FS.FSNode.prototype = {};
   var readMode = 292 | 73;
   var writeMode = 146;
   Object.defineProperties(FS.FSNode.prototype, {
    read: {
     get: (function() {
      return (this.mode & readMode) === readMode;
     }),
     set: (function(val) {
      val ? this.mode |= readMode : this.mode &= ~readMode;
     })
    },
    write: {
     get: (function() {
      return (this.mode & writeMode) === writeMode;
     }),
     set: (function(val) {
      val ? this.mode |= writeMode : this.mode &= ~writeMode;
     })
    },
    isFolder: {
     get: (function() {
      return FS.isDir(this.mode);
     })
    },
    isDevice: {
     get: (function() {
      return FS.isChrdev(this.mode);
     })
    }
   });
  }
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 }),
 destroyNode: (function(node) {
  FS.hashRemoveNode(node);
 }),
 isRoot: (function(node) {
  return node === node.parent;
 }),
 isMountpoint: (function(node) {
  return !!node.mounted;
 }),
 isFile: (function(mode) {
  return (mode & 61440) === 32768;
 }),
 isDir: (function(mode) {
  return (mode & 61440) === 16384;
 }),
 isLink: (function(mode) {
  return (mode & 61440) === 40960;
 }),
 isChrdev: (function(mode) {
  return (mode & 61440) === 8192;
 }),
 isBlkdev: (function(mode) {
  return (mode & 61440) === 24576;
 }),
 isFIFO: (function(mode) {
  return (mode & 61440) === 4096;
 }),
 isSocket: (function(mode) {
  return (mode & 49152) === 49152;
 }),
 flagModes: {
  "r": 0,
  "rs": 1052672,
  "r+": 2,
  "w": 577,
  "wx": 705,
  "xw": 705,
  "w+": 578,
  "wx+": 706,
  "xw+": 706,
  "a": 1089,
  "ax": 1217,
  "xa": 1217,
  "a+": 1090,
  "ax+": 1218,
  "xa+": 1218
 },
 modeStringToFlags: (function(str) {
  var flags = FS.flagModes[str];
  if (typeof flags === "undefined") {
   throw new Error("Unknown file open mode: " + str);
  }
  return flags;
 }),
 flagsToPermissionString: (function(flag) {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 }),
 nodePermissions: (function(node, perms) {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
   return ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 mayLookup: (function(dir) {
  var err = FS.nodePermissions(dir, "x");
  if (err) return err;
  if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
  return 0;
 }),
 mayCreate: (function(dir, name) {
  try {
   var node = FS.lookupNode(dir, name);
   return ERRNO_CODES.EEXIST;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 }),
 mayDelete: (function(dir, name, isdir) {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var err = FS.nodePermissions(dir, "wx");
  if (err) {
   return err;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return ERRNO_CODES.ENOTDIR;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return ERRNO_CODES.EBUSY;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return 0;
 }),
 mayOpen: (function(node, flags) {
  if (!node) {
   return ERRNO_CODES.ENOENT;
  }
  if (FS.isLink(node.mode)) {
   return ERRNO_CODES.ELOOP;
  } else if (FS.isDir(node.mode)) {
   if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 }),
 MAX_OPEN_FDS: 4096,
 nextfd: (function(fd_start, fd_end) {
  fd_start = fd_start || 0;
  fd_end = fd_end || FS.MAX_OPEN_FDS;
  for (var fd = fd_start; fd <= fd_end; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
 }),
 getStream: (function(fd) {
  return FS.streams[fd];
 }),
 createStream: (function(stream, fd_start, fd_end) {
  if (!FS.FSStream) {
   FS.FSStream = (function() {});
   FS.FSStream.prototype = {};
   Object.defineProperties(FS.FSStream.prototype, {
    object: {
     get: (function() {
      return this.node;
     }),
     set: (function(val) {
      this.node = val;
     })
    },
    isRead: {
     get: (function() {
      return (this.flags & 2097155) !== 1;
     })
    },
    isWrite: {
     get: (function() {
      return (this.flags & 2097155) !== 0;
     })
    },
    isAppend: {
     get: (function() {
      return this.flags & 1024;
     })
    }
   });
  }
  var newStream = new FS.FSStream;
  for (var p in stream) {
   newStream[p] = stream[p];
  }
  stream = newStream;
  var fd = FS.nextfd(fd_start, fd_end);
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 }),
 closeStream: (function(fd) {
  FS.streams[fd] = null;
 }),
 chrdev_stream_ops: {
  open: (function(stream) {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  }),
  llseek: (function() {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  })
 },
 major: (function(dev) {
  return dev >> 8;
 }),
 minor: (function(dev) {
  return dev & 255;
 }),
 makedev: (function(ma, mi) {
  return ma << 8 | mi;
 }),
 registerDevice: (function(dev, ops) {
  FS.devices[dev] = {
   stream_ops: ops
  };
 }),
 getDevice: (function(dev) {
  return FS.devices[dev];
 }),
 getMounts: (function(mount) {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 }),
 syncfs: (function(populate, callback) {
  if (typeof populate === "function") {
   callback = populate;
   populate = false;
  }
  FS.syncFSRequests++;
  if (FS.syncFSRequests > 1) {
   console.log("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function doCallback(err) {
   assert(FS.syncFSRequests > 0);
   FS.syncFSRequests--;
   return callback(err);
  }
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return doCallback(err);
    }
    return;
   }
   if (++completed >= mounts.length) {
    doCallback(null);
   }
  }
  mounts.forEach((function(mount) {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  }));
 }),
 mount: (function(type, opts, mountpoint) {
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 }),
 unmount: (function(mountpoint) {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach((function(hash) {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.indexOf(current.mount) !== -1) {
     FS.destroyNode(current);
    }
    current = next;
   }
  }));
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  assert(idx !== -1);
  node.mount.mounts.splice(idx, 1);
 }),
 lookup: (function(parent, name) {
  return parent.node_ops.lookup(parent, name);
 }),
 mknod: (function(path, mode, dev) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.mayCreate(parent, name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 }),
 create: (function(path, mode) {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 }),
 mkdir: (function(path, mode) {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 }),
 mkdev: (function(path, mode, dev) {
  if (typeof dev === "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 }),
 symlink: (function(oldpath, newpath) {
  if (!PATH.resolve(oldpath)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var newname = PATH.basename(newpath);
  var err = FS.mayCreate(parent, newname);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 }),
 rename: (function(old_path, new_path) {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  try {
   lookup = FS.lookupPath(old_path, {
    parent: true
   });
   old_dir = lookup.node;
   lookup = FS.lookupPath(new_path, {
    parent: true
   });
   new_dir = lookup.node;
  } catch (e) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  relative = PATH.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var err = FS.mayDelete(old_dir, old_name, isdir);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (new_dir !== old_dir) {
   err = FS.nodePermissions(old_dir, "w");
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  try {
   if (FS.trackingDelegate["willMovePath"]) {
    FS.trackingDelegate["willMovePath"](old_path, new_path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
  try {
   if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
  } catch (e) {
   console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
 }),
 rmdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, true);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  return node.node_ops.readdir(node);
 }),
 unlink: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, false);
  if (err) {
   if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readlink: (function(path) {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 }),
 stat: (function(path, dontFollow) {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return node.node_ops.getattr(node);
 }),
 lstat: (function(path) {
  return FS.stat(path, true);
 }),
 chmod: (function(path, mode, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 }),
 lchmod: (function(path, mode) {
  FS.chmod(path, mode, true);
 }),
 fchmod: (function(fd, mode) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chmod(stream.node, mode);
 }),
 chown: (function(path, uid, gid, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 }),
 lchown: (function(path, uid, gid) {
  FS.chown(path, uid, gid, true);
 }),
 fchown: (function(fd, uid, gid) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chown(stream.node, uid, gid);
 }),
 truncate: (function(path, len) {
  if (len < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.nodePermissions(node, "w");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 }),
 ftruncate: (function(fd, len) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  FS.truncate(stream.node, len);
 }),
 utime: (function(path, atime, mtime) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 }),
 open: (function(path, flags, mode, fd_start, fd_end) {
  if (path === "") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
  mode = typeof mode === "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path === "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  if (!created) {
   var err = FS.mayOpen(node, flags);
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  if (flags & 512) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  }, fd_start, fd_end);
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
    Module["printErr"]("read file: " + path);
   }
  }
  try {
   if (FS.trackingDelegate["onOpenFile"]) {
    var trackingFlags = 0;
    if ((flags & 2097155) !== 1) {
     trackingFlags |= FS.tracking.openFlags.READ;
    }
    if ((flags & 2097155) !== 0) {
     trackingFlags |= FS.tracking.openFlags.WRITE;
    }
    FS.trackingDelegate["onOpenFile"](path, trackingFlags);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
  }
  return stream;
 }),
 close: (function(stream) {
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
 }),
 llseek: (function(stream, offset, whence) {
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 }),
 read: (function(stream, buffer, offset, length, position) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var seeking = true;
  if (typeof position === "undefined") {
   position = stream.position;
   seeking = false;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 }),
 write: (function(stream, buffer, offset, length, position, canOwn) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if (stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = true;
  if (typeof position === "undefined") {
   position = stream.position;
   seeking = false;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  try {
   if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
  } catch (e) {
   console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
  }
  return bytesWritten;
 }),
 allocate: (function(stream, offset, length) {
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
  }
  stream.stream_ops.allocate(stream, offset, length);
 }),
 mmap: (function(stream, buffer, offset, length, position, prot, flags) {
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EACCES);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
 }),
 msync: (function(stream, buffer, offset, length, mmapFlags) {
  if (!stream || !stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 }),
 munmap: (function(stream) {
  return 0;
 }),
 ioctl: (function(stream, cmd, arg) {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 }),
 readFile: (function(path, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "r";
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 }),
 writeFile: (function(path, data, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "w";
  opts.encoding = opts.encoding || "utf8";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var stream = FS.open(path, opts.flags, opts.mode);
  if (opts.encoding === "utf8") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
  } else if (opts.encoding === "binary") {
   FS.write(stream, data, 0, data.length, 0, opts.canOwn);
  }
  FS.close(stream);
 }),
 cwd: (function() {
  return FS.currentPath;
 }),
 chdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  var err = FS.nodePermissions(lookup.node, "x");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  FS.currentPath = lookup.path;
 }),
 createDefaultDirectories: (function() {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 }),
 createDefaultDevices: (function() {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: (function() {
    return 0;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    return length;
   })
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var random_device;
  if (typeof crypto !== "undefined") {
   var randomBuffer = new Uint8Array(1);
   random_device = (function() {
    crypto.getRandomValues(randomBuffer);
    return randomBuffer[0];
   });
  } else if (ENVIRONMENT_IS_NODE) {
   random_device = (function() {
    return require("crypto").randomBytes(1)[0];
   });
  } else {
   random_device = (function() {
    return Math.random() * 256 | 0;
   });
  }
  FS.createDevice("/dev", "random", random_device);
  FS.createDevice("/dev", "urandom", random_device);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 }),
 createSpecialDirectories: (function() {
  FS.mkdir("/proc");
  FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: (function() {
    var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: (function(parent, name) {
      var fd = +name;
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: (function() {
         return stream.path;
        })
       }
      };
      ret.parent = ret;
      return ret;
     })
    };
    return node;
   })
  }, {}, "/proc/self/fd");
 }),
 createStandardStreams: (function() {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", "r");
  assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
  var stdout = FS.open("/dev/stdout", "w");
  assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
  var stderr = FS.open("/dev/stderr", "w");
  assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
 }),
 ensureErrnoError: (function() {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.node = node;
   this.setErrno = (function(errno) {
    this.errno = errno;
    for (var key in ERRNO_CODES) {
     if (ERRNO_CODES[key] === errno) {
      this.code = key;
      break;
     }
    }
   });
   this.setErrno(errno);
   this.message = ERRNO_MESSAGES[errno];
  };
  FS.ErrnoError.prototype = new Error;
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ ERRNO_CODES.ENOENT ].forEach((function(code) {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  }));
 }),
 staticInit: (function() {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS,
   "IDBFS": IDBFS,
   "NODEFS": NODEFS,
   "WORKERFS": WORKERFS
  };
 }),
 init: (function(input, output, error) {
  assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 }),
 quit: (function() {
  FS.init.initialized = false;
  var fflush = Module["_fflush"];
  if (fflush) fflush(0);
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 }),
 getMode: (function(canRead, canWrite) {
  var mode = 0;
  if (canRead) mode |= 292 | 73;
  if (canWrite) mode |= 146;
  return mode;
 }),
 joinPath: (function(parts, forceRelative) {
  var path = PATH.join.apply(null, parts);
  if (forceRelative && path[0] == "/") path = path.substr(1);
  return path;
 }),
 absolutePath: (function(relative, base) {
  return PATH.resolve(base, relative);
 }),
 standardizePath: (function(path) {
  return PATH.normalize(path);
 }),
 findObject: (function(path, dontResolveLastLink) {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (ret.exists) {
   return ret.object;
  } else {
   ___setErrNo(ret.error);
   return null;
  }
 }),
 analyzePath: (function(path, dontResolveLastLink) {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 }),
 createFolder: (function(parent, name, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.mkdir(path, mode);
 }),
 createPath: (function(parent, path, canRead, canWrite) {
  parent = typeof parent === "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 }),
 createFile: (function(parent, name, properties, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.create(path, mode);
 }),
 createDataFile: (function(parent, name, data, canRead, canWrite, canOwn) {
  var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
  var mode = FS.getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data === "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, "w");
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 }),
 createDevice: (function(parent, name, input, output) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: (function(stream) {
    stream.seekable = false;
   }),
   close: (function(stream) {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   }),
   read: (function(stream, buffer, offset, length, pos) {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   })
  });
  return FS.mkdev(path, mode, dev);
 }),
 createLink: (function(parent, name, target, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  return FS.symlink(target, path);
 }),
 forceLoadFile: (function(obj) {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  var success = true;
  if (typeof XMLHttpRequest !== "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (Module["read"]) {
   try {
    obj.contents = intArrayFromString(Module["read"](obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    success = false;
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
  if (!success) ___setErrNo(ERRNO_CODES.EIO);
  return success;
 }),
 createLazyFile: (function(parent, name, url, canRead, canWrite) {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest;
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = (function(from, to) {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest;
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    } else {
     return intArrayFromString(xhr.responseText || "", true);
    }
   });
   var lazyArray = this;
   lazyArray.setDataGetter((function(chunkNum) {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] === "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   }));
   if (usesGzip || !datalength) {
    chunkSize = datalength = 1;
    datalength = this.getter(0).length;
    chunkSize = datalength;
    console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
   }
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest !== "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array;
   Object.defineProperties(lazyArray, {
    length: {
     get: (function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._length;
     })
    },
    chunkSize: {
     get: (function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._chunkSize;
     })
    }
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperties(node, {
   usedBytes: {
    get: (function() {
     return this.contents.length;
    })
   }
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach((function(key) {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    if (!FS.forceLoadFile(node)) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    return fn.apply(null, arguments);
   };
  }));
  stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
   if (!FS.forceLoadFile(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EIO);
   }
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   assert(size >= 0);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  };
  node.stream_ops = stream_ops;
  return node;
 }),
 createPreloadedFile: (function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
  Browser.init();
  var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
  var dep = getUniqueRunDependency("cp " + fullname);
  function processData(byteArray) {
   function finish(byteArray) {
    if (preFinish) preFinish();
    if (!dontCreateFile) {
     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
    }
    if (onload) onload();
    removeRunDependency(dep);
   }
   var handled = false;
   Module["preloadPlugins"].forEach((function(plugin) {
    if (handled) return;
    if (plugin["canHandle"](fullname)) {
     plugin["handle"](byteArray, fullname, finish, (function() {
      if (onerror) onerror();
      removeRunDependency(dep);
     }));
     handled = true;
    }
   }));
   if (!handled) finish(byteArray);
  }
  addRunDependency(dep);
  if (typeof url == "string") {
   Browser.asyncLoad(url, (function(byteArray) {
    processData(byteArray);
   }), onerror);
  } else {
   processData(url);
  }
 }),
 indexedDB: (function() {
  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
 }),
 DB_NAME: (function() {
  return "EM_FS_" + window.location.pathname;
 }),
 DB_VERSION: 20,
 DB_STORE_NAME: "FILE_DATA",
 saveFilesToDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
   console.log("creating db");
   var db = openRequest.result;
   db.createObjectStore(FS.DB_STORE_NAME);
  };
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   var transaction = db.transaction([ FS.DB_STORE_NAME ], "readwrite");
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var putRequest = files.put(FS.analyzePath(path).object.contents, path);
    putRequest.onsuccess = function putRequest_onsuccess() {
     ok++;
     if (ok + fail == total) finish();
    };
    putRequest.onerror = function putRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 }),
 loadFilesFromDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = onerror;
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   try {
    var transaction = db.transaction([ FS.DB_STORE_NAME ], "readonly");
   } catch (e) {
    onerror(e);
    return;
   }
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var getRequest = files.get(path);
    getRequest.onsuccess = function getRequest_onsuccess() {
     if (FS.analyzePath(path).exists) {
      FS.unlink(path);
     }
     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
     ok++;
     if (ok + fail == total) finish();
    };
    getRequest.onerror = function getRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 })
};
var SYSCALLS = {
 DEFAULT_POLLMASK: 5,
 mappings: {},
 umask: 511,
 calculateAt: (function(dirfd, path) {
  if (path[0] !== "/") {
   var dir;
   if (dirfd === -100) {
    dir = FS.cwd();
   } else {
    var dirstream = FS.getStream(dirfd);
    if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    dir = dirstream.path;
   }
   path = PATH.join2(dir, path);
  }
  return path;
 }),
 doStat: (function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -ERRNO_CODES.ENOTDIR;
   }
   throw e;
  }
  HEAP32[buf >> 2] = stat.dev;
  HEAP32[buf + 4 >> 2] = 0;
  HEAP32[buf + 8 >> 2] = stat.ino;
  HEAP32[buf + 12 >> 2] = stat.mode;
  HEAP32[buf + 16 >> 2] = stat.nlink;
  HEAP32[buf + 20 >> 2] = stat.uid;
  HEAP32[buf + 24 >> 2] = stat.gid;
  HEAP32[buf + 28 >> 2] = stat.rdev;
  HEAP32[buf + 32 >> 2] = 0;
  HEAP32[buf + 36 >> 2] = stat.size;
  HEAP32[buf + 40 >> 2] = 4096;
  HEAP32[buf + 44 >> 2] = stat.blocks;
  HEAP32[buf + 48 >> 2] = stat.atime.getTime() / 1e3 | 0;
  HEAP32[buf + 52 >> 2] = 0;
  HEAP32[buf + 56 >> 2] = stat.mtime.getTime() / 1e3 | 0;
  HEAP32[buf + 60 >> 2] = 0;
  HEAP32[buf + 64 >> 2] = stat.ctime.getTime() / 1e3 | 0;
  HEAP32[buf + 68 >> 2] = 0;
  HEAP32[buf + 72 >> 2] = stat.ino;
  return 0;
 }),
 doMsync: (function(addr, stream, len, flags) {
  var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
  FS.msync(stream, buffer, 0, len, flags);
 }),
 doMkdir: (function(path, mode) {
  path = PATH.normalize(path);
  if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
  FS.mkdir(path, mode, 0);
  return 0;
 }),
 doMknod: (function(path, mode, dev) {
  switch (mode & 61440) {
  case 32768:
  case 8192:
  case 24576:
  case 4096:
  case 49152:
   break;
  default:
   return -ERRNO_CODES.EINVAL;
  }
  FS.mknod(path, mode, dev);
  return 0;
 }),
 doReadlink: (function(path, buf, bufsize) {
  if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
  var ret = FS.readlink(path);
  ret = ret.slice(0, Math.max(0, bufsize));
  writeStringToMemory(ret, buf, true);
  return ret.length;
 }),
 doAccess: (function(path, amode) {
  if (amode & ~7) {
   return -ERRNO_CODES.EINVAL;
  }
  var node;
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  node = lookup.node;
  var perms = "";
  if (amode & 4) perms += "r";
  if (amode & 2) perms += "w";
  if (amode & 1) perms += "x";
  if (perms && FS.nodePermissions(node, perms)) {
   return -ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 doDup: (function(path, flags, suggestFD) {
  var suggest = FS.getStream(suggestFD);
  if (suggest) FS.close(suggest);
  return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
 }),
 doReadv: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.read(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
   if (curr < len) break;
  }
  return ret;
 }),
 doWritev: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.write(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
  }
  return ret;
 }),
 varargs: 0,
 get: (function(varargs) {
  SYSCALLS.varargs += 4;
  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
  return ret;
 }),
 getStr: (function() {
  var ret = Pointer_stringify(SYSCALLS.get());
  return ret;
 }),
 getStreamFromFD: (function() {
  var stream = FS.getStream(SYSCALLS.get());
  if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return stream;
 }),
 getSocketFromFD: (function() {
  var socket = SOCKFS.getSocket(SYSCALLS.get());
  if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return socket;
 }),
 getSocketAddress: (function(allowNull) {
  var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
  if (allowNull && addrp === 0) return null;
  var info = __read_sockaddr(addrp, addrlen);
  if (info.errno) throw new FS.ErrnoError(info.errno);
  info.addr = DNS.lookup_addr(info.addr) || info.addr;
  return info;
 }),
 get64: (function() {
  var low = SYSCALLS.get(), high = SYSCALLS.get();
  if (low >= 0) assert(high === 0); else assert(high === -1);
  return low;
 }),
 getZero: (function() {
  assert(SYSCALLS.get() === 0);
 })
};
function ___syscall54(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
  switch (op) {
  case 21505:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21506:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21519:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    var argp = SYSCALLS.get();
    HEAP32[argp >> 2] = 0;
    return 0;
   }
  case 21520:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return -ERRNO_CODES.EINVAL;
   }
  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }
  default:
   abort("bad ioctl syscall " + op);
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
Module["_bitshift64Ashr"] = _bitshift64Ashr;
Module["_bitshift64Lshr"] = _bitshift64Lshr;
function ___cxa_guard_release() {}
function _pthread_cleanup_push(routine, arg) {
 __ATEXIT__.push((function() {
  Runtime.dynCall("vi", routine, [ arg ]);
 }));
 _pthread_cleanup_push.level = __ATEXIT__.length;
}
function _pthread_cond_broadcast() {
 return 0;
}
function ___cxa_guard_acquire(variable) {
 if (!HEAP8[variable >> 0]) {
  HEAP8[variable >> 0] = 1;
  return 1;
 }
 return 0;
}
function _pthread_cleanup_pop() {
 assert(_pthread_cleanup_push.level == __ATEXIT__.length, "cannot pop if something else added meanwhile!");
 __ATEXIT__.pop();
 _pthread_cleanup_push.level = __ATEXIT__.length;
}
Module["_i64Add"] = _i64Add;
function ___cxa_begin_catch(ptr) {
 __ZSt18uncaught_exceptionv.uncaught_exception--;
 EXCEPTIONS.caught.push(ptr);
 EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
 return ptr;
}
function _emscripten_memcpy_big(dest, src, num) {
 HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
 return dest;
}
Module["_memcpy"] = _memcpy;
function ___syscall6(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD();
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _sbrk(bytes) {
 var self = _sbrk;
 if (!self.called) {
  DYNAMICTOP = alignMemoryPage(DYNAMICTOP);
  self.called = true;
  assert(Runtime.dynamicAlloc);
  self.alloc = Runtime.dynamicAlloc;
  Runtime.dynamicAlloc = (function() {
   abort("cannot dynamically allocate, sbrk now has control");
  });
 }
 var ret = DYNAMICTOP;
 if (bytes != 0) {
  var success = self.alloc(bytes);
  if (!success) return -1 >>> 0;
 }
 return ret;
}
Module["_bitshift64Shl"] = _bitshift64Shl;
Module["_memmove"] = _memmove;
function ___gxx_personality_v0() {}
function _pthread_cond_wait() {
 return 0;
}
var _llvm_fabs_f32 = Math_abs;
function _pthread_mutex_unlock() {}
function _time(ptr) {
 var ret = Date.now() / 1e3 | 0;
 if (ptr) {
  HEAP32[ptr >> 2] = ret;
 }
 return ret;
}
function _pthread_self() {
 return 0;
}
function ___syscall140(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
  var offset = offset_low;
  assert(offset_high === 0);
  FS.llseek(stream, offset, whence);
  HEAP32[result >> 2] = stream.position;
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall146(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doWritev(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall145(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doReadv(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
var ___dso_handle = STATICTOP;
STATICTOP += 16;
FS.staticInit();
__ATINIT__.unshift((function() {
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
}));
__ATMAIN__.push((function() {
 FS.ignorePermissions = false;
}));
__ATEXIT__.push((function() {
 FS.quit();
}));
Module["FS_createFolder"] = FS.createFolder;
Module["FS_createPath"] = FS.createPath;
Module["FS_createDataFile"] = FS.createDataFile;
Module["FS_createPreloadedFile"] = FS.createPreloadedFile;
Module["FS_createLazyFile"] = FS.createLazyFile;
Module["FS_createLink"] = FS.createLink;
Module["FS_createDevice"] = FS.createDevice;
Module["FS_unlink"] = FS.unlink;
__ATINIT__.unshift((function() {
 TTY.init();
}));
__ATEXIT__.push((function() {
 TTY.shutdown();
}));
if (ENVIRONMENT_IS_NODE) {
 var fs = require("fs");
 var NODEJS_PATH = require("path");
 NODEFS.staticInit();
}
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true;
STACK_MAX = STACK_BASE + TOTAL_STACK;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
var cttz_i8 = allocate([ 8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0 ], "i8", ALLOC_DYNAMIC);
function invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  return Module["dynCall_iiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiii(index, a1, a2, a3) {
 try {
  return Module["dynCall_iiii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiii(index, a1, a2, a3, a4, a5) {
 try {
  Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiiid(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_iiiiiid"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vi(index, a1) {
 try {
  Module["dynCall_vi"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vii(index, a1, a2) {
 try {
  Module["dynCall_vii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_iiiiiii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiid(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_iiiiid"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_ii(index, a1) {
 try {
  return Module["dynCall_ii"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viii(index, a1, a2, a3) {
 try {
  Module["dynCall_viii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_v(index) {
 try {
  Module["dynCall_v"](index);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 try {
  return Module["dynCall_iiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiii(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 try {
  Module["dynCall_viiiiii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iii(index, a1, a2) {
 try {
  return Module["dynCall_iii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_iiiiii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiii(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_viiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
Module.asmGlobalArg = {
 "Math": Math,
 "Int8Array": Int8Array,
 "Int16Array": Int16Array,
 "Int32Array": Int32Array,
 "Uint8Array": Uint8Array,
 "Uint16Array": Uint16Array,
 "Uint32Array": Uint32Array,
 "Float32Array": Float32Array,
 "Float64Array": Float64Array,
 "NaN": NaN,
 "Infinity": Infinity,
 "byteLength": byteLength
};
Module.asmLibraryArg = {
 "abort": abort,
 "assert": assert,
 "invoke_iiiiiiii": invoke_iiiiiiii,
 "invoke_iiii": invoke_iiii,
 "invoke_viiiii": invoke_viiiii,
 "invoke_iiiiiid": invoke_iiiiiid,
 "invoke_vi": invoke_vi,
 "invoke_vii": invoke_vii,
 "invoke_iiiiiii": invoke_iiiiiii,
 "invoke_iiiiid": invoke_iiiiid,
 "invoke_ii": invoke_ii,
 "invoke_viii": invoke_viii,
 "invoke_v": invoke_v,
 "invoke_iiiiiiiii": invoke_iiiiiiiii,
 "invoke_iiiii": invoke_iiiii,
 "invoke_viiiiii": invoke_viiiiii,
 "invoke_iii": invoke_iii,
 "invoke_iiiiii": invoke_iiiiii,
 "invoke_viiii": invoke_viiii,
 "_pthread_cleanup_pop": _pthread_cleanup_pop,
 "_strftime": _strftime,
 "_pthread_cond_wait": _pthread_cond_wait,
 "___resumeException": ___resumeException,
 "_pthread_key_create": _pthread_key_create,
 "_abort": _abort,
 "_llvm_fabs_f64": _llvm_fabs_f64,
 "___gxx_personality_v0": ___gxx_personality_v0,
 "___assert_fail": ___assert_fail,
 "___cxa_atexit": ___cxa_atexit,
 "___cxa_allocate_exception": ___cxa_allocate_exception,
 "___cxa_find_matching_catch": ___cxa_find_matching_catch,
 "_emscripten_asm_const_ii": _emscripten_asm_const_ii,
 "__isLeapYear": __isLeapYear,
 "___cxa_guard_release": ___cxa_guard_release,
 "_emscripten_asm_const_i": _emscripten_asm_const_i,
 "__addDays": __addDays,
 "_emscripten_asm_const_did": _emscripten_asm_const_did,
 "_strftime_l": _strftime_l,
 "___setErrNo": ___setErrNo,
 "_emscripten_asm_const_id": _emscripten_asm_const_id,
 "_sbrk": _sbrk,
 "___cxa_begin_catch": ___cxa_begin_catch,
 "_emscripten_memcpy_big": _emscripten_memcpy_big,
 "_emscripten_asm_const_v": _emscripten_asm_const_v,
 "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv,
 "_sysconf": _sysconf,
 "_pthread_getspecific": _pthread_getspecific,
 "_llvm_fabs_f32": _llvm_fabs_f32,
 "__arraySum": __arraySum,
 "_emscripten_asm_const_di": _emscripten_asm_const_di,
 "_emscripten_asm_const_diiid": _emscripten_asm_const_diiid,
 "_emscripten_asm_const_dii": _emscripten_asm_const_dii,
 "_pthread_self": _pthread_self,
 "_pthread_mutex_unlock": _pthread_mutex_unlock,
 "_pthread_once": _pthread_once,
 "_emscripten_asm_const_iid": _emscripten_asm_const_iid,
 "___syscall54": ___syscall54,
 "___unlock": ___unlock,
 "_pthread_cond_broadcast": _pthread_cond_broadcast,
 "_emscripten_asm_const_iii": _emscripten_asm_const_iii,
 "_pthread_setspecific": _pthread_setspecific,
 "_emscripten_asm_const_iiii": _emscripten_asm_const_iiii,
 "_emscripten_asm_const_diiii": _emscripten_asm_const_diiii,
 "___cxa_throw": ___cxa_throw,
 "___lock": ___lock,
 "___syscall6": ___syscall6,
 "_pthread_cleanup_push": _pthread_cleanup_push,
 "_time": _time,
 "_pthread_mutex_lock": _pthread_mutex_lock,
 "___cxa_guard_acquire": ___cxa_guard_acquire,
 "_atexit": _atexit,
 "___syscall140": ___syscall140,
 "___syscall145": ___syscall145,
 "___syscall146": ___syscall146,
 "STACKTOP": STACKTOP,
 "STACK_MAX": STACK_MAX,
 "tempDoublePtr": tempDoublePtr,
 "ABORT": ABORT,
 "cttz_i8": cttz_i8,
 "___dso_handle": ___dso_handle
};
// emscripten_START_ASM

var asm = (function(global,env,buffer) {

  'almost asm';
  
  
  var Int8View = global.Int8Array;
  var Int16View = global.Int16Array;
  var Int32View = global.Int32Array;
  var Uint8View = global.Uint8Array;
  var Uint16View = global.Uint16Array;
  var Uint32View = global.Uint32Array;
  var Float32View = global.Float32Array;
  var Float64View = global.Float64Array;
  var HEAP8 = new Int8View(buffer);
  var HEAP16 = new Int16View(buffer);
  var HEAP32 = new Int32View(buffer);
  var HEAPU8 = new Uint8View(buffer);
  var HEAPU16 = new Uint16View(buffer);
  var HEAPU32 = new Uint32View(buffer);
  var HEAPF32 = new Float32View(buffer);
  var HEAPF64 = new Float64View(buffer);
  var byteLength = global.byteLength;


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ___dso_handle=env.___dso_handle|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var ___resumeException=env.___resumeException;
  var _pthread_key_create=env._pthread_key_create;
  var _abort=env._abort;
  var _llvm_fabs_f64=env._llvm_fabs_f64;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_atexit=env.___cxa_atexit;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var _emscripten_asm_const_ii=env._emscripten_asm_const_ii;
  var __isLeapYear=env.__isLeapYear;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var _emscripten_asm_const_i=env._emscripten_asm_const_i;
  var __addDays=env.__addDays;
  var _emscripten_asm_const_did=env._emscripten_asm_const_did;
  var _strftime_l=env._strftime_l;
  var ___setErrNo=env.___setErrNo;
  var _emscripten_asm_const_id=env._emscripten_asm_const_id;
  var _sbrk=env._sbrk;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _emscripten_asm_const_v=env._emscripten_asm_const_v;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _sysconf=env._sysconf;
  var _pthread_getspecific=env._pthread_getspecific;
  var _llvm_fabs_f32=env._llvm_fabs_f32;
  var __arraySum=env.__arraySum;
  var _emscripten_asm_const_di=env._emscripten_asm_const_di;
  var _emscripten_asm_const_diiid=env._emscripten_asm_const_diiid;
  var _emscripten_asm_const_dii=env._emscripten_asm_const_dii;
  var _pthread_self=env._pthread_self;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var _emscripten_asm_const_iid=env._emscripten_asm_const_iid;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var _emscripten_asm_const_iii=env._emscripten_asm_const_iii;
  var _pthread_setspecific=env._pthread_setspecific;
  var _emscripten_asm_const_iiii=env._emscripten_asm_const_iiii;
  var _emscripten_asm_const_diiii=env._emscripten_asm_const_diiii;
  var ___cxa_throw=env.___cxa_throw;
  var ___lock=env.___lock;
  var ___syscall6=env.___syscall6;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _atexit=env._atexit;
  var ___syscall140=env.___syscall140;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

function _emscripten_replace_memory(newBuffer) {
  if ((byteLength(newBuffer) & 0xffffff || byteLength(newBuffer) <= 0xffffff) || byteLength(newBuffer) > 0x80000000) return false;
  HEAP8 = new Int8View(newBuffer);
  HEAP16 = new Int16View(newBuffer);
  HEAP32 = new Int32View(newBuffer);
  HEAPU8 = new Uint8View(newBuffer);
  HEAPU16 = new Uint16View(newBuffer);
  HEAPU32 = new Uint32View(newBuffer);
  HEAPF32 = new Float32View(newBuffer);
  HEAPF64 = new Float64View(newBuffer);
  buffer = newBuffer;
  return true;
}

// emscripten_START_FUNCS
function __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i73, i72, i74) {
 i73 = i73 | 0;
 i72 = i72 | 0;
 i74 = i74 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i75 = 0, i76 = 0;
 i76 = STACKTOP;
 STACKTOP = STACKTOP + 736 | 0;
 i75 = i76 + 704 | 0;
 i71 = i76 + 680 | 0;
 i59 = i76 + 668 | 0;
 i50 = i76 + 656 | 0;
 i53 = i76 + 632 | 0;
 i63 = i76 + 608 | 0;
 i66 = i76 + 584 | 0;
 i56 = i76 + 572 | 0;
 i62 = i76 + 560 | 0;
 i64 = i76 + 548 | 0;
 i65 = i76 + 536 | 0;
 i47 = i76 + 384 | 0;
 i57 = i76 + 520 | 0;
 i55 = i76 + 512 | 0;
 i20 = i76 + 496 | 0;
 i8 = i76 + 488 | 0;
 i40 = i76 + 472 | 0;
 i36 = i76 + 464 | 0;
 i21 = i76 + 448 | 0;
 i9 = i76 + 440 | 0;
 i61 = i76 + 424 | 0;
 i60 = i76 + 420 | 0;
 i38 = i76 + 408 | 0;
 i51 = i76 + 396 | 0;
 i52 = i76 + 372 | 0;
 i39 = i76 + 360 | 0;
 i43 = i76 + 344 | 0;
 i41 = i76 + 340 | 0;
 i13 = i76 + 328 | 0;
 i15 = i76 + 304 | 0;
 i16 = i76 + 288 | 0;
 i17 = i76 + 276 | 0;
 i18 = i76 + 264 | 0;
 i24 = i76 + 240 | 0;
 i25 = i76 + 228 | 0;
 i26 = i76 + 216 | 0;
 i27 = i76 + 204 | 0;
 i28 = i76 + 192 | 0;
 i31 = i76 + 168 | 0;
 i32 = i76 + 156 | 0;
 i33 = i76 + 144 | 0;
 i42 = i76 + 128 | 0;
 i37 = i76 + 120 | 0;
 i19 = i76 + 104 | 0;
 i7 = i76 + 96 | 0;
 i23 = i76 + 80 | 0;
 i12 = i76 + 72 | 0;
 i22 = i76 + 56 | 0;
 i11 = i76 + 48 | 0;
 i54 = i76 + 32 | 0;
 i49 = i76 + 24 | 0;
 i70 = i76 + 8 | 0;
 i69 = i76;
 L1 : do if ((i73 | 0) != (i72 | 0)) {
  switch (HEAP8[i73 >> 0] | 0) {
  case 75:
  case 86:
  case 114:
   {
    HEAP32[i71 >> 2] = 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i73, i72, i71) | 0;
    L5 : do if ((i2 | 0) != (i73 | 0) ? (i3 = HEAP8[i2 >> 0] | 0, i45 = i74 + 4 | 0, i10 = ((HEAP32[i45 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0, i44 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i2, i72, i74) | 0, i45 = ((HEAP32[i45 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0, (i44 | 0) != (i2 | 0)) : 0) {
     i15 = i3 << 24 >> 24 == 70;
     i16 = i74 + 20 | 0;
     i2 = HEAP32[i16 >> 2] | 0;
     L8 : do if (i15) {
      i3 = i2 + -16 | 0;
      while (1) {
       if ((i2 | 0) == (i3 | 0)) {
        i2 = i3;
        break L8;
       }
       i73 = i2 + -16 | 0;
       HEAP32[i16 >> 2] = i73;
       __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i73);
       i2 = HEAP32[i16 >> 2] | 0;
      }
     } while (0);
     i7 = i74 + 16 | 0;
     i8 = HEAP32[i74 + 12 >> 2] | 0;
     i73 = HEAP32[i74 + 24 >> 2] | 0;
     i3 = i73;
     if (i2 >>> 0 < i73 >>> 0) {
      HEAP32[i2 >> 2] = 0;
      HEAP32[i2 + 4 >> 2] = 0;
      HEAP32[i2 + 8 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = i8;
      HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + 16;
     } else {
      i4 = HEAP32[i7 >> 2] | 0;
      i73 = i2 - i4 | 0;
      i6 = i73 >> 4;
      i5 = i6 + 1 | 0;
      if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
      i2 = i3 - i4 | 0;
      if (i2 >> 4 >>> 0 < 1073741823) {
       i2 = i2 >> 3;
       i2 = i2 >>> 0 < i5 >>> 0 ? i5 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i6, i74 + 28 | 0);
      i73 = i75 + 8 | 0;
      i72 = HEAP32[i73 >> 2] | 0;
      HEAP32[i72 >> 2] = 0;
      HEAP32[i72 + 4 >> 2] = 0;
      HEAP32[i72 + 8 >> 2] = 0;
      HEAP32[i72 + 12 >> 2] = i8;
      HEAP32[i73 >> 2] = i72 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i7, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     i13 = HEAP32[i71 >> 2] | 0;
     i11 = (i13 & 1 | 0) == 0;
     i12 = (i13 & 2 | 0) == 0;
     i13 = (i13 & 4 | 0) == 0;
     i14 = i75 + 8 | 0;
     while (1) {
      if (i10 >>> 0 >= i45 >>> 0) {
       i1 = i44;
       break L5;
      }
      if (i15) {
       i4 = HEAP32[i74 >> 2] | 0;
       i8 = i4 + (i10 * 24 | 0) + 12 | 0;
       i5 = HEAP8[i8 >> 0] | 0;
       i2 = (i5 & 1) == 0;
       if (i2) {
        i6 = (i5 & 255) >>> 1;
        i3 = i8 + 1 | 0;
       } else {
        i6 = HEAP32[i4 + (i10 * 24 | 0) + 16 >> 2] | 0;
        i3 = HEAP32[i4 + (i10 * 24 | 0) + 20 >> 2] | 0;
       }
       i7 = i6 + -2 | 0;
       if ((HEAP8[i3 + i7 >> 0] | 0) == 38) i2 = i6 + -3 | 0; else {
        if (i2) {
         i3 = i8 + 1 | 0;
         i2 = (i5 & 255) >>> 1;
        } else {
         i3 = HEAP32[i4 + (i10 * 24 | 0) + 20 >> 2] | 0;
         i2 = HEAP32[i4 + (i10 * 24 | 0) + 16 >> 2] | 0;
        }
        i2 = (HEAP8[i3 + i2 + -1 >> 0] | 0) == 38 ? i7 : i6;
       }
       if (!i11) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i8, i2, 38117) | 0;
        i2 = i2 + 6 | 0;
       }
       if (!i12) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[i74 >> 2] | 0) + (i10 * 24 | 0) + 12 | 0, i2, 38124) | 0;
        i2 = i2 + 9 | 0;
       }
       if (!i13) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[i74 >> 2] | 0) + (i10 * 24 | 0) + 12 | 0, i2, 38134) | 0;
      } else {
       if (!i11) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i74 >> 2] | 0) + (i10 * 24 | 0) | 0, 38117) | 0;
       if (!i12) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i74 >> 2] | 0) + (i10 * 24 | 0) | 0, 38124) | 0;
       if (!i13) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i74 >> 2] | 0) + (i10 * 24 | 0) | 0, 38134) | 0;
      }
      i7 = HEAP32[i16 >> 2] | 0;
      i2 = i7 + -16 | 0;
      i8 = HEAP32[i74 >> 2] | 0;
      i9 = i8 + (i10 * 24 | 0) | 0;
      i3 = i7 + -12 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      i73 = HEAP32[i7 + -8 >> 2] | 0;
      i5 = i73;
      if ((i4 | 0) == (i73 | 0)) {
       i3 = HEAP32[i2 >> 2] | 0;
       i73 = i4 - i3 | 0;
       i6 = (i73 | 0) / 24 | 0;
       i4 = i6 + 1 | 0;
       if ((i73 | 0) < -24) break;
       i3 = (i5 - i3 | 0) / 24 | 0;
       if (i3 >>> 0 < 1073741823) {
        i3 = i3 << 1;
        i3 = i3 >>> 0 < i4 >>> 0 ? i4 : i3;
       } else i3 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i75, i3, i6, i7 + -4 | 0);
       i73 = HEAP32[i14 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i73, i9);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i73 + 12 | 0, i8 + (i10 * 24 | 0) + 12 | 0);
       HEAP32[i14 >> 2] = i73 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i75);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i75);
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i4, i9);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i4 + 12 | 0, i8 + (i10 * 24 | 0) + 12 | 0);
       HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 24;
      }
      i10 = i10 + 1 | 0;
     }
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i2);
    } else i1 = i73; while (0);
    break L1;
   }
  default:
   {}
  }
  i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_(i73, i72, i74) | 0;
  if ((i1 | 0) == (i73 | 0)) {
   i2 = HEAP8[i73 >> 0] | 0;
   L69 : do switch (i2 << 24 >> 24 | 0) {
   case 65:
    {
     do if (i2 << 24 >> 24 == 65 ? (i14 = i73 + 1 | 0, (i14 | 0) != (i72 | 0)) : 0) {
      i1 = HEAP8[i14 >> 0] | 0;
      if (i1 << 24 >> 24 == 95) {
       i71 = i73 + 2 | 0;
       i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i71, i72, i74) | 0;
       if ((i1 | 0) == (i71 | 0)) {
        i1 = i73;
        break;
       }
       i2 = i74 + 4 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((HEAP32[i74 >> 2] | 0) == (i3 | 0)) {
        i1 = i73;
        break;
       }
       i72 = i3 + -12 | 0;
       i70 = HEAP8[i72 >> 0] | 0;
       i71 = (i70 & 1) == 0;
       i70 = i71 ? (i70 & 255) >>> 1 : HEAP32[i3 + -8 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i75, i71 ? i72 + 1 | 0 : HEAP32[i3 + -4 >> 2] | 0, i70 >>> 0 < 2 ? i70 : 2);
       i70 = HEAP8[i75 >> 0] | 0;
       i72 = (i70 & 1) == 0;
       i70 = i72 ? (i70 & 255) >>> 1 : HEAP32[i75 + 4 >> 2] | 0;
       i71 = i70 >>> 0 > 2;
       i72 = _memcmp(i72 ? i75 + 1 | 0 : HEAP32[i75 + 8 >> 2] | 0, 38458, i71 ? 2 : i70) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i75);
       if (!(((i72 | 0) == 0 ? (i70 >>> 0 < 2 ? -1 : i71 & 1) : i72) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj((HEAP32[i2 >> 2] | 0) + -12 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[i2 >> 2] | 0) + -12 | 0, 0, 38461) | 0;
       break;
      }
      if ((i1 + -49 & 255) < 9) {
       i6 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i14, i72) | 0;
       if ((i6 | 0) == (i72 | 0)) {
        i1 = i73;
        break;
       }
       if ((HEAP8[i6 >> 0] | 0) != 95) {
        i1 = i73;
        break;
       }
       i70 = i6 + 1 | 0;
       i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i70, i72, i74) | 0;
       if ((i1 | 0) == (i70 | 0)) {
        i1 = i73;
        break;
       }
       i2 = i74 + 4 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((HEAP32[i74 >> 2] | 0) == (i3 | 0)) {
        i1 = i73;
        break;
       }
       i72 = i3 + -12 | 0;
       i69 = HEAP8[i72 >> 0] | 0;
       i70 = (i69 & 1) == 0;
       i69 = i70 ? (i69 & 255) >>> 1 : HEAP32[i3 + -8 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i71, i70 ? i72 + 1 | 0 : HEAP32[i3 + -4 >> 2] | 0, i69 >>> 0 < 2 ? i69 : 2);
       i69 = HEAP8[i71 >> 0] | 0;
       i72 = (i69 & 1) == 0;
       i69 = i72 ? (i69 & 255) >>> 1 : HEAP32[i71 + 4 >> 2] | 0;
       i70 = i69 >>> 0 > 2;
       i72 = _memcmp(i72 ? i71 + 1 | 0 : HEAP32[i71 + 8 >> 2] | 0, 38458, i70 ? 2 : i69) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i71);
       if (!(((i72 | 0) == 0 ? (i69 >>> 0 < 2 ? -1 : i70 & 1) : i72) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj((HEAP32[i2 >> 2] | 0) + -12 | 0);
       i7 = (HEAP32[i2 >> 2] | 0) + -12 | 0;
       i4 = i6 - i14 | 0;
       if (i4 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i53);
       if (i4 >>> 0 < 11) {
        HEAP8[i53 >> 0] = i4 << 1;
        i5 = i53 + 1 | 0;
       } else {
        i72 = i4 + 16 & -16;
        i5 = _malloc(i72) | 0;
        HEAP32[i53 + 8 >> 2] = i5;
        HEAP32[i53 >> 2] = i72 | 1;
        HEAP32[i53 + 4 >> 2] = i4;
       }
       i2 = i14;
       i3 = i5;
       while (1) {
        if ((i2 | 0) == (i6 | 0)) break;
        HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
        i2 = i2 + 1 | 0;
        i3 = i3 + 1 | 0;
       }
       HEAP8[i5 + i4 >> 0] = 0;
       i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i53, 0, 38458) | 0;
       HEAP32[i50 >> 2] = HEAP32[i2 >> 2];
       HEAP32[i50 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
       HEAP32[i50 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i2 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i50, 38465) | 0;
       HEAP32[i59 >> 2] = HEAP32[i2 >> 2];
       HEAP32[i59 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
       HEAP32[i59 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i2 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       i72 = HEAP8[i59 >> 0] | 0;
       i71 = (i72 & 1) == 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj(i7, 0, i71 ? i59 + 1 | 0 : HEAP32[i59 + 8 >> 2] | 0, i71 ? (i72 & 255) >>> 1 : HEAP32[i59 + 4 >> 2] | 0) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i59);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i50);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i53);
       break;
      }
      i1 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i14, i72, i74) | 0;
      if (((!((i1 | 0) == (i14 | 0) | (i1 | 0) == (i72 | 0)) ? (HEAP8[i1 >> 0] | 0) == 95 : 0) ? (i71 = i1 + 1 | 0, i48 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i71, i72, i74) | 0, (i48 | 0) != (i71 | 0)) : 0) ? (i34 = i74 + 4 | 0, i6 = HEAP32[i34 >> 2] | 0, ((i6 - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i63, i6 + -24 | 0);
       i1 = HEAP32[i34 >> 2] | 0;
       i2 = i1 + -24 | 0;
       i3 = i1;
       while (1) {
        if ((i3 | 0) == (i2 | 0)) break;
        i72 = i3 + -24 | 0;
        HEAP32[i34 >> 2] = i72;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i72);
        i3 = HEAP32[i34 >> 2] | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i66, i1 + -48 | 0);
       i1 = HEAP32[i34 >> 2] | 0;
       i10 = i1 + -24 | 0;
       do if (HEAP8[i10 >> 0] & 1) {
        i9 = i1 + -16 | 0;
        HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
        i6 = i1 + -20 | 0;
        HEAP32[i6 >> 2] = 0;
        i1 = HEAP8[i10 >> 0] | 0;
        if (!(i1 & 1)) i5 = 10; else {
         i5 = HEAP32[i10 >> 2] | 0;
         i1 = i5 & 255;
         i5 = (i5 & -2) + -1 | 0;
        }
        if (!(i1 & 1)) {
         i2 = (i1 & 255) >>> 1;
         if ((i1 & 255) < 22) {
          i8 = 1;
          i4 = 10;
          i7 = i2;
         } else {
          i8 = 1;
          i4 = (i2 + 16 & 240) + -1 | 0;
          i7 = i2;
         }
        } else {
         i8 = 0;
         i4 = 10;
         i7 = 0;
        }
        if ((i4 | 0) != (i5 | 0)) {
         if ((i4 | 0) == 10) {
          i3 = i10 + 1 | 0;
          i2 = HEAP32[i9 >> 2] | 0;
          if (i8) {
           _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
           _free(i2);
          } else {
           HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
           _free(i2);
          }
          HEAP8[i10 >> 0] = i7 << 1;
          break;
         }
         i2 = i4 + 1 | 0;
         i3 = _malloc(i2) | 0;
         if (!(i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0)) {
          if (i8) _memcpy(i3 | 0, i10 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
           i72 = HEAP32[i9 >> 2] | 0;
           HEAP8[i3 >> 0] = HEAP8[i72 >> 0] | 0;
           _free(i72);
          }
          HEAP32[i10 >> 2] = i2 | 1;
          HEAP32[i6 >> 2] = i7;
          HEAP32[i9 >> 2] = i3;
         }
        }
       } else {
        HEAP8[i10 + 1 >> 0] = 0;
        HEAP8[i10 >> 0] = 0;
       } while (0);
       HEAP32[i10 >> 2] = HEAP32[i63 >> 2];
       HEAP32[i10 + 4 >> 2] = HEAP32[i63 + 4 >> 2];
       HEAP32[i10 + 8 >> 2] = HEAP32[i63 + 8 >> 2];
       i1 = 0;
       while (1) {
        if ((i1 | 0) == 3) break;
        HEAP32[i63 + (i1 << 2) >> 2] = 0;
        i1 = i1 + 1 | 0;
       }
       i3 = i63 + 12 | 0;
       i70 = HEAP8[i3 >> 0] | 0;
       i72 = (i70 & 1) == 0;
       i4 = i63 + 16 | 0;
       i70 = i72 ? (i70 & 255) >>> 1 : HEAP32[i4 >> 2] | 0;
       i5 = i63 + 20 | 0;
       i6 = i3 + 1 | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i56, i72 ? i6 : HEAP32[i5 >> 2] | 0, i70 >>> 0 < 2 ? i70 : 2);
       i70 = HEAP8[i56 >> 0] | 0;
       i72 = (i70 & 1) == 0;
       i70 = i72 ? (i70 & 255) >>> 1 : HEAP32[i56 + 4 >> 2] | 0;
       i71 = i70 >>> 0 > 2;
       i72 = _memcmp(i72 ? i56 + 1 | 0 : HEAP32[i56 + 8 >> 2] | 0, 38458, i71 ? 2 : i70) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i56);
       if (!(((i72 | 0) == 0 ? (i70 >>> 0 < 2 ? -1 : i71 & 1) : i72) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj(i3);
       i7 = HEAP32[i34 >> 2] | 0;
       i10 = i7 + -12 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i47, i66);
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i47, 0, 38458) | 0;
       HEAP32[i65 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i65 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i65 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i65, 38465) | 0;
       HEAP32[i64 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i64 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i64 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       i1 = HEAP8[i3 >> 0] | 0;
       i2 = (i1 & 1) == 0;
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i64, i2 ? i6 : HEAP32[i5 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i4 >> 2] | 0) | 0;
       HEAP32[i62 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i62 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i62 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       do if (HEAP8[i10 >> 0] & 1) {
        i9 = i7 + -4 | 0;
        HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
        i6 = i7 + -8 | 0;
        HEAP32[i6 >> 2] = 0;
        i1 = HEAP8[i10 >> 0] | 0;
        if (!(i1 & 1)) i5 = 10; else {
         i5 = HEAP32[i10 >> 2] | 0;
         i1 = i5 & 255;
         i5 = (i5 & -2) + -1 | 0;
        }
        do if (!(i1 & 1)) {
         i2 = (i1 & 255) >>> 1;
         if ((i1 & 255) < 22) {
          i8 = 1;
          i4 = 10;
          i7 = i2;
          break;
         }
         i8 = 1;
         i4 = (i2 + 16 & 240) + -1 | 0;
         i7 = i2;
        } else {
         i8 = 0;
         i4 = 10;
         i7 = 0;
        } while (0);
        if ((i4 | 0) != (i5 | 0)) {
         if ((i4 | 0) == 10) {
          i3 = i10 + 1 | 0;
          i2 = HEAP32[i9 >> 2] | 0;
          if (i8) {
           _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
           _free(i2);
          } else {
           HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
           _free(i2);
          }
          HEAP8[i10 >> 0] = i7 << 1;
          break;
         }
         i2 = i4 + 1 | 0;
         i3 = _malloc(i2) | 0;
         if (i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0) break;
         if (i8) _memcpy(i3 | 0, i10 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
          i72 = HEAP32[i9 >> 2] | 0;
          HEAP8[i3 >> 0] = HEAP8[i72 >> 0] | 0;
          _free(i72);
         }
         HEAP32[i10 >> 2] = i2 | 1;
         HEAP32[i6 >> 2] = i7;
         HEAP32[i9 >> 2] = i3;
        }
       } else {
        HEAP8[i10 + 1 >> 0] = 0;
        HEAP8[i10 >> 0] = 0;
       } while (0);
       HEAP32[i10 >> 2] = HEAP32[i62 >> 2];
       HEAP32[i10 + 4 >> 2] = HEAP32[i62 + 4 >> 2];
       HEAP32[i10 + 8 >> 2] = HEAP32[i62 + 8 >> 2];
       i1 = 0;
       while (1) {
        if ((i1 | 0) == 3) break;
        HEAP32[i62 + (i1 << 2) >> 2] = 0;
        i1 = i1 + 1 | 0;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i62);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i64);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i65);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i47);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i66);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i63);
       i1 = i48;
      } else i1 = i73;
     } else i1 = i73; while (0);
     if ((i1 | 0) == (i73 | 0)) {
      i1 = i73;
      break L1;
     }
     i2 = HEAP32[i74 + 4 >> 2] | 0;
     if ((HEAP32[i74 >> 2] | 0) == (i2 | 0)) {
      i1 = i73;
      break L1;
     }
     i6 = i74 + 16 | 0;
     HEAP32[i55 >> 2] = HEAP32[i74 + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i57, i2 + -24 | 0, i55);
     i2 = i74 + 20 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i73 = HEAP32[i74 + 24 >> 2] | 0;
     i4 = i73;
     if (i3 >>> 0 < i73 >>> 0) {
      HEAP32[i3 + 12 >> 2] = HEAP32[i57 + 12 >> 2];
      HEAP32[i3 >> 2] = HEAP32[i57 >> 2];
      i75 = i57 + 4 | 0;
      HEAP32[i3 + 4 >> 2] = HEAP32[i75 >> 2];
      i74 = i57 + 8 | 0;
      HEAP32[i3 + 8 >> 2] = HEAP32[i74 >> 2];
      HEAP32[i74 >> 2] = 0;
      HEAP32[i75 >> 2] = 0;
      HEAP32[i57 >> 2] = 0;
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
     } else {
      i2 = HEAP32[i6 >> 2] | 0;
      i73 = i3 - i2 | 0;
      i5 = i73 >> 4;
      i3 = i5 + 1 | 0;
      if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
      i2 = i4 - i2 | 0;
      if (i2 >> 4 >>> 0 < 1073741823) {
       i2 = i2 >> 3;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i5, i74 + 28 | 0);
      i74 = i75 + 8 | 0;
      i73 = HEAP32[i74 >> 2] | 0;
      HEAP32[i73 + 12 >> 2] = HEAP32[i57 + 12 >> 2];
      HEAP32[i73 >> 2] = HEAP32[i57 >> 2];
      i72 = i57 + 4 | 0;
      HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
      i71 = i57 + 8 | 0;
      HEAP32[i73 + 8 >> 2] = HEAP32[i71 >> 2];
      HEAP32[i71 >> 2] = 0;
      HEAP32[i72 >> 2] = 0;
      HEAP32[i57 >> 2] = 0;
      HEAP32[i74 >> 2] = i73 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i57);
     break L1;
    }
   case 67:
    {
     i71 = i73 + 1 | 0;
     i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i71, i72, i74) | 0;
     if ((i1 | 0) == (i71 | 0)) {
      i1 = i73;
      break L1;
     }
     i3 = i74 + 4 | 0;
     i2 = HEAP32[i3 >> 2] | 0;
     if ((HEAP32[i74 >> 2] | 0) == (i2 | 0)) {
      i1 = i73;
      break L1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -24 | 0, 39699) | 0;
     i6 = i74 + 16 | 0;
     i2 = (HEAP32[i3 >> 2] | 0) + -24 | 0;
     HEAP32[i8 >> 2] = HEAP32[i74 + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i20, i2, i8);
     i2 = i74 + 20 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i73 = HEAP32[i74 + 24 >> 2] | 0;
     i4 = i73;
     if (i3 >>> 0 < i73 >>> 0) {
      HEAP32[i3 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
      HEAP32[i3 >> 2] = HEAP32[i20 >> 2];
      i75 = i20 + 4 | 0;
      HEAP32[i3 + 4 >> 2] = HEAP32[i75 >> 2];
      i74 = i20 + 8 | 0;
      HEAP32[i3 + 8 >> 2] = HEAP32[i74 >> 2];
      HEAP32[i74 >> 2] = 0;
      HEAP32[i75 >> 2] = 0;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
     } else {
      i2 = HEAP32[i6 >> 2] | 0;
      i73 = i3 - i2 | 0;
      i5 = i73 >> 4;
      i3 = i5 + 1 | 0;
      if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
      i2 = i4 - i2 | 0;
      if (i2 >> 4 >>> 0 < 1073741823) {
       i2 = i2 >> 3;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i5, i74 + 28 | 0);
      i74 = i75 + 8 | 0;
      i73 = HEAP32[i74 >> 2] | 0;
      HEAP32[i73 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
      HEAP32[i73 >> 2] = HEAP32[i20 >> 2];
      i72 = i20 + 4 | 0;
      HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
      i71 = i20 + 8 | 0;
      HEAP32[i73 + 8 >> 2] = HEAP32[i71 >> 2];
      HEAP32[i71 >> 2] = 0;
      HEAP32[i72 >> 2] = 0;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i74 >> 2] = i73 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i20);
     break L1;
    }
   case 70:
    {
     do if (i2 << 24 >> 24 == 70) {
      i1 = i73 + 1 | 0;
      if ((i1 | 0) != (i72 | 0)) {
       if ((HEAP8[i1 >> 0] | 0) == 89) {
        i1 = i73 + 2 | 0;
        if ((i1 | 0) == (i72 | 0)) break;
       }
       i3 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i72, i74) | 0;
       if ((i3 | 0) != (i1 | 0)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i75, 38467, 1);
        i11 = i74 + 4 | 0;
        i10 = i75 + 4 | 0;
        i7 = i71 + 8 | 0;
        i8 = i71 + 1 | 0;
        i9 = i71 + 4 | 0;
        i2 = 0;
        i1 = i3;
        L225 : while (1) L227 : while (1) {
         if ((i1 | 0) == (i72 | 0)) {
          i67 = 170;
          break L225;
         }
         switch (HEAP8[i1 >> 0] | 0) {
         case 69:
          {
           i67 = 174;
           break L225;
          }
         case 118:
          {
           i1 = i1 + 1 | 0;
           continue L227;
          }
         case 82:
          {
           i3 = i1 + 1 | 0;
           if ((i3 | 0) != (i72 | 0) ? (HEAP8[i3 >> 0] | 0) == 69 : 0) {
            i2 = 1;
            i1 = i3;
            continue L225;
           }
           break;
          }
         case 79:
          {
           i3 = i1 + 1 | 0;
           if ((i3 | 0) != (i72 | 0) ? (HEAP8[i3 >> 0] | 0) == 69 : 0) {
            i2 = 2;
            i1 = i3;
            continue L225;
           }
           break;
          }
         default:
          {}
         }
         i3 = ((HEAP32[i11 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
         i5 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i72, i74) | 0;
         i6 = ((HEAP32[i11 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
         if ((i5 | 0) == (i1 | 0) | (i5 | 0) == (i72 | 0)) break L225; else i1 = i3;
         while (1) {
          if (i1 >>> 0 >= i6 >>> 0) break;
          i70 = HEAP8[i75 >> 0] | 0;
          if (((i70 & 1) == 0 ? (i70 & 255) >>> 1 : HEAP32[i10 >> 2] | 0) >>> 0 > 1) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i75, 39101) | 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i71, (HEAP32[i74 >> 2] | 0) + (i1 * 24 | 0) | 0);
          i70 = HEAP8[i71 >> 0] | 0;
          i69 = (i70 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i75, i69 ? i8 : HEAP32[i7 >> 2] | 0, i69 ? (i70 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i71);
          i1 = i1 + 1 | 0;
         }
         while (1) {
          if (i3 >>> 0 >= i6 >>> 0) {
           i1 = i5;
           continue L227;
          }
          i4 = HEAP32[i11 >> 2] | 0;
          i1 = i4 + -24 | 0;
          while (1) {
           if ((i4 | 0) == (i1 | 0)) break;
           i70 = i4 + -24 | 0;
           HEAP32[i11 >> 2] = i70;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i70);
           i4 = HEAP32[i11 >> 2] | 0;
          }
          i3 = i3 + 1 | 0;
         }
        }
        L250 : do if ((i67 | 0) == 170) {
         i2 = HEAP32[i11 >> 2] | 0;
         i1 = i2 + -24 | 0;
         while (1) {
          if ((i2 | 0) == (i1 | 0)) break L250;
          i74 = i2 + -24 | 0;
          HEAP32[i11 >> 2] = i74;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i74);
          i2 = HEAP32[i11 >> 2] | 0;
         }
        } else if ((i67 | 0) == 174) {
         i1 = i1 + 1 | 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i75, 38469) | 0;
         switch (i2 | 0) {
         case 1:
          {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i75, 39708) | 0;
           break;
          }
         case 2:
          {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i75, 39711) | 0;
           break;
          }
         default:
          {}
         }
         i2 = HEAP32[i11 >> 2] | 0;
         if ((HEAP32[i74 >> 2] | 0) != (i2 | 0)) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -24 | 0, 39558) | 0;
          i72 = HEAP8[i75 >> 0] | 0;
          i71 = (i72 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj((HEAP32[i11 >> 2] | 0) + -12 | 0, 0, i71 ? i75 + 1 | 0 : HEAP32[i75 + 8 >> 2] | 0, i71 ? (i72 & 255) >>> 1 : HEAP32[i10 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i75);
          if ((i1 | 0) == (i73 | 0)) {
           i1 = i73;
           break L1;
          }
          i2 = HEAP32[i11 >> 2] | 0;
          if ((HEAP32[i74 >> 2] | 0) == (i2 | 0)) {
           i1 = i73;
           break L1;
          }
          i6 = i74 + 16 | 0;
          HEAP32[i36 >> 2] = HEAP32[i74 + 12 >> 2];
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i40, i2 + -24 | 0, i36);
          i2 = i74 + 20 | 0;
          i3 = HEAP32[i2 >> 2] | 0;
          i73 = HEAP32[i74 + 24 >> 2] | 0;
          i4 = i73;
          if (i3 >>> 0 < i73 >>> 0) {
           HEAP32[i3 + 12 >> 2] = HEAP32[i40 + 12 >> 2];
           HEAP32[i3 >> 2] = HEAP32[i40 >> 2];
           i75 = i40 + 4 | 0;
           HEAP32[i3 + 4 >> 2] = HEAP32[i75 >> 2];
           i74 = i40 + 8 | 0;
           HEAP32[i3 + 8 >> 2] = HEAP32[i74 >> 2];
           HEAP32[i74 >> 2] = 0;
           HEAP32[i75 >> 2] = 0;
           HEAP32[i40 >> 2] = 0;
           HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
          } else {
           i2 = HEAP32[i6 >> 2] | 0;
           i73 = i3 - i2 | 0;
           i5 = i73 >> 4;
           i3 = i5 + 1 | 0;
           if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
           i2 = i4 - i2 | 0;
           if (i2 >> 4 >>> 0 < 1073741823) {
            i2 = i2 >> 3;
            i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
           } else i2 = 2147483647;
           __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i5, i74 + 28 | 0);
           i74 = i75 + 8 | 0;
           i73 = HEAP32[i74 >> 2] | 0;
           HEAP32[i73 + 12 >> 2] = HEAP32[i40 + 12 >> 2];
           HEAP32[i73 >> 2] = HEAP32[i40 >> 2];
           i72 = i40 + 4 | 0;
           HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
           i71 = i40 + 8 | 0;
           HEAP32[i73 + 8 >> 2] = HEAP32[i71 >> 2];
           HEAP32[i71 >> 2] = 0;
           HEAP32[i72 >> 2] = 0;
           HEAP32[i40 >> 2] = 0;
           HEAP32[i74 >> 2] = i73 + 16;
           __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i75);
           __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
          }
          __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i40);
          break L1;
         }
        } while (0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i75);
        break;
       }
      }
      i1 = i73;
      break L1;
     } while (0);
     i1 = i73;
     break L1;
    }
   case 71:
    {
     i71 = i73 + 1 | 0;
     i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i71, i72, i74) | 0;
     if ((i1 | 0) == (i71 | 0)) {
      i1 = i73;
      break L1;
     }
     i3 = i74 + 4 | 0;
     i2 = HEAP32[i3 >> 2] | 0;
     if ((HEAP32[i74 >> 2] | 0) == (i2 | 0)) {
      i1 = i73;
      break L1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -24 | 0, 39715) | 0;
     i6 = i74 + 16 | 0;
     i2 = (HEAP32[i3 >> 2] | 0) + -24 | 0;
     HEAP32[i9 >> 2] = HEAP32[i74 + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i21, i2, i9);
     i2 = i74 + 20 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i73 = HEAP32[i74 + 24 >> 2] | 0;
     i4 = i73;
     if (i3 >>> 0 < i73 >>> 0) {
      HEAP32[i3 + 12 >> 2] = HEAP32[i21 + 12 >> 2];
      HEAP32[i3 >> 2] = HEAP32[i21 >> 2];
      i75 = i21 + 4 | 0;
      HEAP32[i3 + 4 >> 2] = HEAP32[i75 >> 2];
      i74 = i21 + 8 | 0;
      HEAP32[i3 + 8 >> 2] = HEAP32[i74 >> 2];
      HEAP32[i74 >> 2] = 0;
      HEAP32[i75 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
     } else {
      i2 = HEAP32[i6 >> 2] | 0;
      i73 = i3 - i2 | 0;
      i5 = i73 >> 4;
      i3 = i5 + 1 | 0;
      if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
      i2 = i4 - i2 | 0;
      if (i2 >> 4 >>> 0 < 1073741823) {
       i2 = i2 >> 3;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i5, i74 + 28 | 0);
      i74 = i75 + 8 | 0;
      i73 = HEAP32[i74 >> 2] | 0;
      HEAP32[i73 + 12 >> 2] = HEAP32[i21 + 12 >> 2];
      HEAP32[i73 >> 2] = HEAP32[i21 >> 2];
      i72 = i21 + 4 | 0;
      HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
      i71 = i21 + 8 | 0;
      HEAP32[i73 + 8 >> 2] = HEAP32[i71 >> 2];
      HEAP32[i71 >> 2] = 0;
      HEAP32[i72 >> 2] = 0;
      HEAP32[i21 >> 2] = 0;
      HEAP32[i74 >> 2] = i73 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i21);
     break L1;
    }
   case 77:
    {
     if (((i2 << 24 >> 24 == 77 ? (i70 = i73 + 1 | 0, i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i70, i72, i74) | 0, (i4 | 0) != (i70 | 0)) : 0) ? (i58 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i4, i72, i74) | 0, (i58 | 0) != (i4 | 0)) : 0) ? (i46 = i74 + 4 | 0, i5 = HEAP32[i46 >> 2] | 0, ((i5 - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i75, i5 + -24 | 0);
      i1 = HEAP32[i46 >> 2] | 0;
      i2 = i1 + -24 | 0;
      i3 = i1;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break;
       i72 = i3 + -24 | 0;
       HEAP32[i46 >> 2] = i72;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i72);
       i3 = HEAP32[i46 >> 2] | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i71, i1 + -48 | 0);
      i11 = i75 + 12 | 0;
      i3 = HEAP32[i46 >> 2] | 0;
      i10 = i3 + -24 | 0;
      L299 : do if ((HEAP8[((HEAP8[i11 >> 0] & 1) == 0 ? i11 + 1 | 0 : HEAP32[i75 + 20 >> 2] | 0) >> 0] | 0) == 40) {
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i75, 38467) | 0;
       HEAP32[i53 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i53 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i53 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i63, i71);
       i1 = HEAP8[i63 >> 0] | 0;
       i2 = (i1 & 1) == 0;
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i53, i2 ? i63 + 1 | 0 : HEAP32[i63 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i63 + 4 >> 2] | 0) | 0;
       HEAP32[i50 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i50 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i50 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i50, 39726) | 0;
       HEAP32[i59 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i59 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i59 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       do if (HEAP8[i10 >> 0] & 1) {
        i9 = i3 + -16 | 0;
        HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
        i6 = i3 + -20 | 0;
        HEAP32[i6 >> 2] = 0;
        i1 = HEAP8[i10 >> 0] | 0;
        if (!(i1 & 1)) i5 = 10; else {
         i5 = HEAP32[i10 >> 2] | 0;
         i1 = i5 & 255;
         i5 = (i5 & -2) + -1 | 0;
        }
        if (!(i1 & 1)) {
         i2 = (i1 & 255) >>> 1;
         if ((i1 & 255) < 22) {
          i8 = 1;
          i4 = 10;
          i7 = i2;
         } else {
          i8 = 1;
          i4 = (i2 + 16 & 240) + -1 | 0;
          i7 = i2;
         }
        } else {
         i8 = 0;
         i4 = 10;
         i7 = 0;
        }
        if ((i4 | 0) != (i5 | 0)) {
         if ((i4 | 0) == 10) {
          i3 = i10 + 1 | 0;
          i2 = HEAP32[i9 >> 2] | 0;
          if (i8) {
           _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
           _free(i2);
          } else {
           HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
           _free(i2);
          }
          HEAP8[i10 >> 0] = i7 << 1;
          break;
         }
         i2 = i4 + 1 | 0;
         i3 = _malloc(i2) | 0;
         if (!(i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0)) {
          if (i8) _memcpy(i3 | 0, i10 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
           i72 = HEAP32[i9 >> 2] | 0;
           HEAP8[i3 >> 0] = HEAP8[i72 >> 0] | 0;
           _free(i72);
          }
          HEAP32[i10 >> 2] = i2 | 1;
          HEAP32[i6 >> 2] = i7;
          HEAP32[i9 >> 2] = i3;
         }
        }
       } else {
        HEAP8[i10 + 1 >> 0] = 0;
        HEAP8[i10 >> 0] = 0;
       } while (0);
       HEAP32[i10 >> 2] = HEAP32[i59 >> 2];
       HEAP32[i10 + 4 >> 2] = HEAP32[i59 + 4 >> 2];
       HEAP32[i10 + 8 >> 2] = HEAP32[i59 + 8 >> 2];
       i1 = 0;
       while (1) {
        if ((i1 | 0) == 3) break;
        HEAP32[i59 + (i1 << 2) >> 2] = 0;
        i1 = i1 + 1 | 0;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i59);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i50);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i63);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i53);
       i3 = HEAP32[i46 >> 2] | 0;
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i11, 0, 38469) | 0;
       HEAP32[i66 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i66 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i66 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       i10 = i3 + -12 | 0;
       do if (HEAP8[i10 >> 0] & 1) {
        i9 = i3 + -4 | 0;
        HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
        i6 = i3 + -8 | 0;
        HEAP32[i6 >> 2] = 0;
        i1 = HEAP8[i10 >> 0] | 0;
        if (!(i1 & 1)) i5 = 10; else {
         i5 = HEAP32[i10 >> 2] | 0;
         i1 = i5 & 255;
         i5 = (i5 & -2) + -1 | 0;
        }
        if (!(i1 & 1)) {
         i2 = (i1 & 255) >>> 1;
         if ((i1 & 255) < 22) {
          i8 = 1;
          i4 = 10;
          i7 = i2;
         } else {
          i8 = 1;
          i4 = (i2 + 16 & 240) + -1 | 0;
          i7 = i2;
         }
        } else {
         i8 = 0;
         i4 = 10;
         i7 = 0;
        }
        if ((i4 | 0) != (i5 | 0)) {
         if ((i4 | 0) == 10) {
          i3 = i10 + 1 | 0;
          i2 = HEAP32[i9 >> 2] | 0;
          if (i8) {
           _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
           _free(i2);
          } else {
           HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
           _free(i2);
          }
          HEAP8[i10 >> 0] = i7 << 1;
          break;
         }
         i2 = i4 + 1 | 0;
         i3 = _malloc(i2) | 0;
         if (!(i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0)) {
          if (i8) _memcpy(i3 | 0, i10 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
           i72 = HEAP32[i9 >> 2] | 0;
           HEAP8[i3 >> 0] = HEAP8[i72 >> 0] | 0;
           _free(i72);
          }
          HEAP32[i10 >> 2] = i2 | 1;
          HEAP32[i6 >> 2] = i7;
          HEAP32[i9 >> 2] = i3;
         }
        }
       } else {
        HEAP8[i10 + 1 >> 0] = 0;
        HEAP8[i10 >> 0] = 0;
       } while (0);
       HEAP32[i10 >> 2] = HEAP32[i66 >> 2];
       HEAP32[i10 + 4 >> 2] = HEAP32[i66 + 4 >> 2];
       HEAP32[i10 + 8 >> 2] = HEAP32[i66 + 8 >> 2];
       i1 = 0;
       while (1) {
        if ((i1 | 0) == 3) break;
        HEAP32[i66 + (i1 << 2) >> 2] = 0;
        i1 = i1 + 1 | 0;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i66);
      } else {
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i75, 39558) | 0;
       HEAP32[i64 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i64 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i64 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i65, i71);
       i1 = HEAP8[i65 >> 0] | 0;
       i2 = (i1 & 1) == 0;
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i64, i2 ? i65 + 1 | 0 : HEAP32[i65 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i65 + 4 >> 2] | 0) | 0;
       HEAP32[i62 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i62 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i62 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i62, 39726) | 0;
       HEAP32[i56 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i56 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i56 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       do if (HEAP8[i10 >> 0] & 1) {
        i9 = i3 + -16 | 0;
        HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
        i6 = i3 + -20 | 0;
        HEAP32[i6 >> 2] = 0;
        i1 = HEAP8[i10 >> 0] | 0;
        if (!(i1 & 1)) i5 = 10; else {
         i1 = HEAP32[i10 >> 2] | 0;
         i5 = (i1 & -2) + -1 | 0;
         i1 = i1 & 255;
        }
        if (!(i1 & 1)) {
         i2 = (i1 & 255) >>> 1;
         if ((i1 & 255) < 22) {
          i7 = i2;
          i8 = 1;
          i4 = 10;
         } else {
          i7 = i2;
          i8 = 1;
          i4 = (i2 + 16 & 240) + -1 | 0;
         }
        } else {
         i7 = 0;
         i8 = 0;
         i4 = 10;
        }
        if ((i4 | 0) != (i5 | 0)) {
         if ((i4 | 0) == 10) {
          i3 = i10 + 1 | 0;
          i2 = HEAP32[i9 >> 2] | 0;
          if (i8) {
           _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
           _free(i2);
          } else {
           HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
           _free(i2);
          }
          HEAP8[i10 >> 0] = i7 << 1;
          break;
         }
         i2 = i4 + 1 | 0;
         i3 = _malloc(i2) | 0;
         if (!(i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0)) {
          if (i8) _memcpy(i3 | 0, i10 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
           i72 = HEAP32[i9 >> 2] | 0;
           HEAP8[i3 >> 0] = HEAP8[i72 >> 0] | 0;
           _free(i72);
          }
          HEAP32[i10 >> 2] = i2 | 1;
          HEAP32[i6 >> 2] = i7;
          HEAP32[i9 >> 2] = i3;
         }
        }
       } else {
        HEAP8[i10 + 1 >> 0] = 0;
        HEAP8[i10 >> 0] = 0;
       } while (0);
       HEAP32[i10 >> 2] = HEAP32[i56 >> 2];
       HEAP32[i10 + 4 >> 2] = HEAP32[i56 + 4 >> 2];
       HEAP32[i10 + 8 >> 2] = HEAP32[i56 + 8 >> 2];
       i1 = 0;
       while (1) {
        if ((i1 | 0) == 3) break;
        HEAP32[i56 + (i1 << 2) >> 2] = 0;
        i1 = i1 + 1 | 0;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i56);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i62);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i65);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i64);
       i1 = HEAP32[i46 >> 2] | 0;
       i10 = i1 + -12 | 0;
       do if (HEAP8[i10 >> 0] & 1) {
        i9 = i1 + -4 | 0;
        HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
        i6 = i1 + -8 | 0;
        HEAP32[i6 >> 2] = 0;
        i1 = HEAP8[i10 >> 0] | 0;
        if (!(i1 & 1)) i5 = 10; else {
         i5 = HEAP32[i10 >> 2] | 0;
         i1 = i5 & 255;
         i5 = (i5 & -2) + -1 | 0;
        }
        if (!(i1 & 1)) {
         i2 = (i1 & 255) >>> 1;
         if ((i1 & 255) < 22) {
          i4 = 10;
          i7 = i2;
          i8 = 1;
         } else {
          i4 = (i2 + 16 & 240) + -1 | 0;
          i7 = i2;
          i8 = 1;
         }
        } else {
         i4 = 10;
         i7 = 0;
         i8 = 0;
        }
        if ((i4 | 0) != (i5 | 0)) {
         if ((i4 | 0) == 10) {
          i3 = i10 + 1 | 0;
          i2 = HEAP32[i9 >> 2] | 0;
          if (i8) {
           _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
           _free(i2);
          } else {
           HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
           _free(i2);
          }
          HEAP8[i10 >> 0] = i7 << 1;
          break;
         }
         i2 = i4 + 1 | 0;
         i3 = _malloc(i2) | 0;
         if (!(i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0)) {
          if (i8) _memcpy(i3 | 0, i10 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
           i72 = HEAP32[i9 >> 2] | 0;
           HEAP8[i3 >> 0] = HEAP8[i72 >> 0] | 0;
           _free(i72);
          }
          HEAP32[i10 >> 2] = i2 | 1;
          HEAP32[i6 >> 2] = i7;
          HEAP32[i9 >> 2] = i3;
         }
        }
       } else {
        HEAP8[i10 + 1 >> 0] = 0;
        HEAP8[i10 >> 0] = 0;
       } while (0);
       HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
       HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
       HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
       i1 = 0;
       while (1) {
        if ((i1 | 0) == 3) break L299;
        HEAP32[i11 + (i1 << 2) >> 2] = 0;
        i1 = i1 + 1 | 0;
       }
      } while (0);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i71);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i75);
      i1 = i58;
     } else i1 = i73;
     if ((i1 | 0) == (i73 | 0)) {
      i1 = i73;
      break L1;
     }
     i2 = HEAP32[i74 + 4 >> 2] | 0;
     if ((HEAP32[i74 >> 2] | 0) == (i2 | 0)) {
      i1 = i73;
      break L1;
     }
     i6 = i74 + 16 | 0;
     HEAP32[i60 >> 2] = HEAP32[i74 + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i61, i2 + -24 | 0, i60);
     i2 = i74 + 20 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i73 = HEAP32[i74 + 24 >> 2] | 0;
     i4 = i73;
     if (i3 >>> 0 < i73 >>> 0) {
      HEAP32[i3 + 12 >> 2] = HEAP32[i61 + 12 >> 2];
      HEAP32[i3 >> 2] = HEAP32[i61 >> 2];
      i75 = i61 + 4 | 0;
      HEAP32[i3 + 4 >> 2] = HEAP32[i75 >> 2];
      i74 = i61 + 8 | 0;
      HEAP32[i3 + 8 >> 2] = HEAP32[i74 >> 2];
      HEAP32[i74 >> 2] = 0;
      HEAP32[i75 >> 2] = 0;
      HEAP32[i61 >> 2] = 0;
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
     } else {
      i2 = HEAP32[i6 >> 2] | 0;
      i73 = i3 - i2 | 0;
      i5 = i73 >> 4;
      i3 = i5 + 1 | 0;
      if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
      i2 = i4 - i2 | 0;
      if (i2 >> 4 >>> 0 < 1073741823) {
       i2 = i2 >> 3;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i5, i74 + 28 | 0);
      i74 = i75 + 8 | 0;
      i73 = HEAP32[i74 >> 2] | 0;
      HEAP32[i73 + 12 >> 2] = HEAP32[i61 + 12 >> 2];
      HEAP32[i73 >> 2] = HEAP32[i61 >> 2];
      i72 = i61 + 4 | 0;
      HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
      i71 = i61 + 8 | 0;
      HEAP32[i73 + 8 >> 2] = HEAP32[i71 >> 2];
      HEAP32[i71 >> 2] = 0;
      HEAP32[i72 >> 2] = 0;
      HEAP32[i61 >> 2] = 0;
      HEAP32[i74 >> 2] = i73 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i61);
     break L1;
    }
   case 79:
    {
     i15 = i74 + 4 | 0;
     i9 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
     i71 = i73 + 1 | 0;
     i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i71, i72, i74) | 0;
     i15 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
     if ((i1 | 0) == (i71 | 0)) {
      i1 = i73;
      break L1;
     }
     i7 = i74 + 16 | 0;
     i8 = HEAP32[i74 + 12 >> 2] | 0;
     i16 = i74 + 20 | 0;
     i2 = HEAP32[i16 >> 2] | 0;
     i71 = HEAP32[i74 + 24 >> 2] | 0;
     i3 = i71;
     if (i2 >>> 0 < i71 >>> 0) {
      HEAP32[i2 >> 2] = 0;
      HEAP32[i2 + 4 >> 2] = 0;
      HEAP32[i2 + 8 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = i8;
      HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + 16;
     } else {
      i4 = HEAP32[i7 >> 2] | 0;
      i71 = i2 - i4 | 0;
      i6 = i71 >> 4;
      i5 = i6 + 1 | 0;
      if ((i71 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
      i2 = i3 - i4 | 0;
      if (i2 >> 4 >>> 0 < 1073741823) {
       i2 = i2 >> 3;
       i2 = i2 >>> 0 < i5 >>> 0 ? i5 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i6, i74 + 28 | 0);
      i71 = i75 + 8 | 0;
      i67 = HEAP32[i71 >> 2] | 0;
      HEAP32[i67 >> 2] = 0;
      HEAP32[i67 + 4 >> 2] = 0;
      HEAP32[i67 + 8 >> 2] = 0;
      HEAP32[i67 + 12 >> 2] = i8;
      HEAP32[i71 >> 2] = i67 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i7, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     i11 = i38 + 4 | 0;
     i12 = i38 + 8 | 0;
     i13 = i38 + 1 | 0;
     i14 = i75 + 8 | 0;
     while (1) {
      if (i9 >>> 0 >= i15 >>> 0) break L1;
      i71 = HEAP32[i74 >> 2] | 0;
      i67 = i71 + (i9 * 24 | 0) + 12 | 0;
      i66 = HEAP8[i67 >> 0] | 0;
      i3 = (i66 & 1) == 0;
      i66 = i3 ? (i66 & 255) >>> 1 : HEAP32[i71 + (i9 * 24 | 0) + 16 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i38, i3 ? i67 + 1 | 0 : HEAP32[i71 + (i9 * 24 | 0) + 20 >> 2] | 0, i66 >>> 0 < 2 ? i66 : 2);
      i66 = HEAP8[i38 >> 0] | 0;
      i71 = (i66 & 1) == 0;
      i66 = i71 ? (i66 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
      i67 = i66 >>> 0 > 2;
      i71 = _memcmp(i71 ? i13 : HEAP32[i12 >> 2] | 0, 38458, i67 ? 2 : i66) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i38);
      i3 = HEAP32[i74 >> 2] | 0;
      if (((i71 | 0) == 0 ? (i66 >>> 0 < 2 ? -1 : i67 & 1) : i71) | 0) {
       i2 = HEAP16[i3 + (i9 * 24 | 0) + 12 >> 1] | 0;
       if (!(i2 & 1)) i2 = (i2 & 65535) >>> 8 & 255; else i2 = HEAP8[HEAP32[i3 + (i9 * 24 | 0) + 20 >> 2] >> 0] | 0;
       if (i2 << 24 >> 24 == 40) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i3 + (i9 * 24 | 0) | 0, 38467) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[i74 >> 2] | 0) + (i9 * 24 | 0) + 12 | 0, 0, 38469) | 0;
       }
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i3 + (i9 * 24 | 0) | 0, 38519) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[i74 >> 2] | 0) + (i9 * 24 | 0) + 12 | 0, 0, 38469) | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i74 >> 2] | 0) + (i9 * 24 | 0) | 0, 38511) | 0;
      i6 = HEAP32[i16 >> 2] | 0;
      i7 = i6 + -16 | 0;
      i8 = HEAP32[i74 >> 2] | 0;
      i10 = i8 + (i9 * 24 | 0) | 0;
      i2 = i6 + -12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      i71 = HEAP32[i6 + -8 >> 2] | 0;
      i4 = i71;
      if ((i3 | 0) == (i71 | 0)) {
       i2 = HEAP32[i7 >> 2] | 0;
       i71 = i3 - i2 | 0;
       i5 = (i71 | 0) / 24 | 0;
       i3 = i5 + 1 | 0;
       if ((i71 | 0) < -24) {
        i1 = i7;
        break;
       }
       i2 = (i4 - i2 | 0) / 24 | 0;
       if (i2 >>> 0 < 1073741823) {
        i2 = i2 << 1;
        i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
       } else i2 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i75, i2, i5, i6 + -4 | 0);
       i71 = HEAP32[i14 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i71, i10);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i71 + 12 | 0, i8 + (i9 * 24 | 0) + 12 | 0);
       HEAP32[i14 >> 2] = i71 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i75);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i75);
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i3, i10);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i3 + 12 | 0, i8 + (i9 * 24 | 0) + 12 | 0);
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
      }
      i9 = i9 + 1 | 0;
     }
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i1);
     break;
    }
   case 80:
    {
     i21 = i74 + 4 | 0;
     i9 = ((HEAP32[i21 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
     i20 = i73 + 1 | 0;
     i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i20, i72, i74) | 0;
     i21 = ((HEAP32[i21 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
     if ((i1 | 0) == (i20 | 0)) {
      i1 = i73;
      break L1;
     }
     i7 = i74 + 16 | 0;
     i8 = HEAP32[i74 + 12 >> 2] | 0;
     i22 = i74 + 20 | 0;
     i2 = HEAP32[i22 >> 2] | 0;
     i71 = HEAP32[i74 + 24 >> 2] | 0;
     i3 = i71;
     if (i2 >>> 0 < i71 >>> 0) {
      HEAP32[i2 >> 2] = 0;
      HEAP32[i2 + 4 >> 2] = 0;
      HEAP32[i2 + 8 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = i8;
      HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + 16;
     } else {
      i4 = HEAP32[i7 >> 2] | 0;
      i71 = i2 - i4 | 0;
      i6 = i71 >> 4;
      i5 = i6 + 1 | 0;
      if ((i71 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
      i2 = i3 - i4 | 0;
      if (i2 >> 4 >>> 0 < 1073741823) {
       i2 = i2 >> 3;
       i2 = i2 >>> 0 < i5 >>> 0 ? i5 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i6, i74 + 28 | 0);
      i71 = i75 + 8 | 0;
      i66 = HEAP32[i71 >> 2] | 0;
      HEAP32[i66 >> 2] = 0;
      HEAP32[i66 + 4 >> 2] = 0;
      HEAP32[i66 + 8 >> 2] = 0;
      HEAP32[i66 + 12 >> 2] = i8;
      HEAP32[i71 >> 2] = i66 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i7, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     i13 = i51 + 4 | 0;
     i14 = i51 + 8 | 0;
     i15 = i51 + 1 | 0;
     i16 = i52 + 4 | 0;
     i17 = i52 + 8 | 0;
     i18 = i52 + 1 | 0;
     i19 = i75 + 8 | 0;
     while (1) {
      if (i9 >>> 0 >= i21 >>> 0) break L1;
      i71 = HEAP32[i74 >> 2] | 0;
      i66 = i71 + (i9 * 24 | 0) + 12 | 0;
      i65 = HEAP8[i66 >> 0] | 0;
      i3 = (i65 & 1) == 0;
      i65 = i3 ? (i65 & 255) >>> 1 : HEAP32[i71 + (i9 * 24 | 0) + 16 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i51, i3 ? i66 + 1 | 0 : HEAP32[i71 + (i9 * 24 | 0) + 20 >> 2] | 0, i65 >>> 0 < 2 ? i65 : 2);
      i65 = HEAP8[i51 >> 0] | 0;
      i71 = (i65 & 1) == 0;
      i65 = i71 ? (i65 & 255) >>> 1 : HEAP32[i13 >> 2] | 0;
      i66 = i65 >>> 0 > 2;
      i71 = _memcmp(i71 ? i15 : HEAP32[i14 >> 2] | 0, 38458, i66 ? 2 : i65) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i51);
      i3 = HEAP32[i74 >> 2] | 0;
      if (((i71 | 0) == 0 ? (i65 >>> 0 < 2 ? -1 : i66 & 1) : i71) | 0) {
       i2 = HEAP16[i3 + (i9 * 24 | 0) + 12 >> 1] | 0;
       if (!(i2 & 1)) i2 = (i2 & 65535) >>> 8 & 255; else i2 = HEAP8[HEAP32[i3 + (i9 * 24 | 0) + 20 >> 2] >> 0] | 0;
       if (i2 << 24 >> 24 == 40) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i3 + (i9 * 24 | 0) | 0, 38467) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[i74 >> 2] | 0) + (i9 * 24 | 0) + 12 | 0, 0, 38469) | 0;
       }
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i3 + (i9 * 24 | 0) | 0, 38519) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[i74 >> 2] | 0) + (i9 * 24 | 0) + 12 | 0, 0, 38469) | 0;
      }
      i3 = HEAP32[i74 >> 2] | 0;
      i2 = i3 + (i9 * 24 | 0) | 0;
      do if ((HEAP8[i20 >> 0] | 0) == 85) {
       i65 = HEAP8[i2 >> 0] | 0;
       i71 = (i65 & 1) == 0;
       i65 = i71 ? (i65 & 255) >>> 1 : HEAP32[i3 + (i9 * 24 | 0) + 4 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i52, i71 ? i2 + 1 | 0 : HEAP32[i3 + (i9 * 24 | 0) + 8 >> 2] | 0, i65 >>> 0 < 12 ? i65 : 12);
       i65 = HEAP8[i52 >> 0] | 0;
       i71 = (i65 & 1) == 0;
       i65 = i71 ? (i65 & 255) >>> 1 : HEAP32[i16 >> 2] | 0;
       i66 = i65 >>> 0 > 12;
       i71 = _memcmp(i71 ? i18 : HEAP32[i17 >> 2] | 0, 39730, i66 ? 12 : i65) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i52);
       i12 = HEAP32[i74 >> 2] | 0;
       i2 = i12 + (i9 * 24 | 0) | 0;
       if (!(((i71 | 0) == 0 ? (i65 >>> 0 < 12 ? -1 : i66 & 1) : i71) | 0)) {
        i3 = HEAP8[i2 >> 0] | 0;
        if (!(i3 & 1)) {
         i8 = (i3 & 255) >>> 1;
         i11 = i8;
         i8 = i8 >>> 0 < 11 ? i8 : 11;
         i4 = 10;
        } else {
         i8 = HEAP32[i12 + (i9 * 24 | 0) + 4 >> 2] | 0;
         i3 = HEAP32[i2 >> 2] | 0;
         i11 = i8;
         i8 = i8 >>> 0 < 11 ? i8 : 11;
         i4 = (i3 & -2) + -1 | 0;
         i3 = i3 & 255;
        }
        if ((i8 - i11 + i4 | 0) >>> 0 < 2) {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc(i2, i4, 2 - i8 + i11 - i4 | 0, i11, 0, i8, 2, 39743);
         break;
        }
        if (!(i3 & 1)) i10 = i2 + 1 | 0; else i10 = HEAP32[i12 + (i9 * 24 | 0) + 8 >> 2] | 0;
        do if ((i8 | 0) != 2) {
         i7 = i11 - i8 | 0;
         if ((i11 | 0) == (i8 | 0)) {
          i4 = i8;
          i6 = 0;
          i5 = 39743;
          i3 = 2;
          i67 = 402;
         } else {
          if (i8 >>> 0 > 2) {
           HEAP8[i10 >> 0] = 105;
           HEAP8[i10 + 1 >> 0] = 100;
           _memmove(i10 + 2 | 0, i10 + i8 | 0, i7 | 0) | 0;
           i4 = i8;
           i3 = 2;
           break;
          }
          do if (i10 >>> 0 < 39743 >>> 0 & (i10 + i11 | 0) >>> 0 > 39743 >>> 0) if ((i10 + i8 | 0) >>> 0 > 39743 >>> 0) {
           _memcpy(i10 | 0, 39743, i8 | 0) | 0;
           i6 = i8;
           i5 = 39745;
           i4 = 0;
           i3 = 2 - i8 | 0;
           break;
          } else {
           i6 = 0;
           i5 = 39743 + (2 - i8) | 0;
           i4 = i8;
           i3 = 2;
           break;
          } else {
           i6 = 0;
           i5 = 39743;
           i4 = i8;
           i3 = 2;
          } while (0);
          i67 = i10 + i6 | 0;
          _memmove(i67 + i3 | 0, i67 + i4 | 0, i7 | 0) | 0;
          i67 = 402;
         }
        } else {
         i4 = 2;
         i6 = 0;
         i5 = 39743;
         i3 = 2;
         i67 = 402;
        } while (0);
        if ((i67 | 0) == 402) {
         i67 = 0;
         _memmove(i10 + i6 | 0, i5 | 0, i3 | 0) | 0;
        }
        i3 = i3 - i4 + i11 | 0;
        if (!(HEAP8[i2 >> 0] & 1)) HEAP8[i2 >> 0] = i3 << 1; else HEAP32[i12 + (i9 * 24 | 0) + 4 >> 2] = i3;
        HEAP8[i10 + i3 >> 0] = 0;
       } else i67 = 385;
      } else i67 = 385; while (0);
      if ((i67 | 0) == 385) {
       i67 = 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2, 38588) | 0;
      }
      i6 = HEAP32[i22 >> 2] | 0;
      i7 = i6 + -16 | 0;
      i8 = HEAP32[i74 >> 2] | 0;
      i10 = i8 + (i9 * 24 | 0) | 0;
      i2 = i6 + -12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      i71 = HEAP32[i6 + -8 >> 2] | 0;
      i4 = i71;
      if ((i3 | 0) == (i71 | 0)) {
       i2 = HEAP32[i7 >> 2] | 0;
       i71 = i3 - i2 | 0;
       i5 = (i71 | 0) / 24 | 0;
       i3 = i5 + 1 | 0;
       if ((i71 | 0) < -24) {
        i1 = i7;
        break;
       }
       i2 = (i4 - i2 | 0) / 24 | 0;
       if (i2 >>> 0 < 1073741823) {
        i2 = i2 << 1;
        i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
       } else i2 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i75, i2, i5, i6 + -4 | 0);
       i71 = HEAP32[i19 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i71, i10);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i71 + 12 | 0, i8 + (i9 * 24 | 0) + 12 | 0);
       HEAP32[i19 >> 2] = i71 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i75);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i75);
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i3, i10);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i3 + 12 | 0, i8 + (i9 * 24 | 0) + 12 | 0);
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
      }
      i9 = i9 + 1 | 0;
     }
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i1);
     break;
    }
   case 82:
    {
     i15 = i74 + 4 | 0;
     i9 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
     i71 = i73 + 1 | 0;
     i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i71, i72, i74) | 0;
     i15 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
     if ((i1 | 0) == (i71 | 0)) {
      i1 = i73;
      break L1;
     }
     i7 = i74 + 16 | 0;
     i8 = HEAP32[i74 + 12 >> 2] | 0;
     i16 = i74 + 20 | 0;
     i2 = HEAP32[i16 >> 2] | 0;
     i71 = HEAP32[i74 + 24 >> 2] | 0;
     i3 = i71;
     if (i2 >>> 0 < i71 >>> 0) {
      HEAP32[i2 >> 2] = 0;
      HEAP32[i2 + 4 >> 2] = 0;
      HEAP32[i2 + 8 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = i8;
      HEAP32[i16 >> 2] = (HEAP32[i16 >> 2] | 0) + 16;
     } else {
      i4 = HEAP32[i7 >> 2] | 0;
      i71 = i2 - i4 | 0;
      i6 = i71 >> 4;
      i5 = i6 + 1 | 0;
      if ((i71 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
      i2 = i3 - i4 | 0;
      if (i2 >> 4 >>> 0 < 1073741823) {
       i2 = i2 >> 3;
       i2 = i2 >>> 0 < i5 >>> 0 ? i5 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i6, i74 + 28 | 0);
      i71 = i75 + 8 | 0;
      i67 = HEAP32[i71 >> 2] | 0;
      HEAP32[i67 >> 2] = 0;
      HEAP32[i67 + 4 >> 2] = 0;
      HEAP32[i67 + 8 >> 2] = 0;
      HEAP32[i67 + 12 >> 2] = i8;
      HEAP32[i71 >> 2] = i67 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i7, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     i11 = i39 + 4 | 0;
     i12 = i39 + 8 | 0;
     i13 = i39 + 1 | 0;
     i14 = i75 + 8 | 0;
     while (1) {
      if (i9 >>> 0 >= i15 >>> 0) break L1;
      i71 = HEAP32[i74 >> 2] | 0;
      i67 = i71 + (i9 * 24 | 0) + 12 | 0;
      i66 = HEAP8[i67 >> 0] | 0;
      i3 = (i66 & 1) == 0;
      i66 = i3 ? (i66 & 255) >>> 1 : HEAP32[i71 + (i9 * 24 | 0) + 16 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i39, i3 ? i67 + 1 | 0 : HEAP32[i71 + (i9 * 24 | 0) + 20 >> 2] | 0, i66 >>> 0 < 2 ? i66 : 2);
      i66 = HEAP8[i39 >> 0] | 0;
      i71 = (i66 & 1) == 0;
      i66 = i71 ? (i66 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
      i67 = i66 >>> 0 > 2;
      i71 = _memcmp(i71 ? i13 : HEAP32[i12 >> 2] | 0, 38458, i67 ? 2 : i66) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i39);
      i3 = HEAP32[i74 >> 2] | 0;
      if (((i71 | 0) == 0 ? (i66 >>> 0 < 2 ? -1 : i67 & 1) : i71) | 0) {
       i2 = HEAP16[i3 + (i9 * 24 | 0) + 12 >> 1] | 0;
       if (!(i2 & 1)) i2 = (i2 & 65535) >>> 8 & 255; else i2 = HEAP8[HEAP32[i3 + (i9 * 24 | 0) + 20 >> 2] >> 0] | 0;
       if (i2 << 24 >> 24 == 40) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i3 + (i9 * 24 | 0) | 0, 38467) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[i74 >> 2] | 0) + (i9 * 24 | 0) + 12 | 0, 0, 38469) | 0;
       }
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i3 + (i9 * 24 | 0) | 0, 38519) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[i74 >> 2] | 0) + (i9 * 24 | 0) + 12 | 0, 0, 38469) | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i74 >> 2] | 0) + (i9 * 24 | 0) | 0, 38522) | 0;
      i6 = HEAP32[i16 >> 2] | 0;
      i7 = i6 + -16 | 0;
      i8 = HEAP32[i74 >> 2] | 0;
      i10 = i8 + (i9 * 24 | 0) | 0;
      i2 = i6 + -12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      i71 = HEAP32[i6 + -8 >> 2] | 0;
      i4 = i71;
      if ((i3 | 0) == (i71 | 0)) {
       i2 = HEAP32[i7 >> 2] | 0;
       i71 = i3 - i2 | 0;
       i5 = (i71 | 0) / 24 | 0;
       i3 = i5 + 1 | 0;
       if ((i71 | 0) < -24) {
        i1 = i7;
        break;
       }
       i2 = (i4 - i2 | 0) / 24 | 0;
       if (i2 >>> 0 < 1073741823) {
        i2 = i2 << 1;
        i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
       } else i2 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i75, i2, i5, i6 + -4 | 0);
       i71 = HEAP32[i14 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i71, i10);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i71 + 12 | 0, i8 + (i9 * 24 | 0) + 12 | 0);
       HEAP32[i14 >> 2] = i71 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i75);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i75);
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i3, i10);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i3 + 12 | 0, i8 + (i9 * 24 | 0) + 12 | 0);
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
      }
      i9 = i9 + 1 | 0;
     }
     __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i1);
     break;
    }
   case 84:
    {
     i15 = i74 + 4 | 0;
     i12 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
     i1 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i73, i72, i74) | 0;
     i13 = ((HEAP32[i15 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
     if ((i1 | 0) == (i73 | 0)) {
      i1 = i73;
      break L1;
     }
     i18 = i74 + 16 | 0;
     i14 = i74 + 12 | 0;
     i7 = HEAP32[i14 >> 2] | 0;
     i17 = i74 + 20 | 0;
     i2 = HEAP32[i17 >> 2] | 0;
     i16 = i74 + 24 | 0;
     i73 = HEAP32[i16 >> 2] | 0;
     i3 = i73;
     if (i2 >>> 0 < i73 >>> 0) {
      HEAP32[i2 >> 2] = 0;
      HEAP32[i2 + 4 >> 2] = 0;
      HEAP32[i2 + 8 >> 2] = 0;
      HEAP32[i2 + 12 >> 2] = i7;
      HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + 16;
     } else {
      i4 = HEAP32[i18 >> 2] | 0;
      i73 = i2 - i4 | 0;
      i6 = i73 >> 4;
      i5 = i6 + 1 | 0;
      if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i18);
      i2 = i3 - i4 | 0;
      if (i2 >> 4 >>> 0 < 1073741823) {
       i2 = i2 >> 3;
       i2 = i2 >>> 0 < i5 >>> 0 ? i5 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i6, i74 + 28 | 0);
      i73 = i75 + 8 | 0;
      i70 = HEAP32[i73 >> 2] | 0;
      HEAP32[i70 >> 2] = 0;
      HEAP32[i70 + 4 >> 2] = 0;
      HEAP32[i70 + 8 >> 2] = 0;
      HEAP32[i70 + 12 >> 2] = i7;
      HEAP32[i73 >> 2] = i70 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i18, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     i7 = i75 + 8 | 0;
     i11 = i12;
     while (1) {
      if (i11 >>> 0 >= i13 >>> 0) break;
      i8 = HEAP32[i17 >> 2] | 0;
      i2 = i8 + -16 | 0;
      i9 = HEAP32[i74 >> 2] | 0;
      i10 = i9 + (i11 * 24 | 0) | 0;
      i3 = i8 + -12 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      i73 = HEAP32[i8 + -8 >> 2] | 0;
      i5 = i73;
      if ((i4 | 0) == (i73 | 0)) {
       i3 = HEAP32[i2 >> 2] | 0;
       i73 = i4 - i3 | 0;
       i6 = (i73 | 0) / 24 | 0;
       i4 = i6 + 1 | 0;
       if ((i73 | 0) < -24) {
        i67 = 455;
        break;
       }
       i3 = (i5 - i3 | 0) / 24 | 0;
       if (i3 >>> 0 < 1073741823) {
        i3 = i3 << 1;
        i3 = i3 >>> 0 < i4 >>> 0 ? i4 : i3;
       } else i3 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i75, i3, i6, i8 + -4 | 0);
       i73 = HEAP32[i7 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i73, i10);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i73 + 12 | 0, i9 + (i11 * 24 | 0) + 12 | 0);
       HEAP32[i7 >> 2] = i73 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i75);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i75);
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i4, i10);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i4 + 12 | 0, i9 + (i11 * 24 | 0) + 12 | 0);
       HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 24;
      }
      i11 = i11 + 1 | 0;
     }
     if ((i67 | 0) == 455) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i2);
     if (!((i13 | 0) == (i12 + 1 | 0) & (HEAP8[i74 + 63 >> 0] | 0) != 0)) break L1;
     i6 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i1, i72, i74) | 0;
     if ((i6 | 0) == (i1 | 0)) break L1;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i71, (HEAP32[i15 >> 2] | 0) + -24 | 0);
     i1 = HEAP32[i15 >> 2] | 0;
     i2 = i1 + -24 | 0;
     i3 = i1;
     while (1) {
      if ((i3 | 0) == (i2 | 0)) break;
      i73 = i3 + -24 | 0;
      HEAP32[i15 >> 2] = i73;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i73);
      i3 = HEAP32[i15 >> 2] | 0;
     }
     i73 = HEAP8[i71 >> 0] | 0;
     i4 = (i73 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1 + -48 | 0, i4 ? i71 + 1 | 0 : HEAP32[i71 + 8 >> 2] | 0, i4 ? (i73 & 255) >>> 1 : HEAP32[i71 + 4 >> 2] | 0) | 0;
     i1 = (HEAP32[i15 >> 2] | 0) + -24 | 0;
     HEAP32[i41 >> 2] = HEAP32[i14 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i43, i1, i41);
     i1 = HEAP32[i17 >> 2] | 0;
     i73 = HEAP32[i16 >> 2] | 0;
     i4 = i73;
     if (i1 >>> 0 < i73 >>> 0) {
      HEAP32[i1 + 12 >> 2] = HEAP32[i43 + 12 >> 2];
      HEAP32[i1 >> 2] = HEAP32[i43 >> 2];
      i75 = i43 + 4 | 0;
      HEAP32[i1 + 4 >> 2] = HEAP32[i75 >> 2];
      i74 = i43 + 8 | 0;
      HEAP32[i1 + 8 >> 2] = HEAP32[i74 >> 2];
      HEAP32[i74 >> 2] = 0;
      HEAP32[i75 >> 2] = 0;
      HEAP32[i43 >> 2] = 0;
      HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + 16;
     } else {
      i2 = HEAP32[i18 >> 2] | 0;
      i73 = i1 - i2 | 0;
      i5 = i73 >> 4;
      i3 = i5 + 1 | 0;
      if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i18);
      i1 = i4 - i2 | 0;
      if (i1 >> 4 >>> 0 < 1073741823) {
       i1 = i1 >> 3;
       i1 = i1 >>> 0 < i3 >>> 0 ? i3 : i1;
      } else i1 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i1, i5, i74 + 28 | 0);
      i74 = i75 + 8 | 0;
      i73 = HEAP32[i74 >> 2] | 0;
      HEAP32[i73 + 12 >> 2] = HEAP32[i43 + 12 >> 2];
      HEAP32[i73 >> 2] = HEAP32[i43 >> 2];
      i72 = i43 + 4 | 0;
      HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
      i70 = i43 + 8 | 0;
      HEAP32[i73 + 8 >> 2] = HEAP32[i70 >> 2];
      HEAP32[i70 >> 2] = 0;
      HEAP32[i72 >> 2] = 0;
      HEAP32[i43 >> 2] = 0;
      HEAP32[i74 >> 2] = i73 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i18, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i43);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i71);
     i1 = i6;
     break L1;
    }
   case 85:
    {
     i1 = i73 + 1 | 0;
     if ((i1 | 0) == (i72 | 0)) {
      i1 = i73;
      break L1;
     }
     i2 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i72, i74) | 0;
     if ((i2 | 0) == (i1 | 0)) {
      i1 = i73;
      break L1;
     }
     i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i2, i72, i74) | 0;
     if ((i1 | 0) == (i2 | 0)) {
      i1 = i73;
      break L1;
     }
     i7 = i74 + 4 | 0;
     i2 = HEAP32[i7 >> 2] | 0;
     if (((i2 - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i1 = i73;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i71, i2 + -24 | 0);
     i2 = HEAP32[i7 >> 2] | 0;
     i3 = i2 + -24 | 0;
     i4 = i2;
     while (1) {
      if ((i4 | 0) == (i3 | 0)) break;
      i73 = i4 + -24 | 0;
      HEAP32[i7 >> 2] = i73;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i73);
      i4 = HEAP32[i7 >> 2] | 0;
     }
     i73 = i2 + -48 | 0;
     i70 = HEAP8[i73 >> 0] | 0;
     i72 = (i70 & 1) == 0;
     i70 = i72 ? (i70 & 255) >>> 1 : HEAP32[i2 + -44 >> 2] | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i13, i72 ? i73 + 1 | 0 : HEAP32[i2 + -40 >> 2] | 0, i70 >>> 0 < 9 ? i70 : 9);
     i70 = HEAP8[i13 >> 0] | 0;
     i73 = (i70 & 1) == 0;
     i70 = i73 ? (i70 & 255) >>> 1 : HEAP32[i13 + 4 >> 2] | 0;
     i72 = i70 >>> 0 > 9;
     i73 = _memcmp(i73 ? i13 + 1 | 0 : HEAP32[i13 + 8 >> 2] | 0, 39746, i72 ? 9 : i70) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
     if (!(((i73 | 0) == 0 ? (i70 >>> 0 < 9 ? -1 : i72 & 1) : i73) | 0)) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i59, (HEAP32[i7 >> 2] | 0) + -24 | 0);
      i3 = HEAP32[i7 >> 2] | 0;
      i2 = i3 + -24 | 0;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break;
       i73 = i3 + -24 | 0;
       HEAP32[i7 >> 2] = i73;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i73);
       i3 = HEAP32[i7 >> 2] | 0;
      }
      i73 = HEAP8[i59 >> 0] | 0;
      i72 = (i73 & 1) == 0;
      i2 = i59 + 8 | 0;
      i3 = i59 + 1 | 0;
      i70 = i72 ? i3 : HEAP32[i2 >> 2] | 0;
      i4 = i59 + 4 | 0;
      i73 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i70 + 9 | 0, i70 + (i72 ? (i73 & 255) >>> 1 : HEAP32[i4 >> 2] | 0) | 0, i74) | 0;
      if ((i73 | 0) == (((HEAP8[i59 >> 0] & 1) == 0 ? i3 : HEAP32[i2 >> 2] | 0) + 9 | 0)) {
       __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i33, i71, 39558);
       i73 = HEAP8[i59 >> 0] | 0;
       i72 = (i73 & 1) == 0;
       i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i33, i72 ? i3 : HEAP32[i2 >> 2] | 0, i72 ? (i73 & 255) >>> 1 : HEAP32[i4 >> 2] | 0) | 0;
       HEAP32[i32 >> 2] = HEAP32[i2 >> 2];
       HEAP32[i32 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
       HEAP32[i32 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i2 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i31, i32);
       i2 = HEAP32[i7 >> 2] | 0;
       i73 = HEAP32[i74 + 8 >> 2] | 0;
       i3 = i73;
       if (i2 >>> 0 < i73 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i31);
        HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
       } else {
        i4 = HEAP32[i74 >> 2] | 0;
        i73 = i2 - i4 | 0;
        i6 = (i73 | 0) / 24 | 0;
        i5 = i6 + 1 | 0;
        if ((i73 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i74);
        i2 = (i3 - i4 | 0) / 24 | 0;
        if (i2 >>> 0 < 1073741823) {
         i2 = i2 << 1;
         i2 = i2 >>> 0 < i5 >>> 0 ? i5 : i2;
        } else i2 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i75, i2, i6, i74 + 12 | 0);
        i73 = i75 + 8 | 0;
        i72 = HEAP32[i73 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i72, i31);
        HEAP32[i73 >> 2] = i72 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i74, i75);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i75);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i31);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i32);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i33);
      } else {
       i4 = (HEAP32[i7 >> 2] | 0) + -24 | 0;
       __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i27, i71, 39099);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i28, (HEAP32[i7 >> 2] | 0) + -24 | 0);
       i2 = HEAP8[i28 >> 0] | 0;
       i3 = (i2 & 1) == 0;
       i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i27, i3 ? i28 + 1 | 0 : HEAP32[i28 + 8 >> 2] | 0, i3 ? (i2 & 255) >>> 1 : HEAP32[i28 + 4 >> 2] | 0) | 0;
       HEAP32[i26 >> 2] = HEAP32[i2 >> 2];
       HEAP32[i26 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
       HEAP32[i26 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i2 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i26, 38514) | 0;
       HEAP32[i25 >> 2] = HEAP32[i2 >> 2];
       HEAP32[i25 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
       HEAP32[i25 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i2 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i24, i25);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i4, i24);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i24);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i25);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i26);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i28);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i27);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i59);
     } else {
      i2 = (HEAP32[i7 >> 2] | 0) + -24 | 0;
      __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i17, i71, 39558);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i18, (HEAP32[i7 >> 2] | 0) + -24 | 0);
      i3 = HEAP8[i18 >> 0] | 0;
      i4 = (i3 & 1) == 0;
      i3 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i17, i4 ? i18 + 1 | 0 : HEAP32[i18 + 8 >> 2] | 0, i4 ? (i3 & 255) >>> 1 : HEAP32[i18 + 4 >> 2] | 0) | 0;
      HEAP32[i16 >> 2] = HEAP32[i3 >> 2];
      HEAP32[i16 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
      HEAP32[i16 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
      i4 = 0;
      while (1) {
       if ((i4 | 0) == 3) break;
       HEAP32[i3 + (i4 << 2) >> 2] = 0;
       i4 = i4 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i15, i16);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i2, i15);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i15);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i18);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
     }
     i6 = (HEAP32[i7 >> 2] | 0) + -24 | 0;
     HEAP32[i37 >> 2] = HEAP32[i74 + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i42, i6, i37);
     i6 = i74 + 16 | 0;
     i2 = i74 + 20 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i73 = HEAP32[i74 + 24 >> 2] | 0;
     i4 = i73;
     if (i3 >>> 0 < i73 >>> 0) {
      HEAP32[i3 + 12 >> 2] = HEAP32[i42 + 12 >> 2];
      HEAP32[i3 >> 2] = HEAP32[i42 >> 2];
      i75 = i42 + 4 | 0;
      HEAP32[i3 + 4 >> 2] = HEAP32[i75 >> 2];
      i74 = i42 + 8 | 0;
      HEAP32[i3 + 8 >> 2] = HEAP32[i74 >> 2];
      HEAP32[i74 >> 2] = 0;
      HEAP32[i75 >> 2] = 0;
      HEAP32[i42 >> 2] = 0;
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
     } else {
      i2 = HEAP32[i6 >> 2] | 0;
      i73 = i3 - i2 | 0;
      i5 = i73 >> 4;
      i3 = i5 + 1 | 0;
      if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
      i2 = i4 - i2 | 0;
      if (i2 >> 4 >>> 0 < 1073741823) {
       i2 = i2 >> 3;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i5, i74 + 28 | 0);
      i74 = i75 + 8 | 0;
      i73 = HEAP32[i74 >> 2] | 0;
      HEAP32[i73 + 12 >> 2] = HEAP32[i42 + 12 >> 2];
      HEAP32[i73 >> 2] = HEAP32[i42 >> 2];
      i72 = i42 + 4 | 0;
      HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
      i70 = i42 + 8 | 0;
      HEAP32[i73 + 8 >> 2] = HEAP32[i70 >> 2];
      HEAP32[i70 >> 2] = 0;
      HEAP32[i72 >> 2] = 0;
      HEAP32[i42 >> 2] = 0;
      HEAP32[i74 >> 2] = i73 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i42);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i71);
     break L1;
    }
   case 83:
    {
     i70 = i73 + 1 | 0;
     if ((i70 | 0) != (i72 | 0) ? (HEAP8[i70 >> 0] | 0) == 116 : 0) {
      i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i73, i72, i74) | 0;
      if ((i1 | 0) == (i73 | 0)) {
       i1 = i73;
       break L1;
      }
      i2 = HEAP32[i74 + 4 >> 2] | 0;
      if ((HEAP32[i74 >> 2] | 0) == (i2 | 0)) {
       i1 = i73;
       break L1;
      }
      i6 = i74 + 16 | 0;
      HEAP32[i7 >> 2] = HEAP32[i74 + 12 >> 2];
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i19, i2 + -24 | 0, i7);
      i2 = i74 + 20 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      i73 = HEAP32[i74 + 24 >> 2] | 0;
      i4 = i73;
      if (i3 >>> 0 < i73 >>> 0) {
       HEAP32[i3 + 12 >> 2] = HEAP32[i19 + 12 >> 2];
       HEAP32[i3 >> 2] = HEAP32[i19 >> 2];
       i75 = i19 + 4 | 0;
       HEAP32[i3 + 4 >> 2] = HEAP32[i75 >> 2];
       i74 = i19 + 8 | 0;
       HEAP32[i3 + 8 >> 2] = HEAP32[i74 >> 2];
       HEAP32[i74 >> 2] = 0;
       HEAP32[i75 >> 2] = 0;
       HEAP32[i19 >> 2] = 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
      } else {
       i2 = HEAP32[i6 >> 2] | 0;
       i73 = i3 - i2 | 0;
       i5 = i73 >> 4;
       i3 = i5 + 1 | 0;
       if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
       i2 = i4 - i2 | 0;
       if (i2 >> 4 >>> 0 < 1073741823) {
        i2 = i2 >> 3;
        i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
       } else i2 = 2147483647;
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i5, i74 + 28 | 0);
       i74 = i75 + 8 | 0;
       i73 = HEAP32[i74 >> 2] | 0;
       HEAP32[i73 + 12 >> 2] = HEAP32[i19 + 12 >> 2];
       HEAP32[i73 >> 2] = HEAP32[i19 >> 2];
       i72 = i19 + 4 | 0;
       HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
       i71 = i19 + 8 | 0;
       HEAP32[i73 + 8 >> 2] = HEAP32[i71 >> 2];
       HEAP32[i71 >> 2] = 0;
       HEAP32[i72 >> 2] = 0;
       HEAP32[i19 >> 2] = 0;
       HEAP32[i74 >> 2] = i73 + 16;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i75);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
      }
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i19);
      break L1;
     }
     i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i73, i72, i74) | 0;
     if ((i1 | 0) == (i73 | 0)) {
      i1 = i73;
      break L1;
     }
     i6 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i1, i72, i74) | 0;
     if ((i6 | 0) == (i1 | 0)) break L1;
     i4 = i74 + 4 | 0;
     i2 = HEAP32[i4 >> 2] | 0;
     if (((i2 - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i71, i2 + -24 | 0);
     i1 = HEAP32[i4 >> 2] | 0;
     i2 = i1 + -24 | 0;
     i3 = i1;
     while (1) {
      if ((i3 | 0) == (i2 | 0)) break;
      i73 = i3 + -24 | 0;
      HEAP32[i4 >> 2] = i73;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i73);
      i3 = HEAP32[i4 >> 2] | 0;
     }
     i5 = HEAP8[i71 >> 0] | 0;
     i2 = (i5 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1 + -48 | 0, i2 ? i71 + 1 | 0 : HEAP32[i71 + 8 >> 2] | 0, i2 ? (i5 & 255) >>> 1 : HEAP32[i71 + 4 >> 2] | 0) | 0;
     i5 = (HEAP32[i4 >> 2] | 0) + -24 | 0;
     HEAP32[i12 >> 2] = HEAP32[i74 + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i23, i5, i12);
     i5 = i74 + 16 | 0;
     i1 = i74 + 20 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     i73 = HEAP32[i74 + 24 >> 2] | 0;
     i3 = i73;
     if (i2 >>> 0 < i73 >>> 0) {
      HEAP32[i2 + 12 >> 2] = HEAP32[i23 + 12 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i23 >> 2];
      i75 = i23 + 4 | 0;
      HEAP32[i2 + 4 >> 2] = HEAP32[i75 >> 2];
      i74 = i23 + 8 | 0;
      HEAP32[i2 + 8 >> 2] = HEAP32[i74 >> 2];
      HEAP32[i74 >> 2] = 0;
      HEAP32[i75 >> 2] = 0;
      HEAP32[i23 >> 2] = 0;
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 16;
     } else {
      i1 = HEAP32[i5 >> 2] | 0;
      i73 = i2 - i1 | 0;
      i4 = i73 >> 4;
      i2 = i4 + 1 | 0;
      if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i5);
      i1 = i3 - i1 | 0;
      if (i1 >> 4 >>> 0 < 1073741823) {
       i1 = i1 >> 3;
       i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
      } else i1 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i1, i4, i74 + 28 | 0);
      i74 = i75 + 8 | 0;
      i73 = HEAP32[i74 >> 2] | 0;
      HEAP32[i73 + 12 >> 2] = HEAP32[i23 + 12 >> 2];
      HEAP32[i73 >> 2] = HEAP32[i23 >> 2];
      i72 = i23 + 4 | 0;
      HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
      i70 = i23 + 8 | 0;
      HEAP32[i73 + 8 >> 2] = HEAP32[i70 >> 2];
      HEAP32[i70 >> 2] = 0;
      HEAP32[i72 >> 2] = 0;
      HEAP32[i23 >> 2] = 0;
      HEAP32[i74 >> 2] = i73 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i5, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i23);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i71);
     i1 = i6;
     break L1;
    }
   case 68:
    {
     i1 = i73 + 1 | 0;
     if ((i1 | 0) != (i72 | 0)) {
      i1 = HEAP8[i1 >> 0] | 0;
      switch (i1 << 24 >> 24 | 0) {
      case 112:
       {
        i12 = i74 + 4 | 0;
        i9 = ((HEAP32[i12 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
        i71 = i73 + 2 | 0;
        i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i71, i72, i74) | 0;
        i12 = ((HEAP32[i12 >> 2] | 0) - (HEAP32[i74 >> 2] | 0) | 0) / 24 | 0;
        if ((i1 | 0) == (i71 | 0)) break L69;
        i7 = i74 + 16 | 0;
        i8 = HEAP32[i74 + 12 >> 2] | 0;
        i13 = i74 + 20 | 0;
        i2 = HEAP32[i13 >> 2] | 0;
        i71 = HEAP32[i74 + 24 >> 2] | 0;
        i3 = i71;
        if (i2 >>> 0 < i71 >>> 0) {
         HEAP32[i2 >> 2] = 0;
         HEAP32[i2 + 4 >> 2] = 0;
         HEAP32[i2 + 8 >> 2] = 0;
         HEAP32[i2 + 12 >> 2] = i8;
         HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 16;
        } else {
         i4 = HEAP32[i7 >> 2] | 0;
         i71 = i2 - i4 | 0;
         i6 = i71 >> 4;
         i5 = i6 + 1 | 0;
         if ((i71 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
         i2 = i3 - i4 | 0;
         if (i2 >> 4 >>> 0 < 1073741823) {
          i2 = i2 >> 3;
          i2 = i2 >>> 0 < i5 >>> 0 ? i5 : i2;
         } else i2 = 2147483647;
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i6, i74 + 28 | 0);
         i71 = i75 + 8 | 0;
         i67 = HEAP32[i71 >> 2] | 0;
         HEAP32[i67 >> 2] = 0;
         HEAP32[i67 + 4 >> 2] = 0;
         HEAP32[i67 + 8 >> 2] = 0;
         HEAP32[i67 + 12 >> 2] = i8;
         HEAP32[i71 >> 2] = i67 + 16;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i7, i75);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
        }
        i11 = i75 + 8 | 0;
        while (1) {
         if (i9 >>> 0 >= i12 >>> 0) break L1;
         i6 = HEAP32[i13 >> 2] | 0;
         i7 = i6 + -16 | 0;
         i8 = HEAP32[i74 >> 2] | 0;
         i10 = i8 + (i9 * 24 | 0) | 0;
         i2 = i6 + -12 | 0;
         i3 = HEAP32[i2 >> 2] | 0;
         i71 = HEAP32[i6 + -8 >> 2] | 0;
         i4 = i71;
         if ((i3 | 0) == (i71 | 0)) {
          i2 = HEAP32[i7 >> 2] | 0;
          i71 = i3 - i2 | 0;
          i5 = (i71 | 0) / 24 | 0;
          i3 = i5 + 1 | 0;
          if ((i71 | 0) < -24) {
           i1 = i7;
           break;
          }
          i2 = (i4 - i2 | 0) / 24 | 0;
          if (i2 >>> 0 < 1073741823) {
           i2 = i2 << 1;
           i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
          } else i2 = 2147483647;
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i75, i2, i5, i6 + -4 | 0);
          i71 = HEAP32[i11 >> 2] | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i71, i10);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i71 + 12 | 0, i8 + (i9 * 24 | 0) + 12 | 0);
          HEAP32[i11 >> 2] = i71 + 24;
          __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i75);
          __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i75);
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i3, i10);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i3 + 12 | 0, i8 + (i9 * 24 | 0) + 12 | 0);
          HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
         }
         i9 = i9 + 1 | 0;
        }
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i1);
        break;
       }
      case 84:
      case 116:
       {
        i1 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i73, i72, i74) | 0;
        if ((i1 | 0) == (i73 | 0)) break L69;
        i2 = HEAP32[i74 + 4 >> 2] | 0;
        if ((HEAP32[i74 >> 2] | 0) == (i2 | 0)) {
         i1 = i73;
         break L1;
        }
        i6 = i74 + 16 | 0;
        HEAP32[i11 >> 2] = HEAP32[i74 + 12 >> 2];
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i22, i2 + -24 | 0, i11);
        i2 = i74 + 20 | 0;
        i3 = HEAP32[i2 >> 2] | 0;
        i73 = HEAP32[i74 + 24 >> 2] | 0;
        i4 = i73;
        if (i3 >>> 0 < i73 >>> 0) {
         HEAP32[i3 + 12 >> 2] = HEAP32[i22 + 12 >> 2];
         HEAP32[i3 >> 2] = HEAP32[i22 >> 2];
         i75 = i22 + 4 | 0;
         HEAP32[i3 + 4 >> 2] = HEAP32[i75 >> 2];
         i74 = i22 + 8 | 0;
         HEAP32[i3 + 8 >> 2] = HEAP32[i74 >> 2];
         HEAP32[i74 >> 2] = 0;
         HEAP32[i75 >> 2] = 0;
         HEAP32[i22 >> 2] = 0;
         HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
        } else {
         i2 = HEAP32[i6 >> 2] | 0;
         i73 = i3 - i2 | 0;
         i5 = i73 >> 4;
         i3 = i5 + 1 | 0;
         if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
         i2 = i4 - i2 | 0;
         if (i2 >> 4 >>> 0 < 1073741823) {
          i2 = i2 >> 3;
          i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
         } else i2 = 2147483647;
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i5, i74 + 28 | 0);
         i74 = i75 + 8 | 0;
         i73 = HEAP32[i74 >> 2] | 0;
         HEAP32[i73 + 12 >> 2] = HEAP32[i22 + 12 >> 2];
         HEAP32[i73 >> 2] = HEAP32[i22 >> 2];
         i72 = i22 + 4 | 0;
         HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
         i71 = i22 + 8 | 0;
         HEAP32[i73 + 8 >> 2] = HEAP32[i71 >> 2];
         HEAP32[i71 >> 2] = 0;
         HEAP32[i72 >> 2] = 0;
         HEAP32[i22 >> 2] = 0;
         HEAP32[i74 >> 2] = i73 + 16;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i75);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
        }
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i22);
        break L1;
       }
      case 118:
       {
        L764 : do if ((i72 - i73 | 0) > 3 & i2 << 24 >> 24 == 68 & i1 << 24 >> 24 == 118) {
         i5 = i73 + 2 | 0;
         i2 = HEAP8[i5 >> 0] | 0;
         if ((i2 + -49 & 255) < 9) {
          i1 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i5, i72) | 0;
          if ((i1 | 0) == (i72 | 0)) {
           i1 = i73;
           break;
          }
          if ((HEAP8[i1 >> 0] | 0) != 95) {
           i1 = i73;
           break;
          }
          i3 = i1 - i5 | 0;
          i2 = i1 + 1 | 0;
          if ((i2 | 0) == (i72 | 0)) {
           i1 = i73;
           break;
          }
          if ((HEAP8[i2 >> 0] | 0) != 112) {
           i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i2, i72, i74) | 0;
           if ((i1 | 0) == (i2 | 0)) {
            i1 = i73;
            break;
           }
           i2 = HEAP32[i74 + 4 >> 2] | 0;
           if ((HEAP32[i74 >> 2] | 0) == (i2 | 0)) {
            i1 = i73;
            break;
           }
           i4 = i2 + -24 | 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i50, i5, i3);
           i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i50, 0, 39777) | 0;
           HEAP32[i59 >> 2] = HEAP32[i2 >> 2];
           HEAP32[i59 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
           HEAP32[i59 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
           i3 = 0;
           while (1) {
            if ((i3 | 0) == 3) break;
            HEAP32[i2 + (i3 << 2) >> 2] = 0;
            i3 = i3 + 1 | 0;
           }
           i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i59, 38465) | 0;
           HEAP32[i71 >> 2] = HEAP32[i2 >> 2];
           HEAP32[i71 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
           HEAP32[i71 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
           i3 = 0;
           while (1) {
            if ((i3 | 0) == 3) break;
            HEAP32[i2 + (i3 << 2) >> 2] = 0;
            i3 = i3 + 1 | 0;
           }
           i67 = HEAP8[i71 >> 0] | 0;
           i66 = (i67 & 1) == 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i4, i66 ? i71 + 1 | 0 : HEAP32[i71 + 8 >> 2] | 0, i66 ? (i67 & 255) >>> 1 : HEAP32[i71 + 4 >> 2] | 0) | 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i71);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i59);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i50);
           break;
          }
          i1 = i1 + 2 | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i56, i5, i3);
          i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i56, 0, 39786) | 0;
          HEAP32[i66 >> 2] = HEAP32[i2 >> 2];
          HEAP32[i66 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
          HEAP32[i66 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
          i3 = 0;
          while (1) {
           if ((i3 | 0) == 3) break;
           HEAP32[i2 + (i3 << 2) >> 2] = 0;
           i3 = i3 + 1 | 0;
          }
          i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i66, 38465) | 0;
          HEAP32[i63 >> 2] = HEAP32[i2 >> 2];
          HEAP32[i63 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
          HEAP32[i63 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
          i3 = 0;
          while (1) {
           if ((i3 | 0) == 3) break;
           HEAP32[i2 + (i3 << 2) >> 2] = 0;
           i3 = i3 + 1 | 0;
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i53, i63);
          i2 = i74 + 4 | 0;
          i3 = HEAP32[i2 >> 2] | 0;
          i71 = HEAP32[i74 + 8 >> 2] | 0;
          i4 = i71;
          if (i3 >>> 0 < i71 >>> 0) {
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i53);
           HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
          } else {
           i2 = HEAP32[i74 >> 2] | 0;
           i71 = i3 - i2 | 0;
           i5 = (i71 | 0) / 24 | 0;
           i3 = i5 + 1 | 0;
           if ((i71 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i74);
           i2 = (i4 - i2 | 0) / 24 | 0;
           if (i2 >>> 0 < 1073741823) {
            i2 = i2 << 1;
            i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
           } else i2 = 2147483647;
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i75, i2, i5, i74 + 12 | 0);
           i71 = i75 + 8 | 0;
           i67 = HEAP32[i71 >> 2] | 0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i67, i53);
           HEAP32[i71 >> 2] = i67 + 24;
           __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i74, i75);
           __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i75);
          }
          __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i53);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i63);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i66);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i56);
          break;
         }
         i1 = 0;
         while (1) {
          if ((i1 | 0) == 3) break;
          HEAP32[i75 + (i1 << 2) >> 2] = 0;
          i1 = i1 + 1 | 0;
         }
         L807 : do if (i2 << 24 >> 24 != 95 ? (i29 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i5, i72, i74) | 0, (i29 | 0) != (i5 | 0)) : 0) {
          i9 = i74 + 4 | 0;
          i1 = HEAP32[i9 >> 2] | 0;
          if ((HEAP32[i74 >> 2] | 0) != (i1 | 0)) {
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i62, i1 + -24 | 0);
           L811 : do if (!(HEAP8[i75 >> 0] & 1)) {
            HEAP8[i75 + 1 >> 0] = 0;
            HEAP8[i75 >> 0] = 0;
           } else {
            i5 = i75 + 8 | 0;
            i2 = HEAP32[i5 >> 2] | 0;
            HEAP8[i2 >> 0] = 0;
            i6 = i75 + 4 | 0;
            HEAP32[i6 >> 2] = 0;
            i7 = HEAP32[i75 >> 2] | 0;
            i8 = (i7 & -2) + -1 | 0;
            i3 = i7 & 255;
            do if (!(i3 & 1)) {
             i1 = i7 >>> 1 & 127;
             if ((i3 & 255) < 22) {
              _memcpy(i75 + 1 | 0, i2 | 0, (i7 >>> 1 & 127) + 1 | 0) | 0;
              _free(i2);
              break;
             }
             i2 = i1 + 16 & 240;
             i4 = i2 + -1 | 0;
             if ((i4 | 0) == (i8 | 0)) break L811;
             i3 = _malloc(i2) | 0;
             if (i4 >>> 0 <= i8 >>> 0 & (i3 | 0) == 0) break L811;
             _memcpy(i3 | 0, i75 + 1 | 0, (i7 >>> 1 & 127) + 1 | 0) | 0;
             HEAP32[i75 >> 2] = i2 | 1;
             HEAP32[i6 >> 2] = i1;
             HEAP32[i5 >> 2] = i3;
             break L811;
            } else {
             HEAP8[i75 + 1 >> 0] = 0;
             _free(i2);
             i1 = 0;
            } while (0);
            HEAP8[i75 >> 0] = i1 << 1;
           } while (0);
           HEAP32[i75 >> 2] = HEAP32[i62 >> 2];
           HEAP32[i75 + 4 >> 2] = HEAP32[i62 + 4 >> 2];
           HEAP32[i75 + 8 >> 2] = HEAP32[i62 + 8 >> 2];
           i1 = 0;
           while (1) {
            if ((i1 | 0) == 3) break;
            HEAP32[i62 + (i1 << 2) >> 2] = 0;
            i1 = i1 + 1 | 0;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i62);
           i2 = HEAP32[i9 >> 2] | 0;
           i1 = i2 + -24 | 0;
           while (1) {
            if ((i2 | 0) == (i1 | 0)) {
             i1 = i29;
             i67 = 622;
             break L807;
            }
            i71 = i2 + -24 | 0;
            HEAP32[i9 >> 2] = i71;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i71);
            i2 = HEAP32[i9 >> 2] | 0;
           }
          }
         } else {
          i1 = i5;
          i67 = 622;
         } while (0);
         do if ((i67 | 0) == 622) {
          if ((((i1 | 0) != (i72 | 0) ? (HEAP8[i1 >> 0] | 0) == 95 : 0) ? (i30 = i1 + 1 | 0, (i30 | 0) != (i72 | 0)) : 0) ? (i35 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i30, i72, i74) | 0, (i35 | 0) != (i30 | 0)) : 0) {
           i1 = HEAP32[i74 + 4 >> 2] | 0;
           if ((HEAP32[i74 >> 2] | 0) == (i1 | 0)) break;
           i1 = i1 + -24 | 0;
           __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i65, 39777, i75);
           i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i65, 38465) | 0;
           HEAP32[i64 >> 2] = HEAP32[i2 >> 2];
           HEAP32[i64 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
           HEAP32[i64 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
           i3 = 0;
           while (1) {
            if ((i3 | 0) == 3) break;
            HEAP32[i2 + (i3 << 2) >> 2] = 0;
            i3 = i3 + 1 | 0;
           }
           i71 = HEAP8[i64 >> 0] | 0;
           i67 = (i71 & 1) == 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1, i67 ? i64 + 1 | 0 : HEAP32[i64 + 8 >> 2] | 0, i67 ? (i71 & 255) >>> 1 : HEAP32[i64 + 4 >> 2] | 0) | 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i64);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i65);
           i1 = i35;
          } else i1 = i73;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i75);
          break L764;
         } while (0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i75);
         i1 = i73;
        } else i1 = i73; while (0);
        if ((i1 | 0) == (i73 | 0)) break L69;
        i2 = HEAP32[i74 + 4 >> 2] | 0;
        if ((HEAP32[i74 >> 2] | 0) == (i2 | 0)) {
         i1 = i73;
         break L1;
        }
        i6 = i74 + 16 | 0;
        HEAP32[i49 >> 2] = HEAP32[i74 + 12 >> 2];
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i54, i2 + -24 | 0, i49);
        i2 = i74 + 20 | 0;
        i3 = HEAP32[i2 >> 2] | 0;
        i73 = HEAP32[i74 + 24 >> 2] | 0;
        i4 = i73;
        if (i3 >>> 0 < i73 >>> 0) {
         HEAP32[i3 + 12 >> 2] = HEAP32[i54 + 12 >> 2];
         HEAP32[i3 >> 2] = HEAP32[i54 >> 2];
         i75 = i54 + 4 | 0;
         HEAP32[i3 + 4 >> 2] = HEAP32[i75 >> 2];
         i74 = i54 + 8 | 0;
         HEAP32[i3 + 8 >> 2] = HEAP32[i74 >> 2];
         HEAP32[i74 >> 2] = 0;
         HEAP32[i75 >> 2] = 0;
         HEAP32[i54 >> 2] = 0;
         HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
        } else {
         i2 = HEAP32[i6 >> 2] | 0;
         i73 = i3 - i2 | 0;
         i5 = i73 >> 4;
         i3 = i5 + 1 | 0;
         if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
         i2 = i4 - i2 | 0;
         if (i2 >> 4 >>> 0 < 1073741823) {
          i2 = i2 >> 3;
          i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
         } else i2 = 2147483647;
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i5, i74 + 28 | 0);
         i74 = i75 + 8 | 0;
         i73 = HEAP32[i74 >> 2] | 0;
         HEAP32[i73 + 12 >> 2] = HEAP32[i54 + 12 >> 2];
         HEAP32[i73 >> 2] = HEAP32[i54 >> 2];
         i72 = i54 + 4 | 0;
         HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
         i71 = i54 + 8 | 0;
         HEAP32[i73 + 8 >> 2] = HEAP32[i71 >> 2];
         HEAP32[i71 >> 2] = 0;
         HEAP32[i72 >> 2] = 0;
         HEAP32[i54 >> 2] = 0;
         HEAP32[i74 >> 2] = i73 + 16;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i75);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
        }
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i54);
        break L1;
       }
      default:
       break L69;
      }
     }
     break;
    }
   default:
    {}
   } while (0);
   i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_(i73, i72, i74) | 0;
   if ((i1 | 0) == (i73 | 0)) {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i73, i72, i74) | 0;
    if ((i1 | 0) != (i73 | 0) ? (i68 = HEAP32[i74 + 4 >> 2] | 0, (HEAP32[i74 >> 2] | 0) != (i68 | 0)) : 0) {
     i6 = i74 + 16 | 0;
     HEAP32[i69 >> 2] = HEAP32[i74 + 12 >> 2];
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i70, i68 + -24 | 0, i69);
     i2 = i74 + 20 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i73 = HEAP32[i74 + 24 >> 2] | 0;
     i4 = i73;
     if (i3 >>> 0 < i73 >>> 0) {
      HEAP32[i3 + 12 >> 2] = HEAP32[i70 + 12 >> 2];
      HEAP32[i3 >> 2] = HEAP32[i70 >> 2];
      i75 = i70 + 4 | 0;
      HEAP32[i3 + 4 >> 2] = HEAP32[i75 >> 2];
      i74 = i70 + 8 | 0;
      HEAP32[i3 + 8 >> 2] = HEAP32[i74 >> 2];
      HEAP32[i74 >> 2] = 0;
      HEAP32[i75 >> 2] = 0;
      HEAP32[i70 >> 2] = 0;
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
     } else {
      i2 = HEAP32[i6 >> 2] | 0;
      i73 = i3 - i2 | 0;
      i5 = i73 >> 4;
      i3 = i5 + 1 | 0;
      if ((i73 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
      i2 = i4 - i2 | 0;
      if (i2 >> 4 >>> 0 < 1073741823) {
       i2 = i2 >> 3;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i75, i2, i5, i74 + 28 | 0);
      i74 = i75 + 8 | 0;
      i73 = HEAP32[i74 >> 2] | 0;
      HEAP32[i73 + 12 >> 2] = HEAP32[i70 + 12 >> 2];
      HEAP32[i73 >> 2] = HEAP32[i70 >> 2];
      i72 = i70 + 4 | 0;
      HEAP32[i73 + 4 >> 2] = HEAP32[i72 >> 2];
      i71 = i70 + 8 | 0;
      HEAP32[i73 + 8 >> 2] = HEAP32[i71 >> 2];
      HEAP32[i71 >> 2] = 0;
      HEAP32[i72 >> 2] = 0;
      HEAP32[i70 >> 2] = 0;
      HEAP32[i74 >> 2] = i73 + 16;
      __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i75);
      __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i75);
     }
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i70);
    } else i1 = i73;
   }
  }
 } else i1 = i73; while (0);
 STACKTOP = i76;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i1, i126, i135) {
 i1 = i1 | 0;
 i126 = i126 | 0;
 i135 = i135 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0, i84 = 0, i85 = 0, i86 = 0, i87 = 0, i88 = 0, i89 = 0, i90 = 0, i91 = 0, i92 = 0, i93 = 0, i94 = 0, i95 = 0, i96 = 0, i97 = 0, i98 = 0, i99 = 0, i100 = 0, i101 = 0, i102 = 0, i103 = 0, i104 = 0, i105 = 0, i106 = 0, i107 = 0, i108 = 0, i109 = 0, i110 = 0, i111 = 0, i112 = 0, i113 = 0, i114 = 0, i115 = 0, i116 = 0, i117 = 0, i118 = 0, i119 = 0, i120 = 0, i121 = 0, i122 = 0, i123 = 0, i124 = 0, i125 = 0, i127 = 0, i128 = 0, i129 = 0, i130 = 0, i131 = 0, i132 = 0, i133 = 0, i134 = 0, i136 = 0, i137 = 0, i138 = 0, i139 = 0, i140 = 0;
 i140 = STACKTOP;
 STACKTOP = STACKTOP + 1104 | 0;
 i138 = i140 + 1072 | 0;
 i139 = i140 + 1048 | 0;
 i137 = i140 + 1032 | 0;
 i136 = i140 + 1020 | 0;
 i133 = i140 + 1008 | 0;
 i132 = i140 + 984 | 0;
 i134 = i140 + 972 | 0;
 i124 = i140 + 596 | 0;
 i125 = i140 + 572 | 0;
 i128 = i140 + 548 | 0;
 i127 = i140 + 524 | 0;
 i130 = i140 + 488 | 0;
 i131 = i140 + 460 | 0;
 i2 = i140 + 960 | 0;
 i6 = i140 + 948 | 0;
 i9 = i140 + 936 | 0;
 i13 = i140 + 924 | 0;
 i16 = i140 + 912 | 0;
 i18 = i140 + 900 | 0;
 i19 = i140 + 888 | 0;
 i115 = i140 + 876 | 0;
 i116 = i140 + 864 | 0;
 i117 = i140 + 852 | 0;
 i118 = i140 + 840 | 0;
 i20 = i140 + 828 | 0;
 i119 = i140 + 816 | 0;
 i120 = i140 + 804 | 0;
 i121 = i140 + 792 | 0;
 i122 = i140 + 780 | 0;
 i23 = i140 + 768 | 0;
 i24 = i140 + 756 | 0;
 i25 = i140 + 744 | 0;
 i27 = i140 + 732 | 0;
 i28 = i140 + 720 | 0;
 i29 = i140 + 708 | 0;
 i30 = i140 + 696 | 0;
 i98 = i140 + 672 | 0;
 i99 = i140 + 656 | 0;
 i100 = i140 + 644 | 0;
 i101 = i140 + 632 | 0;
 i102 = i140 + 620 | 0;
 i31 = i140 + 608 | 0;
 i32 = i140 + 584 | 0;
 i33 = i140 + 560 | 0;
 i34 = i140 + 536 | 0;
 i35 = i140 + 512 | 0;
 i36 = i140 + 472 | 0;
 i37 = i140 + 448 | 0;
 i38 = i140 + 436 | 0;
 i63 = i140 + 424 | 0;
 i82 = i140 + 400 | 0;
 i83 = i140 + 384 | 0;
 i84 = i140 + 372 | 0;
 i85 = i140 + 360 | 0;
 i39 = i140 + 348 | 0;
 i40 = i140 + 336 | 0;
 i41 = i140 + 324 | 0;
 i42 = i140 + 312 | 0;
 i43 = i140 + 300 | 0;
 i44 = i140 + 288 | 0;
 i45 = i140 + 276 | 0;
 i48 = i140 + 264 | 0;
 i49 = i140 + 252 | 0;
 i64 = i140 + 240 | 0;
 i86 = i140 + 216 | 0;
 i87 = i140 + 204 | 0;
 i88 = i140 + 192 | 0;
 i89 = i140 + 180 | 0;
 i50 = i140 + 168 | 0;
 i108 = i140 + 144 | 0;
 i109 = i140 + 132 | 0;
 i110 = i140 + 120 | 0;
 i111 = i140 + 108 | 0;
 i112 = i140 + 96 | 0;
 i113 = i140 + 84 | 0;
 i114 = i140 + 72 | 0;
 i53 = i140 + 60 | 0;
 i55 = i140 + 48 | 0;
 i57 = i140 + 36 | 0;
 i58 = i140 + 24 | 0;
 i90 = i140;
 i103 = i126;
 i59 = i103 - i1 | 0;
 L1 : do if ((i59 | 0) > 1) {
  i60 = (i59 | 0) > 3;
  if (i60 ? (HEAP8[i1 >> 0] | 0) == 103 : 0) {
   i61 = (HEAP8[i1 + 1 >> 0] | 0) == 115;
   i91 = i61;
   i61 = i61 ? i1 + 2 | 0 : i1;
  } else {
   i91 = 0;
   i61 = i1;
  }
  do switch (HEAP8[i61 >> 0] | 0) {
  case 76:
   {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_(i1, i126, i135) | 0;
    break L1;
   }
  case 84:
   {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i126, i135) | 0;
    break L1;
   }
  case 102:
   {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i126, i135) | 0;
    break L1;
   }
  case 97:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 97:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i2, 38511, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i2, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i2);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 100:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i6, 38522, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i6, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 110:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i9, 38522, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i9, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 78:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i13, 38524, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i13, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 83:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i16, 38527, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i16, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 116:
    {
     if (((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 97 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) ? (i136 = i1 + 2 | 0, i105 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i136, i126, i135) | 0, (i105 | 0) != (i136 | 0)) : 0) ? (i79 = HEAP32[i135 + 4 >> 2] | 0, (HEAP32[i135 >> 2] | 0) != (i79 | 0)) : 0) {
      i10 = i79 + -24 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i137, i10);
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i137, 0, 38529) | 0;
      HEAP32[i139 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i139 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i139 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i139, 38469) | 0;
      HEAP32[i138 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i138 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i138 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      do if (HEAP8[i10 >> 0] & 1) {
       i9 = i79 + -16 | 0;
       HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
       i6 = i79 + -20 | 0;
       HEAP32[i6 >> 2] = 0;
       i1 = HEAP8[i10 >> 0] | 0;
       if (!(i1 & 1)) i5 = 10; else {
        i5 = HEAP32[i10 >> 2] | 0;
        i1 = i5 & 255;
        i5 = (i5 & -2) + -1 | 0;
       }
       if (!(i1 & 1)) {
        i2 = (i1 & 255) >>> 1;
        if ((i1 & 255) < 22) {
         i4 = 10;
         i8 = 1;
         i7 = i2;
        } else {
         i4 = (i2 + 16 & 240) + -1 | 0;
         i8 = 1;
         i7 = i2;
        }
       } else {
        i4 = 10;
        i8 = 0;
        i7 = 0;
       }
       if ((i4 | 0) != (i5 | 0)) {
        if ((i4 | 0) == 10) {
         i3 = i10 + 1 | 0;
         i2 = HEAP32[i9 >> 2] | 0;
         if (i8) {
          _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
          _free(i2);
         } else {
          HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
          _free(i2);
         }
         HEAP8[i10 >> 0] = i7 << 1;
         break;
        }
        i2 = i4 + 1 | 0;
        i3 = _malloc(i2) | 0;
        if (!(i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0)) {
         if (i8) _memcpy(i3 | 0, i10 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
          i136 = HEAP32[i9 >> 2] | 0;
          HEAP8[i3 >> 0] = HEAP8[i136 >> 0] | 0;
          _free(i136);
         }
         HEAP32[i10 >> 2] = i2 | 1;
         HEAP32[i6 >> 2] = i7;
         HEAP32[i9 >> 2] = i3;
        }
       }
      } else {
       HEAP8[i10 + 1 >> 0] = 0;
       HEAP8[i10 >> 0] = 0;
      } while (0);
      HEAP32[i10 >> 2] = HEAP32[i138 >> 2];
      HEAP32[i10 + 4 >> 2] = HEAP32[i138 + 4 >> 2];
      HEAP32[i10 + 8 >> 2] = HEAP32[i138 + 8 >> 2];
      i1 = 0;
      while (1) {
       if ((i1 | 0) == 3) break;
       HEAP32[i138 + (i1 << 2) >> 2] = 0;
       i1 = i1 + 1 | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
      i1 = i105;
     }
     break L1;
    }
   case 122:
    {
     if (((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 97 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 122 : 0) ? (i136 = i1 + 2 | 0, i106 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i136, i126, i135) | 0, (i106 | 0) != (i136 | 0)) : 0) ? (i80 = HEAP32[i135 + 4 >> 2] | 0, (HEAP32[i135 >> 2] | 0) != (i80 | 0)) : 0) {
      i10 = i80 + -24 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i137, i10);
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i137, 0, 38529) | 0;
      HEAP32[i139 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i139 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i139 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i139, 38469) | 0;
      HEAP32[i138 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i138 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i138 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      do if (HEAP8[i10 >> 0] & 1) {
       i9 = i80 + -16 | 0;
       HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
       i6 = i80 + -20 | 0;
       HEAP32[i6 >> 2] = 0;
       i1 = HEAP8[i10 >> 0] | 0;
       if (!(i1 & 1)) i5 = 10; else {
        i5 = HEAP32[i10 >> 2] | 0;
        i1 = i5 & 255;
        i5 = (i5 & -2) + -1 | 0;
       }
       if (!(i1 & 1)) {
        i2 = (i1 & 255) >>> 1;
        if ((i1 & 255) < 22) {
         i8 = 1;
         i4 = 10;
         i7 = i2;
        } else {
         i8 = 1;
         i4 = (i2 + 16 & 240) + -1 | 0;
         i7 = i2;
        }
       } else {
        i8 = 0;
        i4 = 10;
        i7 = 0;
       }
       if ((i4 | 0) != (i5 | 0)) {
        if ((i4 | 0) == 10) {
         i3 = i10 + 1 | 0;
         i2 = HEAP32[i9 >> 2] | 0;
         if (i8) {
          _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
          _free(i2);
         } else {
          HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
          _free(i2);
         }
         HEAP8[i10 >> 0] = i7 << 1;
         break;
        }
        i2 = i4 + 1 | 0;
        i3 = _malloc(i2) | 0;
        if (!(i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0)) {
         if (i8) _memcpy(i3 | 0, i10 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
          i136 = HEAP32[i9 >> 2] | 0;
          HEAP8[i3 >> 0] = HEAP8[i136 >> 0] | 0;
          _free(i136);
         }
         HEAP32[i10 >> 2] = i2 | 1;
         HEAP32[i6 >> 2] = i7;
         HEAP32[i9 >> 2] = i3;
        }
       }
      } else {
       HEAP8[i10 + 1 >> 0] = 0;
       HEAP8[i10 >> 0] = 0;
      } while (0);
      HEAP32[i10 >> 2] = HEAP32[i138 >> 2];
      HEAP32[i10 + 4 >> 2] = HEAP32[i138 + 4 >> 2];
      HEAP32[i10 + 8 >> 2] = HEAP32[i138 + 8 >> 2];
      i1 = 0;
      while (1) {
       if ((i1 | 0) == 3) break;
       HEAP32[i138 + (i1 << 2) >> 2] = 0;
       i1 = i1 + 1 | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
      i1 = i106;
     }
     break L1;
    }
   default:
    break L1;
   }
  case 99:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 99:
    {
     if ((((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 99 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i131 = i1 + 2 | 0, i21 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i131, i126, i135) | 0, (i21 | 0) != (i131 | 0)) : 0) ? (i95 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i21, i126, i135) | 0, (i95 | 0) != (i21 | 0)) : 0) ? (i70 = i135 + 4 | 0, i22 = HEAP32[i70 >> 2] | 0, ((i22 - (HEAP32[i135 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i138, i22 + -24 | 0);
      i1 = HEAP32[i70 >> 2] | 0;
      i2 = i1 + -24 | 0;
      i3 = i1;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break;
       i135 = i3 + -24 | 0;
       HEAP32[i70 >> 2] = i135;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i135);
       i3 = HEAP32[i70 >> 2] | 0;
      }
      i3 = i1 + -48 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i134, i3);
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i134, 0, 38539) | 0;
      HEAP32[i132 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i132 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i132 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i132, 38551) | 0;
      HEAP32[i133 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i133 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i133 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = HEAP8[i138 >> 0] | 0;
      i2 = (i1 & 1) == 0;
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i133, i2 ? i138 + 1 | 0 : HEAP32[i138 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i138 + 4 >> 2] | 0) | 0;
      HEAP32[i136 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i136 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i136 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i136, 38469) | 0;
      HEAP32[i137 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i137 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i137 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i139, i137);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i139);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i136);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i133);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i132);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i134);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
      i1 = i95;
     }
     break L1;
    }
   case 108:
    {
     L138 : do if ((((i60 ? (HEAP8[i1 >> 0] | 0) == 99 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 108 : 0) ? (i137 = i1 + 2 | 0, i3 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i137, i126, i135) | 0, !((i3 | 0) == (i137 | 0) | (i3 | 0) == (i126 | 0))) : 0) ? (i123 = i135 + 4 | 0, i26 = HEAP32[i123 >> 2] | 0, (HEAP32[i135 >> 2] | 0) != (i26 | 0)) : 0) {
      i137 = i26 + -12 | 0;
      i4 = HEAP8[i137 >> 0] | 0;
      i2 = (i4 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i26 + -24 | 0, i2 ? i137 + 1 | 0 : HEAP32[i26 + -4 >> 2] | 0, i2 ? (i4 & 255) >>> 1 : HEAP32[i26 + -8 >> 2] | 0) | 0;
      i4 = HEAP32[i123 >> 2] | 0;
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i138 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i12 = i4 + -12 | 0;
      do if (HEAP8[i12 >> 0] & 1) {
       i11 = i4 + -4 | 0;
       HEAP8[HEAP32[i11 >> 2] >> 0] = 0;
       i8 = i4 + -8 | 0;
       HEAP32[i8 >> 2] = 0;
       i2 = HEAP8[i12 >> 0] | 0;
       if (!(i2 & 1)) i7 = 10; else {
        i7 = HEAP32[i12 >> 2] | 0;
        i2 = i7 & 255;
        i7 = (i7 & -2) + -1 | 0;
       }
       if (!(i2 & 1)) {
        i4 = (i2 & 255) >>> 1;
        if ((i2 & 255) < 22) {
         i10 = 1;
         i6 = 10;
         i9 = i4;
        } else {
         i10 = 1;
         i6 = (i4 + 16 & 240) + -1 | 0;
         i9 = i4;
        }
       } else {
        i10 = 0;
        i6 = 10;
        i9 = 0;
       }
       if ((i6 | 0) != (i7 | 0)) {
        if ((i6 | 0) == 10) {
         i5 = i12 + 1 | 0;
         i4 = HEAP32[i11 >> 2] | 0;
         if (i10) {
          _memcpy(i5 | 0, i4 | 0, ((i2 & 255) >>> 1) + 1 | 0) | 0;
          _free(i4);
         } else {
          HEAP8[i5 >> 0] = HEAP8[i4 >> 0] | 0;
          _free(i4);
         }
         HEAP8[i12 >> 0] = i9 << 1;
         break;
        }
        i4 = i6 + 1 | 0;
        i5 = _malloc(i4) | 0;
        if (!(i6 >>> 0 <= i7 >>> 0 & (i5 | 0) == 0)) {
         if (i10) _memcpy(i5 | 0, i12 + 1 | 0, ((i2 & 255) >>> 1) + 1 | 0) | 0; else {
          i137 = HEAP32[i11 >> 2] | 0;
          HEAP8[i5 >> 0] = HEAP8[i137 >> 0] | 0;
          _free(i137);
         }
         HEAP32[i12 >> 2] = i4 | 1;
         HEAP32[i8 >> 2] = i9;
         HEAP32[i11 >> 2] = i5;
        }
       }
      } else {
       HEAP8[i12 + 1 >> 0] = 0;
       HEAP8[i12 >> 0] = 0;
      } while (0);
      HEAP32[i12 >> 2] = HEAP32[i138 >> 2];
      HEAP32[i12 + 4 >> 2] = HEAP32[i138 + 4 >> 2];
      HEAP32[i12 + 8 >> 2] = HEAP32[i138 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i138 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i123 >> 2] | 0) + -24 | 0, 38467) | 0;
      i7 = i139 + 4 | 0;
      i8 = i139 + 8 | 0;
      i9 = i139 + 1 | 0;
      while (1) {
       if ((HEAP8[i3 >> 0] | 0) == 69) break;
       i6 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i3, i126, i135) | 0;
       if ((i6 | 0) == (i3 | 0) | (i6 | 0) == (i126 | 0)) break L138;
       i2 = HEAP32[i123 >> 2] | 0;
       if ((HEAP32[i135 >> 2] | 0) == (i2 | 0)) break L138;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i139, i2 + -24 | 0);
       i4 = HEAP32[i123 >> 2] | 0;
       i5 = i4 + -24 | 0;
       i2 = i4;
       while (1) {
        if ((i2 | 0) == (i5 | 0)) break;
        i138 = i2 + -24 | 0;
        HEAP32[i123 >> 2] = i138;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i138);
        i2 = HEAP32[i123 >> 2] | 0;
       }
       i3 = HEAP8[i139 >> 0] | 0;
       i2 = (i3 & 1) == 0;
       i3 = i2 ? (i3 & 255) >>> 1 : HEAP32[i7 >> 2] | 0;
       if (i3 | 0) {
        if ((HEAP32[i135 >> 2] | 0) == (i5 | 0)) {
         i129 = 147;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i4 + -48 | 0, i2 ? i9 : HEAP32[i8 >> 2] | 0, i3) | 0;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
       i3 = i6;
      }
      if ((i129 | 0) == 147) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
       break;
      }
      i2 = HEAP32[i123 >> 2] | 0;
      if ((HEAP32[i135 >> 2] | 0) != (i2 | 0)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -24 | 0, 38469) | 0;
       i1 = i3 + 1 | 0;
      }
     } while (0);
     break L1;
    }
   case 109:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i18, 38554, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i18, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i18);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 111:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i19, 38556, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i19, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i19);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 118:
    {
     L197 : do if ((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 99 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 118 : 0) ? (i130 = i135 + 63 | 0, i129 = HEAP8[i130 >> 0] | 0, HEAP8[i130 >> 0] = 0, i131 = i1 + 2 | 0, i62 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i131, i126, i135) | 0, HEAP8[i130 >> 0] = i129, !((i62 | 0) == (i131 | 0) | (i62 | 0) == (i126 | 0))) : 0) {
      if ((HEAP8[i62 >> 0] | 0) != 95) {
       i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i62, i126, i135) | 0;
       if ((i2 | 0) == (i62 | 0)) break;
      } else {
       i2 = i62 + 1 | 0;
       if ((i2 | 0) == (i126 | 0)) break;
       i3 = HEAP8[i2 >> 0] | 0;
       L205 : do if (i3 << 24 >> 24 == 69) {
        i5 = i135 + 4 | 0;
        i4 = HEAP32[i5 >> 2] | 0;
        i131 = HEAP32[i135 + 8 >> 2] | 0;
        i6 = i131;
        if (i4 >>> 0 < i131 >>> 0) {
         HEAP32[i4 >> 2] = 0;
         HEAP32[i4 + 4 >> 2] = 0;
         HEAP32[i4 + 8 >> 2] = 0;
         HEAP32[i4 + 12 >> 2] = 0;
         HEAP32[i4 + 16 >> 2] = 0;
         HEAP32[i4 + 20 >> 2] = 0;
         i3 = 0;
         while (1) {
          if ((i3 | 0) == 3) break;
          HEAP32[i4 + (i3 << 2) >> 2] = 0;
          i3 = i3 + 1 | 0;
         }
         i3 = i4 + 12 | 0;
         i4 = 0;
         while (1) {
          if ((i4 | 0) == 3) break;
          HEAP32[i3 + (i4 << 2) >> 2] = 0;
          i4 = i4 + 1 | 0;
         }
         HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 24;
         break;
        }
        i3 = HEAP32[i135 >> 2] | 0;
        i131 = i4 - i3 | 0;
        i5 = (i131 | 0) / 24 | 0;
        i4 = i5 + 1 | 0;
        if ((i131 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i135);
        i3 = (i6 - i3 | 0) / 24 | 0;
        if (i3 >>> 0 < 1073741823) {
         i3 = i3 << 1;
         i3 = i3 >>> 0 < i4 >>> 0 ? i4 : i3;
        } else i3 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i138, i3, i5, i135 + 12 | 0);
        i5 = i138 + 8 | 0;
        i6 = HEAP32[i5 >> 2] | 0;
        HEAP32[i6 >> 2] = 0;
        HEAP32[i6 + 4 >> 2] = 0;
        HEAP32[i6 + 8 >> 2] = 0;
        HEAP32[i6 + 12 >> 2] = 0;
        HEAP32[i6 + 16 >> 2] = 0;
        HEAP32[i6 + 20 >> 2] = 0;
        i3 = 0;
        while (1) {
         if ((i3 | 0) == 3) break;
         HEAP32[i6 + (i3 << 2) >> 2] = 0;
         i3 = i3 + 1 | 0;
        }
        i3 = i6 + 12 | 0;
        i4 = 0;
        while (1) {
         if ((i4 | 0) == 3) break;
         HEAP32[i3 + (i4 << 2) >> 2] = 0;
         i4 = i4 + 1 | 0;
        }
        HEAP32[i5 >> 2] = i6 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i135, i138);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i138);
       } else while (1) {
        if (i3 << 24 >> 24 == 69) break L205;
        i4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i126, i135) | 0;
        i3 = (i4 | 0) == (i2 | 0) | (i4 | 0) == (i126 | 0);
        if (i3) break L197;
        i3 = HEAP8[(i3 ? i2 : i4) >> 0] | 0;
        i2 = i4;
       } while (0);
       i2 = i2 + 1 | 0;
      }
      i5 = i135 + 4 | 0;
      i3 = HEAP32[i5 >> 2] | 0;
      if (((i3 - (HEAP32[i135 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i138, i3 + -24 | 0);
       i1 = HEAP32[i5 >> 2] | 0;
       i3 = i1 + -24 | 0;
       i4 = i1;
       while (1) {
        if ((i4 | 0) == (i3 | 0)) break;
        i135 = i4 + -24 | 0;
        HEAP32[i5 >> 2] = i135;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i135);
        i4 = HEAP32[i5 >> 2] | 0;
       }
       i4 = i1 + -48 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i134, i4);
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i134, 0, 38467) | 0;
       HEAP32[i132 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i132 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i132 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i1 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i132, 38558) | 0;
       HEAP32[i133 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i133 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i133 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i1 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       i1 = HEAP8[i138 >> 0] | 0;
       i3 = (i1 & 1) == 0;
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i133, i3 ? i138 + 1 | 0 : HEAP32[i138 + 8 >> 2] | 0, i3 ? (i1 & 255) >>> 1 : HEAP32[i138 + 4 >> 2] | 0) | 0;
       HEAP32[i136 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i136 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i136 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i1 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i136, 38469) | 0;
       HEAP32[i137 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i137 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i137 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i1 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i139, i137);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i4, i139);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i139);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i136);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i133);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i132);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i134);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
       i1 = i2;
      }
     } while (0);
     break L1;
    }
   default:
    break L1;
   }
  case 100:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 97:
    {
     i139 = i61 + 2 | 0;
     i11 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i139, i126, i135) | 0;
     if ((i11 | 0) == (i139 | 0)) break L1;
     i3 = i135 + 4 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((HEAP32[i135 >> 2] | 0) == (i4 | 0)) break L1;
     i10 = i4 + -24 | 0;
     L266 : do if (i91) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i117, 38561, 2); else {
      i1 = 0;
      while (1) {
       if ((i1 | 0) == 3) break L266;
       HEAP32[i117 + (i1 << 2) >> 2] = 0;
       i1 = i1 + 1 | 0;
      }
     } while (0);
     i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i117, 38564) | 0;
     HEAP32[i116 >> 2] = HEAP32[i1 >> 2];
     HEAP32[i116 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
     HEAP32[i116 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i1 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i118, (HEAP32[i3 >> 2] | 0) + -24 | 0);
     i1 = HEAP8[i118 >> 0] | 0;
     i2 = (i1 & 1) == 0;
     i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i116, i2 ? i118 + 1 | 0 : HEAP32[i118 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i118 + 4 >> 2] | 0) | 0;
     HEAP32[i115 >> 2] = HEAP32[i1 >> 2];
     HEAP32[i115 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
     HEAP32[i115 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i1 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     do if (HEAP8[i10 >> 0] & 1) {
      i9 = i4 + -16 | 0;
      HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
      i6 = i4 + -20 | 0;
      HEAP32[i6 >> 2] = 0;
      i1 = HEAP8[i10 >> 0] | 0;
      if (!(i1 & 1)) i5 = 10; else {
       i5 = HEAP32[i10 >> 2] | 0;
       i1 = i5 & 255;
       i5 = (i5 & -2) + -1 | 0;
      }
      if (!(i1 & 1)) {
       i2 = (i1 & 255) >>> 1;
       if ((i1 & 255) < 22) {
        i8 = 1;
        i4 = 10;
        i7 = i2;
       } else {
        i8 = 1;
        i4 = (i2 + 16 & 240) + -1 | 0;
        i7 = i2;
       }
      } else {
       i8 = 0;
       i4 = 10;
       i7 = 0;
      }
      if ((i4 | 0) != (i5 | 0)) {
       if ((i4 | 0) == 10) {
        i3 = i10 + 1 | 0;
        i2 = HEAP32[i9 >> 2] | 0;
        if (i8) {
         _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
         _free(i2);
        } else {
         HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
         _free(i2);
        }
        HEAP8[i10 >> 0] = i7 << 1;
        break;
       }
       i2 = i4 + 1 | 0;
       i3 = _malloc(i2) | 0;
       if (!(i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0)) {
        if (i8) _memcpy(i3 | 0, i10 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
         i139 = HEAP32[i9 >> 2] | 0;
         HEAP8[i3 >> 0] = HEAP8[i139 >> 0] | 0;
         _free(i139);
        }
        HEAP32[i10 >> 2] = i2 | 1;
        HEAP32[i6 >> 2] = i7;
        HEAP32[i9 >> 2] = i3;
       }
      }
     } else {
      HEAP8[i10 + 1 >> 0] = 0;
      HEAP8[i10 >> 0] = 0;
     } while (0);
     HEAP32[i10 >> 2] = HEAP32[i115 >> 2];
     HEAP32[i10 + 4 >> 2] = HEAP32[i115 + 4 >> 2];
     HEAP32[i10 + 8 >> 2] = HEAP32[i115 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i115 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i115);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i118);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i116);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i117);
     i1 = i11;
     break L1;
    }
   case 99:
    {
     if ((((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 100 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i131 = i1 + 2 | 0, i46 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i131, i126, i135) | 0, (i46 | 0) != (i131 | 0)) : 0) ? (i96 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i46, i126, i135) | 0, (i96 | 0) != (i46 | 0)) : 0) ? (i71 = i135 + 4 | 0, i47 = HEAP32[i71 >> 2] | 0, ((i47 - (HEAP32[i135 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i138, i47 + -24 | 0);
      i1 = HEAP32[i71 >> 2] | 0;
      i2 = i1 + -24 | 0;
      i3 = i1;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break;
       i135 = i3 + -24 | 0;
       HEAP32[i71 >> 2] = i135;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i135);
       i3 = HEAP32[i71 >> 2] | 0;
      }
      i3 = i1 + -48 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i134, i3);
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i134, 0, 38574) | 0;
      HEAP32[i132 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i132 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i132 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i132, 38551) | 0;
      HEAP32[i133 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i133 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i133 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = HEAP8[i138 >> 0] | 0;
      i2 = (i1 & 1) == 0;
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i133, i2 ? i138 + 1 | 0 : HEAP32[i138 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i138 + 4 >> 2] | 0) | 0;
      HEAP32[i136 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i136 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i136 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i136, 38469) | 0;
      HEAP32[i137 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i137 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i137 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i139, i137);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i139);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i136);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i133);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i132);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i134);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
      i1 = i96;
     }
     break L1;
    }
   case 101:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i20, 38588, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i20, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i20);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 108:
    {
     i139 = i61 + 2 | 0;
     i11 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i139, i126, i135) | 0;
     if ((i11 | 0) == (i139 | 0)) break L1;
     i3 = i135 + 4 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((HEAP32[i135 >> 2] | 0) == (i4 | 0)) break L1;
     i10 = i4 + -24 | 0;
     L342 : do if (i91) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i121, 38561, 2); else {
      i1 = 0;
      while (1) {
       if ((i1 | 0) == 3) break L342;
       HEAP32[i121 + (i1 << 2) >> 2] = 0;
       i1 = i1 + 1 | 0;
      }
     } while (0);
     i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i121, 38590) | 0;
     HEAP32[i120 >> 2] = HEAP32[i1 >> 2];
     HEAP32[i120 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
     HEAP32[i120 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i1 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i122, (HEAP32[i3 >> 2] | 0) + -24 | 0);
     i1 = HEAP8[i122 >> 0] | 0;
     i2 = (i1 & 1) == 0;
     i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i120, i2 ? i122 + 1 | 0 : HEAP32[i122 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i122 + 4 >> 2] | 0) | 0;
     HEAP32[i119 >> 2] = HEAP32[i1 >> 2];
     HEAP32[i119 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
     HEAP32[i119 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i1 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     do if (HEAP8[i10 >> 0] & 1) {
      i9 = i4 + -16 | 0;
      HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
      i6 = i4 + -20 | 0;
      HEAP32[i6 >> 2] = 0;
      i1 = HEAP8[i10 >> 0] | 0;
      if (!(i1 & 1)) i5 = 10; else {
       i5 = HEAP32[i10 >> 2] | 0;
       i1 = i5 & 255;
       i5 = (i5 & -2) + -1 | 0;
      }
      if (!(i1 & 1)) {
       i2 = (i1 & 255) >>> 1;
       if ((i1 & 255) < 22) {
        i8 = 1;
        i4 = 10;
        i7 = i2;
       } else {
        i8 = 1;
        i4 = (i2 + 16 & 240) + -1 | 0;
        i7 = i2;
       }
      } else {
       i8 = 0;
       i4 = 10;
       i7 = 0;
      }
      if ((i4 | 0) != (i5 | 0)) {
       if ((i4 | 0) == 10) {
        i3 = i10 + 1 | 0;
        i2 = HEAP32[i9 >> 2] | 0;
        if (i8) {
         _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
         _free(i2);
        } else {
         HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
         _free(i2);
        }
        HEAP8[i10 >> 0] = i7 << 1;
        break;
       }
       i2 = i4 + 1 | 0;
       i3 = _malloc(i2) | 0;
       if (!(i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0)) {
        if (i8) _memcpy(i3 | 0, i10 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
         i139 = HEAP32[i9 >> 2] | 0;
         HEAP8[i3 >> 0] = HEAP8[i139 >> 0] | 0;
         _free(i139);
        }
        HEAP32[i10 >> 2] = i2 | 1;
        HEAP32[i6 >> 2] = i7;
        HEAP32[i9 >> 2] = i3;
       }
      }
     } else {
      HEAP8[i10 + 1 >> 0] = 0;
      HEAP8[i10 >> 0] = 0;
     } while (0);
     HEAP32[i10 >> 2] = HEAP32[i119 >> 2];
     HEAP32[i10 + 4 >> 2] = HEAP32[i119 + 4 >> 2];
     HEAP32[i10 + 8 >> 2] = HEAP32[i119 + 8 >> 2];
     i1 = 0;
     while (1) {
      if ((i1 | 0) == 3) break;
      HEAP32[i119 + (i1 << 2) >> 2] = 0;
      i1 = i1 + 1 | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i119);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i122);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i120);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i121);
     i1 = i11;
     break L1;
    }
   case 110:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i126, i135) | 0;
     break L1;
    }
   case 115:
    {
     if ((((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 100 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 115 : 0) ? (i137 = i1 + 2 | 0, i51 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i137, i126, i135) | 0, (i51 | 0) != (i137 | 0)) : 0) ? (i72 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i51, i126, i135) | 0, (i72 | 0) != (i51 | 0)) : 0) ? (i73 = i135 + 4 | 0, i52 = HEAP32[i73 >> 2] | 0, ((i52 - (HEAP32[i135 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i138, i52 + -24 | 0);
      i1 = HEAP32[i73 >> 2] | 0;
      i2 = i1 + -24 | 0;
      i3 = i1;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break;
       i137 = i3 + -24 | 0;
       HEAP32[i73 >> 2] = i137;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i137);
       i3 = HEAP32[i73 >> 2] | 0;
      }
      __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i139, 39505, i138);
      i137 = HEAP8[i139 >> 0] | 0;
      i136 = (i137 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1 + -48 | 0, i136 ? i139 + 1 | 0 : HEAP32[i139 + 8 >> 2] | 0, i136 ? (i137 & 255) >>> 1 : HEAP32[i139 + 4 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
      i1 = i72;
     }
     break L1;
    }
   case 116:
    {
     if ((((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 100 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) ? (i137 = i1 + 2 | 0, i54 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i137, i126, i135) | 0, (i54 | 0) != (i137 | 0)) : 0) ? (i74 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i54, i126, i135) | 0, (i74 | 0) != (i54 | 0)) : 0) ? (i75 = i135 + 4 | 0, i56 = HEAP32[i75 >> 2] | 0, ((i56 - (HEAP32[i135 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i138, i56 + -24 | 0);
      i1 = HEAP32[i75 >> 2] | 0;
      i2 = i1 + -24 | 0;
      i3 = i1;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break;
       i137 = i3 + -24 | 0;
       HEAP32[i75 >> 2] = i137;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i137);
       i3 = HEAP32[i75 >> 2] | 0;
      }
      __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i139, 39508, i138);
      i137 = HEAP8[i139 >> 0] | 0;
      i136 = (i137 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1 + -48 | 0, i136 ? i139 + 1 | 0 : HEAP32[i139 + 8 >> 2] | 0, i136 ? (i137 & 255) >>> 1 : HEAP32[i139 + 4 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
      i1 = i74;
     }
     break L1;
    }
   case 118:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i23, 39510, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i23, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i23);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 86:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i24, 39512, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i24, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i24);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   default:
    break L1;
   }
  case 101:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 111:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i25, 39515, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i25, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i25);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 79:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i27, 39517, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i27, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i27);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 113:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i28, 39520, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i28, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i28);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   default:
    break L1;
   }
  case 103:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 101:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i29, 39523, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i29, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i29);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 116:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i30, 38514, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i30, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i30);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   default:
    break L1;
   }
  case 105:
   {
    if ((HEAP8[i61 + 1 >> 0] | 0) != 120) break L1;
    i137 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i137, i126, i135) | 0;
    if ((i2 | 0) == (i137 | 0)) break L1;
    i5 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i126, i135) | 0;
    i4 = i135 + 4 | 0;
    if ((i5 | 0) == (i2 | 0)) {
     i3 = HEAP32[i4 >> 2] | 0;
     i2 = i3 + -24 | 0;
     while (1) {
      if ((i3 | 0) == (i2 | 0)) break L1;
      i139 = i3 + -24 | 0;
      HEAP32[i4 >> 2] = i139;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i139);
      i3 = HEAP32[i4 >> 2] | 0;
     }
    }
    i2 = HEAP32[i4 >> 2] | 0;
    if (((i2 - (HEAP32[i135 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i138, i2 + -24 | 0);
    i1 = HEAP32[i4 >> 2] | 0;
    i2 = i1 + -24 | 0;
    i3 = i1;
    while (1) {
     if ((i3 | 0) == (i2 | 0)) break;
     i137 = i3 + -24 | 0;
     HEAP32[i4 >> 2] = i137;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i137);
     i3 = HEAP32[i4 >> 2] | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i139, i1 + -48 | 0);
    i3 = (HEAP32[i4 >> 2] | 0) + -24 | 0;
    __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i102, 38467, i139);
    i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i102, 39526) | 0;
    HEAP32[i101 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i101 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
    HEAP32[i101 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = HEAP8[i138 >> 0] | 0;
    i2 = (i1 & 1) == 0;
    i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i101, i2 ? i138 + 1 | 0 : HEAP32[i138 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i138 + 4 >> 2] | 0) | 0;
    HEAP32[i100 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i100 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
    HEAP32[i100 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i100, 38465) | 0;
    HEAP32[i99 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i99 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
    HEAP32[i99 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i98, i99);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i98);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i98);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i99);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i100);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i101);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i102);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
    i1 = i5;
    break L1;
   }
  case 108:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 101:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i31, 39529, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i31, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i31);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 115:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i32, 39532, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i32, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i32);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 83:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i33, 39535, 3);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i33, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i33);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 116:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i34, 39099, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i34, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i34);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   default:
    break L1;
   }
  case 109:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 105:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i35, 39539, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i35, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i35);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 73:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i36, 39541, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i36, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i36);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 108:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i37, 38588, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i37, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i37);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 76:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i38, 39544, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i38, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i38);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 109:
    {
     i2 = i1 + 2 | 0;
     if ((i2 | 0) != (i126 | 0) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) {
      i138 = i1 + 3 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i63, 39547, 2);
      i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i63, i135) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i63);
      i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
      break L1;
     }
     i4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i126, i135) | 0;
     if ((i4 | 0) == (i2 | 0)) break L1;
     i2 = HEAP32[i135 + 4 >> 2] | 0;
     if ((HEAP32[i135 >> 2] | 0) == (i2 | 0)) break L1;
     i3 = i2 + -24 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i85, i3);
     i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i85, 0, 38467) | 0;
     HEAP32[i84 >> 2] = HEAP32[i1 >> 2];
     HEAP32[i84 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
     HEAP32[i84 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i1 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i84, 39550) | 0;
     HEAP32[i83 >> 2] = HEAP32[i1 >> 2];
     HEAP32[i83 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
     HEAP32[i83 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i1 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i82, i83);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i82);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i82);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i83);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i84);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i85);
     i1 = i4;
     break L1;
    }
   default:
    break L1;
   }
  case 110:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 119:
   case 97:
    {
     L479 : do if (i60) {
      i2 = HEAP8[i1 >> 0] | 0;
      if (i2 << 24 >> 24 == 103) {
       i15 = (HEAP8[i1 + 1 >> 0] | 0) == 115;
       i3 = i15 ? i1 + 2 | 0 : i1;
       i2 = HEAP8[i3 >> 0] | 0;
      } else {
       i15 = 0;
       i3 = i1;
      }
      if (i2 << 24 >> 24 == 110) {
       i2 = HEAP8[i3 + 1 >> 0] | 0;
       switch (i2 << 24 >> 24) {
       case 97:
       case 119:
        break;
       default:
        break L479;
       }
       i13 = i2 << 24 >> 24 == 97;
       i2 = i3 + 2 | 0;
       L486 : do if ((i2 | 0) != (i126 | 0)) {
        i5 = 0;
        while (1) {
         if ((HEAP8[i2 >> 0] | 0) == 95) break;
         i3 = i2;
         i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i126, i135) | 0;
         i3 = (i2 | 0) == (i3 | 0);
         i4 = (i2 | 0) == (i126 | 0);
         if (i3 | i4) break L486; else i5 = i5 | (i3 | i4) ^ 1;
        }
        i123 = i2 + 1 | 0;
        i3 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i123, i126, i135) | 0;
        if (!((i3 | 0) == (i123 | 0) | (i3 | 0) == (i126 | 0))) {
         i2 = HEAP8[i3 >> 0] | 0;
         L492 : do if (!((i103 - i3 | 0) > 2 & i2 << 24 >> 24 == 112)) if (i2 << 24 >> 24 == 69) {
          i12 = 0;
          i14 = i3;
         } else break L486; else {
          if ((HEAP8[i3 + 1 >> 0] | 0) != 105) break L486;
          i2 = i3 + 2 | 0;
          while (1) {
           if ((HEAP8[i2 >> 0] | 0) == 69) {
            i12 = 1;
            i14 = i2;
            break L492;
           }
           i123 = i2;
           i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i126, i135) | 0;
           if ((i2 | 0) == (i123 | 0) | (i2 | 0) == (i126 | 0)) break L486;
          }
         } while (0);
         i2 = 0;
         while (1) {
          if ((i2 | 0) == 3) break;
          HEAP32[i139 + (i2 << 2) >> 2] = 0;
          i2 = i2 + 1 | 0;
         }
         L504 : do if (i12) {
          i11 = i135 + 4 | 0;
          i2 = HEAP32[i11 >> 2] | 0;
          if ((HEAP32[i135 >> 2] | 0) == (i2 | 0)) {
           i3 = i1;
           i2 = 1;
          } else {
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i137, i2 + -24 | 0);
           L507 : do if (!(HEAP8[i139 >> 0] & 1)) {
            HEAP8[i139 + 1 >> 0] = 0;
            HEAP8[i139 >> 0] = 0;
           } else {
            i7 = i139 + 8 | 0;
            i3 = HEAP32[i7 >> 2] | 0;
            HEAP8[i3 >> 0] = 0;
            i8 = i139 + 4 | 0;
            HEAP32[i8 >> 2] = 0;
            i9 = HEAP32[i139 >> 2] | 0;
            i10 = (i9 & -2) + -1 | 0;
            i4 = i9 & 255;
            do if (!(i4 & 1)) {
             i2 = i9 >>> 1 & 127;
             if ((i4 & 255) < 22) {
              _memcpy(i139 + 1 | 0, i3 | 0, (i9 >>> 1 & 127) + 1 | 0) | 0;
              _free(i3);
              break;
             }
             i3 = i2 + 16 & 240;
             i6 = i3 + -1 | 0;
             if ((i6 | 0) == (i10 | 0)) break L507;
             i4 = _malloc(i3) | 0;
             if (i6 >>> 0 <= i10 >>> 0 & (i4 | 0) == 0) break L507;
             _memcpy(i4 | 0, i139 + 1 | 0, (i9 >>> 1 & 127) + 1 | 0) | 0;
             HEAP32[i139 >> 2] = i3 | 1;
             HEAP32[i8 >> 2] = i2;
             HEAP32[i7 >> 2] = i4;
             break L507;
            } else {
             HEAP8[i139 + 1 >> 0] = 0;
             _free(i3);
             i2 = 0;
            } while (0);
            HEAP8[i139 >> 0] = i2 << 1;
           } while (0);
           HEAP32[i139 >> 2] = HEAP32[i137 >> 2];
           HEAP32[i139 + 4 >> 2] = HEAP32[i137 + 4 >> 2];
           HEAP32[i139 + 8 >> 2] = HEAP32[i137 + 8 >> 2];
           i2 = 0;
           while (1) {
            if ((i2 | 0) == 3) break;
            HEAP32[i137 + (i2 << 2) >> 2] = 0;
            i2 = i2 + 1 | 0;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
           i2 = HEAP32[i11 >> 2] | 0;
           i3 = i2 + -24 | 0;
           while (1) {
            if ((i2 | 0) == (i3 | 0)) {
             i6 = i135;
             i2 = i3;
             i129 = 409;
             break L504;
            }
            i137 = i2 + -24 | 0;
            HEAP32[i11 >> 2] = i137;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i137);
            i2 = HEAP32[i11 >> 2] | 0;
           }
          }
         } else {
          i2 = i135 + 4 | 0;
          i11 = i2;
          i6 = i135;
          i2 = HEAP32[i2 >> 2] | 0;
          i129 = 409;
         } while (0);
         if ((i129 | 0) == 409) if ((HEAP32[i6 >> 2] | 0) == (i2 | 0)) {
          i3 = i1;
          i2 = 1;
         } else {
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i136, i2 + -24 | 0);
          i3 = HEAP32[i11 >> 2] | 0;
          i4 = i3 + -24 | 0;
          i2 = i3;
          while (1) {
           if ((i2 | 0) == (i4 | 0)) break;
           i137 = i2 + -24 | 0;
           HEAP32[i11 >> 2] = i137;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i137);
           i2 = HEAP32[i11 >> 2] | 0;
          }
          i2 = 0;
          while (1) {
           if ((i2 | 0) == 3) break;
           HEAP32[i133 + (i2 << 2) >> 2] = 0;
           i2 = i2 + 1 | 0;
          }
          L539 : do if (i5) if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) {
           i3 = i1;
           i2 = 1;
          } else {
           __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i132, i3 + -48 | 0);
           L542 : do if (!(HEAP8[i133 >> 0] & 1)) {
            HEAP8[i133 + 1 >> 0] = 0;
            HEAP8[i133 >> 0] = 0;
           } else {
            i7 = i133 + 8 | 0;
            i3 = HEAP32[i7 >> 2] | 0;
            HEAP8[i3 >> 0] = 0;
            i8 = i133 + 4 | 0;
            HEAP32[i8 >> 2] = 0;
            i9 = HEAP32[i133 >> 2] | 0;
            i10 = (i9 & -2) + -1 | 0;
            i4 = i9 & 255;
            do if (!(i4 & 1)) {
             i2 = i9 >>> 1 & 127;
             if ((i4 & 255) < 22) {
              _memcpy(i133 + 1 | 0, i3 | 0, (i9 >>> 1 & 127) + 1 | 0) | 0;
              _free(i3);
              break;
             }
             i3 = i2 + 16 & 240;
             i6 = i3 + -1 | 0;
             if ((i6 | 0) == (i10 | 0)) break L542;
             i4 = _malloc(i3) | 0;
             if (i6 >>> 0 <= i10 >>> 0 & (i4 | 0) == 0) break L542;
             _memcpy(i4 | 0, i133 + 1 | 0, (i9 >>> 1 & 127) + 1 | 0) | 0;
             HEAP32[i133 >> 2] = i3 | 1;
             HEAP32[i8 >> 2] = i2;
             HEAP32[i7 >> 2] = i4;
             break L542;
            } else {
             HEAP8[i133 + 1 >> 0] = 0;
             _free(i3);
             i2 = 0;
            } while (0);
            HEAP8[i133 >> 0] = i2 << 1;
           } while (0);
           HEAP32[i133 >> 2] = HEAP32[i132 >> 2];
           HEAP32[i133 + 4 >> 2] = HEAP32[i132 + 4 >> 2];
           HEAP32[i133 + 8 >> 2] = HEAP32[i132 + 8 >> 2];
           i2 = 0;
           while (1) {
            if ((i2 | 0) == 3) break;
            HEAP32[i132 + (i2 << 2) >> 2] = 0;
            i2 = i2 + 1 | 0;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i132);
           i3 = HEAP32[i11 >> 2] | 0;
           i2 = i3 + -24 | 0;
           while (1) {
            if ((i3 | 0) == (i2 | 0)) {
             i129 = 434;
             break L539;
            }
            i137 = i3 + -24 | 0;
            HEAP32[i11 >> 2] = i137;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i137);
            i3 = HEAP32[i11 >> 2] | 0;
           }
          } else i129 = 434; while (0);
          if ((i129 | 0) == 434) {
           i2 = 0;
           while (1) {
            if ((i2 | 0) == 3) break;
            HEAP32[i134 + (i2 << 2) >> 2] = 0;
            i2 = i2 + 1 | 0;
           }
           if (i15) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj(i134, 38561, 2);
           if (i13) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i134, 39554) | 0; else __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i134, 39558) | 0;
           if (i5) {
            __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i125, 38467, i133);
            i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i125, 38516) | 0;
            HEAP32[i124 >> 2] = HEAP32[i2 >> 2];
            HEAP32[i124 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
            HEAP32[i124 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
            i3 = 0;
            while (1) {
             if ((i3 | 0) == 3) break;
             HEAP32[i2 + (i3 << 2) >> 2] = 0;
             i3 = i3 + 1 | 0;
            }
            i137 = HEAP8[i124 >> 0] | 0;
            i132 = (i137 & 1) == 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i134, i132 ? i124 + 1 | 0 : HEAP32[i124 + 8 >> 2] | 0, i132 ? (i137 & 255) >>> 1 : HEAP32[i124 + 4 >> 2] | 0) | 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i124);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i125);
           }
           i137 = HEAP8[i136 >> 0] | 0;
           i132 = (i137 & 1) == 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i134, i132 ? i136 + 1 | 0 : HEAP32[i136 + 8 >> 2] | 0, i132 ? (i137 & 255) >>> 1 : HEAP32[i136 + 4 >> 2] | 0) | 0;
           if (i12) {
            __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i127, 38519, i139);
            i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i127, 38469) | 0;
            HEAP32[i128 >> 2] = HEAP32[i2 >> 2];
            HEAP32[i128 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
            HEAP32[i128 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
            i3 = 0;
            while (1) {
             if ((i3 | 0) == 3) break;
             HEAP32[i2 + (i3 << 2) >> 2] = 0;
             i3 = i3 + 1 | 0;
            }
            i137 = HEAP8[i128 >> 0] | 0;
            i132 = (i137 & 1) == 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i134, i132 ? i128 + 1 | 0 : HEAP32[i128 + 8 >> 2] | 0, i132 ? (i137 & 255) >>> 1 : HEAP32[i128 + 4 >> 2] | 0) | 0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i128);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i127);
           };
           HEAP32[i131 >> 2] = HEAP32[i134 >> 2];
           HEAP32[i131 + 4 >> 2] = HEAP32[i134 + 4 >> 2];
           HEAP32[i131 + 8 >> 2] = HEAP32[i134 + 8 >> 2];
           i2 = 0;
           while (1) {
            if ((i2 | 0) == 3) break;
            HEAP32[i134 + (i2 << 2) >> 2] = 0;
            i2 = i2 + 1 | 0;
           }
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i130, i131);
           i2 = HEAP32[i11 >> 2] | 0;
           i137 = HEAP32[i135 + 8 >> 2] | 0;
           i5 = i137;
           if (i2 >>> 0 < i137 >>> 0) {
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i130);
            HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 24;
           } else {
            i3 = HEAP32[i135 >> 2] | 0;
            i137 = i2 - i3 | 0;
            i6 = (i137 | 0) / 24 | 0;
            i4 = i6 + 1 | 0;
            if ((i137 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i135);
            i2 = (i5 - i3 | 0) / 24 | 0;
            if (i2 >>> 0 < 1073741823) {
             i2 = i2 << 1;
             i2 = i2 >>> 0 < i4 >>> 0 ? i4 : i2;
            } else i2 = 2147483647;
            __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i138, i2, i6, i135 + 12 | 0);
            i137 = i138 + 8 | 0;
            i132 = HEAP32[i137 >> 2] | 0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i132, i130);
            HEAP32[i137 >> 2] = i132 + 24;
            __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i135, i138);
            __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i138);
           }
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i130);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i131);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i134);
           i3 = i14 + 1 | 0;
           i2 = 0;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i133);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i136);
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
         if (!i2) {
          i1 = i3;
          break L479;
         }
        }
       } while (0);
      }
     } while (0);
     break L1;
    }
   case 101:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i39, 39560, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i39, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i39);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 103:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i40, 39539, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i40, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i40);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 116:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i41, 39563, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i41, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i41);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 120:
    {
     i13 = i1 + 2 | 0;
     i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i13, i126, i135) | 0;
     if ((i2 | 0) != (i13 | 0) ? (i81 = HEAP32[i135 + 4 >> 2] | 0, (HEAP32[i135 >> 2] | 0) != (i81 | 0)) : 0) {
      i12 = i81 + -24 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i137, i12);
      i3 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i137, 0, 39565) | 0;
      HEAP32[i139 >> 2] = HEAP32[i3 >> 2];
      HEAP32[i139 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
      HEAP32[i139 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
      i4 = 0;
      while (1) {
       if ((i4 | 0) == 3) break;
       HEAP32[i3 + (i4 << 2) >> 2] = 0;
       i4 = i4 + 1 | 0;
      }
      i3 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i139, 38469) | 0;
      HEAP32[i138 >> 2] = HEAP32[i3 >> 2];
      HEAP32[i138 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
      HEAP32[i138 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
      i4 = 0;
      while (1) {
       if ((i4 | 0) == 3) break;
       HEAP32[i3 + (i4 << 2) >> 2] = 0;
       i4 = i4 + 1 | 0;
      }
      do if (HEAP8[i12 >> 0] & 1) {
       i11 = i81 + -16 | 0;
       HEAP8[HEAP32[i11 >> 2] >> 0] = 0;
       i8 = i81 + -20 | 0;
       HEAP32[i8 >> 2] = 0;
       i3 = HEAP8[i12 >> 0] | 0;
       if (!(i3 & 1)) i7 = 10; else {
        i7 = HEAP32[i12 >> 2] | 0;
        i3 = i7 & 255;
        i7 = (i7 & -2) + -1 | 0;
       }
       if (!(i3 & 1)) {
        i4 = (i3 & 255) >>> 1;
        if ((i3 & 255) < 22) {
         i6 = 10;
         i9 = i4;
         i10 = 1;
        } else {
         i6 = (i4 + 16 & 240) + -1 | 0;
         i9 = i4;
         i10 = 1;
        }
       } else {
        i6 = 10;
        i9 = 0;
        i10 = 0;
       }
       if ((i6 | 0) != (i7 | 0)) {
        if ((i6 | 0) == 10) {
         i5 = i12 + 1 | 0;
         i4 = HEAP32[i11 >> 2] | 0;
         if (i10) {
          _memcpy(i5 | 0, i4 | 0, ((i3 & 255) >>> 1) + 1 | 0) | 0;
          _free(i4);
         } else {
          HEAP8[i5 >> 0] = HEAP8[i4 >> 0] | 0;
          _free(i4);
         }
         HEAP8[i12 >> 0] = i9 << 1;
         break;
        }
        i4 = i6 + 1 | 0;
        i5 = _malloc(i4) | 0;
        if (!(i6 >>> 0 <= i7 >>> 0 & (i5 | 0) == 0)) {
         if (i10) _memcpy(i5 | 0, i12 + 1 | 0, ((i3 & 255) >>> 1) + 1 | 0) | 0; else {
          i136 = HEAP32[i11 >> 2] | 0;
          HEAP8[i5 >> 0] = HEAP8[i136 >> 0] | 0;
          _free(i136);
         }
         HEAP32[i12 >> 2] = i4 | 1;
         HEAP32[i8 >> 2] = i9;
         HEAP32[i11 >> 2] = i5;
        }
       }
      } else {
       HEAP8[i12 + 1 >> 0] = 0;
       HEAP8[i12 >> 0] = 0;
      } while (0);
      HEAP32[i12 >> 2] = HEAP32[i138 >> 2];
      HEAP32[i12 + 4 >> 2] = HEAP32[i138 + 4 >> 2];
      HEAP32[i12 + 8 >> 2] = HEAP32[i138 + 8 >> 2];
      i3 = 0;
      while (1) {
       if ((i3 | 0) == 3) break;
       HEAP32[i138 + (i3 << 2) >> 2] = 0;
       i3 = i3 + 1 | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
     } else i2 = i13;
     i1 = (i2 | 0) == (i13 | 0) ? i1 : i2;
     break L1;
    }
   default:
    break L1;
   }
  case 111:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 110:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i126, i135) | 0;
     break L1;
    }
   case 111:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i42, 39576, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i42, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i42);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 114:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i43, 39579, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i43, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i43);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 82:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i44, 39581, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i44, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i44);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   default:
    break L1;
   }
  case 112:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 109:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i45, 39584, 3);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i45, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i45);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 108:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i48, 39588, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i48, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i48);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 76:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i49, 39590, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i49, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i49);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 112:
    {
     i2 = i1 + 2 | 0;
     if ((i2 | 0) != (i126 | 0) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) {
      i138 = i1 + 3 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i64, 39593, 2);
      i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i64, i135) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i64);
      i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
      break L1;
     }
     i4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i126, i135) | 0;
     if ((i4 | 0) == (i2 | 0)) break L1;
     i2 = HEAP32[i135 + 4 >> 2] | 0;
     if ((HEAP32[i135 >> 2] | 0) == (i2 | 0)) break L1;
     i3 = i2 + -24 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i89, i3);
     i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i89, 0, 38467) | 0;
     HEAP32[i88 >> 2] = HEAP32[i1 >> 2];
     HEAP32[i88 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
     HEAP32[i88 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i1 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i88, 39596) | 0;
     HEAP32[i87 >> 2] = HEAP32[i1 >> 2];
     HEAP32[i87 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
     HEAP32[i87 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i1 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i86, i87);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i86);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i86);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i87);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i88);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i89);
     i1 = i4;
     break L1;
    }
   case 115:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i50, 39588, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i50, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i50);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 116:
    {
     if ((i59 | 0) <= 2) break L1;
     if ((HEAP8[i1 >> 0] | 0) != 112) break L1;
     if ((HEAP8[i1 + 1 >> 0] | 0) != 116) break L1;
     i139 = i1 + 2 | 0;
     i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i139, i126, i135) | 0;
     if ((i2 | 0) == (i139 | 0)) break L1;
     i5 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i126, i135) | 0;
     if ((i5 | 0) == (i2 | 0)) break L1;
     i4 = i135 + 4 | 0;
     i2 = HEAP32[i4 >> 2] | 0;
     if (((i2 - (HEAP32[i135 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L1;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i138, i2 + -24 | 0);
     i1 = HEAP32[i4 >> 2] | 0;
     i2 = i1 + -24 | 0;
     i3 = i1;
     while (1) {
      if ((i3 | 0) == (i2 | 0)) break;
      i139 = i3 + -24 | 0;
      HEAP32[i4 >> 2] = i139;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i139);
      i3 = HEAP32[i4 >> 2] | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i1 + -48 | 0, 39600) | 0;
     i1 = HEAP8[i138 >> 0] | 0;
     i139 = (i1 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[i4 >> 2] | 0) + -24 | 0, i139 ? i138 + 1 | 0 : HEAP32[i138 + 8 >> 2] | 0, i139 ? (i1 & 255) >>> 1 : HEAP32[i138 + 4 >> 2] | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
     i1 = i5;
     break L1;
    }
   default:
    break L1;
   }
  case 113:
   {
    if ((HEAP8[i61 + 1 >> 0] | 0) != 117) break L1;
    i136 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i136, i126, i135) | 0;
    if ((i2 | 0) == (i136 | 0)) break L1;
    i3 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i126, i135) | 0;
    if ((i3 | 0) == (i2 | 0)) {
     i2 = i135 + 4 | 0;
     i4 = HEAP32[i2 >> 2] | 0;
     i3 = i4 + -24 | 0;
     while (1) {
      if ((i4 | 0) == (i3 | 0)) break L1;
      i139 = i4 + -24 | 0;
      HEAP32[i2 >> 2] = i139;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i139);
      i4 = HEAP32[i2 >> 2] | 0;
     }
    }
    i4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i3, i126, i135) | 0;
    i5 = i135 + 4 | 0;
    if ((i4 | 0) == (i3 | 0)) {
     i3 = HEAP32[i5 >> 2] | 0;
     i2 = i3 + -24 | 0;
     i4 = i3;
     while (1) {
      if ((i4 | 0) == (i2 | 0)) break;
      i139 = i4 + -24 | 0;
      HEAP32[i5 >> 2] = i139;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i139);
      i4 = HEAP32[i5 >> 2] | 0;
     }
     i3 = i3 + -48 | 0;
     while (1) {
      if ((i2 | 0) == (i3 | 0)) break L1;
      i139 = i2 + -24 | 0;
      HEAP32[i5 >> 2] = i139;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i139);
      i2 = HEAP32[i5 >> 2] | 0;
     }
    }
    i2 = HEAP32[i5 >> 2] | 0;
    if (((i2 - (HEAP32[i135 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 3) break L1;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i138, i2 + -24 | 0);
    i1 = HEAP32[i5 >> 2] | 0;
    i2 = i1 + -24 | 0;
    i3 = i1;
    while (1) {
     if ((i3 | 0) == (i2 | 0)) break;
     i136 = i3 + -24 | 0;
     HEAP32[i5 >> 2] = i136;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i136);
     i3 = HEAP32[i5 >> 2] | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i139, i1 + -48 | 0);
    i1 = HEAP32[i5 >> 2] | 0;
    i2 = i1 + -24 | 0;
    i3 = i1;
    while (1) {
     if ((i3 | 0) == (i2 | 0)) break;
     i136 = i3 + -24 | 0;
     HEAP32[i5 >> 2] = i136;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i136);
     i3 = HEAP32[i5 >> 2] | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i137, i1 + -48 | 0);
    i3 = (HEAP32[i5 >> 2] | 0) + -24 | 0;
    __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i114, 38467, i137);
    i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i114, 39603) | 0;
    HEAP32[i113 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i113 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
    HEAP32[i113 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = HEAP8[i139 >> 0] | 0;
    i2 = (i1 & 1) == 0;
    i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i113, i2 ? i139 + 1 | 0 : HEAP32[i139 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i139 + 4 >> 2] | 0) | 0;
    HEAP32[i112 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i112 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
    HEAP32[i112 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i112, 39609) | 0;
    HEAP32[i111 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i111 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
    HEAP32[i111 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = HEAP8[i138 >> 0] | 0;
    i2 = (i1 & 1) == 0;
    i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i111, i2 ? i138 + 1 | 0 : HEAP32[i138 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i138 + 4 >> 2] | 0) | 0;
    HEAP32[i110 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i110 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
    HEAP32[i110 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i110, 38469) | 0;
    HEAP32[i109 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i109 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
    HEAP32[i109 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i108, i109);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i108);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i108);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i109);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i110);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i111);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i112);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i113);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i114);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
    i1 = i4;
    break L1;
   }
  case 114:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 99:
    {
     if ((((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 114 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i131 = i1 + 2 | 0, i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i131, i126, i135) | 0, (i4 | 0) != (i131 | 0)) : 0) ? (i93 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i4, i126, i135) | 0, (i93 | 0) != (i4 | 0)) : 0) ? (i65 = i135 + 4 | 0, i5 = HEAP32[i65 >> 2] | 0, ((i5 - (HEAP32[i135 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i138, i5 + -24 | 0);
      i1 = HEAP32[i65 >> 2] | 0;
      i2 = i1 + -24 | 0;
      i3 = i1;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break;
       i135 = i3 + -24 | 0;
       HEAP32[i65 >> 2] = i135;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i135);
       i3 = HEAP32[i65 >> 2] | 0;
      }
      i3 = i1 + -48 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i134, i3);
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i134, 0, 39615) | 0;
      HEAP32[i132 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i132 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i132 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i132, 38551) | 0;
      HEAP32[i133 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i133 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i133 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = HEAP8[i138 >> 0] | 0;
      i2 = (i1 & 1) == 0;
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i133, i2 ? i138 + 1 | 0 : HEAP32[i138 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i138 + 4 >> 2] | 0) | 0;
      HEAP32[i136 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i136 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i136 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i136, 38469) | 0;
      HEAP32[i137 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i137 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i137 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i139, i137);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i139);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i136);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i133);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i132);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i134);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
      i1 = i93;
     }
     break L1;
    }
   case 109:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i53, 39633, 1);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i53, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i53);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 77:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i55, 39635, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i55, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i55);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 115:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i57, 39638, 2);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i57, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i57);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 83:
    {
     i138 = i1 + 2 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i58, 39641, 3);
     i139 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i138, i126, i58, i135) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i58);
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   default:
    break L1;
   }
  case 115:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 99:
    {
     if ((((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 99 : 0) ? (i131 = i1 + 2 | 0, i7 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i131, i126, i135) | 0, (i7 | 0) != (i131 | 0)) : 0) ? (i94 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i7, i126, i135) | 0, (i94 | 0) != (i7 | 0)) : 0) ? (i66 = i135 + 4 | 0, i8 = HEAP32[i66 >> 2] | 0, ((i8 - (HEAP32[i135 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) : 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i138, i8 + -24 | 0);
      i1 = HEAP32[i66 >> 2] | 0;
      i2 = i1 + -24 | 0;
      i3 = i1;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break;
       i135 = i3 + -24 | 0;
       HEAP32[i66 >> 2] = i135;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i135);
       i3 = HEAP32[i66 >> 2] | 0;
      }
      i3 = i1 + -48 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i134, i3);
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i134, 0, 39645) | 0;
      HEAP32[i132 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i132 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i132 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i132, 38551) | 0;
      HEAP32[i133 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i133 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i133 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = HEAP8[i138 >> 0] | 0;
      i2 = (i1 & 1) == 0;
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i133, i2 ? i138 + 1 | 0 : HEAP32[i138 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i138 + 4 >> 2] | 0) | 0;
      HEAP32[i136 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i136 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i136 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i136, 38469) | 0;
      HEAP32[i137 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i137 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i137 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i139, i137);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i139);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i136);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i133);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i132);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i134);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i138);
      i1 = i94;
     }
     break L1;
    }
   case 112:
    {
     if ((i59 | 0) <= 2) break L1;
     if ((HEAP8[i1 >> 0] | 0) != 115) break L1;
     if ((HEAP8[i1 + 1 >> 0] | 0) != 112) break L1;
     i138 = i1 + 2 | 0;
     i139 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i138, i126, i135) | 0;
     i1 = (i139 | 0) == (i138 | 0) ? i1 : i139;
     break L1;
    }
   case 114:
    {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i126, i135) | 0;
     break L1;
    }
   case 116:
    {
     if (((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) ? (i134 = i1 + 2 | 0, i76 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i134, i126, i135) | 0, (i76 | 0) != (i134 | 0)) : 0) ? (i10 = HEAP32[i135 + 4 >> 2] | 0, (HEAP32[i135 >> 2] | 0) != (i10 | 0)) : 0) {
      i3 = i10 + -24 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i136, i3);
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i136, 0, 39658) | 0;
      HEAP32[i137 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i137 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i137 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i137, 38469) | 0;
      HEAP32[i139 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i139 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i139 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i138, i139);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i138);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i138);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i136);
      i1 = i76;
     }
     break L1;
    }
   case 122:
    {
     if (((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 122 : 0) ? (i134 = i1 + 2 | 0, i77 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i134, i126, i135) | 0, (i77 | 0) != (i134 | 0)) : 0) ? (i11 = HEAP32[i135 + 4 >> 2] | 0, (HEAP32[i135 >> 2] | 0) != (i11 | 0)) : 0) {
      i3 = i11 + -24 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i136, i3);
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i136, 0, 39658) | 0;
      HEAP32[i137 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i137 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i137 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i137, 38469) | 0;
      HEAP32[i139 >> 2] = HEAP32[i1 >> 2];
      HEAP32[i139 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
      HEAP32[i139 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
      i2 = 0;
      while (1) {
       if ((i2 | 0) == 3) break;
       HEAP32[i1 + (i2 << 2) >> 2] = 0;
       i2 = i2 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i138, i139);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i138);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i138);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i136);
      i1 = i77;
     }
     break L1;
    }
   case 90:
    {
     if ((i103 - i61 | 0) <= 2) break L1;
     switch (HEAP8[i61 + 2 >> 0] | 0) {
     case 84:
      break;
     case 102:
      {
       if ((((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 90 : 0) ? (i14 = i1 + 2 | 0, (HEAP8[i14 >> 0] | 0) == 102) : 0) ? (i78 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_(i14, i126, i135) | 0, (i78 | 0) != (i14 | 0)) : 0) ? (i15 = HEAP32[i135 + 4 >> 2] | 0, (HEAP32[i135 >> 2] | 0) != (i15 | 0)) : 0) {
        i3 = i15 + -24 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i136, i3);
        i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i136, 0, 39667) | 0;
        HEAP32[i137 >> 2] = HEAP32[i1 >> 2];
        HEAP32[i137 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
        HEAP32[i137 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
        i2 = 0;
        while (1) {
         if ((i2 | 0) == 3) break;
         HEAP32[i1 + (i2 << 2) >> 2] = 0;
         i2 = i2 + 1 | 0;
        }
        i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i137, 38469) | 0;
        HEAP32[i139 >> 2] = HEAP32[i1 >> 2];
        HEAP32[i139 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
        HEAP32[i139 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
        i2 = 0;
        while (1) {
         if ((i2 | 0) == 3) break;
         HEAP32[i1 + (i2 << 2) >> 2] = 0;
         i2 = i2 + 1 | 0;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i138, i139);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i138);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i138);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i136);
        i1 = i78;
       }
       break L1;
      }
     default:
      break L1;
     }
     if (((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 115 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 90 : 0) ? (i12 = i1 + 2 | 0, (HEAP8[i12 >> 0] | 0) == 84) : 0) ? (i104 = i135 + 4 | 0, i97 = ((HEAP32[i104 >> 2] | 0) - (HEAP32[i135 >> 2] | 0) | 0) / 24 | 0, i107 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i12, i126, i135) | 0, i67 = HEAP32[i135 >> 2] | 0, i92 = ((HEAP32[i104 >> 2] | 0) - i67 | 0) / 24 | 0, i67, (i107 | 0) != (i12 | 0)) : 0) {
      HEAP8[i139 >> 0] = 20;
      i1 = i139 + 1 | 0;
      i2 = 39667;
      i3 = i1 + 10 | 0;
      do {
       HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
       i1 = i1 + 1 | 0;
       i2 = i2 + 1 | 0;
      } while ((i1 | 0) < (i3 | 0));
      HEAP8[i139 + 11 >> 0] = 0;
      L867 : do if ((i97 | 0) != (i92 | 0)) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i137, i67 + (i97 * 24 | 0) | 0);
       i4 = HEAP8[i137 >> 0] | 0;
       i5 = (i4 & 1) == 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i139, i5 ? i137 + 1 | 0 : HEAP32[i137 + 8 >> 2] | 0, i5 ? (i4 & 255) >>> 1 : HEAP32[i137 + 4 >> 2] | 0) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
       i4 = i136 + 8 | 0;
       i5 = i136 + 1 | 0;
       i6 = i136 + 4 | 0;
       i1 = i97;
       while (1) {
        i1 = i1 + 1 | 0;
        if ((i1 | 0) == (i92 | 0)) break L867;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i133, (HEAP32[i135 >> 2] | 0) + (i1 * 24 | 0) | 0);
        i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i133, 0, 39101) | 0;
        HEAP32[i136 >> 2] = HEAP32[i2 >> 2];
        HEAP32[i136 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
        HEAP32[i136 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
        i3 = 0;
        while (1) {
         if ((i3 | 0) == 3) break;
         HEAP32[i2 + (i3 << 2) >> 2] = 0;
         i3 = i3 + 1 | 0;
        }
        i137 = HEAP8[i136 >> 0] | 0;
        i131 = (i137 & 1) == 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i139, i131 ? i5 : HEAP32[i4 >> 2] | 0, i131 ? (i137 & 255) >>> 1 : HEAP32[i6 >> 2] | 0) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i136);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i133);
       }
      } while (0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i139, 38469) | 0;
      i3 = i92;
      while (1) {
       if ((i3 | 0) == (i97 | 0)) break;
       i2 = HEAP32[i104 >> 2] | 0;
       i1 = i2 + -24 | 0;
       while (1) {
        if ((i2 | 0) == (i1 | 0)) break;
        i137 = i2 + -24 | 0;
        HEAP32[i104 >> 2] = i137;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i137);
        i2 = HEAP32[i104 >> 2] | 0;
       }
       i3 = i3 + -1 | 0;
      }
      HEAP32[i134 >> 2] = HEAP32[i139 >> 2];
      HEAP32[i134 + 4 >> 2] = HEAP32[i139 + 4 >> 2];
      HEAP32[i134 + 8 >> 2] = HEAP32[i139 + 8 >> 2];
      i1 = 0;
      while (1) {
       if ((i1 | 0) == 3) break;
       HEAP32[i139 + (i1 << 2) >> 2] = 0;
       i1 = i1 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i132, i134);
      i1 = HEAP32[i104 >> 2] | 0;
      i137 = HEAP32[i135 + 8 >> 2] | 0;
      i4 = i137;
      if (i1 >>> 0 < i137 >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i1, i132);
       HEAP32[i104 >> 2] = (HEAP32[i104 >> 2] | 0) + 24;
      } else {
       i2 = HEAP32[i135 >> 2] | 0;
       i137 = i1 - i2 | 0;
       i5 = (i137 | 0) / 24 | 0;
       i3 = i5 + 1 | 0;
       if ((i137 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i135);
       i1 = (i4 - i2 | 0) / 24 | 0;
       if (i1 >>> 0 < 1073741823) {
        i1 = i1 << 1;
        i1 = i1 >>> 0 < i3 >>> 0 ? i3 : i1;
       } else i1 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i138, i1, i5, i135 + 12 | 0);
       i137 = i138 + 8 | 0;
       i136 = HEAP32[i137 >> 2] | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i136, i132);
       HEAP32[i137 >> 2] = i136 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i135, i138);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i138);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i132);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i134);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
      i1 = i107;
     }
     break L1;
    }
   default:
    break L1;
   }
  case 116:
   switch (HEAP8[i61 + 1 >> 0] | 0) {
   case 105:
   case 101:
    {
     L903 : do if ((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 116 : 0) {
      i2 = HEAP8[i1 + 1 >> 0] | 0;
      switch (i2 << 24 >> 24) {
      case 105:
      case 101:
       break;
      default:
       break L903;
      }
      i3 = i1 + 2 | 0;
      if (i2 << 24 >> 24 == 101) i4 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i3, i126, i135) | 0; else i4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i3, i126, i135) | 0;
      if ((i4 | 0) != (i3 | 0) ? (i68 = HEAP32[i135 + 4 >> 2] | 0, (HEAP32[i135 >> 2] | 0) != (i68 | 0)) : 0) {
       i3 = i68 + -24 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i136, i3);
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i136, 0, 39678) | 0;
       HEAP32[i137 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i137 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i137 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i137, 38469) | 0;
       HEAP32[i139 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i139 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i139 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i138, i139);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i138);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i138);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i136);
       i1 = i4;
      }
     } while (0);
     break L1;
    }
   case 114:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc(i90, 39686);
     i2 = i135 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i139 = HEAP32[i135 + 8 >> 2] | 0;
     i4 = i139;
     if (i3 >>> 0 < i139 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i90);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else {
      i2 = HEAP32[i135 >> 2] | 0;
      i139 = i3 - i2 | 0;
      i5 = (i139 | 0) / 24 | 0;
      i3 = i5 + 1 | 0;
      if ((i139 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i135);
      i2 = (i4 - i2 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i138, i2, i5, i135 + 12 | 0);
      i139 = i138 + 8 | 0;
      i137 = HEAP32[i139 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i137, i90);
      HEAP32[i139 >> 2] = i137 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i135, i138);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i138);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i90);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 119:
    {
     if (((((i59 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 116 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 119 : 0) ? (i136 = i1 + 2 | 0, i69 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i136, i126, i135) | 0, (i69 | 0) != (i136 | 0)) : 0) ? (i17 = HEAP32[i135 + 4 >> 2] | 0, (HEAP32[i135 >> 2] | 0) != (i17 | 0)) : 0) {
      i1 = i17 + -24 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i137, i1);
      i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i137, 0, 39692) | 0;
      HEAP32[i139 >> 2] = HEAP32[i2 >> 2];
      HEAP32[i139 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
      HEAP32[i139 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
      i3 = 0;
      while (1) {
       if ((i3 | 0) == 3) break;
       HEAP32[i2 + (i3 << 2) >> 2] = 0;
       i3 = i3 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i138, i139);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i1, i138);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i138);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i139);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i137);
      i1 = i69;
     }
     break L1;
    }
   default:
    break L1;
   }
  case 57:
  case 56:
  case 55:
  case 54:
  case 53:
  case 52:
  case 51:
  case 50:
  case 49:
   {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i126, i135) | 0;
    break L1;
   }
  default:
   break L1;
  } while (0);
 } while (0);
 STACKTOP = i140;
 return i1 | 0;
}

function __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__1clES2_(i132, i131) {
 i132 = i132 | 0;
 i131 = i131 | 0;
 var i1 = 0, i2 = 0, d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i69 = 0, i70 = 0, i71 = 0, i72 = 0, i73 = 0, i74 = 0, i75 = 0, i76 = 0, i77 = 0, i78 = 0, i79 = 0, i80 = 0, i81 = 0, i82 = 0, i83 = 0, i84 = 0, i85 = 0, i86 = 0, i87 = 0, i88 = 0, i89 = 0, i90 = 0, i91 = 0, i92 = 0, i93 = 0, i94 = 0, i95 = 0, i96 = 0, i97 = 0, i98 = 0, i99 = 0, i100 = 0, i101 = 0, i102 = 0, i103 = 0, i104 = 0, i105 = 0, i106 = 0, i107 = 0, i108 = 0, i109 = 0, i110 = 0, i111 = 0, i112 = 0, i113 = 0, i114 = 0, i115 = 0, i116 = 0, i117 = 0, i118 = 0, i119 = 0, i120 = 0, i121 = 0, i122 = 0, i123 = 0, i124 = 0, i125 = 0, i126 = 0, i127 = 0, i128 = 0, i129 = 0, i130 = 0, i133 = 0, i134 = 0, i135 = 0;
 i135 = STACKTOP;
 STACKTOP = STACKTOP + 704 | 0;
 i134 = i135 + 72 | 0;
 i129 = i135 + 40 | 0;
 i130 = i135 + 368 | 0;
 i90 = i135 + 692 | 0;
 i26 = i135 + 688 | 0;
 i4 = i135 + 684 | 0;
 i7 = i135 + 680 | 0;
 i19 = i135 + 676 | 0;
 i39 = i135 + 672 | 0;
 i40 = i135 + 668 | 0;
 i8 = i135 + 656 | 0;
 i9 = i135 + 652 | 0;
 i10 = i135 + 648 | 0;
 i11 = i135 + 644 | 0;
 i5 = i135 + 640 | 0;
 i6 = i135 + 636 | 0;
 i25 = i135 + 632 | 0;
 i34 = i135 + 628 | 0;
 i82 = i135 + 616 | 0;
 i35 = i135 + 604 | 0;
 i13 = i135 + 600 | 0;
 i14 = i135 + 596 | 0;
 i15 = i135 + 592 | 0;
 i27 = i135 + 588 | 0;
 i16 = i135 + 56 | 0;
 i17 = i135 + 584 | 0;
 i18 = i135 + 580 | 0;
 i47 = i135 + 576 | 0;
 i58 = i135 + 572 | 0;
 i68 = i135 + 568 | 0;
 i48 = i135 + 564 | 0;
 i69 = i135 + 552 | 0;
 i28 = i135 + 548 | 0;
 i29 = i135 + 544 | 0;
 i20 = i135 + 532 | 0;
 i21 = i135 + 528 | 0;
 i36 = i135 + 524 | 0;
 i37 = i135 + 520 | 0;
 i38 = i135 + 516 | 0;
 i49 = i135 + 512 | 0;
 i50 = i135 + 508 | 0;
 i51 = i135 + 504 | 0;
 i52 = i135 + 500 | 0;
 i59 = i135 + 496 | 0;
 i70 = i135 + 484 | 0;
 i71 = i135 + 480 | 0;
 i53 = i135 + 476 | 0;
 i96 = i135 + 472 | 0;
 i100 = i135 + 468 | 0;
 i72 = i135 + 464 | 0;
 i73 = i135 + 460 | 0;
 i74 = i135 + 456 | 0;
 i75 = i135 + 452 | 0;
 i92 = i135 + 448 | 0;
 i93 = i135 + 444 | 0;
 i41 = i135 + 440 | 0;
 i125 = i135 + 220 | 0;
 i83 = i135 + 436 | 0;
 i84 = i135 + 432 | 0;
 i85 = i135 + 428 | 0;
 i22 = i135 + 424 | 0;
 i54 = i135 + 420 | 0;
 i42 = i135 + 416 | 0;
 i86 = i135 + 412 | 0;
 i43 = i135 + 408 | 0;
 i44 = i135 + 404 | 0;
 i64 = i135 + 400 | 0;
 i65 = i135 + 396 | 0;
 i66 = i135 + 384 | 0;
 i67 = i135 + 372 | 0;
 i97 = i135 + 364 | 0;
 i101 = i135 + 360 | 0;
 i103 = i135 + 356 | 0;
 i107 = i135 + 352 | 0;
 i104 = i135 + 348 | 0;
 i114 = i135 + 344 | 0;
 i55 = i135 + 340 | 0;
 i56 = i135 + 328 | 0;
 i94 = i135 + 324 | 0;
 i89 = i135 + 320 | 0;
 i60 = i135 + 316 | 0;
 i61 = i135 + 312 | 0;
 i62 = i135 + 300 | 0;
 i63 = i135 + 288 | 0;
 i95 = i135 + 284 | 0;
 i105 = i135 + 280 | 0;
 i108 = i135 + 276 | 0;
 i78 = i135 + 272 | 0;
 i79 = i135 + 268 | 0;
 i80 = i135 + 256 | 0;
 i81 = i135 + 244 | 0;
 i102 = i135 + 240 | 0;
 i109 = i135 + 236 | 0;
 i111 = i135 + 232 | 0;
 i110 = i135 + 228 | 0;
 i113 = i135 + 224 | 0;
 i112 = i135 + 216 | 0;
 i124 = i135 + 212 | 0;
 i127 = i135 + 208 | 0;
 i126 = i135 + 204 | 0;
 i128 = i135 + 200 | 0;
 i30 = i135 + 196 | 0;
 i31 = i135 + 192 | 0;
 i32 = i135 + 188 | 0;
 i33 = i135 + 184 | 0;
 i76 = i135 + 180 | 0;
 i57 = i135 + 176 | 0;
 i87 = i135 + 172 | 0;
 i77 = i135 + 164 | 0;
 i45 = i135 + 160 | 0;
 i46 = i135 + 148 | 0;
 i88 = i135 + 144 | 0;
 i122 = i135 + 168 | 0;
 i98 = i135 + 140 | 0;
 i99 = i135 + 16 | 0;
 i121 = i135 + 32 | 0;
 i115 = i135 + 136 | 0;
 i116 = i135 + 124 | 0;
 i117 = i135 + 120 | 0;
 i118 = i135;
 i119 = i135 + 108 | 0;
 i120 = i135 + 96 | 0;
 i23 = i135 + 84 | 0;
 i24 = i135 + 80 | 0;
 i133 = HEAP32[i132 >> 2] | 0;
 HEAP32[i26 >> 2] = HEAP32[i131 >> 2];
 HEAP32[i134 >> 2] = HEAP32[i26 >> 2];
 __ZN4wasm14AstStackHelperC2EN6cashew3RefE(i90, i134);
 if ((HEAP32[i133 + 44 >> 2] | 0) > 1) {
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42128, 21958) | 0;
  __ZN6cashew5Value9stringifyERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEb(HEAP32[i131 >> 2] | 0, 42128, 0);
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(42128, 10) | 0;
 }
 i26 = __ZN6cashew3RefixEj(i131, 0) | 0;
 i26 = __ZN6cashew5Value10getIStringEv(HEAP32[i26 >> 2] | 0) | 0;
 i26 = HEAP32[i26 >> 2] | 0;
 L4 : do if ((i26 | 0) != (HEAP32[10262] | 0)) {
  if ((i26 | 0) == (HEAP32[10263] | 0)) {
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0, 41056) | 0) {
    i130 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 1) | 0;
    i130 = __ZN6cashew5Value10getIStringEv(HEAP32[i130 >> 2] | 0) | 0;
    HEAP32[i129 >> 2] = HEAP32[i130 >> 2];
    do if (!(__ZNKSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(HEAP32[i132 + 8 >> 2] | 0, i129) | 0)) {
     i1 = i133 + 48 | 0;
     if ((__ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(i1, i129) | 0) == (i133 + 52 | 0)) ___assert_fail(21963, 13478, 805, 38640); else {
      i130 = __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEEixERSA_(i1, i129) | 0;
      i129 = HEAP32[i130 >> 2] | 0;
      i130 = HEAP32[i130 + 4 >> 2] | 0;
      i133 = i133 + 4 | 0;
      i12 = __ZN10MixedArena5allocIN4wasm5StoreEEEPT_v(HEAP32[i133 >> 2] | 0) | 0;
      i128 = __ZN4wasm15getWasmTypeSizeENS_8WasmTypeE(i130) | 0;
      HEAP32[i12 + 8 >> 2] = i128;
      HEAP32[i12 + 12 >> 2] = 0;
      HEAP32[i12 + 16 >> 2] = i128;
      i133 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i133 >> 2] | 0) | 0;
      HEAP32[i133 + 8 >> 2] = 1;
      HEAP32[i133 + 16 >> 2] = i129;
      HEAP32[i12 + 20 >> 2] = i133;
      i133 = HEAP32[i132 + 4 >> 2] | 0;
      i132 = __ZN6cashew3RefixEj(i131, 3) | 0;
      HEAP32[i19 >> 2] = HEAP32[i132 >> 2];
      HEAP32[i134 >> 2] = HEAP32[i19 >> 2];
      i134 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i133, i134) | 0;
      HEAP32[i12 + 24 >> 2] = i134;
      HEAP32[i12 + 4 >> 2] = i130;
      break;
     }
    } else {
     i12 = __ZN10MixedArena5allocIN4wasm8SetLocalEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
     i133 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 1) | 0;
     i133 = __ZN6cashew5Value10getIStringEv(HEAP32[i133 >> 2] | 0) | 0;
     HEAP32[i12 + 8 >> 2] = HEAP32[i133 >> 2];
     i133 = HEAP32[i132 + 4 >> 2] | 0;
     i132 = __ZN6cashew3RefixEj(i131, 3) | 0;
     HEAP32[i7 >> 2] = HEAP32[i132 >> 2];
     HEAP32[i134 >> 2] = HEAP32[i7 >> 2];
     i134 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i133, i134) | 0;
     HEAP32[i12 + 12 >> 2] = i134;
     HEAP32[i12 + 4 >> 2] = HEAP32[i134 + 4 >> 2];
    } while (0);
    i1 = i12;
    break;
   }
   if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0, 41104) | 0)) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i8, 22064, 16);
    HEAP32[i9 >> 2] = HEAP32[i131 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i9 >> 2];
    __ZN4wasmL8abort_onENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN6cashew3RefE(i8, i134);
   }
   i128 = __ZN6cashew3RefixEj(i131, 2) | 0;
   HEAP32[i129 >> 2] = HEAP32[i128 >> 2];
   if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i129, 1) | 0, 0) | 0, 41056) | 0)) ___assert_fail(22011, 13478, 819, 38640);
   i1 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i129, 1) | 0, 1) | 0;
   i1 = __ZN6cashew5Value10getIStringEv(HEAP32[i1 >> 2] | 0) | 0;
   HEAP32[i130 >> 2] = HEAP32[i1 >> 2];
   i1 = i133 + 60 | 0;
   if ((__ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(i1, i130) | 0) == (i133 + 64 | 0)) ___assert_fail(22032, 13478, 821, 38640);
   i4 = __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEEixERSA_(i1, i130) | 0;
   i6 = i133 + 4 | 0;
   i1 = __ZN10MixedArena5allocIN4wasm5StoreEEEPT_v(HEAP32[i6 >> 2] | 0) | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 + 8 >> 2] = i2;
   HEAP32[i1 + 12 >> 2] = 0;
   HEAP32[i1 + 16 >> 2] = i2;
   i2 = HEAP32[i132 + 12 >> 2] | 0;
   i5 = __ZN6cashew3RefixEj(i129, 2) | 0;
   HEAP32[i39 >> 2] = HEAP32[i5 >> 2];
   i5 = HEAP32[i4 >> 2] | 0;
   HEAP32[i134 >> 2] = HEAP32[i39 >> 2];
   i5 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEEclES5_j(i2, i134, i5) | 0;
   HEAP32[i1 + 20 >> 2] = i5;
   i5 = HEAP32[i132 + 4 >> 2] | 0;
   i2 = __ZN6cashew3RefixEj(i131, 3) | 0;
   HEAP32[i40 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i40 >> 2];
   i5 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i5, i134) | 0;
   i2 = i1 + 24 | 0;
   HEAP32[i2 >> 2] = i5;
   i4 = __ZN4wasm13asmToWasmTypeE7AsmType(HEAP32[i4 + 8 >> 2] | 0) | 0;
   HEAP32[i1 + 4 >> 2] = i4;
   i5 = HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] | 0;
   do if ((i4 | 0) != (i5 | 0)) if ((i4 | 0) == 3 & (i5 | 0) == 4) {
    i134 = __ZN10MixedArena5allocIN4wasm5UnaryEEEPT_v(HEAP32[i6 >> 2] | 0) | 0;
    HEAP32[i134 + 8 >> 2] = 23;
    HEAP32[i134 + 12 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i134 + 4 >> 2] = 3;
    HEAP32[i2 >> 2] = i134;
    break;
   } else _abort(); while (0);
   break;
  }
  if ((i26 | 0) == (HEAP32[10268] | 0)) {
   if (!(!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i131, 1) | 0, 41188) | 0) ? !(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i131, 1) | 0, 41252) | 0) : 0)) i106 = 27;
   if (((i106 | 0) == 27 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 3) | 0, 0) | 0, 41112) | 0 : 0) ? (i128 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 3) | 0, 1) | 0, i128 = __ZN6cashew5Value9getNumberEv(HEAP32[i128 >> 2] | 0) | 0, +HEAPF64[i128 >> 3] == 0.0) : 0) {
    i1 = HEAP32[i132 + 4 >> 2] | 0;
    i132 = __ZN6cashew3RefixEj(i131, 2) | 0;
    HEAP32[i10 >> 2] = HEAP32[i132 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i10 >> 2];
    i1 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i1, i134) | 0;
    __ZN4wasm15Asm2WasmBuilder11fixCallTypeEPNS_10ExpressionENS_8WasmTypeE(i133, i1, 1);
    break;
   }
   i9 = __ZN6cashew3RefixEj(i131, 1) | 0;
   i9 = __ZN6cashew5Value10getIStringEv(HEAP32[i9 >> 2] | 0) | 0;
   HEAP32[i11 >> 2] = HEAP32[i9 >> 2];
   i9 = __ZN6cashew3RefixEj(i131, 2) | 0;
   HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
   i9 = __ZN6cashew3RefixEj(i131, 3) | 0;
   HEAP32[i6 >> 2] = HEAP32[i9 >> 2];
   i9 = HEAP32[i132 + 16 >> 2] | 0;
   HEAP32[i130 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i129 >> 2] = HEAP32[i5 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i6 >> 2];
   i130 = __ZN4wasm15Asm2WasmBuilder16parseAsmBinaryOpEN6cashew7IStringENS1_3RefES3_P7AsmData(i133, i130, i129, i134, i9) | 0;
   i9 = i133 + 4 | 0;
   i1 = __ZN10MixedArena5allocIN4wasm6BinaryEEEPT_v(HEAP32[i9 >> 2] | 0) | 0;
   HEAP32[i1 + 8 >> 2] = i130;
   i7 = i132 + 4 | 0;
   i132 = HEAP32[i7 >> 2] | 0;
   i8 = __ZN6cashew3RefixEj(i131, 2) | 0;
   HEAP32[i25 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i25 >> 2];
   i132 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i132, i134) | 0;
   i8 = i1 + 12 | 0;
   HEAP32[i8 >> 2] = i132;
   i7 = HEAP32[i7 >> 2] | 0;
   i132 = __ZN6cashew3RefixEj(i131, 3) | 0;
   HEAP32[i34 >> 2] = HEAP32[i132 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i34 >> 2];
   i134 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i7, i134) | 0;
   i7 = i1 + 16 | 0;
   HEAP32[i7 >> 2] = i134;
   __ZN4wasm6Binary8finalizeEv(i1);
   if ((i130 | 0) == 5 ? ((HEAP32[i1 + 4 >> 2] | 0) + -3 | 0) >>> 0 < 2 : 0) {
    i1 = __ZN10MixedArena5allocIN4wasm10CallImportEEEPT_v(HEAP32[i9 >> 2] | 0) | 0;
    HEAP32[i1 + 20 >> 2] = HEAP32[10198];
    i4 = i1 + 8 | 0;
    i5 = i1 + 12 | 0;
    i2 = HEAP32[i5 >> 2] | 0;
    i6 = i1 + 16 | 0;
    if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
     __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i4, i8);
     i2 = HEAP32[i5 >> 2] | 0;
    } else {
     HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
     i2 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
     HEAP32[i5 >> 2] = i2;
    }
    if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i4, i7); else {
     HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
    }
    HEAP32[i1 + 4 >> 2] = 4;
    if (HEAP8[47023] | 0) break;
    HEAP8[47023] = 1;
    i134 = __ZN10MixedArena5allocIN4wasm6ImportEEEPT_v(HEAP32[i9 >> 2] | 0) | 0;
    HEAP32[i134 >> 2] = HEAP32[10198];
    HEAP32[i134 + 4 >> 2] = HEAP32[10197];
    HEAP32[i134 + 8 >> 2] = HEAP32[10198];
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i82, 22081, 3);
    i132 = __ZN4wasm18ensureFunctionTypeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_6ModuleER10MixedArena(i82, HEAP32[i133 >> 2] | 0, HEAP32[i9 >> 2] | 0) | 0;
    HEAP32[i134 + 12 >> 2] = i132;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i82);
    __ZN4wasm6Module9addImportEPNS_6ImportE(HEAP32[i133 >> 2] | 0, i134);
    break;
   }
   break;
  }
  if ((i26 | 0) == (HEAP32[10278] | 0)) {
   i1 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
   i134 = __ZN6cashew3RefixEj(i131, 1) | 0;
   i134 = __ZN6cashew5Value9getNumberEv(HEAP32[i134 >> 2] | 0) | 0;
   d3 = +HEAPF64[i134 >> 3];
   do if (!(__ZN4wasm12isSInteger32Ed(d3) | 0)) if (__ZN4wasm12isUInteger32Ed(d3) | 0) {
    i2 = __ZN4wasm12toUInteger32Ed(d3) | 0;
    HEAP32[i1 + 8 >> 2] = 1;
    HEAP32[i1 + 16 >> 2] = i2;
    i2 = 1;
    break;
   } else {
    HEAP32[i1 + 8 >> 2] = 4;
    HEAPF64[i1 + 16 >> 3] = d3;
    i2 = 4;
    break;
   } else {
    i2 = __ZN4wasm12toSInteger32Ed(d3) | 0;
    HEAP32[i1 + 8 >> 2] = 1;
    HEAP32[i1 + 16 >> 2] = i2;
    i2 = 1;
   } while (0);
   HEAP32[i1 + 4 >> 2] = i2;
   break;
  }
  if ((i26 | 0) == (HEAP32[10264] | 0)) {
   i1 = __ZN6cashew3RefixEj(i131, 1) | 0;
   i1 = __ZN6cashew5Value10getIStringEv(HEAP32[i1 >> 2] | 0) | 0;
   i1 = HEAP32[i1 >> 2] | 0;
   HEAP32[i134 >> 2] = i1;
   do if (!(__ZNKSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(HEAP32[i132 + 8 >> 2] | 0, i134) | 0)) {
    if ((i1 | 0) == (HEAP32[10206] | 0)) {
     i1 = i133 + 4 | 0;
     i2 = __ZN10MixedArena5allocIN4wasm10CallImportEEEPT_v(HEAP32[i1 >> 2] | 0) | 0;
     HEAP32[i2 + 20 >> 2] = HEAP32[10206];
     HEAP32[i2 + 4 >> 2] = 0;
     if (HEAP8[47024] | 0) break;
     HEAP8[47024] = 1;
     i134 = __ZN10MixedArena5allocIN4wasm6ImportEEEPT_v(HEAP32[i1 >> 2] | 0) | 0;
     HEAP32[i134 >> 2] = HEAP32[10206];
     HEAP32[i134 + 4 >> 2] = HEAP32[10197];
     HEAP32[i134 + 8 >> 2] = HEAP32[10206];
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i35, 22085, 1);
     i132 = __ZN4wasm18ensureFunctionTypeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_6ModuleER10MixedArena(i35, HEAP32[i133 >> 2] | 0, HEAP32[i1 >> 2] | 0) | 0;
     HEAP32[i134 + 12 >> 2] = i132;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i35);
     __ZN4wasm6Module9addImportEPNS_6ImportE(HEAP32[i133 >> 2] | 0, i134);
     break;
    }
    i1 = i133 + 48 | 0;
    if ((__ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(i1, i134) | 0) == (i133 + 52 | 0)) ___assert_fail(21963, 13478, 915, 38640); else {
     i134 = __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEEixERSA_(i1, i134) | 0;
     i132 = HEAP32[i134 >> 2] | 0;
     i134 = HEAP32[i134 + 4 >> 2] | 0;
     i133 = i133 + 4 | 0;
     i2 = __ZN10MixedArena5allocIN4wasm4LoadEEEPT_v(HEAP32[i133 >> 2] | 0) | 0;
     i131 = __ZN4wasm15getWasmTypeSizeENS_8WasmTypeE(i134) | 0;
     HEAP32[i2 + 8 >> 2] = i131;
     HEAP8[i2 + 12 >> 0] = 1;
     HEAP32[i2 + 16 >> 2] = 0;
     HEAP32[i2 + 20 >> 2] = i131;
     i133 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i133 >> 2] | 0) | 0;
     HEAP32[i133 + 8 >> 2] = 1;
     HEAP32[i133 + 16 >> 2] = i132;
     HEAP32[i2 + 24 >> 2] = i133;
     HEAP32[i2 + 4 >> 2] = i134;
     break;
    }
   } else {
    i2 = __ZN10MixedArena5allocIN4wasm8GetLocalEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
    HEAP32[i2 + 8 >> 2] = i1;
    i134 = __ZN4wasm13asmToWasmTypeE7AsmType(__ZN7AsmData7getTypeERKN6cashew7IStringE(HEAP32[i132 + 16 >> 2] | 0, i134) | 0) | 0;
    HEAP32[i2 + 4 >> 2] = i134;
   } while (0);
   i1 = i2;
   break;
  }
  if ((i26 | 0) == (HEAP32[10276] | 0)) {
   i82 = __ZN6cashew3RefixEj(i131, 1) | 0;
   HEAP32[i129 >> 2] = HEAP32[i82 >> 2];
   if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i129, 0) | 0, 41056) | 0)) ___assert_fail(22087, 13478, 929, 38640);
   i2 = __ZN6cashew3RefixEj(i129, 1) | 0;
   i2 = __ZN6cashew5Value10getIStringEv(HEAP32[i2 >> 2] | 0) | 0;
   HEAP32[i130 >> 2] = HEAP32[i2 >> 2];
   i2 = i133 + 60 | 0;
   if ((__ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(i2, i130) | 0) == (i133 + 64 | 0)) ___assert_fail(22032, 13478, 931, 38640); else {
    i130 = __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEEixERSA_(i2, i130) | 0;
    i1 = __ZN10MixedArena5allocIN4wasm4LoadEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
    i133 = HEAP32[i130 >> 2] | 0;
    HEAP32[i1 + 8 >> 2] = i133;
    HEAP8[i1 + 12 >> 0] = HEAP8[i130 + 5 >> 0] | 0;
    HEAP32[i1 + 16 >> 2] = 0;
    HEAP32[i1 + 20 >> 2] = i133;
    i132 = HEAP32[i132 + 12 >> 2] | 0;
    i133 = __ZN6cashew3RefixEj(i131, 2) | 0;
    HEAP32[i13 >> 2] = HEAP32[i133 >> 2];
    i133 = HEAP32[i130 >> 2] | 0;
    HEAP32[i134 >> 2] = HEAP32[i13 >> 2];
    i134 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEEclES5_j(i132, i134, i133) | 0;
    HEAP32[i1 + 24 >> 2] = i134;
    i134 = __ZN4wasm11getWasmTypeEjb(HEAP32[i130 >> 2] | 0, (HEAP8[i130 + 4 >> 0] | 0) == 0) | 0;
    HEAP32[i1 + 4 >> 2] = i134;
    break;
   }
  }
  if ((i26 | 0) == (HEAP32[10287] | 0)) {
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i131, 1) | 0, 41180) | 0) {
    HEAP32[i14 >> 2] = HEAP32[i131 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i14 >> 2];
    __ZN4wasm15Asm2WasmBuilder12checkLiteralEN6cashew3RefE(i129, i133, i134);
    L95 : do if (!(HEAP32[i129 >> 2] | 0)) {
     i1 = HEAP32[i132 + 4 >> 2] | 0;
     i132 = __ZN6cashew3RefixEj(i131, 2) | 0;
     HEAP32[i15 >> 2] = HEAP32[i132 >> 2];
     HEAP32[i134 >> 2] = HEAP32[i15 >> 2];
     i1 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i1, i134) | 0;
     switch (HEAP32[i1 + 4 >> 2] | 0) {
     case 1:
      {
       i132 = __ZN10MixedArena5allocIN4wasm5UnaryEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
       i131 = __ZN6cashew3RefixEj(i131, 2) | 0;
       HEAP32[i27 >> 2] = HEAP32[i131 >> 2];
       HEAP32[i134 >> 2] = HEAP32[i27 >> 2];
       i134 = __ZN4wasm15Asm2WasmBuilder18isUnsignedCoercionEN6cashew3RefE(i133, i134) | 0;
       HEAP32[i132 + 8 >> 2] = i134 ? 19 : 18;
       HEAP32[i132 + 12 >> 2] = i1;
       HEAP32[i132 + 4 >> 2] = 4;
       i1 = i132;
       break L95;
      }
     case 3:
      {
       i134 = __ZN10MixedArena5allocIN4wasm5UnaryEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
       HEAP32[i134 + 8 >> 2] = 22;
       HEAP32[i134 + 12 >> 2] = i1;
       HEAP32[i134 + 4 >> 2] = 4;
       i1 = i134;
       break L95;
      }
     default:
      {
       __ZN4wasm15Asm2WasmBuilder11fixCallTypeEPNS_10ExpressionENS_8WasmTypeE(i133, i1, 4);
       break L95;
      }
     }
    } else {
     i1 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
     i134 = i1 + 8 | 0;
     HEAP32[i134 >> 2] = HEAP32[i129 >> 2];
     HEAP32[i134 + 4 >> 2] = HEAP32[i129 + 4 >> 2];
     HEAP32[i134 + 8 >> 2] = HEAP32[i129 + 8 >> 2];
     HEAP32[i134 + 12 >> 2] = HEAP32[i129 + 12 >> 2];
     HEAP32[i1 + 4 >> 2] = HEAP32[i134 >> 2];
    } while (0);
    break;
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i131, 1) | 0, 41184) | 0) {
    do if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0, 41112) | 0)) {
     if ((__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0, 41148) | 0 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 1) | 0, 41180) | 0 : 0) ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 2) | 0, 0) | 0, 41112) | 0 : 0) break;
     i4 = __ZN6cashew3RefixEj(i131, 2) | 0;
     HEAP32[i18 >> 2] = HEAP32[i4 >> 2];
     i4 = HEAP32[i132 + 16 >> 2] | 0;
     HEAP32[i134 >> 2] = HEAP32[i18 >> 2];
     i4 = __ZN4wasm15Asm2WasmBuilder13detectAsmTypeEN6cashew3RefEP7AsmData(i133, i134, i4) | 0;
     i1 = i133 + 4 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     if (!i4) {
      i133 = __ZN10MixedArena5allocIN4wasm6BinaryEEEPT_v(i2) | 0;
      HEAP32[i133 + 8 >> 2] = 1;
      i1 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i1 >> 2] | 0) | 0;
      HEAP32[i1 + 8 >> 2] = 1;
      HEAP32[i1 + 16 >> 2] = 0;
      HEAP32[i1 + 4 >> 2] = 1;
      HEAP32[i133 + 12 >> 2] = i1;
      i1 = HEAP32[i132 + 4 >> 2] | 0;
      i132 = __ZN6cashew3RefixEj(i131, 2) | 0;
      HEAP32[i47 >> 2] = HEAP32[i132 >> 2];
      HEAP32[i134 >> 2] = HEAP32[i47 >> 2];
      i1 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i1, i134) | 0;
      HEAP32[i133 + 16 >> 2] = i1;
      HEAP32[i133 + 4 >> 2] = 1;
      i1 = i133;
      break L4;
     }
     i1 = __ZN10MixedArena5allocIN4wasm5UnaryEEEPT_v(i2) | 0;
     HEAP32[i1 + 8 >> 2] = 3;
     i133 = HEAP32[i132 + 4 >> 2] | 0;
     i132 = __ZN6cashew3RefixEj(i131, 2) | 0;
     HEAP32[i58 >> 2] = HEAP32[i132 >> 2];
     HEAP32[i134 >> 2] = HEAP32[i58 >> 2];
     i134 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i133, i134) | 0;
     HEAP32[i1 + 12 >> 2] = i134;
     switch (i4 | 0) {
     case 1:
      {
       HEAP32[i1 + 4 >> 2] = 4;
       break;
      }
     case 2:
      {
       HEAP32[i1 + 4 >> 2] = 3;
       break;
      }
     default:
      _abort();
     }
     break L4;
    } while (0);
    i1 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
    i132 = i1 + 8 | 0;
    HEAP32[i17 >> 2] = HEAP32[i131 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i17 >> 2];
    __ZN4wasm15Asm2WasmBuilder10getLiteralEN6cashew3RefE(i16, i133, i134);
    HEAP32[i132 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i132 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
    HEAP32[i132 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
    HEAP32[i132 + 12 >> 2] = HEAP32[i16 + 12 >> 2];
    HEAP32[i1 + 4 >> 2] = HEAP32[i132 >> 2];
    break;
   }
   if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i131, 1) | 0, 41204) | 0)) {
    if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i131, 1) | 0, 41200) | 0)) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i20, 22141, 9);
     HEAP32[i21 >> 2] = HEAP32[i131 >> 2];
     HEAP32[i134 >> 2] = HEAP32[i21 >> 2];
     __ZN4wasmL8abort_onENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN6cashew3RefE(i20, i134);
    }
    i129 = i133 + 4 | 0;
    i1 = __ZN10MixedArena5allocIN4wasm6BinaryEEEPT_v(HEAP32[i129 >> 2] | 0) | 0;
    HEAP32[i1 + 8 >> 2] = 17;
    i128 = HEAP32[i132 + 4 >> 2] | 0;
    i130 = __ZN6cashew3RefixEj(i131, 2) | 0;
    HEAP32[i29 >> 2] = HEAP32[i130 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i29 >> 2];
    i128 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i128, i134) | 0;
    i130 = i1 + 12 | 0;
    HEAP32[i130 >> 2] = i128;
    i129 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i129 >> 2] | 0) | 0;
    HEAP32[i129 + 8 >> 2] = 1;
    HEAP32[i129 + 16 >> 2] = 0;
    HEAP32[i129 + 4 >> 2] = 1;
    HEAP32[i1 + 16 >> 2] = i129;
    if ((HEAP32[(HEAP32[i130 >> 2] | 0) + 4 >> 2] | 0) == 1) {
     __ZN4wasm6Binary8finalizeEv(i1);
     break;
    } else ___assert_fail(22105, 13478, 1032, 38640);
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0, 41148) | 0 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 1) | 0, 41204) | 0 : 0) {
    i6 = i133 + 4 | 0;
    i1 = __ZN10MixedArena5allocIN4wasm10CallImportEEEPT_v(HEAP32[i6 >> 2] | 0) | 0;
    HEAP32[i1 + 20 >> 2] = HEAP32[10199];
    i2 = HEAP32[i132 + 4 >> 2] | 0;
    i4 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 2) | 0;
    HEAP32[i48 >> 2] = HEAP32[i4 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i48 >> 2];
    i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
    HEAP32[i68 >> 2] = i2;
    i4 = i1 + 12 | 0;
    i5 = HEAP32[i4 >> 2] | 0;
    if (i5 >>> 0 < (HEAP32[i1 + 16 >> 2] | 0) >>> 0) {
     HEAP32[i5 >> 2] = i2;
     HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 4;
    } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i1 + 8 | 0, i68);
    HEAP32[i1 + 4 >> 2] = 1;
    if (HEAP8[47025] | 0) break;
    HEAP8[47025] = 1;
    i134 = __ZN10MixedArena5allocIN4wasm6ImportEEEPT_v(HEAP32[i6 >> 2] | 0) | 0;
    HEAP32[i134 >> 2] = HEAP32[10199];
    HEAP32[i134 + 4 >> 2] = HEAP32[10197];
    HEAP32[i134 + 8 >> 2] = HEAP32[10199];
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i69, 39743, 2);
    i132 = __ZN4wasm18ensureFunctionTypeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_6ModuleER10MixedArena(i69, HEAP32[i133 >> 2] | 0, HEAP32[i6 >> 2] | 0) | 0;
    HEAP32[i134 + 12 >> 2] = i132;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i69);
    __ZN4wasm6Module9addImportEPNS_6ImportE(HEAP32[i133 >> 2] | 0, i134);
    break;
   }
   i133 = i133 + 4 | 0;
   i1 = __ZN10MixedArena5allocIN4wasm6BinaryEEEPT_v(HEAP32[i133 >> 2] | 0) | 0;
   HEAP32[i1 + 8 >> 2] = 9;
   i132 = HEAP32[i132 + 4 >> 2] | 0;
   i131 = __ZN6cashew3RefixEj(i131, 2) | 0;
   HEAP32[i28 >> 2] = HEAP32[i131 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i28 >> 2];
   i134 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i132, i134) | 0;
   HEAP32[i1 + 12 >> 2] = i134;
   i134 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i133 >> 2] | 0) | 0;
   HEAP32[i134 + 8 >> 2] = 1;
   HEAP32[i134 + 16 >> 2] = -1;
   HEAP32[i134 + 4 >> 2] = 1;
   HEAP32[i1 + 16 >> 2] = i134;
   HEAP32[i1 + 4 >> 2] = 1;
   break;
  }
  if ((i26 | 0) == (HEAP32[10270] | 0)) {
   i1 = __ZN10MixedArena5allocIN4wasm2IfEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
   i2 = i132 + 4 | 0;
   i133 = HEAP32[i2 >> 2] | 0;
   i132 = __ZN6cashew3RefixEj(i131, 1) | 0;
   HEAP32[i36 >> 2] = HEAP32[i132 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i36 >> 2];
   i133 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i133, i134) | 0;
   HEAP32[i1 + 8 >> 2] = i133;
   i133 = HEAP32[i2 >> 2] | 0;
   i132 = __ZN6cashew3RefixEj(i131, 2) | 0;
   HEAP32[i37 >> 2] = HEAP32[i132 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i37 >> 2];
   i133 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i133, i134) | 0;
   HEAP32[i1 + 12 >> 2] = i133;
   if (__ZN6cashew3RefntEv(__ZN6cashew3RefixEj(i131, 3) | 0) | 0) i2 = 0; else {
    i2 = HEAP32[i2 >> 2] | 0;
    i133 = __ZN6cashew3RefixEj(i131, 3) | 0;
    HEAP32[i38 >> 2] = HEAP32[i133 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i38 >> 2];
    i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
   }
   HEAP32[i1 + 16 >> 2] = i2;
   break;
  }
  if ((i26 | 0) == (HEAP32[10221] | 0)) {
   if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 1) | 0, 0) | 0, 41056) | 0)) {
    i1 = __ZN10MixedArena5allocIN4wasm12CallIndirectEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
    HEAP32[i129 >> 2] = i1;
    i128 = __ZN6cashew3RefixEj(i131, 1) | 0;
    HEAP32[i130 >> 2] = HEAP32[i128 >> 2];
    if ((((__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i130, 0) | 0, 41104) | 0 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i130, 1) | 0, 0) | 0, 41056) | 0 : 0) ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i130, 2) | 0, 0) | 0, 41072) | 0 : 0) ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i130, 2) | 0, 1) | 0, 41192) | 0 : 0) ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i130, 2) | 0, 3) | 0, 0) | 0, 41112) | 0 : 0) {
     i8 = i132 + 4 | 0;
     i5 = HEAP32[i8 >> 2] | 0;
     i6 = __ZN6cashew3RefixEj(i130, 2) | 0;
     HEAP32[i41 >> 2] = HEAP32[i6 >> 2];
     HEAP32[i134 >> 2] = HEAP32[i41 >> 2];
     i5 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i5, i134) | 0;
     HEAP32[i1 + 24 >> 2] = i5;
     i5 = __ZN6cashew3RefixEj(i131, 2) | 0;
     i5 = HEAP32[i5 >> 2] | 0;
     HEAP32[i125 >> 2] = i5;
     i6 = i1 + 8 | 0;
     i7 = i1 + 12 | 0;
     i4 = i1 + 16 | 0;
     i1 = i5;
     i5 = 0;
     while (1) {
      if (i5 >>> 0 >= (__ZN6cashew5Value4sizeEv(i1) | 0) >>> 0) break;
      i1 = HEAP32[i8 >> 2] | 0;
      i2 = __ZN6cashew3RefixEj(i125, i5) | 0;
      HEAP32[i84 >> 2] = HEAP32[i2 >> 2];
      HEAP32[i134 >> 2] = HEAP32[i84 >> 2];
      i1 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i1, i134) | 0;
      HEAP32[i83 >> 2] = i1;
      i2 = HEAP32[i7 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[i4 >> 2] | 0) >>> 0) {
       HEAP32[i2 >> 2] = i1;
       HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 4;
      } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i6, i83);
      i1 = HEAP32[i125 >> 2] | 0;
      i5 = i5 + 1 | 0;
     }
     i1 = __ZN4wasm14AstStackHelper9getParentEv(i90) | 0;
     HEAP32[i85 >> 2] = i1;
     i1 = HEAP32[i129 >> 2] | 0;
     HEAP32[i134 >> 2] = HEAP32[i85 >> 2];
     i134 = __ZN4wasm15Asm2WasmBuilder15getFunctionTypeEN6cashew3RefERNSt3__16vectorIPNS_10ExpressionENS3_9allocatorIS6_EEEE(i133, i134, i1 + 8 | 0) | 0;
     HEAP32[i1 + 20 >> 2] = i134;
     HEAP32[i1 + 4 >> 2] = HEAP32[i134 + 4 >> 2];
     i1 = __ZNSt3__13mapIPN4wasm12CallIndirectEN6cashew7IStringENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(i133 + 28 | 0, i129) | 0;
     i134 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i130, 1) | 0, 1) | 0;
     i134 = __ZN6cashew5Value10getIStringEv(HEAP32[i134 >> 2] | 0) | 0;
     HEAP32[i1 >> 2] = HEAP32[i134 >> 2];
     i1 = HEAP32[i129 >> 2] | 0;
     break;
    }
    ___assert_fail(22215, 13478, 1166, 38640);
   }
   i4 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 1) | 0, 1) | 0;
   i4 = __ZN6cashew5Value10getIStringEv(HEAP32[i4 >> 2] | 0) | 0;
   i4 = HEAP32[i4 >> 2] | 0;
   i6 = i4;
   if ((i6 | 0) == (HEAP32[i133 + 72 >> 2] | 0)) {
    i128 = __ZN6cashew3RefixEj(i131, 2) | 0;
    if ((__ZN6cashew5Value4sizeEv(HEAP32[i128 >> 2] | 0) | 0) == 2) {
     i1 = __ZN10MixedArena5allocIN4wasm6BinaryEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
     HEAP32[i1 + 8 >> 2] = 2;
     i133 = i132 + 4 | 0;
     i132 = HEAP32[i133 >> 2] | 0;
     i130 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0;
     HEAP32[i49 >> 2] = HEAP32[i130 >> 2];
     HEAP32[i134 >> 2] = HEAP32[i49 >> 2];
     i132 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i132, i134) | 0;
     HEAP32[i1 + 12 >> 2] = i132;
     i133 = HEAP32[i133 >> 2] | 0;
     i132 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 1) | 0;
     HEAP32[i50 >> 2] = HEAP32[i132 >> 2];
     HEAP32[i134 >> 2] = HEAP32[i50 >> 2];
     i134 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i133, i134) | 0;
     HEAP32[i1 + 16 >> 2] = i134;
     HEAP32[i1 + 4 >> 2] = 1;
     break;
    } else ___assert_fail(22151, 13478, 1047, 38640);
   }
   if ((i6 | 0) == (HEAP32[i133 + 76 >> 2] | 0)) {
    i128 = __ZN6cashew3RefixEj(i131, 2) | 0;
    if ((__ZN6cashew5Value4sizeEv(HEAP32[i128 >> 2] | 0) | 0) == 1) {
     i1 = __ZN10MixedArena5allocIN4wasm5UnaryEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
     HEAP32[i1 + 8 >> 2] = 0;
     i133 = HEAP32[i132 + 4 >> 2] | 0;
     i132 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0;
     HEAP32[i51 >> 2] = HEAP32[i132 >> 2];
     HEAP32[i134 >> 2] = HEAP32[i51 >> 2];
     i134 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i133, i134) | 0;
     HEAP32[i1 + 12 >> 2] = i134;
     HEAP32[i1 + 4 >> 2] = 1;
     break;
    } else ___assert_fail(22171, 13478, 1056, 38640);
   }
   if ((i6 | 0) == (HEAP32[i133 + 80 >> 2] | 0)) {
    i130 = __ZN6cashew3RefixEj(i131, 2) | 0;
    if ((__ZN6cashew5Value4sizeEv(HEAP32[i130 >> 2] | 0) | 0) != 1) ___assert_fail(22171, 13478, 1064, 38640);
    i130 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0;
    HEAP32[i52 >> 2] = HEAP32[i130 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i52 >> 2];
    __ZN4wasm15Asm2WasmBuilder12checkLiteralEN6cashew3RefE(i129, i133, i134);
    L184 : do switch (HEAP32[i129 >> 2] | 0) {
    case 1:
     {
      i1 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
      d3 = +(__ZNK4wasm7Literal6geti32Ev(i129) | 0);
      HEAP32[i1 + 8 >> 2] = 3;
      HEAPF32[i1 + 16 >> 2] = d3;
      HEAP32[i1 + 4 >> 2] = 3;
      break;
     }
    case 4:
     {
      i1 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
      d3 = +__ZNK4wasm7Literal6getf64Ev(i129);
      HEAP32[i1 + 8 >> 2] = 3;
      HEAPF32[i1 + 16 >> 2] = d3;
      HEAP32[i1 + 4 >> 2] = 3;
      break;
     }
    default:
     {
      i1 = __ZN10MixedArena5allocIN4wasm5UnaryEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
      i2 = HEAP32[i132 + 4 >> 2] | 0;
      i4 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0;
      HEAP32[i59 >> 2] = HEAP32[i4 >> 2];
      HEAP32[i134 >> 2] = HEAP32[i59 >> 2];
      i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
      HEAP32[i1 + 12 >> 2] = i2;
      i4 = i2 + 4 | 0;
      switch (HEAP32[i4 >> 2] | 0) {
      case 3:
       {
        i1 = i2;
        break L184;
       }
      case 4:
       {
        HEAP32[i1 + 8 >> 2] = 23;
        break;
       }
      case 1:
       {
        HEAP32[i1 + 8 >> 2] = 18;
        break;
       }
      case 0:
       {
        HEAP32[i4 >> 2] = 3;
        i1 = i2;
        break L184;
       }
      default:
       {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i70, 22191, 23);
        i133 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0;
        HEAP32[i71 >> 2] = HEAP32[i133 >> 2];
        HEAP32[i134 >> 2] = HEAP32[i71 >> 2];
        __ZN4wasmL8abort_onENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN6cashew3RefE(i70, i134);
       }
      }
      HEAP32[i1 + 4 >> 2] = 3;
     }
    } while (0);
    break;
   }
   if ((i6 | 0) == (HEAP32[i133 + 84 >> 2] | 0)) {
    i7 = HEAP32[i132 + 4 >> 2] | 0;
    i1 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0;
    HEAP32[i53 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i53 >> 2];
    i7 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i7, i134) | 0;
    i1 = i7 + 4 | 0;
    switch (HEAP32[i1 >> 2] | 0) {
    case 1:
     {
      i5 = HEAP32[i132 + 20 >> 2] | 0;
      i1 = HEAP32[i5 >> 2] | 0;
      if (!(HEAP8[i1 >> 0] | 0)) {
       HEAP8[i1 >> 0] = 1;
       i1 = HEAP32[HEAP32[i5 + 4 >> 2] >> 2] | 0;
       HEAP32[i129 >> 2] = 1;
       i2 = i1 + 24 | 0;
       i4 = HEAP32[i2 >> 2] | 0;
       if (i4 >>> 0 < (HEAP32[i1 + 28 >> 2] | 0) >>> 0) {
        HEAP32[i4 >> 2] = HEAP32[10205];
        HEAP32[i4 + 4 >> 2] = 1;
        HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 8;
       } else __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN6cashew7IStringENS1_8WasmTypeEEEEvDpOT_(i1 + 20 | 0, 40820, i129);
       __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(i134, HEAP32[i5 + 8 >> 2] | 0, 40820);
       i132 = HEAP32[i5 + 12 >> 2] | 0;
       HEAP32[i130 >> 2] = HEAP32[10205];
       HEAP32[i134 >> 2] = HEAP32[i130 >> 2];
       __ZN7AsmData6addVarEN6cashew7IStringE7AsmType(i132, i134, 0);
      }
      i4 = i133 + 4 | 0;
      i6 = __ZN10MixedArena5allocIN4wasm8SetLocalEEEPT_v(HEAP32[i4 >> 2] | 0) | 0;
      HEAP32[i6 + 8 >> 2] = HEAP32[10205];
      HEAP32[i6 + 12 >> 2] = i7;
      HEAP32[i6 + 4 >> 2] = 1;
      HEAP32[i134 >> 2] = i133;
      i5 = __ZN10MixedArena5allocIN4wasm6BinaryEEEPT_v(HEAP32[i4 >> 2] | 0) | 0;
      HEAP32[i5 + 8 >> 2] = 19;
      i1 = __ZZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__1clES2_ENKUlvE_clEv(i134) | 0;
      HEAP32[i5 + 12 >> 2] = i1;
      i1 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i4 >> 2] | 0) | 0;
      HEAP32[i1 + 8 >> 2] = 1;
      HEAP32[i1 + 16 >> 2] = 0;
      HEAP32[i1 + 4 >> 2] = 1;
      HEAP32[i5 + 16 >> 2] = i1;
      __ZN4wasm6Binary8finalizeEv(i5);
      i1 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i4 >> 2] | 0) | 0;
      i7 = i1 + 12 | 0;
      HEAP32[i96 >> 2] = i6;
      i8 = i1 + 16 | 0;
      i2 = HEAP32[i8 >> 2] | 0;
      i9 = i1 + 20 | 0;
      if (i2 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
       HEAP32[i2 >> 2] = i6;
       HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 4;
      } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i7, i96);
      i2 = __ZN10MixedArena5allocIN4wasm6BinaryEEEPT_v(HEAP32[i4 >> 2] | 0) | 0;
      HEAP32[i2 + 8 >> 2] = 1;
      i133 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i4 >> 2] | 0) | 0;
      HEAP32[i133 + 8 >> 2] = 1;
      HEAP32[i133 + 16 >> 2] = 0;
      HEAP32[i133 + 4 >> 2] = 1;
      HEAP32[i2 + 12 >> 2] = i133;
      i133 = __ZZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__1clES2_ENKUlvE_clEv(i134) | 0;
      HEAP32[i2 + 16 >> 2] = i133;
      HEAP32[i2 + 4 >> 2] = 1;
      i4 = __ZN10MixedArena5allocIN4wasm6SelectEEEPT_v(HEAP32[i4 >> 2] | 0) | 0;
      HEAP32[i4 + 8 >> 2] = i2;
      i2 = __ZZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__1clES2_ENKUlvE_clEv(i134) | 0;
      HEAP32[i4 + 12 >> 2] = i2;
      HEAP32[i4 + 16 >> 2] = i5;
      HEAP32[i4 + 4 >> 2] = 1;
      HEAP32[i100 >> 2] = i4;
      i2 = HEAP32[i8 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
       HEAP32[i2 >> 2] = i4;
       HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 4;
      } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i7, i100);
      HEAP32[i1 + 4 >> 2] = 1;
      break L4;
     }
    case 4:
    case 3:
     {
      i134 = __ZN10MixedArena5allocIN4wasm5UnaryEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
      HEAP32[i134 + 8 >> 2] = 4;
      HEAP32[i134 + 12 >> 2] = i7;
      HEAP32[i134 + 4 >> 2] = HEAP32[i1 >> 2];
      i1 = i134;
      break L4;
     }
    default:
     _abort();
    }
   }
   i2 = i133 + 88 | 0;
   do if ((i6 | 0) != (HEAP32[i2 >> 2] | 0) ? (i6 | 0) != (HEAP32[i133 + 96 >> 2] | 0) : 0) {
    if ((i6 | 0) == (HEAP32[i133 + 92 >> 2] | 0)) break;
    i130 = HEAP32[i133 >> 2] | 0;
    HEAP32[i73 >> 2] = i4;
    if ((__ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ImportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i130 + 60 | 0, i73) | 0) == (i130 + 64 | 0)) i1 = __ZN10MixedArena5allocIN4wasm4CallEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0; else {
     i130 = __ZN4wasm14AstStackHelper9getParentEv(i90) | 0;
     HEAP32[i129 >> 2] = i130;
     if (__ZN6cashew3RefntEv(i129) | 0) i1 = 0; else {
      HEAP32[i74 >> 2] = HEAP32[i129 >> 2];
      i1 = HEAP32[i132 + 16 >> 2] | 0;
      HEAP32[i134 >> 2] = HEAP32[i74 >> 2];
      i1 = __ZN4wasm15Asm2WasmBuilder14detectWasmTypeEN6cashew3RefEP7AsmData(i133, i134, i1) | 0;
     }
     i130 = __ZN10MixedArena5allocIN4wasm10CallImportEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
     HEAP32[i75 >> 2] = HEAP32[i131 >> 2];
     i128 = HEAP32[i132 + 16 >> 2] | 0;
     HEAP32[i134 >> 2] = HEAP32[i75 >> 2];
     __ZN4wasm15Asm2WasmBuilder24noteImportedFunctionCallEN6cashew3RefENS_8WasmTypeEP7AsmData(i133, i134, i1, i128);
     i1 = i130;
    }
    HEAP32[i1 + 20 >> 2] = i4;
    i2 = __ZN6cashew3RefixEj(i131, 2) | 0;
    i2 = HEAP32[i2 >> 2] | 0;
    HEAP32[i129 >> 2] = i2;
    i9 = i1 + 8 | 0;
    i5 = i132 + 4 | 0;
    i6 = i1 + 12 | 0;
    i7 = i1 + 16 | 0;
    i8 = 0;
    while (1) {
     if (i8 >>> 0 >= (__ZN6cashew5Value4sizeEv(i2) | 0) >>> 0) break;
     i2 = HEAP32[i5 >> 2] | 0;
     i4 = __ZN6cashew3RefixEj(i129, i8) | 0;
     HEAP32[i93 >> 2] = HEAP32[i4 >> 2];
     HEAP32[i134 >> 2] = HEAP32[i93 >> 2];
     i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
     HEAP32[i92 >> 2] = i2;
     i4 = HEAP32[i6 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
      HEAP32[i4 >> 2] = i2;
      HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
     } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i9, i92);
     i2 = HEAP32[i129 >> 2] | 0;
     i8 = i8 + 1 | 0;
    }
    break L4;
   } while (0);
   i4 = HEAP32[i132 + 4 >> 2] | 0;
   i5 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 2) | 0, 0) | 0;
   HEAP32[i72 >> 2] = HEAP32[i5 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i72 >> 2];
   i4 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i4, i134) | 0;
   i5 = i4 + 4 | 0;
   if (((HEAP32[i5 >> 2] | 0) + -3 | 0) >>> 0 >= 2) _abort();
   i1 = __ZN10MixedArena5allocIN4wasm5UnaryEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
   if ((i6 | 0) == (HEAP32[i2 >> 2] | 0)) i2 = 6; else i2 = (i6 | 0) == (HEAP32[i133 + 92 >> 2] | 0) ? 5 : 9;
   HEAP32[i1 + 8 >> 2] = i2;
   HEAP32[i1 + 12 >> 2] = i4;
   HEAP32[i1 + 4 >> 2] = HEAP32[i5 >> 2];
   break;
  }
  if ((i26 | 0) == (HEAP32[10269] | 0)) {
   if (__ZN6cashew3RefntEv(__ZN6cashew3RefixEj(i131, 1) | 0) | 0) i2 = 0; else {
    i2 = __ZN6cashew3RefixEj(i131, 1) | 0;
    HEAP32[i22 >> 2] = HEAP32[i2 >> 2];
    i2 = HEAP32[i132 + 16 >> 2] | 0;
    HEAP32[i134 >> 2] = HEAP32[i22 >> 2];
    i2 = __ZN4wasm15Asm2WasmBuilder14detectWasmTypeEN6cashew3RefEP7AsmData(i133, i134, i2) | 0;
   }
   i1 = (HEAP32[HEAP32[i132 + 28 >> 2] >> 2] | 0) + 4 | 0;
   if (HEAP8[HEAP32[i132 + 24 >> 2] >> 0] | 0) {
    if ((HEAP32[i1 >> 2] | 0) != (i2 | 0)) ___assert_fail(22331, 13478, 1179, 38640);
   } else HEAP32[i1 >> 2] = i2;
   i1 = __ZN10MixedArena5allocIN4wasm6ReturnEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
   if (__ZN6cashew3RefntEv(__ZN6cashew3RefixEj(i131, 1) | 0) | 0) i2 = 0; else {
    i2 = HEAP32[i132 + 4 >> 2] | 0;
    i133 = __ZN6cashew3RefixEj(i131, 1) | 0;
    HEAP32[i54 >> 2] = HEAP32[i133 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i54 >> 2];
    i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
   }
   HEAP32[i1 + 8 >> 2] = i2;
   break;
  }
  if ((i26 | 0) == (HEAP32[10261] | 0)) {
   HEAP32[i129 >> 2] = 0;
   i4 = i132 + 32 | 0;
   i1 = HEAP32[i4 >> 2] | 0;
   do if (HEAP32[i1 >> 2] | 0) {
    HEAP32[i42 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i42 >> 2];
    i2 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__6clENS1_7IStringE(i134) | 0;
    i6 = i2;
    HEAP32[i129 >> 2] = i6;
    HEAP32[HEAP32[i4 >> 2] >> 2] = 0;
    i1 = HEAP32[i132 + 40 >> 2] | 0;
    i4 = i1 + 4 | 0;
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 | 0) == (HEAP32[i1 + 8 >> 2] | 0)) {
     __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i1, i129);
     break;
    } else {
     HEAP32[i5 >> 2] = i6;
     HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 4;
     break;
    }
   } else {
    i2 = 0;
    i6 = 0;
   } while (0);
   i1 = HEAP32[i132 + 44 >> 2] | 0;
   i7 = __ZN6cashew3RefixEj(i131, 1) | 0;
   HEAP32[i86 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i86 >> 2];
   i1 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEEclES5_j(i1, i134, 0) | 0;
   HEAP32[i130 >> 2] = i1;
   i7 = i1;
   do if (i2) {
    i2 = (HEAP32[i132 + 40 >> 2] | 0) + 4 | 0;
    i5 = HEAP32[i2 >> 2] | 0;
    i4 = i5 + -4 | 0;
    while (1) {
     if ((i5 | 0) == (i4 | 0)) break;
     i134 = i5 + -4 | 0;
     HEAP32[i2 >> 2] = i134;
     i5 = i134;
    }
    i2 = __ZN4wasm10Expression8dyn_castINS_5BlockEEEPT_v(i1) | 0;
    if (i2 | 0 ? (i91 = i2 + 8 | 0, (HEAP32[i91 >> 2] | 0) == 0) : 0) {
     HEAP32[i91 >> 2] = i6;
     break;
    }
    i1 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
    HEAP32[i1 + 8 >> 2] = i6;
    i2 = i1 + 16 | 0;
    i4 = HEAP32[i2 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i1 + 20 >> 2] | 0)) __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i1 + 12 | 0, i130); else {
     HEAP32[i4 >> 2] = i7;
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
    }
    HEAP32[i130 >> 2] = i1;
   } while (0);
   break;
  }
  if ((i26 | 0) == (HEAP32[10280] | 0)) {
   i1 = __ZN10MixedArena5allocIN4wasm5BreakEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
   i2 = i132 + 40 | 0;
   i133 = HEAP32[i2 >> 2] | 0;
   if ((HEAP32[i133 + 4 >> 2] | 0) == (HEAP32[i133 >> 2] | 0)) ___assert_fail(22356, 13478, 1210, 38640);
   if (__ZN6cashew3RefntEv(__ZN6cashew3RefixEj(i131, 1) | 0) | 0) i2 = HEAP32[(HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] | 0) + -4 >> 2] | 0; else {
    i2 = __ZN6cashew3RefixEj(i131, 1) | 0;
    i2 = __ZN6cashew5Value10getIStringEv(HEAP32[i2 >> 2] | 0) | 0;
    HEAP32[i43 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i43 >> 2];
    i2 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__6clENS1_7IStringE(i134) | 0;
   }
   HEAP32[i1 + 8 >> 2] = i2;
   break;
  }
  if ((i26 | 0) == (HEAP32[10281] | 0)) {
   i1 = __ZN10MixedArena5allocIN4wasm5BreakEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
   i2 = i132 + 48 | 0;
   i133 = HEAP32[i2 >> 2] | 0;
   if ((HEAP32[i133 + 4 >> 2] | 0) == (HEAP32[i133 >> 2] | 0)) ___assert_fail(22378, 13478, 1215, 38640);
   if (__ZN6cashew3RefntEv(__ZN6cashew3RefixEj(i131, 1) | 0) | 0) i2 = HEAP32[(HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] | 0) + -4 >> 2] | 0; else {
    i2 = __ZN6cashew3RefixEj(i131, 1) | 0;
    i2 = __ZN6cashew5Value10getIStringEv(HEAP32[i2 >> 2] | 0) | 0;
    HEAP32[i44 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i44 >> 2];
    i2 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__7clENS1_7IStringE(i134) | 0;
   }
   HEAP32[i1 + 8 >> 2] = i2;
   break;
  }
  if ((i26 | 0) == (HEAP32[10272] | 0)) {
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 1) | 0, 0) | 0, 41112) | 0) {
    i8 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 1) | 0, 1) | 0;
    i8 = (__ZN6cashew5Value10getIntegerEv(HEAP32[i8 >> 2] | 0) | 0) == 1;
   } else i8 = 0;
   i13 = i133 + 4 | 0;
   i1 = __ZN10MixedArena5allocIN4wasm4LoopEEEPT_v(HEAP32[i13 >> 2] | 0) | 0;
   HEAP32[i129 >> 2] = 0;
   HEAP32[i130 >> 2] = 0;
   i2 = i132 + 32 | 0;
   i4 = HEAP32[i2 >> 2] | 0;
   if (!(HEAP32[i4 >> 2] | 0)) {
    i4 = i132 + 56 | 0;
    i2 = HEAP32[i4 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i66, 22403, 9);
    i2 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i2, i66) | 0;
    HEAP32[i129 >> 2] = i2;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i66);
    i4 = HEAP32[i4 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i67, 22413, 8);
    i4 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i4, i67) | 0;
    HEAP32[i130 >> 2] = i4;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i67);
   } else {
    HEAP32[i64 >> 2] = HEAP32[i4 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i64 >> 2];
    i128 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__6clENS1_7IStringE(i134) | 0;
    HEAP32[i129 >> 2] = i128;
    HEAP32[i65 >> 2] = HEAP32[HEAP32[i2 >> 2] >> 2];
    HEAP32[i134 >> 2] = HEAP32[i65 >> 2];
    i4 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__7clENS1_7IStringE(i134) | 0;
    HEAP32[i130 >> 2] = i4;
    HEAP32[HEAP32[i2 >> 2] >> 2] = 0;
    i2 = i128;
   }
   HEAP32[i1 + 8 >> 2] = i2;
   i11 = i1 + 12 | 0;
   HEAP32[i11 >> 2] = i4;
   i12 = i132 + 40 | 0;
   i5 = HEAP32[i12 >> 2] | 0;
   i6 = i5 + 4 | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   if ((i7 | 0) == (HEAP32[i5 + 8 >> 2] | 0)) __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i5, i129); else {
    HEAP32[i7 >> 2] = i2;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
   }
   i10 = i132 + 48 | 0;
   i5 = HEAP32[i10 >> 2] | 0;
   i6 = i5 + 4 | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   if ((i7 | 0) == (HEAP32[i5 + 8 >> 2] | 0)) __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i5, i130); else {
    HEAP32[i7 >> 2] = i4;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
   }
   if (i8) {
    i2 = HEAP32[i132 + 4 >> 2] | 0;
    i7 = __ZN6cashew3RefixEj(i131, 2) | 0;
    HEAP32[i97 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i97 >> 2];
    i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
    i7 = i1 + 16 | 0;
    HEAP32[i7 >> 2] = i2;
   } else {
    i7 = __ZN10MixedArena5allocIN4wasm5BreakEEEPT_v(HEAP32[i13 >> 2] | 0) | 0;
    HEAP32[i7 + 8 >> 2] = i2;
    i6 = __ZN10MixedArena5allocIN4wasm2IfEEEPT_v(HEAP32[i13 >> 2] | 0) | 0;
    i5 = i132 + 4 | 0;
    i2 = HEAP32[i5 >> 2] | 0;
    i8 = __ZN6cashew3RefixEj(i131, 1) | 0;
    HEAP32[i101 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i101 >> 2];
    i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
    HEAP32[i6 + 8 >> 2] = i2;
    i2 = __ZN10MixedArena5allocIN4wasm3NopEEEPT_v(HEAP32[i13 >> 2] | 0) | 0;
    HEAP32[i6 + 12 >> 2] = i2;
    HEAP32[i6 + 16 >> 2] = i7;
    i2 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i13 >> 2] | 0) | 0;
    i7 = i2 + 12 | 0;
    HEAP32[i103 >> 2] = i6;
    i8 = i2 + 16 | 0;
    i4 = HEAP32[i8 >> 2] | 0;
    i9 = i2 + 20 | 0;
    if (i4 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
     HEAP32[i4 >> 2] = i6;
     HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 4;
    } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i7, i103);
    i4 = HEAP32[i5 >> 2] | 0;
    i5 = __ZN6cashew3RefixEj(i131, 2) | 0;
    HEAP32[i104 >> 2] = HEAP32[i5 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i104 >> 2];
    i4 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i4, i134) | 0;
    HEAP32[i107 >> 2] = i4;
    i5 = HEAP32[i8 >> 2] | 0;
    if (i5 >>> 0 < (HEAP32[i9 >> 2] | 0) >>> 0) {
     HEAP32[i5 >> 2] = i4;
     HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 4;
    } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i7, i107);
    i7 = i1 + 16 | 0;
    HEAP32[i7 >> 2] = i2;
   }
   i6 = __ZN4wasm15Asm2WasmBuilder8blockifyEPNS_10ExpressionE(i133, i2) | 0;
   i5 = __ZN10MixedArena5allocIN4wasm5BreakEEEPT_v(HEAP32[i13 >> 2] | 0) | 0;
   HEAP32[i5 + 8 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i114 >> 2] = i5;
   i2 = i6 + 16 | 0;
   i4 = HEAP32[i2 >> 2] | 0;
   if (i4 >>> 0 < (HEAP32[i6 + 20 >> 2] | 0) >>> 0) {
    HEAP32[i4 >> 2] = i5;
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
   } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i6 + 12 | 0, i114);
   HEAP32[i7 >> 2] = i6;
   i2 = (HEAP32[i10 >> 2] | 0) + 4 | 0;
   i5 = HEAP32[i2 >> 2] | 0;
   i4 = i5 + -4 | 0;
   while (1) {
    if ((i5 | 0) == (i4 | 0)) break;
    i134 = i5 + -4 | 0;
    HEAP32[i2 >> 2] = i134;
    i5 = i134;
   }
   i2 = (HEAP32[i12 >> 2] | 0) + 4 | 0;
   i5 = HEAP32[i2 >> 2] | 0;
   i4 = i5 + -4 | 0;
   while (1) {
    if ((i5 | 0) == (i4 | 0)) break;
    i134 = i5 + -4 | 0;
    HEAP32[i2 >> 2] = i134;
    i5 = i134;
   }
   break;
  }
  if ((i26 | 0) == (HEAP32[10273] | 0)) {
   do if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 1) | 0, 0) | 0, 41112) | 0) {
    i128 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i131, 1) | 0, 1) | 0;
    i128 = __ZN6cashew5Value9getNumberEv(HEAP32[i128 >> 2] | 0) | 0;
    if (!(+HEAPF64[i128 >> 3] == 0.0)) break;
    i1 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
    HEAP32[i129 >> 2] = 0;
    i2 = i132 + 32 | 0;
    i4 = HEAP32[i2 >> 2] | 0;
    if (!(HEAP32[i4 >> 2] | 0)) {
     i2 = HEAP32[i132 + 56 >> 2] | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i56, 22422, 7);
     i2 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i2, i56) | 0;
     HEAP32[i129 >> 2] = i2;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i56);
    } else {
     HEAP32[i55 >> 2] = HEAP32[i4 >> 2];
     HEAP32[i134 >> 2] = HEAP32[i55 >> 2];
     i133 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__6clENS1_7IStringE(i134) | 0;
     HEAP32[i129 >> 2] = i133;
     HEAP32[HEAP32[i2 >> 2] >> 2] = 0;
     i2 = i133;
    }
    HEAP32[i1 + 8 >> 2] = i2;
    i7 = i132 + 40 | 0;
    i4 = HEAP32[i7 >> 2] | 0;
    i5 = i4 + 4 | 0;
    i6 = HEAP32[i5 >> 2] | 0;
    if ((i6 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i4, i129); else {
     HEAP32[i6 >> 2] = i2;
     HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
    }
    i6 = i132 + 48 | 0;
    i2 = HEAP32[i6 >> 2] | 0;
    i4 = i2 + 4 | 0;
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i2, 40768); else {
     HEAP32[i5 >> 2] = HEAP32[10192];
     HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 4;
    }
    i2 = HEAP32[i132 + 4 >> 2] | 0;
    i4 = __ZN6cashew3RefixEj(i131, 2) | 0;
    HEAP32[i89 >> 2] = HEAP32[i4 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i89 >> 2];
    i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
    HEAP32[i94 >> 2] = i2;
    i4 = i1 + 16 | 0;
    i5 = HEAP32[i4 >> 2] | 0;
    if (i5 >>> 0 < (HEAP32[i1 + 20 >> 2] | 0) >>> 0) {
     HEAP32[i5 >> 2] = i2;
     HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 4;
    } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i1 + 12 | 0, i94);
    i2 = (HEAP32[i6 >> 2] | 0) + 4 | 0;
    i5 = HEAP32[i2 >> 2] | 0;
    i4 = i5 + -4 | 0;
    while (1) {
     if ((i5 | 0) == (i4 | 0)) break;
     i134 = i5 + -4 | 0;
     HEAP32[i2 >> 2] = i134;
     i5 = i134;
    }
    i2 = (HEAP32[i7 >> 2] | 0) + 4 | 0;
    i5 = HEAP32[i2 >> 2] | 0;
    i4 = i5 + -4 | 0;
    while (1) {
     if ((i5 | 0) == (i4 | 0)) break;
     i134 = i5 + -4 | 0;
     HEAP32[i2 >> 2] = i134;
     i5 = i134;
    }
    break L4;
   } while (0);
   i11 = i133 + 4 | 0;
   i1 = __ZN10MixedArena5allocIN4wasm4LoopEEEPT_v(HEAP32[i11 >> 2] | 0) | 0;
   HEAP32[i129 >> 2] = 0;
   HEAP32[i130 >> 2] = 0;
   i2 = i132 + 32 | 0;
   i4 = HEAP32[i2 >> 2] | 0;
   if (!(HEAP32[i4 >> 2] | 0)) {
    i4 = i132 + 56 | 0;
    i2 = HEAP32[i4 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i62, 22430, 6);
    i2 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i2, i62) | 0;
    HEAP32[i129 >> 2] = i2;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i62);
    i4 = HEAP32[i4 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i63, 22437, 5);
    i4 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i4, i63) | 0;
    HEAP32[i130 >> 2] = i4;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i63);
   } else {
    HEAP32[i60 >> 2] = HEAP32[i4 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i60 >> 2];
    i128 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__6clENS1_7IStringE(i134) | 0;
    HEAP32[i129 >> 2] = i128;
    HEAP32[i61 >> 2] = HEAP32[HEAP32[i2 >> 2] >> 2];
    HEAP32[i134 >> 2] = HEAP32[i61 >> 2];
    i4 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__7clENS1_7IStringE(i134) | 0;
    HEAP32[i130 >> 2] = i4;
    HEAP32[HEAP32[i2 >> 2] >> 2] = 0;
    i2 = i128;
   }
   i10 = i4;
   HEAP32[i1 + 8 >> 2] = i2;
   HEAP32[i1 + 12 >> 2] = i10;
   i9 = i132 + 40 | 0;
   i4 = HEAP32[i9 >> 2] | 0;
   i5 = i4 + 4 | 0;
   i6 = HEAP32[i5 >> 2] | 0;
   if ((i6 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i4, i129); else {
    HEAP32[i6 >> 2] = i2;
    HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
   }
   i6 = i132 + 48 | 0;
   i2 = HEAP32[i6 >> 2] | 0;
   i4 = i2 + 4 | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i2, i130); else {
    HEAP32[i5 >> 2] = i10;
    HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 4;
   }
   i7 = i132 + 4 | 0;
   i2 = HEAP32[i7 >> 2] | 0;
   i8 = __ZN6cashew3RefixEj(i131, 2) | 0;
   HEAP32[i95 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i95 >> 2];
   i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
   i8 = i1 + 16 | 0;
   HEAP32[i8 >> 2] = i2;
   i2 = (HEAP32[i6 >> 2] | 0) + 4 | 0;
   i5 = HEAP32[i2 >> 2] | 0;
   i4 = i5 + -4 | 0;
   while (1) {
    if ((i5 | 0) == (i4 | 0)) break;
    i132 = i5 + -4 | 0;
    HEAP32[i2 >> 2] = i132;
    i5 = i132;
   }
   i2 = (HEAP32[i9 >> 2] | 0) + 4 | 0;
   i5 = HEAP32[i2 >> 2] | 0;
   i4 = i5 + -4 | 0;
   while (1) {
    if ((i5 | 0) == (i4 | 0)) break;
    i132 = i5 + -4 | 0;
    HEAP32[i2 >> 2] = i132;
    i5 = i132;
   }
   i6 = __ZN10MixedArena5allocIN4wasm5BreakEEEPT_v(HEAP32[i11 >> 2] | 0) | 0;
   HEAP32[i6 + 8 >> 2] = i10;
   i2 = HEAP32[i7 >> 2] | 0;
   i4 = __ZN6cashew3RefixEj(i131, 1) | 0;
   HEAP32[i105 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i105 >> 2];
   i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
   HEAP32[i6 + 16 >> 2] = i2;
   i2 = __ZN4wasm15Asm2WasmBuilder8blockifyEPNS_10ExpressionE(i133, HEAP32[i8 >> 2] | 0) | 0;
   HEAP32[i108 >> 2] = i6;
   i4 = i2 + 16 | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   if (i5 >>> 0 < (HEAP32[i2 + 20 >> 2] | 0) >>> 0) {
    HEAP32[i5 >> 2] = i6;
    HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 4;
   } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i2 + 12 | 0, i108);
   HEAP32[i8 >> 2] = i2;
   break;
  }
  if ((i26 | 0) == (HEAP32[10274] | 0)) {
   i15 = __ZN6cashew3RefixEj(i131, 1) | 0;
   i15 = HEAP32[i15 >> 2] | 0;
   i7 = __ZN6cashew3RefixEj(i131, 2) | 0;
   i7 = HEAP32[i7 >> 2] | 0;
   i12 = __ZN6cashew3RefixEj(i131, 3) | 0;
   i12 = HEAP32[i12 >> 2] | 0;
   i11 = __ZN6cashew3RefixEj(i131, 4) | 0;
   i11 = HEAP32[i11 >> 2] | 0;
   i14 = i133 + 4 | 0;
   i16 = __ZN10MixedArena5allocIN4wasm4LoopEEEPT_v(HEAP32[i14 >> 2] | 0) | 0;
   HEAP32[i129 >> 2] = 0;
   HEAP32[i130 >> 2] = 0;
   i1 = i132 + 32 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (!(HEAP32[i2 >> 2] | 0)) {
    i2 = i132 + 56 | 0;
    i1 = HEAP32[i2 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i80, 22443, 7);
    i1 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i1, i80) | 0;
    HEAP32[i129 >> 2] = i1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i80);
    i2 = HEAP32[i2 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i81, 22451, 6);
    i2 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i2, i81) | 0;
    HEAP32[i130 >> 2] = i2;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i81);
   } else {
    HEAP32[i78 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i78 >> 2];
    i131 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__6clENS1_7IStringE(i134) | 0;
    HEAP32[i129 >> 2] = i131;
    HEAP32[i79 >> 2] = HEAP32[HEAP32[i1 >> 2] >> 2];
    HEAP32[i134 >> 2] = HEAP32[i79 >> 2];
    i2 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__7clENS1_7IStringE(i134) | 0;
    HEAP32[i130 >> 2] = i2;
    HEAP32[HEAP32[i1 >> 2] >> 2] = 0;
    i1 = i131;
   }
   HEAP32[i16 + 8 >> 2] = i1;
   i10 = i16 + 12 | 0;
   HEAP32[i10 >> 2] = i2;
   i13 = i132 + 40 | 0;
   i4 = HEAP32[i13 >> 2] | 0;
   i5 = i4 + 4 | 0;
   i6 = HEAP32[i5 >> 2] | 0;
   if ((i6 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i4, i129); else {
    HEAP32[i6 >> 2] = i1;
    HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
   }
   i8 = i132 + 48 | 0;
   i4 = HEAP32[i8 >> 2] | 0;
   i5 = i4 + 4 | 0;
   i6 = HEAP32[i5 >> 2] | 0;
   if ((i6 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i4, i130); else {
    HEAP32[i6 >> 2] = i2;
    HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
   }
   i4 = __ZN10MixedArena5allocIN4wasm5BreakEEEPT_v(HEAP32[i14 >> 2] | 0) | 0;
   HEAP32[i4 + 8 >> 2] = i1;
   i2 = __ZN10MixedArena5allocIN4wasm2IfEEEPT_v(HEAP32[i14 >> 2] | 0) | 0;
   i9 = i132 + 4 | 0;
   i5 = HEAP32[i9 >> 2] | 0;
   HEAP32[i102 >> 2] = i7;
   HEAP32[i134 >> 2] = HEAP32[i102 >> 2];
   i7 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i5, i134) | 0;
   HEAP32[i2 + 8 >> 2] = i7;
   i7 = __ZN10MixedArena5allocIN4wasm3NopEEEPT_v(HEAP32[i14 >> 2] | 0) | 0;
   HEAP32[i2 + 12 >> 2] = i7;
   HEAP32[i2 + 16 >> 2] = i4;
   i7 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i14 >> 2] | 0) | 0;
   i4 = i7 + 12 | 0;
   HEAP32[i109 >> 2] = i2;
   i5 = i7 + 16 | 0;
   i1 = HEAP32[i5 >> 2] | 0;
   i6 = i7 + 20 | 0;
   if (i1 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) {
    HEAP32[i1 >> 2] = i2;
    HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
   } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i4, i109);
   i1 = HEAP32[i9 >> 2] | 0;
   HEAP32[i110 >> 2] = i11;
   HEAP32[i134 >> 2] = HEAP32[i110 >> 2];
   i1 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i1, i134) | 0;
   HEAP32[i111 >> 2] = i1;
   i2 = HEAP32[i5 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) {
    HEAP32[i2 >> 2] = i1;
    HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
   } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i4, i111);
   i1 = HEAP32[i9 >> 2] | 0;
   HEAP32[i112 >> 2] = i12;
   HEAP32[i134 >> 2] = HEAP32[i112 >> 2];
   i1 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i1, i134) | 0;
   HEAP32[i113 >> 2] = i1;
   i2 = HEAP32[i5 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) {
    HEAP32[i2 >> 2] = i1;
    HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
   } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i4, i113);
   i6 = i16 + 16 | 0;
   HEAP32[i6 >> 2] = i7;
   i4 = __ZN4wasm15Asm2WasmBuilder8blockifyEPNS_10ExpressionE(i133, i7) | 0;
   i5 = __ZN10MixedArena5allocIN4wasm5BreakEEEPT_v(HEAP32[i14 >> 2] | 0) | 0;
   HEAP32[i5 + 8 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i124 >> 2] = i5;
   i1 = i4 + 16 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i4 + 20 >> 2] | 0) >>> 0) {
    HEAP32[i2 >> 2] = i5;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 4;
   } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i4 + 12 | 0, i124);
   HEAP32[i6 >> 2] = i4;
   i1 = (HEAP32[i8 >> 2] | 0) + 4 | 0;
   i4 = HEAP32[i1 >> 2] | 0;
   i2 = i4 + -4 | 0;
   while (1) {
    if ((i4 | 0) == (i2 | 0)) break;
    i133 = i4 + -4 | 0;
    HEAP32[i1 >> 2] = i133;
    i4 = i133;
   }
   i1 = (HEAP32[i13 >> 2] | 0) + 4 | 0;
   i4 = HEAP32[i1 >> 2] | 0;
   i2 = i4 + -4 | 0;
   while (1) {
    if ((i4 | 0) == (i2 | 0)) break;
    i133 = i4 + -4 | 0;
    HEAP32[i1 >> 2] = i133;
    i4 = i133;
   }
   i1 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i14 >> 2] | 0) | 0;
   i7 = i1 + 12 | 0;
   i2 = HEAP32[i9 >> 2] | 0;
   HEAP32[i126 >> 2] = i15;
   HEAP32[i134 >> 2] = HEAP32[i126 >> 2];
   i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
   HEAP32[i127 >> 2] = i2;
   i5 = i1 + 16 | 0;
   i4 = HEAP32[i5 >> 2] | 0;
   i6 = i1 + 20 | 0;
   if (i4 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) {
    HEAP32[i4 >> 2] = i2;
    i2 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
    HEAP32[i5 >> 2] = i2;
   } else {
    __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i7, i127);
    i2 = HEAP32[i5 >> 2] | 0;
   }
   HEAP32[i128 >> 2] = i16;
   if (i2 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) {
    HEAP32[i2 >> 2] = i16;
    HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
   } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i7, i128);
   break;
  }
  if ((i26 | 0) == (HEAP32[10279] | 0)) {
   i2 = HEAP32[i132 + 32 >> 2] | 0;
   if (!(HEAP32[i2 >> 2] | 0)) {
    i1 = __ZN6cashew3RefixEj(i131, 1) | 0;
    i1 = __ZN6cashew5Value10getIStringEv(HEAP32[i1 >> 2] | 0) | 0;
    HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
    i1 = HEAP32[i132 + 4 >> 2] | 0;
    i133 = __ZN6cashew3RefixEj(i131, 2) | 0;
    HEAP32[i30 >> 2] = HEAP32[i133 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i30 >> 2];
    i1 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i1, i134) | 0;
    break;
   } else ___assert_fail(14301, 13478, 1345, 38640);
  }
  if ((i26 | 0) == (HEAP32[10267] | 0)) {
   i1 = __ZN10MixedArena5allocIN4wasm2IfEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
   i132 = i132 + 4 | 0;
   i130 = HEAP32[i132 >> 2] | 0;
   i133 = __ZN6cashew3RefixEj(i131, 1) | 0;
   HEAP32[i31 >> 2] = HEAP32[i133 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i31 >> 2];
   i130 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i130, i134) | 0;
   HEAP32[i1 + 8 >> 2] = i130;
   i130 = HEAP32[i132 >> 2] | 0;
   i133 = __ZN6cashew3RefixEj(i131, 2) | 0;
   HEAP32[i32 >> 2] = HEAP32[i133 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i32 >> 2];
   i130 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i130, i134) | 0;
   i133 = i1 + 12 | 0;
   HEAP32[i133 >> 2] = i130;
   i132 = HEAP32[i132 >> 2] | 0;
   i131 = __ZN6cashew3RefixEj(i131, 3) | 0;
   HEAP32[i33 >> 2] = HEAP32[i131 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i33 >> 2];
   i134 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i132, i134) | 0;
   HEAP32[i1 + 16 >> 2] = i134;
   HEAP32[i1 + 4 >> 2] = HEAP32[(HEAP32[i133 >> 2] | 0) + 4 >> 2];
   break;
  }
  if ((i26 | 0) == (HEAP32[10275] | 0)) {
   i1 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i133 + 4 >> 2] | 0) | 0;
   i8 = i1 + 12 | 0;
   i5 = i132 + 4 | 0;
   i2 = HEAP32[i5 >> 2] | 0;
   i6 = __ZN6cashew3RefixEj(i131, 1) | 0;
   HEAP32[i57 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i57 >> 2];
   i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
   HEAP32[i76 >> 2] = i2;
   i6 = i1 + 16 | 0;
   i4 = HEAP32[i6 >> 2] | 0;
   i7 = i1 + 20 | 0;
   if (i4 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i4 >> 2] = i2;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
   } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i8, i76);
   i2 = HEAP32[i5 >> 2] | 0;
   i4 = __ZN6cashew3RefixEj(i131, 2) | 0;
   HEAP32[i77 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i77 >> 2];
   i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i134) | 0;
   HEAP32[i87 >> 2] = i2;
   i4 = HEAP32[i6 >> 2] | 0;
   if (i4 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i4 >> 2] = i2;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
   } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i8, i87);
   HEAP32[i1 + 4 >> 2] = HEAP32[(HEAP32[(HEAP32[i8 >> 2] | 0) + 4 >> 2] | 0) + 4 >> 2];
   break;
  }
  if ((i26 | 0) != (HEAP32[10282] | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i23, 22585, 20);
   HEAP32[i24 >> 2] = HEAP32[i131 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i24 >> 2];
   __ZN4wasmL8abort_onENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN6cashew3RefE(i23, i134);
  }
  HEAP32[i129 >> 2] = 0;
  i2 = i132 + 32 | 0;
  i4 = HEAP32[i2 >> 2] | 0;
  if (!(HEAP32[i4 >> 2] | 0)) {
   i2 = HEAP32[i132 + 56 >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i46, 30696, 6);
   i2 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i2, i46) | 0;
   HEAP32[i129 >> 2] = i2;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i46);
  } else {
   HEAP32[i45 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i134 >> 2] = HEAP32[i45 >> 2];
   i128 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__6clENS1_7IStringE(i134) | 0;
   HEAP32[i129 >> 2] = i128;
   HEAP32[HEAP32[i2 >> 2] >> 2] = 0;
   i2 = i128;
  }
  i18 = i132 + 40 | 0;
  i4 = HEAP32[i18 >> 2] | 0;
  i5 = i4 + 4 | 0;
  i6 = HEAP32[i5 >> 2] | 0;
  if ((i6 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i4, i129); else {
   HEAP32[i6 >> 2] = i2;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
  }
  i16 = i133 + 4 | 0;
  i17 = __ZN10MixedArena5allocIN4wasm6SwitchEEEPT_v(HEAP32[i16 >> 2] | 0) | 0;
  HEAP32[i17 + 8 >> 2] = i2;
  i129 = HEAP32[i132 + 4 >> 2] | 0;
  i8 = __ZN6cashew3RefixEj(i131, 1) | 0;
  HEAP32[i88 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i134 >> 2] = HEAP32[i88 >> 2];
  i129 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i129, i134) | 0;
  i8 = i17 + 12 | 0;
  HEAP32[i8 >> 2] = i129;
  if ((HEAP32[i129 + 4 >> 2] | 0) != 1) ___assert_fail(22458, 13478, 1373, 38640);
  i5 = __ZN6cashew3RefixEj(i131, 2) | 0;
  i5 = HEAP32[i5 >> 2] | 0;
  HEAP32[i130 >> 2] = i5;
  i7 = 0;
  i6 = 0;
  i4 = 0;
  L481 : while (1) {
   if (i7 >>> 0 >= (__ZN6cashew5Value4sizeEv(i5) | 0) >>> 0) {
    i123 = i6;
    break;
   }
   i131 = __ZN6cashew3RefixEj(i130, i7) | 0;
   HEAP32[i125 >> 2] = HEAP32[i131 >> 2];
   i131 = __ZN6cashew3RefixEj(i125, 0) | 0;
   i131 = HEAP32[i131 >> 2] | 0;
   HEAP32[i122 >> 2] = i131;
   do if ((HEAP32[i131 >> 2] | 0) == 3) i2 = i6; else {
    if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i122, 0) | 0, 41112) | 0) ? !(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i122, 0) | 0, 41148) | 0) : 0) {
     i106 = 353;
     break L481;
    }
    HEAP32[i98 >> 2] = HEAP32[i122 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i98 >> 2];
    __ZN4wasm15Asm2WasmBuilder10getLiteralEN6cashew3RefE(i99, i133, i134);
    i2 = __ZNK4wasm7Literal6geti32Ev(i99) | 0;
    if (!i4) {
     i4 = 1;
     break;
    }
    i2 = (i2 | 0) < (i6 | 0) ? i2 : i6;
    i4 = 1;
   } while (0);
   i5 = HEAP32[i130 >> 2] | 0;
   i7 = i7 + 1 | 0;
   i6 = i2;
  }
  if ((i106 | 0) == 353) ___assert_fail(22482, 13478, 1381, 38640);
  i7 = __ZN10MixedArena5allocIN4wasm6BinaryEEEPT_v(HEAP32[i16 >> 2] | 0) | 0;
  HEAP32[i7 + 8 >> 2] = 1;
  HEAP32[i7 + 12 >> 2] = HEAP32[i8 >> 2];
  i15 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i16 >> 2] | 0) | 0;
  HEAP32[i15 + 8 >> 2] = 1;
  HEAP32[i15 + 16 >> 2] = i123;
  HEAP32[i15 + 4 >> 2] = 1;
  HEAP32[i7 + 16 >> 2] = i15;
  HEAP32[i7 + 4 >> 2] = 1;
  HEAP32[i8 >> 2] = i7;
  i7 = i132 + 44 | 0;
  i8 = i121 + 4 | 0;
  i15 = i17 + 28 | 0;
  i9 = i132 + 56 | 0;
  i10 = i17 + 36 | 0;
  i11 = i17 + 40 | 0;
  i12 = i17 + 32 | 0;
  i13 = i17 + 16 | 0;
  i14 = i17 + 20 | 0;
  i6 = 0;
  while (1) {
   if (i6 >>> 0 >= (__ZN6cashew5Value4sizeEv(HEAP32[i130 >> 2] | 0) | 0) >>> 0) {
    i106 = 358;
    break;
   }
   i131 = __ZN6cashew3RefixEj(i130, i6) | 0;
   HEAP32[i125 >> 2] = HEAP32[i131 >> 2];
   i131 = __ZN6cashew3RefixEj(i125, 0) | 0;
   HEAP32[i122 >> 2] = HEAP32[i131 >> 2];
   i131 = __ZN6cashew3RefixEj(i125, 1) | 0;
   i131 = HEAP32[i131 >> 2] | 0;
   HEAP32[i121 >> 2] = 0;
   i132 = HEAP32[i7 >> 2] | 0;
   HEAP32[i115 >> 2] = i131;
   HEAP32[i134 >> 2] = HEAP32[i115 >> 2];
   i132 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEEclES5_j(i132, i134, 0) | 0;
   HEAP32[i8 >> 2] = i132;
   if ((HEAP32[HEAP32[i122 >> 2] >> 2] | 0) == 3) {
    i132 = HEAP32[i9 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i116, 22534, 14);
    i132 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i132, i116) | 0;
    HEAP32[i15 >> 2] = i132;
    HEAP32[i121 >> 2] = i132;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i116);
   } else {
    if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i122, 0) | 0, 41112) | 0) ? !(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i122, 0) | 0, 41148) | 0) : 0) {
     i106 = 363;
     break;
    }
    HEAP32[i117 >> 2] = HEAP32[i122 >> 2];
    HEAP32[i134 >> 2] = HEAP32[i117 >> 2];
    __ZN4wasm15Asm2WasmBuilder10getLiteralEN6cashew3RefE(i118, i133, i134);
    i2 = __ZNK4wasm7Literal6geti32Ev(i118) | 0;
    if ((i2 | 0) < (i123 | 0)) {
     i106 = 365;
     break;
    }
    i4 = i2 - i123 | 0;
    if ((i4 | 0) <= -1) {
     i106 = 367;
     break;
    }
    i5 = HEAP32[i9 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i119, 22573, 11);
    i5 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i5, i119) | 0;
    HEAP32[i121 >> 2] = i5;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i119);
    i2 = HEAP32[i13 >> 2] | 0;
    if ((HEAP32[i14 >> 2] | 0) - i2 >> 2 >>> 0 <= i4 >>> 0) {
     __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE6resizeEj(i13, i4 + 1 | 0);
     i2 = HEAP32[i13 >> 2] | 0;
    }
    HEAP32[i2 + (i4 << 2) >> 2] = i5;
   }
   i2 = HEAP32[i10 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i11 >> 2] | 0)) __ZNSt3__16vectorIN4wasm6Switch4CaseENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i12, i121); else {
    i129 = i121;
    i131 = HEAP32[i129 + 4 >> 2] | 0;
    i132 = i2;
    HEAP32[i132 >> 2] = HEAP32[i129 >> 2];
    HEAP32[i132 + 4 >> 2] = i131;
    HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 8;
   }
   i6 = i6 + 1 | 0;
  }
  if ((i106 | 0) == 358) {
   if (!(HEAP32[i15 >> 2] | 0)) {
    HEAP32[i134 >> 2] = 0;
    i1 = HEAP32[i9 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i120, 22534, 14);
    i1 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i1, i120) | 0;
    HEAP32[i15 >> 2] = i1;
    HEAP32[i134 >> 2] = i1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i120);
    i1 = __ZN10MixedArena5allocIN4wasm3NopEEEPT_v(HEAP32[i16 >> 2] | 0) | 0;
    HEAP32[i134 + 4 >> 2] = i1;
    i1 = HEAP32[i10 >> 2] | 0;
    if ((i1 | 0) == (HEAP32[i11 >> 2] | 0)) __ZNSt3__16vectorIN4wasm6Switch4CaseENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i12, i134); else {
     i132 = i134;
     i133 = HEAP32[i132 + 4 >> 2] | 0;
     i134 = i1;
     HEAP32[i134 >> 2] = HEAP32[i132 >> 2];
     HEAP32[i134 + 4 >> 2] = i133;
     HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 8;
    }
    i2 = 0;
   } else i2 = 0;
   while (1) {
    i1 = HEAP32[i13 >> 2] | 0;
    if (i2 >>> 0 >= (HEAP32[i14 >> 2] | 0) - i1 >> 2 >>> 0) break;
    i1 = i1 + (i2 << 2) | 0;
    if (!(HEAP32[i1 >> 2] | 0)) HEAP32[i1 >> 2] = HEAP32[i15 >> 2];
    i2 = i2 + 1 | 0;
   }
   i1 = (HEAP32[i18 >> 2] | 0) + 4 | 0;
   i4 = HEAP32[i1 >> 2] | 0;
   i2 = i4 + -4 | 0;
   while (1) {
    if ((i4 | 0) == (i2 | 0)) break;
    i134 = i4 + -4 | 0;
    HEAP32[i1 >> 2] = i134;
    i4 = i134;
   }
   i1 = i17;
   break;
  } else if ((i106 | 0) == 363) ___assert_fail(22482, 13478, 1406, 38640); else if ((i106 | 0) == 365) ___assert_fail(22549, 13478, 1408, 38640); else if ((i106 | 0) == 367) ___assert_fail(22562, 13478, 1410, 38640);
 } else {
  i1 = HEAP32[i132 + 4 >> 2] | 0;
  i133 = __ZN6cashew3RefixEj(i131, 1) | 0;
  HEAP32[i4 >> 2] = HEAP32[i133 >> 2];
  HEAP32[i134 >> 2] = HEAP32[i4 >> 2];
  i1 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i1, i134) | 0;
 } while (0);
 i4 = HEAP32[10246] | 0;
 i2 = i4 + -4 | 0;
 while (1) {
  if ((i4 | 0) == (i2 | 0)) break;
  i134 = i4 + -4 | 0;
  HEAP32[10246] = i134;
  i4 = i134;
 }
 STACKTOP = i135;
 return i1 | 0;
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i53, i1, i52) {
 i53 = i53 | 0;
 i1 = i1 | 0;
 i52 = i52 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i54 = 0;
 i54 = STACKTOP;
 STACKTOP = STACKTOP + 1136 | 0;
 i51 = i54 + 1104 | 0;
 i5 = i54 + 1080 | 0;
 i6 = i54 + 1056 | 0;
 i17 = i54 + 1032 | 0;
 i28 = i54 + 1008 | 0;
 i39 = i54 + 984 | 0;
 i46 = i54 + 960 | 0;
 i47 = i54 + 936 | 0;
 i48 = i54 + 912 | 0;
 i49 = i54 + 888 | 0;
 i50 = i54 + 864 | 0;
 i7 = i54 + 840 | 0;
 i8 = i54 + 816 | 0;
 i9 = i54 + 792 | 0;
 i10 = i54 + 768 | 0;
 i11 = i54 + 744 | 0;
 i12 = i54 + 720 | 0;
 i13 = i54 + 696 | 0;
 i14 = i54 + 672 | 0;
 i15 = i54 + 648 | 0;
 i16 = i54 + 624 | 0;
 i18 = i54 + 600 | 0;
 i19 = i54 + 576 | 0;
 i20 = i54 + 552 | 0;
 i21 = i54 + 528 | 0;
 i22 = i54 + 504 | 0;
 i23 = i54 + 480 | 0;
 i24 = i54 + 456 | 0;
 i25 = i54 + 432 | 0;
 i26 = i54 + 408 | 0;
 i27 = i54 + 384 | 0;
 i29 = i54 + 360 | 0;
 i30 = i54 + 336 | 0;
 i31 = i54 + 312 | 0;
 i32 = i54 + 288 | 0;
 i33 = i54 + 264 | 0;
 i34 = i54 + 240 | 0;
 i35 = i54 + 216 | 0;
 i36 = i54 + 192 | 0;
 i37 = i54 + 168 | 0;
 i38 = i54 + 144 | 0;
 i40 = i54 + 120 | 0;
 i41 = i54 + 96 | 0;
 i42 = i54 + 72 | 0;
 i43 = i54 + 48 | 0;
 i44 = i54 + 24 | 0;
 i45 = i54;
 L1 : do if ((i1 - i53 | 0) > 1) do switch (HEAP8[i53 >> 0] | 0) {
 case 97:
  switch (HEAP8[i53 + 1 >> 0] | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i5, 38598);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i5);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i5);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 110:
  case 100:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i6, 38609);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i6);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i6);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 78:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i17, 38619);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i17);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i17);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i17);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 83:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i28, 38630);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i28);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i28);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i28);
    i1 = i53 + 2 | 0;
    break L1;
   }
  default:
   {
    i1 = i53;
    break L1;
   }
  }
 case 99:
  switch (HEAP8[i53 + 1 >> 0] | 0) {
  case 108:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i39, 38640);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i39);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i39);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i39);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 109:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i46, 38651);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i46);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i46);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i46);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i47, 38661);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i47);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i47);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i47);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 118:
   {
    i50 = i52 + 63 | 0;
    i49 = HEAP8[i50 >> 0] | 0;
    HEAP8[i50 >> 0] = 0;
    i51 = i53 + 2 | 0;
    i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i51, i1, i52) | 0;
    HEAP8[i50 >> 0] = i49;
    if ((i1 | 0) == (i51 | 0)) {
     i1 = i53;
     break L1;
    }
    i2 = HEAP32[i52 + 4 >> 2] | 0;
    if ((HEAP32[i52 >> 2] | 0) == (i2 | 0)) {
     i1 = i53;
     break L1;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 38671) | 0;
    HEAP8[i52 + 60 >> 0] = 1;
    break L1;
   }
  default:
   {
    i1 = i53;
    break L1;
   }
  }
 case 100:
  switch (HEAP8[i53 + 1 >> 0] | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc(i48, 38681);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i48);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i48);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i48);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 101:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i49, 38699);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i49);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i48 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i48, i49);
     HEAP32[i50 >> 2] = i48 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i49);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 108:
   {
    i1 = _malloc(16) | 0;
    HEAP32[i50 + 8 >> 2] = i1;
    HEAP32[i50 >> 2] = 17;
    HEAP32[i50 + 4 >> 2] = 15;
    i2 = i1;
    i3 = 38709;
    i4 = i2 + 15 | 0;
    do {
     HEAP8[i2 >> 0] = HEAP8[i3 >> 0] | 0;
     i2 = i2 + 1 | 0;
     i3 = i3 + 1 | 0;
    } while ((i2 | 0) < (i4 | 0));
    HEAP8[i1 + 15 >> 0] = 0;
    i1 = i50 + 12 | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i49 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i49;
    if (i2 >>> 0 < i49 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i50);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i49 = i2 - i1 | 0;
     i4 = (i49 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i49 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i49 = i51 + 8 | 0;
     i48 = HEAP32[i49 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i48, i50);
     HEAP32[i49 >> 2] = i48 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i50);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 118:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i7, 38725);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i7);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i7);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 86:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i8, 38735);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i8);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i8);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
    i1 = i53 + 2 | 0;
    break L1;
   }
  default:
   {
    i1 = i53;
    break L1;
   }
  }
 case 101:
  switch (HEAP8[i53 + 1 >> 0] | 0) {
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i9, 38746);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i9);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i9);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 79:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i10, 38756);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i10);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i10);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i10);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 113:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i11, 38767);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i11);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i11);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11);
    i1 = i53 + 2 | 0;
    break L1;
   }
  default:
   {
    i1 = i53;
    break L1;
   }
  }
 case 103:
  switch (HEAP8[i53 + 1 >> 0] | 0) {
  case 101:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i12, 38778);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i12);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i12);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i12);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 116:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i13, 38789);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i13);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i13);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i13);
    i1 = i53 + 2 | 0;
    break L1;
   }
  default:
   {
    i1 = i53;
    break L1;
   }
  }
 case 105:
  {
   if ((HEAP8[i53 + 1 >> 0] | 0) != 120) {
    i1 = i53;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i14, 38799);
   i1 = i52 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   i50 = HEAP32[i52 + 8 >> 2] | 0;
   i3 = i50;
   if (i2 >>> 0 < i50 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i14);
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
   } else {
    i1 = HEAP32[i52 >> 2] | 0;
    i50 = i2 - i1 | 0;
    i4 = (i50 | 0) / 24 | 0;
    i2 = i4 + 1 | 0;
    if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
    i1 = (i3 - i1 | 0) / 24 | 0;
    if (i1 >>> 0 < 1073741823) {
     i1 = i1 << 1;
     i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
    } else i1 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
    i50 = i51 + 8 | 0;
    i49 = HEAP32[i50 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i14);
    HEAP32[i50 >> 2] = i49 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14);
   i1 = i53 + 2 | 0;
   break L1;
  }
 case 108:
  switch (HEAP8[i53 + 1 >> 0] | 0) {
  case 101:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i15, 38810);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i15);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i15);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i15);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 105:
   {
    i51 = i53 + 2 | 0;
    i1 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i51, i1, i52) | 0;
    if ((i1 | 0) == (i51 | 0)) {
     i1 = i53;
     break L1;
    }
    i2 = HEAP32[i52 + 4 >> 2] | 0;
    if ((HEAP32[i52 >> 2] | 0) == (i2 | 0)) {
     i1 = i53;
     break L1;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 38821) | 0;
    break L1;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i16, 38833);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i16);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i16);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 83:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc(i18, 38844);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i18);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i18);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i18);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 116:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i19, 38856);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i19);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i19);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i19);
    i1 = i53 + 2 | 0;
    break L1;
   }
  default:
   {
    i1 = i53;
    break L1;
   }
  }
 case 109:
  switch (HEAP8[i53 + 1 >> 0] | 0) {
  case 105:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i20, 38866);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i20);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i20);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i20);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 73:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i21, 38876);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i21);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i21);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i21);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 108:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i22, 38699);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i22);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i22);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i22);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 76:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i23, 38887);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i23);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i23);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i23);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 109:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i24, 38898);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i24);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i24);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i24);
    i1 = i53 + 2 | 0;
    break L1;
   }
  default:
   {
    i1 = i53;
    break L1;
   }
  }
 case 110:
  switch (HEAP8[i53 + 1 >> 0] | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc(i25, 38909);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i25);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i25);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i25);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 101:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i26, 38924);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i26);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i26);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i26);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 103:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i27, 38866);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i27);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i27);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i27);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 116:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i29, 38935);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i29);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i29);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i29);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 119:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc(i30, 38945);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i30);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i30);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i30);
    i1 = i53 + 2 | 0;
    break L1;
   }
  default:
   {
    i1 = i53;
    break L1;
   }
  }
 case 111:
  switch (HEAP8[i53 + 1 >> 0] | 0) {
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i31, 38958);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i31);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i31);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i31);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 114:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i32, 38969);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i32);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i32);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i32);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 82:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i33, 38979);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i33);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i33);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i33);
    i1 = i53 + 2 | 0;
    break L1;
   }
  default:
   {
    i1 = i53;
    break L1;
   }
  }
 case 112:
  switch (HEAP8[i53 + 1 >> 0] | 0) {
  case 109:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc(i34, 38990);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i34);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i34);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i34);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 108:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i35, 39002);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i35);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i35);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i35);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 76:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i36, 39012);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i36);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i36);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i36);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 112:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i37, 39023);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i37);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i37);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i37);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i38, 39002);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i38);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i38);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i38);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 116:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i40, 39034);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i40);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i40);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i40);
    i1 = i53 + 2 | 0;
    break L1;
   }
  default:
   {
    i1 = i53;
    break L1;
   }
  }
 case 113:
  {
   if ((HEAP8[i53 + 1 >> 0] | 0) != 117) {
    i1 = i53;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i41, 39045);
   i1 = i52 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   i50 = HEAP32[i52 + 8 >> 2] | 0;
   i3 = i50;
   if (i2 >>> 0 < i50 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i41);
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
   } else {
    i1 = HEAP32[i52 >> 2] | 0;
    i50 = i2 - i1 | 0;
    i4 = (i50 | 0) / 24 | 0;
    i2 = i4 + 1 | 0;
    if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
    i1 = (i3 - i1 | 0) / 24 | 0;
    if (i1 >>> 0 < 1073741823) {
     i1 = i1 << 1;
     i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
    } else i1 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
    i50 = i51 + 8 | 0;
    i49 = HEAP32[i50 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i41);
    HEAP32[i50 >> 2] = i49 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i41);
   i1 = i53 + 2 | 0;
   break L1;
  }
 case 114:
  switch (HEAP8[i53 + 1 >> 0] | 0) {
  case 109:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i42, 39055);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i42);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i42);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i42);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 77:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i43, 39065);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i43);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i43);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i43);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i44, 39076);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i44);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i44);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i44);
    i1 = i53 + 2 | 0;
    break L1;
   }
  case 83:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc(i45, 39087);
    i1 = i52 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i50 = HEAP32[i52 + 8 >> 2] | 0;
    i3 = i50;
    if (i2 >>> 0 < i50 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i45);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i52 >> 2] | 0;
     i50 = i2 - i1 | 0;
     i4 = (i50 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i50 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i52);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i51, i1, i4, i52 + 12 | 0);
     i50 = i51 + 8 | 0;
     i49 = HEAP32[i50 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i49, i45);
     HEAP32[i50 >> 2] = i49 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i52, i51);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i45);
    i1 = i53 + 2 | 0;
    break L1;
   }
  default:
   {
    i1 = i53;
    break L1;
   }
  }
 case 118:
  {
   if (((HEAP8[i53 + 1 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
    i1 = i53;
    break L1;
   }
   i51 = i53 + 2 | 0;
   i1 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i51, i1, i52) | 0;
   if ((i1 | 0) == (i51 | 0)) {
    i1 = i53;
    break L1;
   }
   i2 = HEAP32[i52 + 4 >> 2] | 0;
   if ((HEAP32[i52 >> 2] | 0) == (i2 | 0)) {
    i1 = i53;
    break L1;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 38671) | 0;
   break L1;
  }
 default:
  {
   i1 = i53;
   break L1;
  }
 } while (0); else i1 = i53; while (0);
 STACKTOP = i54;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i3, i36) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i36 = i36 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i37 = 0;
 i37 = STACKTOP;
 STACKTOP = STACKTOP + 720 | 0;
 i35 = i37 + 696 | 0;
 i6 = i37 + 672 | 0;
 i32 = i37 + 648 | 0;
 i15 = i37 + 624 | 0;
 i17 = i37 + 600 | 0;
 i18 = i37 + 576 | 0;
 i19 = i37 + 552 | 0;
 i20 = i37 + 528 | 0;
 i21 = i37 + 504 | 0;
 i22 = i37 + 480 | 0;
 i23 = i37 + 456 | 0;
 i7 = i37 + 432 | 0;
 i8 = i37 + 408 | 0;
 i9 = i37 + 384 | 0;
 i34 = i37 + 360 | 0;
 i10 = i37 + 336 | 0;
 i11 = i37 + 312 | 0;
 i12 = i37 + 288 | 0;
 i33 = i37 + 264 | 0;
 i13 = i37 + 240 | 0;
 i14 = i37 + 216 | 0;
 i16 = i37 + 192 | 0;
 i24 = i37 + 168 | 0;
 i25 = i37 + 144 | 0;
 i26 = i37 + 120 | 0;
 i27 = i37 + 96 | 0;
 i28 = i37 + 72 | 0;
 i29 = i37 + 48 | 0;
 i30 = i37 + 24 | 0;
 i31 = i37;
 L1 : do if ((i1 | 0) != (i3 | 0)) do switch (HEAP8[i1 >> 0] | 0) {
 case 118:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc(i6, 38144);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i6);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i6);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 119:
  {
   HEAP8[i32 >> 0] = 14;
   i2 = i32 + 1 | 0;
   HEAP8[i2 >> 0] = HEAP8[38149] | 0;
   HEAP8[i2 + 1 >> 0] = HEAP8[38150] | 0;
   HEAP8[i2 + 2 >> 0] = HEAP8[38151] | 0;
   HEAP8[i2 + 3 >> 0] = HEAP8[38152] | 0;
   HEAP8[i2 + 4 >> 0] = HEAP8[38153] | 0;
   HEAP8[i2 + 5 >> 0] = HEAP8[38154] | 0;
   HEAP8[i2 + 6 >> 0] = HEAP8[38155] | 0;
   HEAP8[i32 + 8 >> 0] = 0;
   i2 = i32 + 12 | 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i2 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i32);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i32);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i32);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 98:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc(i15, 38157);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i15);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i15);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i15);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 99:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc(i17, 38162);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i17);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i17);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i17);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 97:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc(i18, 38167);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i18);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i18);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i18);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 104:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc(i19, 38179);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i19);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i19);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i19);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 115:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc(i20, 38193);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i20);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i20);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i20);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 116:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc(i21, 38199);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i21);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i21);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i21);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 105:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc(i22, 38214);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i22);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i22);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i22);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 106:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc(i23, 38218);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i23);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i23);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i23);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 108:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc(i7, 38231);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i7);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i7);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 109:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc(i8, 38236);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i8);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i8);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 120:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i9, 38250);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i9);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i9);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 121:
  {
   i2 = _malloc(32) | 0;
   HEAP32[i34 + 8 >> 2] = i2;
   HEAP32[i34 >> 2] = 33;
   HEAP32[i34 + 4 >> 2] = 18;
   i3 = i2;
   i4 = 38260;
   i5 = i3 + 18 | 0;
   do {
    HEAP8[i3 >> 0] = HEAP8[i4 >> 0] | 0;
    i3 = i3 + 1 | 0;
    i4 = i4 + 1 | 0;
   } while ((i3 | 0) < (i5 | 0));
   HEAP8[i2 + 18 >> 0] = 0;
   i2 = i34 + 12 | 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i2 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i33 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i33;
   if (i3 >>> 0 < i33 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i34);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i33 = i3 - i2 | 0;
    i5 = (i33 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i33 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i33 = i35 + 8 | 0;
    i32 = HEAP32[i33 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i32, i34);
    HEAP32[i33 >> 2] = i32 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i34);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 110:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc(i10, 38279);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i10);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i10);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i10);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 111:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc(i11, 38288);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i11);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i11);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 102:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc(i12, 38306);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i12);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i12);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i12);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 100:
  {
   HEAP8[i33 >> 0] = 12;
   i2 = i33 + 1 | 0;
   HEAP8[i2 >> 0] = HEAP8[38312] | 0;
   HEAP8[i2 + 1 >> 0] = HEAP8[38313] | 0;
   HEAP8[i2 + 2 >> 0] = HEAP8[38314] | 0;
   HEAP8[i2 + 3 >> 0] = HEAP8[38315] | 0;
   HEAP8[i2 + 4 >> 0] = HEAP8[38316] | 0;
   HEAP8[i2 + 5 >> 0] = HEAP8[38317] | 0;
   HEAP8[i33 + 7 >> 0] = 0;
   i2 = i33 + 12 | 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i2 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i33);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i32 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i32, i33);
    HEAP32[i34 >> 2] = i32 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i33);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 101:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc(i13, 38319);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i13);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i13);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i13);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 103:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i14, 38331);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i14);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i14);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 122:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc(i16, 38342);
   i2 = i36 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i34 = HEAP32[i36 + 8 >> 2] | 0;
   i4 = i34;
   if (i3 >>> 0 < i34 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i16);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i36 >> 2] | 0;
    i34 = i3 - i2 | 0;
    i5 = (i34 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
    i34 = i35 + 8 | 0;
    i33 = HEAP32[i34 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i16);
    HEAP32[i34 >> 2] = i33 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 117:
  {
   i35 = i1 + 1 | 0;
   i36 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i35, i3, i36) | 0;
   i1 = (i36 | 0) == (i35 | 0) ? i1 : i36;
   break L1;
  }
 case 68:
  {
   i2 = i1 + 1 | 0;
   if ((i2 | 0) == (i3 | 0)) break L1;
   switch (HEAP8[i2 >> 0] | 0) {
   case 100:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i24, 38379);
     i2 = i36 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i34 = HEAP32[i36 + 8 >> 2] | 0;
     i4 = i34;
     if (i3 >>> 0 < i34 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i24);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else {
      i2 = HEAP32[i36 >> 2] | 0;
      i34 = i3 - i2 | 0;
      i5 = (i34 | 0) / 24 | 0;
      i3 = i5 + 1 | 0;
      if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
      i2 = (i4 - i2 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
      i34 = i35 + 8 | 0;
      i33 = HEAP32[i34 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i24);
      HEAP32[i34 >> 2] = i33 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i24);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i25, 38389);
     i2 = i36 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i34 = HEAP32[i36 + 8 >> 2] | 0;
     i4 = i34;
     if (i3 >>> 0 < i34 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i25);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else {
      i2 = HEAP32[i36 >> 2] | 0;
      i34 = i3 - i2 | 0;
      i5 = (i34 | 0) / 24 | 0;
      i3 = i5 + 1 | 0;
      if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
      i2 = (i4 - i2 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
      i34 = i35 + 8 | 0;
      i33 = HEAP32[i34 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i25);
      HEAP32[i34 >> 2] = i33 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i25);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 102:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i26, 38400);
     i2 = i36 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i34 = HEAP32[i36 + 8 >> 2] | 0;
     i4 = i34;
     if (i3 >>> 0 < i34 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i26);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else {
      i2 = HEAP32[i36 >> 2] | 0;
      i34 = i3 - i2 | 0;
      i5 = (i34 | 0) / 24 | 0;
      i3 = i5 + 1 | 0;
      if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
      i2 = (i4 - i2 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
      i34 = i35 + 8 | 0;
      i33 = HEAP32[i34 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i26);
      HEAP32[i34 >> 2] = i33 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i26);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 104:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i27, 38410);
     i2 = i36 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i34 = HEAP32[i36 + 8 >> 2] | 0;
     i4 = i34;
     if (i3 >>> 0 < i34 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i27);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else {
      i2 = HEAP32[i36 >> 2] | 0;
      i34 = i3 - i2 | 0;
      i5 = (i34 | 0) / 24 | 0;
      i3 = i5 + 1 | 0;
      if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
      i2 = (i4 - i2 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
      i34 = i35 + 8 | 0;
      i33 = HEAP32[i34 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i27);
      HEAP32[i34 >> 2] = i33 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i27);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 105:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc(i28, 38420);
     i2 = i36 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i34 = HEAP32[i36 + 8 >> 2] | 0;
     i4 = i34;
     if (i3 >>> 0 < i34 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i28);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else {
      i2 = HEAP32[i36 >> 2] | 0;
      i34 = i3 - i2 | 0;
      i5 = (i34 | 0) / 24 | 0;
      i3 = i5 + 1 | 0;
      if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
      i2 = (i4 - i2 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
      i34 = i35 + 8 | 0;
      i33 = HEAP32[i34 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i28);
      HEAP32[i34 >> 2] = i33 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i28);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc(i29, 38429);
     i2 = i36 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i34 = HEAP32[i36 + 8 >> 2] | 0;
     i4 = i34;
     if (i3 >>> 0 < i34 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i29);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else {
      i2 = HEAP32[i36 >> 2] | 0;
      i34 = i3 - i2 | 0;
      i5 = (i34 | 0) / 24 | 0;
      i3 = i5 + 1 | 0;
      if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
      i2 = (i4 - i2 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
      i34 = i35 + 8 | 0;
      i33 = HEAP32[i34 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i29);
      HEAP32[i34 >> 2] = i33 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i29);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc(i30, 38438);
     i2 = i36 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i34 = HEAP32[i36 + 8 >> 2] | 0;
     i4 = i34;
     if (i3 >>> 0 < i34 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i30);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else {
      i2 = HEAP32[i36 >> 2] | 0;
      i34 = i3 - i2 | 0;
      i5 = (i34 | 0) / 24 | 0;
      i3 = i5 + 1 | 0;
      if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
      i2 = (i4 - i2 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
      i34 = i35 + 8 | 0;
      i33 = HEAP32[i34 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i30);
      HEAP32[i34 >> 2] = i33 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i30);
     i1 = i1 + 2 | 0;
     break L1;
    }
   case 110:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc(i31, 38443);
     i2 = i36 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     i34 = HEAP32[i36 + 8 >> 2] | 0;
     i4 = i34;
     if (i3 >>> 0 < i34 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i31);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     } else {
      i2 = HEAP32[i36 >> 2] | 0;
      i34 = i3 - i2 | 0;
      i5 = (i34 | 0) / 24 | 0;
      i3 = i5 + 1 | 0;
      if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i36);
      i2 = (i4 - i2 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i35, i2, i5, i36 + 12 | 0);
      i34 = i35 + 8 | 0;
      i33 = HEAP32[i34 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i31);
      HEAP32[i34 >> 2] = i33 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i36, i35);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i35);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i31);
     i1 = i1 + 2 | 0;
     break L1;
    }
   default:
    break L1;
   }
  }
 default:
  break L1;
 } while (0); while (0);
 STACKTOP = i37;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i71, i67, i68) {
 i71 = i71 | 0;
 i67 = i67 | 0;
 i68 = i68 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i69 = 0, i70 = 0, i72 = 0;
 i72 = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 i70 = i72 + 188 | 0;
 i66 = i72 + 184 | 0;
 i64 = i72 + 172 | 0;
 i50 = i72 + 160 | 0;
 i51 = i72 + 144 | 0;
 i56 = i72 + 140 | 0;
 i57 = i72 + 128 | 0;
 i58 = i72 + 112 | 0;
 i59 = i72 + 108 | 0;
 i60 = i72 + 96 | 0;
 i61 = i72 + 64 | 0;
 i62 = i72 + 56 | 0;
 i63 = i72 + 40 | 0;
 i52 = i72 + 36 | 0;
 i53 = i72 + 24 | 0;
 i54 = i72 + 8 | 0;
 i55 = i72;
 i8 = i72 + 80 | 0;
 i5 = i72 + 60 | 0;
 i7 = i67;
 L1 : do if ((i7 - i71 | 0) > 1) {
  i69 = (HEAP8[i71 >> 0] | 0) == 76 ? i71 + 1 | 0 : i71;
  i1 = HEAP8[i69 >> 0] | 0;
  switch (i1 << 24 >> 24 | 0) {
  case 78:
   {
    L46 : do if ((i69 | 0) != (i67 | 0)) if (i1 << 24 >> 24 == 78) {
     i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i69 + 1 | 0, i67, i66) | 0;
     L49 : do if ((i1 | 0) != (i67 | 0)) {
      i3 = i68 + 52 | 0;
      HEAP32[i3 >> 2] = 0;
      switch (HEAP8[i1 >> 0] | 0) {
      case 82:
       {
        HEAP32[i3 >> 2] = 1;
        i1 = i1 + 1 | 0;
        break;
       }
      case 79:
       {
        HEAP32[i3 >> 2] = 2;
        i1 = i1 + 1 | 0;
        break;
       }
      default:
       {}
      }
      i49 = i68 + 4 | 0;
      i4 = HEAP32[i49 >> 2] | 0;
      i48 = HEAP32[i68 + 8 >> 2] | 0;
      i3 = i48;
      if (i4 >>> 0 < i48 >>> 0) {
       HEAP32[i4 >> 2] = 0;
       HEAP32[i4 + 4 >> 2] = 0;
       HEAP32[i4 + 8 >> 2] = 0;
       HEAP32[i4 + 12 >> 2] = 0;
       HEAP32[i4 + 16 >> 2] = 0;
       HEAP32[i4 + 20 >> 2] = 0;
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i4 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       i3 = i4 + 12 | 0;
       i4 = 0;
       while (1) {
        if ((i4 | 0) == 3) break;
        HEAP32[i3 + (i4 << 2) >> 2] = 0;
        i4 = i4 + 1 | 0;
       }
       HEAP32[i49 >> 2] = (HEAP32[i49 >> 2] | 0) + 24;
      } else {
       i5 = HEAP32[i68 >> 2] | 0;
       i48 = i4 - i5 | 0;
       i6 = (i48 | 0) / 24 | 0;
       i4 = i6 + 1 | 0;
       if ((i48 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i68);
       i3 = (i3 - i5 | 0) / 24 | 0;
       if (i3 >>> 0 < 1073741823) {
        i3 = i3 << 1;
        i3 = i3 >>> 0 < i4 >>> 0 ? i4 : i3;
       } else i3 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i70, i3, i6, i68 + 12 | 0);
       i5 = i70 + 8 | 0;
       i6 = HEAP32[i5 >> 2] | 0;
       HEAP32[i6 >> 2] = 0;
       HEAP32[i6 + 4 >> 2] = 0;
       HEAP32[i6 + 8 >> 2] = 0;
       HEAP32[i6 + 12 >> 2] = 0;
       HEAP32[i6 + 16 >> 2] = 0;
       HEAP32[i6 + 20 >> 2] = 0;
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i6 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       i3 = i6 + 12 | 0;
       i4 = 0;
       while (1) {
        if ((i4 | 0) == 3) break;
        HEAP32[i3 + (i4 << 2) >> 2] = 0;
        i4 = i4 + 1 | 0;
       }
       HEAP32[i5 >> 2] = i6 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i68, i70);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i70);
      }
      if (((i7 - i1 | 0) > 1 ? (HEAP8[i1 >> 0] | 0) == 83 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == 116 : 0) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj((HEAP32[i49 >> 2] | 0) + -24 | 0, 39756, 3);
       i1 = i1 + 2 | 0;
      }
      if ((i1 | 0) == (i67 | 0)) {
       i2 = HEAP32[i49 >> 2] | 0;
       i1 = i2 + -24 | 0;
       while (1) {
        if ((i2 | 0) == (i1 | 0)) break L49;
        i70 = i2 + -24 | 0;
        HEAP32[i49 >> 2] = i70;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i70);
        i2 = HEAP32[i49 >> 2] | 0;
       }
      }
      i29 = i64 + 8 | 0;
      i30 = i64 + 1 | 0;
      i31 = i64 + 4 | 0;
      i32 = i68 + 12 | 0;
      i33 = i68 + 16 | 0;
      i48 = i68 + 20 | 0;
      i34 = i68 + 24 | 0;
      i35 = i63 + 12 | 0;
      i36 = i63 + 4 | 0;
      i37 = i63 + 8 | 0;
      i38 = i68 + 28 | 0;
      i39 = i70 + 8 | 0;
      i40 = i54 + 12 | 0;
      i41 = i54 + 4 | 0;
      i42 = i54 + 8 | 0;
      i43 = i70 + 8 | 0;
      i44 = i53 + 8 | 0;
      i45 = i53 + 1 | 0;
      i46 = i53 + 4 | 0;
      i47 = i50 + 8 | 0;
      i9 = i50 + 1 | 0;
      i10 = i50 + 4 | 0;
      i11 = i51 + 12 | 0;
      i12 = i51 + 4 | 0;
      i13 = i51 + 8 | 0;
      i14 = i70 + 8 | 0;
      i15 = i58 + 12 | 0;
      i16 = i58 + 4 | 0;
      i17 = i58 + 8 | 0;
      i18 = i70 + 8 | 0;
      i19 = i57 + 8 | 0;
      i20 = i57 + 1 | 0;
      i21 = i57 + 4 | 0;
      i22 = i61 + 12 | 0;
      i23 = i61 + 4 | 0;
      i24 = i61 + 8 | 0;
      i25 = i70 + 8 | 0;
      i26 = i60 + 8 | 0;
      i27 = i60 + 1 | 0;
      i28 = i60 + 4 | 0;
      i8 = 0;
      L92 : while (1) {
       L94 : while (1) {
        i3 = HEAP8[i1 >> 0] | 0;
        if (i3 << 24 >> 24 == 69) {
         i65 = 129;
         break L92;
        }
        switch (i3 << 24 >> 24 | 0) {
        case 83:
         {
          i3 = i1;
          i65 = 39;
          break L94;
         }
        case 84:
         {
          i3 = i1;
          i65 = 59;
          break L94;
         }
        case 68:
         {
          i3 = i1;
          i65 = 77;
          break L94;
         }
        case 73:
         break;
        case 76:
         {
          i1 = i1 + 1 | 0;
          if ((i1 | 0) == (i67 | 0)) break L49; else continue L94;
         }
        default:
         {
          i3 = i1;
          break L94;
         }
        }
        i7 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i1, i67, i68) | 0;
        if ((i7 | 0) == (i1 | 0) | (i7 | 0) == (i67 | 0)) break L49;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i64, (HEAP32[i49 >> 2] | 0) + -24 | 0);
        i1 = HEAP32[i49 >> 2] | 0;
        i3 = i1 + -24 | 0;
        i4 = i1;
        while (1) {
         if ((i4 | 0) == (i3 | 0)) break;
         i6 = i4 + -24 | 0;
         HEAP32[i49 >> 2] = i6;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
         i4 = HEAP32[i49 >> 2] | 0;
        }
        i6 = HEAP8[i64 >> 0] | 0;
        i3 = (i6 & 1) == 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1 + -48 | 0, i3 ? i30 : HEAP32[i29 >> 2] | 0, i3 ? (i6 & 255) >>> 1 : HEAP32[i31 >> 2] | 0) | 0;
        i1 = (HEAP32[i49 >> 2] | 0) + -24 | 0;
        HEAP32[i52 >> 2] = HEAP32[i32 >> 2];
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i63, i1, i52);
        i1 = HEAP32[i48 >> 2] | 0;
        i6 = HEAP32[i34 >> 2] | 0;
        i3 = i6;
        if (i1 >>> 0 < i6 >>> 0) {
         HEAP32[i1 + 12 >> 2] = HEAP32[i35 >> 2];
         HEAP32[i1 >> 2] = HEAP32[i63 >> 2];
         HEAP32[i1 + 4 >> 2] = HEAP32[i36 >> 2];
         HEAP32[i1 + 8 >> 2] = HEAP32[i37 >> 2];
         HEAP32[i37 >> 2] = 0;
         HEAP32[i36 >> 2] = 0;
         HEAP32[i63 >> 2] = 0;
         HEAP32[i48 >> 2] = (HEAP32[i48 >> 2] | 0) + 16;
        } else {
         i4 = HEAP32[i33 >> 2] | 0;
         i1 = i1 - i4 | 0;
         i6 = i1 >> 4;
         i5 = i6 + 1 | 0;
         if ((i1 | 0) < -16) {
          i65 = 104;
          break L92;
         }
         i1 = i3 - i4 | 0;
         if (i1 >> 4 >>> 0 < 1073741823) {
          i1 = i1 >> 3;
          i1 = i1 >>> 0 < i5 >>> 0 ? i5 : i1;
         } else i1 = 2147483647;
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i70, i1, i6, i38);
         i6 = HEAP32[i39 >> 2] | 0;
         HEAP32[i6 + 12 >> 2] = HEAP32[i35 >> 2];
         HEAP32[i6 >> 2] = HEAP32[i63 >> 2];
         HEAP32[i6 + 4 >> 2] = HEAP32[i36 >> 2];
         HEAP32[i6 + 8 >> 2] = HEAP32[i37 >> 2];
         HEAP32[i37 >> 2] = 0;
         HEAP32[i36 >> 2] = 0;
         HEAP32[i63 >> 2] = 0;
         HEAP32[i39 >> 2] = i6 + 16;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i33, i70);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i70);
        }
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i63);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i64);
        i1 = i7;
       }
       L113 : do if ((i65 | 0) == 39) {
        i65 = 0;
        i8 = i3 + 1 | 0;
        if ((i8 | 0) != (i67 | 0) ? (HEAP8[i8 >> 0] | 0) == 116 : 0) break;
        i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i3, i67, i68) | 0;
        if ((i1 | 0) == (i3 | 0) | (i1 | 0) == (i67 | 0)) break L49;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i64, (HEAP32[i49 >> 2] | 0) + -24 | 0);
        i5 = HEAP32[i49 >> 2] | 0;
        i3 = i5 + -24 | 0;
        i4 = i5;
        while (1) {
         if ((i4 | 0) == (i3 | 0)) break;
         i8 = i4 + -24 | 0;
         HEAP32[i49 >> 2] = i8;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
         i4 = HEAP32[i49 >> 2] | 0;
        }
        i4 = i5 + -48 | 0;
        i3 = HEAP8[i4 >> 0] | 0;
        if (!(i3 & 1)) i3 = (i3 & 255) >>> 1; else i3 = HEAP32[i5 + -44 >> 2] | 0;
        if (!i3) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i4, i64); else {
         __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i50, 38561, i64);
         i3 = HEAP8[i50 >> 0] | 0;
         i8 = (i3 & 1) == 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i4, i8 ? i9 : HEAP32[i47 >> 2] | 0, i8 ? (i3 & 255) >>> 1 : HEAP32[i10 >> 2] | 0) | 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i50);
         i3 = (HEAP32[i49 >> 2] | 0) + -24 | 0;
         HEAP32[i56 >> 2] = HEAP32[i32 >> 2];
         __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i51, i3, i56);
         i3 = HEAP32[i48 >> 2] | 0;
         i8 = HEAP32[i34 >> 2] | 0;
         i4 = i8;
         if (i3 >>> 0 < i8 >>> 0) {
          HEAP32[i3 + 12 >> 2] = HEAP32[i11 >> 2];
          HEAP32[i3 >> 2] = HEAP32[i51 >> 2];
          HEAP32[i3 + 4 >> 2] = HEAP32[i12 >> 2];
          HEAP32[i3 + 8 >> 2] = HEAP32[i13 >> 2];
          HEAP32[i13 >> 2] = 0;
          HEAP32[i12 >> 2] = 0;
          HEAP32[i51 >> 2] = 0;
          HEAP32[i48 >> 2] = (HEAP32[i48 >> 2] | 0) + 16;
         } else {
          i5 = HEAP32[i33 >> 2] | 0;
          i8 = i3 - i5 | 0;
          i7 = i8 >> 4;
          i6 = i7 + 1 | 0;
          if ((i8 | 0) < -16) {
           i65 = 52;
           break L92;
          }
          i3 = i4 - i5 | 0;
          if (i3 >> 4 >>> 0 < 1073741823) {
           i3 = i3 >> 3;
           i3 = i3 >>> 0 < i6 >>> 0 ? i6 : i3;
          } else i3 = 2147483647;
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i70, i3, i7, i38);
          i8 = HEAP32[i14 >> 2] | 0;
          HEAP32[i8 + 12 >> 2] = HEAP32[i11 >> 2];
          HEAP32[i8 >> 2] = HEAP32[i51 >> 2];
          HEAP32[i8 + 4 >> 2] = HEAP32[i12 >> 2];
          HEAP32[i8 + 8 >> 2] = HEAP32[i13 >> 2];
          HEAP32[i13 >> 2] = 0;
          HEAP32[i12 >> 2] = 0;
          HEAP32[i51 >> 2] = 0;
          HEAP32[i14 >> 2] = i8 + 16;
          __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i33, i70);
          __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i70);
         }
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i51);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i64);
        i8 = 1;
        continue L92;
       } else if ((i65 | 0) == 59) {
        i65 = 0;
        i1 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i3, i67, i68) | 0;
        if ((i1 | 0) == (i3 | 0) | (i1 | 0) == (i67 | 0)) break L49;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i64, (HEAP32[i49 >> 2] | 0) + -24 | 0);
        i5 = HEAP32[i49 >> 2] | 0;
        i3 = i5 + -24 | 0;
        i4 = i5;
        while (1) {
         if ((i4 | 0) == (i3 | 0)) break;
         i8 = i4 + -24 | 0;
         HEAP32[i49 >> 2] = i8;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
         i4 = HEAP32[i49 >> 2] | 0;
        }
        i4 = i5 + -48 | 0;
        i3 = HEAP8[i4 >> 0] | 0;
        if (!(i3 & 1)) i3 = (i3 & 255) >>> 1; else i3 = HEAP32[i5 + -44 >> 2] | 0;
        if (!i3) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i4, i64); else {
         __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i57, 38561, i64);
         i8 = HEAP8[i57 >> 0] | 0;
         i7 = (i8 & 1) == 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i4, i7 ? i20 : HEAP32[i19 >> 2] | 0, i7 ? (i8 & 255) >>> 1 : HEAP32[i21 >> 2] | 0) | 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i57);
        }
        i3 = (HEAP32[i49 >> 2] | 0) + -24 | 0;
        HEAP32[i59 >> 2] = HEAP32[i32 >> 2];
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i58, i3, i59);
        i3 = HEAP32[i48 >> 2] | 0;
        i8 = HEAP32[i34 >> 2] | 0;
        i4 = i8;
        if (i3 >>> 0 < i8 >>> 0) {
         HEAP32[i3 + 12 >> 2] = HEAP32[i15 >> 2];
         HEAP32[i3 >> 2] = HEAP32[i58 >> 2];
         HEAP32[i3 + 4 >> 2] = HEAP32[i16 >> 2];
         HEAP32[i3 + 8 >> 2] = HEAP32[i17 >> 2];
         HEAP32[i17 >> 2] = 0;
         HEAP32[i16 >> 2] = 0;
         HEAP32[i58 >> 2] = 0;
         HEAP32[i48 >> 2] = (HEAP32[i48 >> 2] | 0) + 16;
        } else {
         i5 = HEAP32[i33 >> 2] | 0;
         i8 = i3 - i5 | 0;
         i7 = i8 >> 4;
         i6 = i7 + 1 | 0;
         if ((i8 | 0) < -16) {
          i65 = 72;
          break L92;
         }
         i3 = i4 - i5 | 0;
         if (i3 >> 4 >>> 0 < 1073741823) {
          i3 = i3 >> 3;
          i3 = i3 >>> 0 < i6 >>> 0 ? i6 : i3;
         } else i3 = 2147483647;
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i70, i3, i7, i38);
         i8 = HEAP32[i18 >> 2] | 0;
         HEAP32[i8 + 12 >> 2] = HEAP32[i15 >> 2];
         HEAP32[i8 >> 2] = HEAP32[i58 >> 2];
         HEAP32[i8 + 4 >> 2] = HEAP32[i16 >> 2];
         HEAP32[i8 + 8 >> 2] = HEAP32[i17 >> 2];
         HEAP32[i17 >> 2] = 0;
         HEAP32[i16 >> 2] = 0;
         HEAP32[i58 >> 2] = 0;
         HEAP32[i18 >> 2] = i8 + 16;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i33, i70);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i70);
        }
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i58);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i64);
        i8 = 1;
        continue L92;
       } else if ((i65 | 0) == 77) {
        i65 = 0;
        i1 = i3 + 1 | 0;
        if ((i1 | 0) != (i67 | 0)) switch (HEAP8[i1 >> 0] | 0) {
        case 84:
        case 116:
         break;
        default:
         break L113;
        }
        i1 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i3, i67, i68) | 0;
        if ((i1 | 0) == (i3 | 0) | (i1 | 0) == (i67 | 0)) break L49;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i64, (HEAP32[i49 >> 2] | 0) + -24 | 0);
        i5 = HEAP32[i49 >> 2] | 0;
        i3 = i5 + -24 | 0;
        i4 = i5;
        while (1) {
         if ((i4 | 0) == (i3 | 0)) break;
         i8 = i4 + -24 | 0;
         HEAP32[i49 >> 2] = i8;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
         i4 = HEAP32[i49 >> 2] | 0;
        }
        i4 = i5 + -48 | 0;
        i3 = HEAP8[i4 >> 0] | 0;
        if (!(i3 & 1)) i3 = (i3 & 255) >>> 1; else i3 = HEAP32[i5 + -44 >> 2] | 0;
        if (!i3) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i4, i64); else {
         __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i60, 38561, i64);
         i8 = HEAP8[i60 >> 0] | 0;
         i7 = (i8 & 1) == 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i4, i7 ? i27 : HEAP32[i26 >> 2] | 0, i7 ? (i8 & 255) >>> 1 : HEAP32[i28 >> 2] | 0) | 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i60);
        }
        i3 = (HEAP32[i49 >> 2] | 0) + -24 | 0;
        HEAP32[i62 >> 2] = HEAP32[i32 >> 2];
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i61, i3, i62);
        i3 = HEAP32[i48 >> 2] | 0;
        i8 = HEAP32[i34 >> 2] | 0;
        i4 = i8;
        if (i3 >>> 0 < i8 >>> 0) {
         HEAP32[i3 + 12 >> 2] = HEAP32[i22 >> 2];
         HEAP32[i3 >> 2] = HEAP32[i61 >> 2];
         HEAP32[i3 + 4 >> 2] = HEAP32[i23 >> 2];
         HEAP32[i3 + 8 >> 2] = HEAP32[i24 >> 2];
         HEAP32[i24 >> 2] = 0;
         HEAP32[i23 >> 2] = 0;
         HEAP32[i61 >> 2] = 0;
         HEAP32[i48 >> 2] = (HEAP32[i48 >> 2] | 0) + 16;
        } else {
         i5 = HEAP32[i33 >> 2] | 0;
         i8 = i3 - i5 | 0;
         i7 = i8 >> 4;
         i6 = i7 + 1 | 0;
         if ((i8 | 0) < -16) {
          i65 = 92;
          break L92;
         }
         i3 = i4 - i5 | 0;
         if (i3 >> 4 >>> 0 < 1073741823) {
          i3 = i3 >> 3;
          i3 = i3 >>> 0 < i6 >>> 0 ? i6 : i3;
         } else i3 = 2147483647;
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i70, i3, i7, i38);
         i8 = HEAP32[i25 >> 2] | 0;
         HEAP32[i8 + 12 >> 2] = HEAP32[i22 >> 2];
         HEAP32[i8 >> 2] = HEAP32[i61 >> 2];
         HEAP32[i8 + 4 >> 2] = HEAP32[i23 >> 2];
         HEAP32[i8 + 8 >> 2] = HEAP32[i24 >> 2];
         HEAP32[i24 >> 2] = 0;
         HEAP32[i23 >> 2] = 0;
         HEAP32[i61 >> 2] = 0;
         HEAP32[i25 >> 2] = i8 + 16;
         __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i33, i70);
         __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i70);
        }
        __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i61);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i64);
        i8 = 1;
        continue L92;
       } while (0);
       i1 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i67, i68) | 0;
       if ((i1 | 0) == (i3 | 0) | (i1 | 0) == (i67 | 0)) break L49;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i64, (HEAP32[i49 >> 2] | 0) + -24 | 0);
       i5 = HEAP32[i49 >> 2] | 0;
       i3 = i5 + -24 | 0;
       i4 = i5;
       while (1) {
        if ((i4 | 0) == (i3 | 0)) break;
        i8 = i4 + -24 | 0;
        HEAP32[i49 >> 2] = i8;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
        i4 = HEAP32[i49 >> 2] | 0;
       }
       i4 = i5 + -48 | 0;
       i3 = HEAP8[i4 >> 0] | 0;
       if (!(i3 & 1)) i3 = (i3 & 255) >>> 1; else i3 = HEAP32[i5 + -44 >> 2] | 0;
       if (!i3) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i4, i64); else {
        __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i53, 38561, i64);
        i8 = HEAP8[i53 >> 0] | 0;
        i7 = (i8 & 1) == 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i4, i7 ? i45 : HEAP32[i44 >> 2] | 0, i7 ? (i8 & 255) >>> 1 : HEAP32[i46 >> 2] | 0) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i53);
       }
       i3 = (HEAP32[i49 >> 2] | 0) + -24 | 0;
       HEAP32[i55 >> 2] = HEAP32[i32 >> 2];
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i54, i3, i55);
       i3 = HEAP32[i48 >> 2] | 0;
       i8 = HEAP32[i34 >> 2] | 0;
       i4 = i8;
       if (i3 >>> 0 < i8 >>> 0) {
        HEAP32[i3 + 12 >> 2] = HEAP32[i40 >> 2];
        HEAP32[i3 >> 2] = HEAP32[i54 >> 2];
        HEAP32[i3 + 4 >> 2] = HEAP32[i41 >> 2];
        HEAP32[i3 + 8 >> 2] = HEAP32[i42 >> 2];
        HEAP32[i42 >> 2] = 0;
        HEAP32[i41 >> 2] = 0;
        HEAP32[i54 >> 2] = 0;
        HEAP32[i48 >> 2] = (HEAP32[i48 >> 2] | 0) + 16;
       } else {
        i5 = HEAP32[i33 >> 2] | 0;
        i8 = i3 - i5 | 0;
        i7 = i8 >> 4;
        i6 = i7 + 1 | 0;
        if ((i8 | 0) < -16) {
         i65 = 123;
         break;
        }
        i3 = i4 - i5 | 0;
        if (i3 >> 4 >>> 0 < 1073741823) {
         i3 = i3 >> 3;
         i3 = i3 >>> 0 < i6 >>> 0 ? i6 : i3;
        } else i3 = 2147483647;
        __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i70, i3, i7, i38);
        i8 = HEAP32[i43 >> 2] | 0;
        HEAP32[i8 + 12 >> 2] = HEAP32[i40 >> 2];
        HEAP32[i8 >> 2] = HEAP32[i54 >> 2];
        HEAP32[i8 + 4 >> 2] = HEAP32[i41 >> 2];
        HEAP32[i8 + 8 >> 2] = HEAP32[i42 >> 2];
        HEAP32[i42 >> 2] = 0;
        HEAP32[i41 >> 2] = 0;
        HEAP32[i54 >> 2] = 0;
        HEAP32[i43 >> 2] = i8 + 16;
        __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i33, i70);
        __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i70);
       }
       __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i54);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i64);
       i8 = 1;
      }
      if ((i65 | 0) == 52) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i33); else if ((i65 | 0) == 72) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i33); else if ((i65 | 0) == 92) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i33); else if ((i65 | 0) == 104) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i33); else if ((i65 | 0) == 123) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i33); else if ((i65 | 0) == 129) {
       i1 = i1 + 1 | 0;
       HEAP32[i68 + 48 >> 2] = HEAP32[i66 >> 2];
       L214 : do if (i8 ? (i2 = HEAP32[i48 >> 2] | 0, (HEAP32[i68 + 16 >> 2] | 0) != (i2 | 0)) : 0) {
        i3 = i2 + -16 | 0;
        while (1) {
         if ((i2 | 0) == (i3 | 0)) break L214;
         i70 = i2 + -16 | 0;
         HEAP32[i48 >> 2] = i70;
         __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i70);
         i2 = HEAP32[i48 >> 2] | 0;
        }
       } while (0);
       break L46;
      }
     } while (0);
     i1 = i69;
    } else i1 = i69; else i1 = i67; while (0);
    i1 = (i1 | 0) == (i69 | 0) ? i71 : i1;
    break L1;
   }
  case 90:
   {
    L225 : do if (((i1 << 24 >> 24 == 90 & (i69 | 0) != (i67 | 0) ? (i66 = i69 + 1 | 0, i3 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i66, i67, i68) | 0, !((i3 | 0) == (i66 | 0) | (i3 | 0) == (i67 | 0))) : 0) ? (HEAP8[i3 >> 0] | 0) == 69 : 0) ? (i4 = i3 + 1 | 0, (i4 | 0) != (i67 | 0)) : 0) switch (HEAP8[i4 >> 0] | 0) {
    case 115:
     {
      i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_(i3 + 2 | 0, i67) | 0;
      i2 = HEAP32[i68 + 4 >> 2] | 0;
      if ((HEAP32[i68 >> 2] | 0) == (i2 | 0)) break L225;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -24 | 0, 39760) | 0;
      break L225;
     }
    case 100:
     {
      i1 = i3 + 2 | 0;
      if ((i1 | 0) == (i67 | 0)) {
       i1 = i69;
       break L225;
      }
      i1 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i1, i67) | 0;
      if ((i1 | 0) == (i67 | 0)) {
       i1 = i69;
       break L225;
      }
      if ((HEAP8[i1 >> 0] | 0) != 95) {
       i1 = i69;
       break L225;
      }
      i66 = i1 + 1 | 0;
      i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i66, i67, i68) | 0;
      i5 = i68 + 4 | 0;
      if ((i1 | 0) == (i66 | 0)) {
       i2 = HEAP32[i5 >> 2] | 0;
       i1 = i2 + -24 | 0;
       while (1) {
        if ((i2 | 0) == (i1 | 0)) {
         i1 = i69;
         break L225;
        }
        i70 = i2 + -24 | 0;
        HEAP32[i5 >> 2] = i70;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i70);
        i2 = HEAP32[i5 >> 2] | 0;
       }
      }
      i2 = HEAP32[i5 >> 2] | 0;
      if (((i2 - (HEAP32[i68 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
       i1 = i69;
       break L225;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i70, i2 + -24 | 0);
      i2 = HEAP32[i5 >> 2] | 0;
      i3 = i2 + -24 | 0;
      i4 = i2;
      while (1) {
       if ((i4 | 0) == (i3 | 0)) break;
       i68 = i4 + -24 | 0;
       HEAP32[i5 >> 2] = i68;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i68);
       i4 = HEAP32[i5 >> 2] | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -48 | 0, 38561) | 0;
      i68 = HEAP8[i70 >> 0] | 0;
      i67 = (i68 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[i5 >> 2] | 0) + -24 | 0, i67 ? i70 + 1 | 0 : HEAP32[i70 + 8 >> 2] | 0, i67 ? (i68 & 255) >>> 1 : HEAP32[i70 + 4 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i70);
      break L225;
     }
    default:
     {
      i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i4, i67, i68) | 0;
      if ((i1 | 0) == (i4 | 0)) {
       i1 = i68 + 4 | 0;
       i3 = HEAP32[i1 >> 2] | 0;
       i2 = i3 + -24 | 0;
       while (1) {
        if ((i3 | 0) == (i2 | 0)) {
         i1 = i69;
         break L225;
        }
        i70 = i3 + -24 | 0;
        HEAP32[i1 >> 2] = i70;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i70);
        i3 = HEAP32[i1 >> 2] | 0;
       }
      }
      i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_(i1, i67) | 0;
      i5 = i68 + 4 | 0;
      i2 = HEAP32[i5 >> 2] | 0;
      if (((i2 - (HEAP32[i68 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L225;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i70, i2 + -24 | 0);
      i2 = HEAP32[i5 >> 2] | 0;
      i3 = i2 + -24 | 0;
      i4 = i2;
      while (1) {
       if ((i4 | 0) == (i3 | 0)) break;
       i68 = i4 + -24 | 0;
       HEAP32[i5 >> 2] = i68;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i68);
       i4 = HEAP32[i5 >> 2] | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2 + -48 | 0, 38561) | 0;
      i68 = HEAP8[i70 >> 0] | 0;
      i67 = (i68 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[i5 >> 2] | 0) + -24 | 0, i67 ? i70 + 1 | 0 : HEAP32[i70 + 8 >> 2] | 0, i67 ? (i68 & 255) >>> 1 : HEAP32[i70 + 4 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i70);
      break L225;
     }
    } else i1 = i69; while (0);
    i1 = (i1 | 0) == (i69 | 0) ? i71 : i1;
    break L1;
   }
  default:
   {
    do if ((i7 - i69 | 0) > 1) {
     if (i1 << 24 >> 24 == 83 ? (HEAP8[i69 + 1 >> 0] | 0) == 116 : 0) {
      i1 = i69 + 2 | 0;
      if ((i1 | 0) == (i67 | 0)) {
       i3 = 0;
       i2 = i67;
      } else {
       i3 = 0;
       i2 = (HEAP8[i1 >> 0] | 0) == 76 ? i69 + 3 | 0 : i1;
      }
     } else {
      i3 = 1;
      i2 = i69;
     }
     i1 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i2, i67, i68) | 0;
     i2 = (i1 | 0) == (i2 | 0);
     if (i3 | i2) i1 = i2 ? i69 : i1; else {
      i2 = HEAP32[i68 + 4 >> 2] | 0;
      if ((HEAP32[i68 >> 2] | 0) == (i2 | 0)) break;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 39499) | 0;
     }
     if ((i1 | 0) != (i69 | 0)) {
      if ((i1 | 0) == (i67 | 0)) {
       i1 = i67;
       break L1;
      }
      if ((HEAP8[i1 >> 0] | 0) != 73) break L1;
      i7 = i68 + 4 | 0;
      i2 = HEAP32[i7 >> 2] | 0;
      if ((HEAP32[i68 >> 2] | 0) == (i2 | 0)) {
       i1 = i71;
       break L1;
      }
      i6 = i68 + 16 | 0;
      HEAP32[i5 >> 2] = HEAP32[i68 + 12 >> 2];
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i8, i2 + -24 | 0, i5);
      i2 = i68 + 20 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      i69 = HEAP32[i68 + 24 >> 2] | 0;
      i4 = i69;
      if (i3 >>> 0 < i69 >>> 0) {
       HEAP32[i3 + 12 >> 2] = HEAP32[i8 + 12 >> 2];
       HEAP32[i3 >> 2] = HEAP32[i8 >> 2];
       i69 = i8 + 4 | 0;
       HEAP32[i3 + 4 >> 2] = HEAP32[i69 >> 2];
       i66 = i8 + 8 | 0;
       HEAP32[i3 + 8 >> 2] = HEAP32[i66 >> 2];
       HEAP32[i66 >> 2] = 0;
       HEAP32[i69 >> 2] = 0;
       HEAP32[i8 >> 2] = 0;
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
      } else {
       i2 = HEAP32[i6 >> 2] | 0;
       i69 = i3 - i2 | 0;
       i5 = i69 >> 4;
       i3 = i5 + 1 | 0;
       if ((i69 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
       i2 = i4 - i2 | 0;
       if (i2 >> 4 >>> 0 < 1073741823) {
        i2 = i2 >> 3;
        i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
       } else i2 = 2147483647;
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i70, i2, i5, i68 + 28 | 0);
       i69 = i70 + 8 | 0;
       i66 = HEAP32[i69 >> 2] | 0;
       HEAP32[i66 + 12 >> 2] = HEAP32[i8 + 12 >> 2];
       HEAP32[i66 >> 2] = HEAP32[i8 >> 2];
       i65 = i8 + 4 | 0;
       HEAP32[i66 + 4 >> 2] = HEAP32[i65 >> 2];
       i64 = i8 + 8 | 0;
       HEAP32[i66 + 8 >> 2] = HEAP32[i64 >> 2];
       HEAP32[i64 >> 2] = 0;
       HEAP32[i65 >> 2] = 0;
       HEAP32[i8 >> 2] = 0;
       HEAP32[i69 >> 2] = i66 + 16;
       __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i70);
       __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i70);
      }
      __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i8);
      i4 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i1, i67, i68) | 0;
      if ((i4 | 0) == (i1 | 0)) {
       i1 = i71;
       break L1;
      }
      i1 = HEAP32[i7 >> 2] | 0;
      if (((i1 - (HEAP32[i68 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
       i1 = i71;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i70, i1 + -24 | 0);
      i1 = HEAP32[i7 >> 2] | 0;
      i2 = i1 + -24 | 0;
      i3 = i1;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break;
       i71 = i3 + -24 | 0;
       HEAP32[i7 >> 2] = i71;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i71);
       i3 = HEAP32[i7 >> 2] | 0;
      }
      i71 = HEAP8[i70 >> 0] | 0;
      i69 = (i71 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1 + -48 | 0, i69 ? i70 + 1 | 0 : HEAP32[i70 + 8 >> 2] | 0, i69 ? (i71 & 255) >>> 1 : HEAP32[i70 + 4 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i70);
      i1 = i4;
      break L1;
     }
    } while (0);
    i2 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i69, i67, i68) | 0;
    if ((i2 | 0) == (i69 | 0) | (i2 | 0) == (i67 | 0)) {
     i1 = i71;
     break L1;
    }
    if ((HEAP8[i2 >> 0] | 0) != 73) {
     i1 = i71;
     break L1;
    }
    i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i2, i67, i68) | 0;
    if ((i1 | 0) == (i2 | 0)) {
     i1 = i71;
     break L1;
    }
    i5 = i68 + 4 | 0;
    i2 = HEAP32[i5 >> 2] | 0;
    if (((i2 - (HEAP32[i68 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     i1 = i71;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i70, i2 + -24 | 0);
    i2 = HEAP32[i5 >> 2] | 0;
    i3 = i2 + -24 | 0;
    i4 = i2;
    while (1) {
     if ((i4 | 0) == (i3 | 0)) break;
     i71 = i4 + -24 | 0;
     HEAP32[i5 >> 2] = i71;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i71);
     i4 = HEAP32[i5 >> 2] | 0;
    }
    i71 = HEAP8[i70 >> 0] | 0;
    i69 = (i71 & 1) == 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i2 + -48 | 0, i69 ? i70 + 1 | 0 : HEAP32[i70 + 8 >> 2] | 0, i69 ? (i71 & 255) >>> 1 : HEAP32[i70 + 4 >> 2] | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i70);
    break L1;
   }
  }
 } else i1 = i71; while (0);
 STACKTOP = i72;
 return i1 | 0;
}
function _malloc(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0;
 do if (i1 >>> 0 < 245) {
  i14 = i1 >>> 0 < 11 ? 16 : i1 + 11 & -8;
  i1 = i14 >>> 3;
  i9 = HEAP32[10386] | 0;
  i2 = i9 >>> i1;
  if (i2 & 3 | 0) {
   i2 = (i2 & 1 ^ 1) + i1 | 0;
   i3 = 41584 + (i2 << 1 << 2) | 0;
   i4 = i3 + 8 | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   i6 = i5 + 8 | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   do if ((i3 | 0) != (i7 | 0)) {
    if (i7 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
    i1 = i7 + 12 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i5 | 0)) {
     HEAP32[i1 >> 2] = i3;
     HEAP32[i4 >> 2] = i7;
     break;
    } else _abort();
   } else HEAP32[10386] = i9 & ~(1 << i2); while (0);
   i37 = i2 << 3;
   HEAP32[i5 + 4 >> 2] = i37 | 3;
   i37 = i5 + i37 + 4 | 0;
   HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 1;
   i37 = i6;
   return i37 | 0;
  }
  i7 = HEAP32[10388] | 0;
  if (i14 >>> 0 > i7 >>> 0) {
   if (i2 | 0) {
    i3 = 2 << i1;
    i3 = i2 << i1 & (i3 | 0 - i3);
    i3 = (i3 & 0 - i3) + -1 | 0;
    i8 = i3 >>> 12 & 16;
    i3 = i3 >>> i8;
    i5 = i3 >>> 5 & 8;
    i3 = i3 >>> i5;
    i6 = i3 >>> 2 & 4;
    i3 = i3 >>> i6;
    i4 = i3 >>> 1 & 2;
    i3 = i3 >>> i4;
    i2 = i3 >>> 1 & 1;
    i2 = (i5 | i8 | i6 | i4 | i2) + (i3 >>> i2) | 0;
    i3 = 41584 + (i2 << 1 << 2) | 0;
    i4 = i3 + 8 | 0;
    i6 = HEAP32[i4 >> 2] | 0;
    i8 = i6 + 8 | 0;
    i5 = HEAP32[i8 >> 2] | 0;
    do if ((i3 | 0) != (i5 | 0)) {
     if (i5 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
     i1 = i5 + 12 | 0;
     if ((HEAP32[i1 >> 2] | 0) == (i6 | 0)) {
      HEAP32[i1 >> 2] = i3;
      HEAP32[i4 >> 2] = i5;
      i10 = HEAP32[10388] | 0;
      break;
     } else _abort();
    } else {
     HEAP32[10386] = i9 & ~(1 << i2);
     i10 = i7;
    } while (0);
    i7 = (i2 << 3) - i14 | 0;
    HEAP32[i6 + 4 >> 2] = i14 | 3;
    i4 = i6 + i14 | 0;
    HEAP32[i4 + 4 >> 2] = i7 | 1;
    HEAP32[i4 + i7 >> 2] = i7;
    if (i10 | 0) {
     i5 = HEAP32[10391] | 0;
     i2 = i10 >>> 3;
     i3 = 41584 + (i2 << 1 << 2) | 0;
     i1 = HEAP32[10386] | 0;
     i2 = 1 << i2;
     if (i1 & i2) {
      i1 = i3 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
       i11 = i1;
       i12 = i2;
      }
     } else {
      HEAP32[10386] = i1 | i2;
      i11 = i3 + 8 | 0;
      i12 = i3;
     }
     HEAP32[i11 >> 2] = i5;
     HEAP32[i12 + 12 >> 2] = i5;
     HEAP32[i5 + 8 >> 2] = i12;
     HEAP32[i5 + 12 >> 2] = i3;
    }
    HEAP32[10388] = i7;
    HEAP32[10391] = i4;
    i37 = i8;
    return i37 | 0;
   }
   i1 = HEAP32[10387] | 0;
   if (i1) {
    i3 = (i1 & 0 - i1) + -1 | 0;
    i36 = i3 >>> 12 & 16;
    i3 = i3 >>> i36;
    i35 = i3 >>> 5 & 8;
    i3 = i3 >>> i35;
    i37 = i3 >>> 2 & 4;
    i3 = i3 >>> i37;
    i2 = i3 >>> 1 & 2;
    i3 = i3 >>> i2;
    i4 = i3 >>> 1 & 1;
    i4 = HEAP32[41848 + ((i35 | i36 | i37 | i2 | i4) + (i3 >>> i4) << 2) >> 2] | 0;
    i3 = (HEAP32[i4 + 4 >> 2] & -8) - i14 | 0;
    i2 = i4;
    while (1) {
     i1 = HEAP32[i2 + 16 >> 2] | 0;
     if (!i1) {
      i1 = HEAP32[i2 + 20 >> 2] | 0;
      if (!i1) {
       i9 = i4;
       break;
      }
     }
     i2 = (HEAP32[i1 + 4 >> 2] & -8) - i14 | 0;
     i37 = i2 >>> 0 < i3 >>> 0;
     i3 = i37 ? i2 : i3;
     i2 = i1;
     i4 = i37 ? i1 : i4;
    }
    i6 = HEAP32[10390] | 0;
    if (i9 >>> 0 < i6 >>> 0) _abort();
    i8 = i9 + i14 | 0;
    if (i9 >>> 0 >= i8 >>> 0) _abort();
    i7 = HEAP32[i9 + 24 >> 2] | 0;
    i4 = HEAP32[i9 + 12 >> 2] | 0;
    do if ((i4 | 0) == (i9 | 0)) {
     i2 = i9 + 20 | 0;
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i2 = i9 + 16 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if (!i1) {
       i13 = 0;
       break;
      }
     }
     while (1) {
      i4 = i1 + 20 | 0;
      i5 = HEAP32[i4 >> 2] | 0;
      if (i5 | 0) {
       i1 = i5;
       i2 = i4;
       continue;
      }
      i4 = i1 + 16 | 0;
      i5 = HEAP32[i4 >> 2] | 0;
      if (!i5) break; else {
       i1 = i5;
       i2 = i4;
      }
     }
     if (i2 >>> 0 < i6 >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = 0;
      i13 = i1;
      break;
     }
    } else {
     i5 = HEAP32[i9 + 8 >> 2] | 0;
     if (i5 >>> 0 < i6 >>> 0) _abort();
     i1 = i5 + 12 | 0;
     if ((HEAP32[i1 >> 2] | 0) != (i9 | 0)) _abort();
     i2 = i4 + 8 | 0;
     if ((HEAP32[i2 >> 2] | 0) == (i9 | 0)) {
      HEAP32[i1 >> 2] = i4;
      HEAP32[i2 >> 2] = i5;
      i13 = i4;
      break;
     } else _abort();
    } while (0);
    do if (i7 | 0) {
     i1 = HEAP32[i9 + 28 >> 2] | 0;
     i2 = 41848 + (i1 << 2) | 0;
     if ((i9 | 0) == (HEAP32[i2 >> 2] | 0)) {
      HEAP32[i2 >> 2] = i13;
      if (!i13) {
       HEAP32[10387] = HEAP32[10387] & ~(1 << i1);
       break;
      }
     } else {
      if (i7 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
      i1 = i7 + 16 | 0;
      if ((HEAP32[i1 >> 2] | 0) == (i9 | 0)) HEAP32[i1 >> 2] = i13; else HEAP32[i7 + 20 >> 2] = i13;
      if (!i13) break;
     }
     i2 = HEAP32[10390] | 0;
     if (i13 >>> 0 < i2 >>> 0) _abort();
     HEAP32[i13 + 24 >> 2] = i7;
     i1 = HEAP32[i9 + 16 >> 2] | 0;
     do if (i1 | 0) if (i1 >>> 0 < i2 >>> 0) _abort(); else {
      HEAP32[i13 + 16 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i13;
      break;
     } while (0);
     i1 = HEAP32[i9 + 20 >> 2] | 0;
     if (i1 | 0) if (i1 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
      HEAP32[i13 + 20 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i13;
      break;
     }
    } while (0);
    if (i3 >>> 0 < 16) {
     i37 = i3 + i14 | 0;
     HEAP32[i9 + 4 >> 2] = i37 | 3;
     i37 = i9 + i37 + 4 | 0;
     HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 1;
    } else {
     HEAP32[i9 + 4 >> 2] = i14 | 3;
     HEAP32[i8 + 4 >> 2] = i3 | 1;
     HEAP32[i8 + i3 >> 2] = i3;
     i1 = HEAP32[10388] | 0;
     if (i1 | 0) {
      i5 = HEAP32[10391] | 0;
      i2 = i1 >>> 3;
      i4 = 41584 + (i2 << 1 << 2) | 0;
      i1 = HEAP32[10386] | 0;
      i2 = 1 << i2;
      if (i1 & i2) {
       i1 = i4 + 8 | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
        i15 = i1;
        i16 = i2;
       }
      } else {
       HEAP32[10386] = i1 | i2;
       i15 = i4 + 8 | 0;
       i16 = i4;
      }
      HEAP32[i15 >> 2] = i5;
      HEAP32[i16 + 12 >> 2] = i5;
      HEAP32[i5 + 8 >> 2] = i16;
      HEAP32[i5 + 12 >> 2] = i4;
     }
     HEAP32[10388] = i3;
     HEAP32[10391] = i8;
    }
    i37 = i9 + 8 | 0;
    return i37 | 0;
   }
  }
 } else if (i1 >>> 0 <= 4294967231) {
  i1 = i1 + 11 | 0;
  i14 = i1 & -8;
  i9 = HEAP32[10387] | 0;
  if (i9) {
   i3 = 0 - i14 | 0;
   i1 = i1 >>> 8;
   if (i1) if (i14 >>> 0 > 16777215) i8 = 31; else {
    i16 = (i1 + 1048320 | 0) >>> 16 & 8;
    i30 = i1 << i16;
    i15 = (i30 + 520192 | 0) >>> 16 & 4;
    i30 = i30 << i15;
    i8 = (i30 + 245760 | 0) >>> 16 & 2;
    i8 = 14 - (i15 | i16 | i8) + (i30 << i8 >>> 15) | 0;
    i8 = i14 >>> (i8 + 7 | 0) & 1 | i8 << 1;
   } else i8 = 0;
   i2 = HEAP32[41848 + (i8 << 2) >> 2] | 0;
   L123 : do if (!i2) {
    i1 = 0;
    i2 = 0;
    i30 = 86;
   } else {
    i5 = i3;
    i1 = 0;
    i6 = i14 << ((i8 | 0) == 31 ? 0 : 25 - (i8 >>> 1) | 0);
    i7 = i2;
    i2 = 0;
    while (1) {
     i4 = HEAP32[i7 + 4 >> 2] & -8;
     i3 = i4 - i14 | 0;
     if (i3 >>> 0 < i5 >>> 0) if ((i4 | 0) == (i14 | 0)) {
      i1 = i7;
      i2 = i7;
      i30 = 90;
      break L123;
     } else i2 = i7; else i3 = i5;
     i4 = HEAP32[i7 + 20 >> 2] | 0;
     i7 = HEAP32[i7 + 16 + (i6 >>> 31 << 2) >> 2] | 0;
     i1 = (i4 | 0) == 0 | (i4 | 0) == (i7 | 0) ? i1 : i4;
     i4 = (i7 | 0) == 0;
     if (i4) {
      i30 = 86;
      break;
     } else {
      i5 = i3;
      i6 = i6 << (i4 & 1 ^ 1);
     }
    }
   } while (0);
   if ((i30 | 0) == 86) {
    if ((i1 | 0) == 0 & (i2 | 0) == 0) {
     i1 = 2 << i8;
     i1 = i9 & (i1 | 0 - i1);
     if (!i1) break;
     i16 = (i1 & 0 - i1) + -1 | 0;
     i12 = i16 >>> 12 & 16;
     i16 = i16 >>> i12;
     i11 = i16 >>> 5 & 8;
     i16 = i16 >>> i11;
     i13 = i16 >>> 2 & 4;
     i16 = i16 >>> i13;
     i15 = i16 >>> 1 & 2;
     i16 = i16 >>> i15;
     i1 = i16 >>> 1 & 1;
     i1 = HEAP32[41848 + ((i11 | i12 | i13 | i15 | i1) + (i16 >>> i1) << 2) >> 2] | 0;
    }
    if (!i1) {
     i8 = i3;
     i9 = i2;
    } else i30 = 90;
   }
   if ((i30 | 0) == 90) while (1) {
    i30 = 0;
    i16 = (HEAP32[i1 + 4 >> 2] & -8) - i14 | 0;
    i4 = i16 >>> 0 < i3 >>> 0;
    i3 = i4 ? i16 : i3;
    i2 = i4 ? i1 : i2;
    i4 = HEAP32[i1 + 16 >> 2] | 0;
    if (i4 | 0) {
     i1 = i4;
     i30 = 90;
     continue;
    }
    i1 = HEAP32[i1 + 20 >> 2] | 0;
    if (!i1) {
     i8 = i3;
     i9 = i2;
     break;
    } else i30 = 90;
   }
   if ((i9 | 0) != 0 ? i8 >>> 0 < ((HEAP32[10388] | 0) - i14 | 0) >>> 0 : 0) {
    i5 = HEAP32[10390] | 0;
    if (i9 >>> 0 < i5 >>> 0) _abort();
    i7 = i9 + i14 | 0;
    if (i9 >>> 0 >= i7 >>> 0) _abort();
    i6 = HEAP32[i9 + 24 >> 2] | 0;
    i3 = HEAP32[i9 + 12 >> 2] | 0;
    do if ((i3 | 0) == (i9 | 0)) {
     i2 = i9 + 20 | 0;
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i2 = i9 + 16 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if (!i1) {
       i18 = 0;
       break;
      }
     }
     while (1) {
      i3 = i1 + 20 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if (i4 | 0) {
       i1 = i4;
       i2 = i3;
       continue;
      }
      i3 = i1 + 16 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if (!i4) break; else {
       i1 = i4;
       i2 = i3;
      }
     }
     if (i2 >>> 0 < i5 >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = 0;
      i18 = i1;
      break;
     }
    } else {
     i4 = HEAP32[i9 + 8 >> 2] | 0;
     if (i4 >>> 0 < i5 >>> 0) _abort();
     i1 = i4 + 12 | 0;
     if ((HEAP32[i1 >> 2] | 0) != (i9 | 0)) _abort();
     i2 = i3 + 8 | 0;
     if ((HEAP32[i2 >> 2] | 0) == (i9 | 0)) {
      HEAP32[i1 >> 2] = i3;
      HEAP32[i2 >> 2] = i4;
      i18 = i3;
      break;
     } else _abort();
    } while (0);
    do if (i6 | 0) {
     i1 = HEAP32[i9 + 28 >> 2] | 0;
     i2 = 41848 + (i1 << 2) | 0;
     if ((i9 | 0) == (HEAP32[i2 >> 2] | 0)) {
      HEAP32[i2 >> 2] = i18;
      if (!i18) {
       HEAP32[10387] = HEAP32[10387] & ~(1 << i1);
       break;
      }
     } else {
      if (i6 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
      i1 = i6 + 16 | 0;
      if ((HEAP32[i1 >> 2] | 0) == (i9 | 0)) HEAP32[i1 >> 2] = i18; else HEAP32[i6 + 20 >> 2] = i18;
      if (!i18) break;
     }
     i2 = HEAP32[10390] | 0;
     if (i18 >>> 0 < i2 >>> 0) _abort();
     HEAP32[i18 + 24 >> 2] = i6;
     i1 = HEAP32[i9 + 16 >> 2] | 0;
     do if (i1 | 0) if (i1 >>> 0 < i2 >>> 0) _abort(); else {
      HEAP32[i18 + 16 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i18;
      break;
     } while (0);
     i1 = HEAP32[i9 + 20 >> 2] | 0;
     if (i1 | 0) if (i1 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
      HEAP32[i18 + 20 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i18;
      break;
     }
    } while (0);
    do if (i8 >>> 0 >= 16) {
     HEAP32[i9 + 4 >> 2] = i14 | 3;
     HEAP32[i7 + 4 >> 2] = i8 | 1;
     HEAP32[i7 + i8 >> 2] = i8;
     i1 = i8 >>> 3;
     if (i8 >>> 0 < 256) {
      i3 = 41584 + (i1 << 1 << 2) | 0;
      i2 = HEAP32[10386] | 0;
      i1 = 1 << i1;
      if (i2 & i1) {
       i1 = i3 + 8 | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
        i20 = i1;
        i21 = i2;
       }
      } else {
       HEAP32[10386] = i2 | i1;
       i20 = i3 + 8 | 0;
       i21 = i3;
      }
      HEAP32[i20 >> 2] = i7;
      HEAP32[i21 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i21;
      HEAP32[i7 + 12 >> 2] = i3;
      break;
     }
     i1 = i8 >>> 8;
     if (i1) if (i8 >>> 0 > 16777215) i3 = 31; else {
      i36 = (i1 + 1048320 | 0) >>> 16 & 8;
      i37 = i1 << i36;
      i35 = (i37 + 520192 | 0) >>> 16 & 4;
      i37 = i37 << i35;
      i3 = (i37 + 245760 | 0) >>> 16 & 2;
      i3 = 14 - (i35 | i36 | i3) + (i37 << i3 >>> 15) | 0;
      i3 = i8 >>> (i3 + 7 | 0) & 1 | i3 << 1;
     } else i3 = 0;
     i4 = 41848 + (i3 << 2) | 0;
     HEAP32[i7 + 28 >> 2] = i3;
     i1 = i7 + 16 | 0;
     HEAP32[i1 + 4 >> 2] = 0;
     HEAP32[i1 >> 2] = 0;
     i1 = HEAP32[10387] | 0;
     i2 = 1 << i3;
     if (!(i1 & i2)) {
      HEAP32[10387] = i1 | i2;
      HEAP32[i4 >> 2] = i7;
      HEAP32[i7 + 24 >> 2] = i4;
      HEAP32[i7 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i7;
      break;
     }
     i5 = i8 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
     i1 = HEAP32[i4 >> 2] | 0;
     while (1) {
      if ((HEAP32[i1 + 4 >> 2] & -8 | 0) == (i8 | 0)) {
       i3 = i1;
       i30 = 148;
       break;
      }
      i2 = i1 + 16 + (i5 >>> 31 << 2) | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if (!i3) {
       i30 = 145;
       break;
      } else {
       i5 = i5 << 1;
       i1 = i3;
      }
     }
     if ((i30 | 0) == 145) if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = i7;
      HEAP32[i7 + 24 >> 2] = i1;
      HEAP32[i7 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i7;
      break;
     } else if ((i30 | 0) == 148) {
      i1 = i3 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      i37 = HEAP32[10390] | 0;
      if (i2 >>> 0 >= i37 >>> 0 & i3 >>> 0 >= i37 >>> 0) {
       HEAP32[i2 + 12 >> 2] = i7;
       HEAP32[i1 >> 2] = i7;
       HEAP32[i7 + 8 >> 2] = i2;
       HEAP32[i7 + 12 >> 2] = i3;
       HEAP32[i7 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } else {
     i37 = i8 + i14 | 0;
     HEAP32[i9 + 4 >> 2] = i37 | 3;
     i37 = i9 + i37 + 4 | 0;
     HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 1;
    } while (0);
    i37 = i9 + 8 | 0;
    return i37 | 0;
   }
  }
 } else i14 = -1; while (0);
 i3 = HEAP32[10388] | 0;
 if (i3 >>> 0 >= i14 >>> 0) {
  i1 = i3 - i14 | 0;
  i2 = HEAP32[10391] | 0;
  if (i1 >>> 0 > 15) {
   i37 = i2 + i14 | 0;
   HEAP32[10391] = i37;
   HEAP32[10388] = i1;
   HEAP32[i37 + 4 >> 2] = i1 | 1;
   HEAP32[i37 + i1 >> 2] = i1;
   HEAP32[i2 + 4 >> 2] = i14 | 3;
  } else {
   HEAP32[10388] = 0;
   HEAP32[10391] = 0;
   HEAP32[i2 + 4 >> 2] = i3 | 3;
   i37 = i2 + i3 + 4 | 0;
   HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 1;
  }
  i37 = i2 + 8 | 0;
  return i37 | 0;
 }
 i1 = HEAP32[10389] | 0;
 if (i1 >>> 0 > i14 >>> 0) {
  i35 = i1 - i14 | 0;
  HEAP32[10389] = i35;
  i37 = HEAP32[10392] | 0;
  i36 = i37 + i14 | 0;
  HEAP32[10392] = i36;
  HEAP32[i36 + 4 >> 2] = i35 | 1;
  HEAP32[i37 + 4 >> 2] = i14 | 3;
  i37 = i37 + 8 | 0;
  return i37 | 0;
 }
 do if (!(HEAP32[10504] | 0)) {
  i1 = _sysconf(30) | 0;
  if (!(i1 + -1 & i1)) {
   HEAP32[10506] = i1;
   HEAP32[10505] = i1;
   HEAP32[10507] = -1;
   HEAP32[10508] = -1;
   HEAP32[10509] = 0;
   HEAP32[10497] = 0;
   i21 = (_time(0) | 0) & -16 ^ 1431655768;
   HEAP32[10504] = i21;
   break;
  } else _abort();
 } while (0);
 i7 = i14 + 48 | 0;
 i6 = HEAP32[10506] | 0;
 i8 = i14 + 47 | 0;
 i5 = i6 + i8 | 0;
 i6 = 0 - i6 | 0;
 i9 = i5 & i6;
 if (i9 >>> 0 <= i14 >>> 0) {
  i37 = 0;
  return i37 | 0;
 }
 i1 = HEAP32[10496] | 0;
 if (i1 | 0 ? (i20 = HEAP32[10494] | 0, i21 = i20 + i9 | 0, i21 >>> 0 <= i20 >>> 0 | i21 >>> 0 > i1 >>> 0) : 0) {
  i37 = 0;
  return i37 | 0;
 }
 L257 : do if (!(HEAP32[10497] & 4)) {
  i1 = HEAP32[10392] | 0;
  L259 : do if (i1) {
   i3 = 41992;
   while (1) {
    i2 = HEAP32[i3 >> 2] | 0;
    if (i2 >>> 0 <= i1 >>> 0 ? (i17 = i3 + 4 | 0, (i2 + (HEAP32[i17 >> 2] | 0) | 0) >>> 0 > i1 >>> 0) : 0) {
     i4 = i3;
     i3 = i17;
     break;
    }
    i3 = HEAP32[i3 + 8 >> 2] | 0;
    if (!i3) {
     i30 = 173;
     break L259;
    }
   }
   i1 = i5 - (HEAP32[10389] | 0) & i6;
   if (i1 >>> 0 < 2147483647) {
    i2 = _sbrk(i1 | 0) | 0;
    if ((i2 | 0) == ((HEAP32[i4 >> 2] | 0) + (HEAP32[i3 >> 2] | 0) | 0)) {
     if ((i2 | 0) != (-1 | 0)) {
      i7 = i2;
      i5 = i1;
      i30 = 193;
      break L257;
     }
    } else i30 = 183;
   }
  } else i30 = 173; while (0);
  do if ((i30 | 0) == 173 ? (i19 = _sbrk(0) | 0, (i19 | 0) != (-1 | 0)) : 0) {
   i1 = i19;
   i2 = HEAP32[10505] | 0;
   i3 = i2 + -1 | 0;
   if (!(i3 & i1)) i1 = i9; else i1 = i9 - i1 + (i3 + i1 & 0 - i2) | 0;
   i2 = HEAP32[10494] | 0;
   i3 = i2 + i1 | 0;
   if (i1 >>> 0 > i14 >>> 0 & i1 >>> 0 < 2147483647) {
    i21 = HEAP32[10496] | 0;
    if (i21 | 0 ? i3 >>> 0 <= i2 >>> 0 | i3 >>> 0 > i21 >>> 0 : 0) break;
    i2 = _sbrk(i1 | 0) | 0;
    if ((i2 | 0) == (i19 | 0)) {
     i7 = i19;
     i5 = i1;
     i30 = 193;
     break L257;
    } else i30 = 183;
   }
  } while (0);
  L279 : do if ((i30 | 0) == 183) {
   i3 = 0 - i1 | 0;
   do if (i7 >>> 0 > i1 >>> 0 & (i1 >>> 0 < 2147483647 & (i2 | 0) != (-1 | 0)) ? (i22 = HEAP32[10506] | 0, i22 = i8 - i1 + i22 & 0 - i22, i22 >>> 0 < 2147483647) : 0) if ((_sbrk(i22 | 0) | 0) == (-1 | 0)) {
    _sbrk(i3 | 0) | 0;
    break L279;
   } else {
    i1 = i22 + i1 | 0;
    break;
   } while (0);
   if ((i2 | 0) != (-1 | 0)) {
    i7 = i2;
    i5 = i1;
    i30 = 193;
    break L257;
   }
  } while (0);
  HEAP32[10497] = HEAP32[10497] | 4;
  i30 = 190;
 } else i30 = 190; while (0);
 if ((((i30 | 0) == 190 ? i9 >>> 0 < 2147483647 : 0) ? (i23 = _sbrk(i9 | 0) | 0, i24 = _sbrk(0) | 0, i23 >>> 0 < i24 >>> 0 & ((i23 | 0) != (-1 | 0) & (i24 | 0) != (-1 | 0))) : 0) ? (i25 = i24 - i23 | 0, i25 >>> 0 > (i14 + 40 | 0) >>> 0) : 0) {
  i7 = i23;
  i5 = i25;
  i30 = 193;
 }
 if ((i30 | 0) == 193) {
  i1 = (HEAP32[10494] | 0) + i5 | 0;
  HEAP32[10494] = i1;
  if (i1 >>> 0 > (HEAP32[10495] | 0) >>> 0) HEAP32[10495] = i1;
  i8 = HEAP32[10392] | 0;
  do if (i8) {
   i4 = 41992;
   do {
    i1 = HEAP32[i4 >> 2] | 0;
    i2 = i4 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i7 | 0) == (i1 + i3 | 0)) {
     i26 = i1;
     i27 = i2;
     i28 = i3;
     i29 = i4;
     i30 = 203;
     break;
    }
    i4 = HEAP32[i4 + 8 >> 2] | 0;
   } while ((i4 | 0) != 0);
   if (((i30 | 0) == 203 ? (HEAP32[i29 + 12 >> 2] & 8 | 0) == 0 : 0) ? i8 >>> 0 < i7 >>> 0 & i8 >>> 0 >= i26 >>> 0 : 0) {
    HEAP32[i27 >> 2] = i28 + i5;
    i37 = i8 + 8 | 0;
    i37 = (i37 & 7 | 0) == 0 ? 0 : 0 - i37 & 7;
    i36 = i8 + i37 | 0;
    i37 = i5 - i37 + (HEAP32[10389] | 0) | 0;
    HEAP32[10392] = i36;
    HEAP32[10389] = i37;
    HEAP32[i36 + 4 >> 2] = i37 | 1;
    HEAP32[i36 + i37 + 4 >> 2] = 40;
    HEAP32[10393] = HEAP32[10508];
    break;
   }
   i1 = HEAP32[10390] | 0;
   if (i7 >>> 0 < i1 >>> 0) {
    HEAP32[10390] = i7;
    i9 = i7;
   } else i9 = i1;
   i3 = i7 + i5 | 0;
   i1 = 41992;
   while (1) {
    if ((HEAP32[i1 >> 2] | 0) == (i3 | 0)) {
     i2 = i1;
     i30 = 211;
     break;
    }
    i1 = HEAP32[i1 + 8 >> 2] | 0;
    if (!i1) {
     i2 = 41992;
     break;
    }
   }
   if ((i30 | 0) == 211) if (!(HEAP32[i1 + 12 >> 2] & 8)) {
    HEAP32[i2 >> 2] = i7;
    i11 = i1 + 4 | 0;
    HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + i5;
    i11 = i7 + 8 | 0;
    i11 = i7 + ((i11 & 7 | 0) == 0 ? 0 : 0 - i11 & 7) | 0;
    i1 = i3 + 8 | 0;
    i1 = i3 + ((i1 & 7 | 0) == 0 ? 0 : 0 - i1 & 7) | 0;
    i10 = i11 + i14 | 0;
    i6 = i1 - i11 - i14 | 0;
    HEAP32[i11 + 4 >> 2] = i14 | 3;
    do if ((i1 | 0) != (i8 | 0)) {
     if ((i1 | 0) == (HEAP32[10391] | 0)) {
      i37 = (HEAP32[10388] | 0) + i6 | 0;
      HEAP32[10388] = i37;
      HEAP32[10391] = i10;
      HEAP32[i10 + 4 >> 2] = i37 | 1;
      HEAP32[i10 + i37 >> 2] = i37;
      break;
     }
     i2 = HEAP32[i1 + 4 >> 2] | 0;
     if ((i2 & 3 | 0) == 1) {
      i8 = i2 & -8;
      i5 = i2 >>> 3;
      L331 : do if (i2 >>> 0 >= 256) {
       i7 = HEAP32[i1 + 24 >> 2] | 0;
       i4 = HEAP32[i1 + 12 >> 2] | 0;
       do if ((i4 | 0) == (i1 | 0)) {
        i3 = i1 + 16 | 0;
        i4 = i3 + 4 | 0;
        i2 = HEAP32[i4 >> 2] | 0;
        if (!i2) {
         i2 = HEAP32[i3 >> 2] | 0;
         if (!i2) {
          i35 = 0;
          break;
         }
        } else i3 = i4;
        while (1) {
         i4 = i2 + 20 | 0;
         i5 = HEAP32[i4 >> 2] | 0;
         if (i5 | 0) {
          i2 = i5;
          i3 = i4;
          continue;
         }
         i4 = i2 + 16 | 0;
         i5 = HEAP32[i4 >> 2] | 0;
         if (!i5) break; else {
          i2 = i5;
          i3 = i4;
         }
        }
        if (i3 >>> 0 < i9 >>> 0) _abort(); else {
         HEAP32[i3 >> 2] = 0;
         i35 = i2;
         break;
        }
       } else {
        i5 = HEAP32[i1 + 8 >> 2] | 0;
        if (i5 >>> 0 < i9 >>> 0) _abort();
        i2 = i5 + 12 | 0;
        if ((HEAP32[i2 >> 2] | 0) != (i1 | 0)) _abort();
        i3 = i4 + 8 | 0;
        if ((HEAP32[i3 >> 2] | 0) == (i1 | 0)) {
         HEAP32[i2 >> 2] = i4;
         HEAP32[i3 >> 2] = i5;
         i35 = i4;
         break;
        } else _abort();
       } while (0);
       if (!i7) break;
       i2 = HEAP32[i1 + 28 >> 2] | 0;
       i3 = 41848 + (i2 << 2) | 0;
       do if ((i1 | 0) != (HEAP32[i3 >> 2] | 0)) {
        if (i7 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
        i2 = i7 + 16 | 0;
        if ((HEAP32[i2 >> 2] | 0) == (i1 | 0)) HEAP32[i2 >> 2] = i35; else HEAP32[i7 + 20 >> 2] = i35;
        if (!i35) break L331;
       } else {
        HEAP32[i3 >> 2] = i35;
        if (i35 | 0) break;
        HEAP32[10387] = HEAP32[10387] & ~(1 << i2);
        break L331;
       } while (0);
       i4 = HEAP32[10390] | 0;
       if (i35 >>> 0 < i4 >>> 0) _abort();
       HEAP32[i35 + 24 >> 2] = i7;
       i2 = i1 + 16 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       do if (i3 | 0) if (i3 >>> 0 < i4 >>> 0) _abort(); else {
        HEAP32[i35 + 16 >> 2] = i3;
        HEAP32[i3 + 24 >> 2] = i35;
        break;
       } while (0);
       i2 = HEAP32[i2 + 4 >> 2] | 0;
       if (!i2) break;
       if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
        HEAP32[i35 + 20 >> 2] = i2;
        HEAP32[i2 + 24 >> 2] = i35;
        break;
       }
      } else {
       i3 = HEAP32[i1 + 8 >> 2] | 0;
       i4 = HEAP32[i1 + 12 >> 2] | 0;
       i2 = 41584 + (i5 << 1 << 2) | 0;
       do if ((i3 | 0) != (i2 | 0)) {
        if (i3 >>> 0 < i9 >>> 0) _abort();
        if ((HEAP32[i3 + 12 >> 2] | 0) == (i1 | 0)) break;
        _abort();
       } while (0);
       if ((i4 | 0) == (i3 | 0)) {
        HEAP32[10386] = HEAP32[10386] & ~(1 << i5);
        break;
       }
       do if ((i4 | 0) == (i2 | 0)) i32 = i4 + 8 | 0; else {
        if (i4 >>> 0 < i9 >>> 0) _abort();
        i2 = i4 + 8 | 0;
        if ((HEAP32[i2 >> 2] | 0) == (i1 | 0)) {
         i32 = i2;
         break;
        }
        _abort();
       } while (0);
       HEAP32[i3 + 12 >> 2] = i4;
       HEAP32[i32 >> 2] = i3;
      } while (0);
      i1 = i1 + i8 | 0;
      i6 = i8 + i6 | 0;
     }
     i1 = i1 + 4 | 0;
     HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -2;
     HEAP32[i10 + 4 >> 2] = i6 | 1;
     HEAP32[i10 + i6 >> 2] = i6;
     i1 = i6 >>> 3;
     if (i6 >>> 0 < 256) {
      i3 = 41584 + (i1 << 1 << 2) | 0;
      i2 = HEAP32[10386] | 0;
      i1 = 1 << i1;
      do if (!(i2 & i1)) {
       HEAP32[10386] = i2 | i1;
       i36 = i3 + 8 | 0;
       i37 = i3;
      } else {
       i1 = i3 + 8 | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 >= (HEAP32[10390] | 0) >>> 0) {
        i36 = i1;
        i37 = i2;
        break;
       }
       _abort();
      } while (0);
      HEAP32[i36 >> 2] = i10;
      HEAP32[i37 + 12 >> 2] = i10;
      HEAP32[i10 + 8 >> 2] = i37;
      HEAP32[i10 + 12 >> 2] = i3;
      break;
     }
     i1 = i6 >>> 8;
     do if (!i1) i3 = 0; else {
      if (i6 >>> 0 > 16777215) {
       i3 = 31;
       break;
      }
      i36 = (i1 + 1048320 | 0) >>> 16 & 8;
      i37 = i1 << i36;
      i35 = (i37 + 520192 | 0) >>> 16 & 4;
      i37 = i37 << i35;
      i3 = (i37 + 245760 | 0) >>> 16 & 2;
      i3 = 14 - (i35 | i36 | i3) + (i37 << i3 >>> 15) | 0;
      i3 = i6 >>> (i3 + 7 | 0) & 1 | i3 << 1;
     } while (0);
     i4 = 41848 + (i3 << 2) | 0;
     HEAP32[i10 + 28 >> 2] = i3;
     i1 = i10 + 16 | 0;
     HEAP32[i1 + 4 >> 2] = 0;
     HEAP32[i1 >> 2] = 0;
     i1 = HEAP32[10387] | 0;
     i2 = 1 << i3;
     if (!(i1 & i2)) {
      HEAP32[10387] = i1 | i2;
      HEAP32[i4 >> 2] = i10;
      HEAP32[i10 + 24 >> 2] = i4;
      HEAP32[i10 + 12 >> 2] = i10;
      HEAP32[i10 + 8 >> 2] = i10;
      break;
     }
     i5 = i6 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
     i1 = HEAP32[i4 >> 2] | 0;
     while (1) {
      if ((HEAP32[i1 + 4 >> 2] & -8 | 0) == (i6 | 0)) {
       i3 = i1;
       i30 = 281;
       break;
      }
      i2 = i1 + 16 + (i5 >>> 31 << 2) | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if (!i3) {
       i30 = 278;
       break;
      } else {
       i5 = i5 << 1;
       i1 = i3;
      }
     }
     if ((i30 | 0) == 278) if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = i10;
      HEAP32[i10 + 24 >> 2] = i1;
      HEAP32[i10 + 12 >> 2] = i10;
      HEAP32[i10 + 8 >> 2] = i10;
      break;
     } else if ((i30 | 0) == 281) {
      i1 = i3 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      i37 = HEAP32[10390] | 0;
      if (i2 >>> 0 >= i37 >>> 0 & i3 >>> 0 >= i37 >>> 0) {
       HEAP32[i2 + 12 >> 2] = i10;
       HEAP32[i1 >> 2] = i10;
       HEAP32[i10 + 8 >> 2] = i2;
       HEAP32[i10 + 12 >> 2] = i3;
       HEAP32[i10 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } else {
     i37 = (HEAP32[10389] | 0) + i6 | 0;
     HEAP32[10389] = i37;
     HEAP32[10392] = i10;
     HEAP32[i10 + 4 >> 2] = i37 | 1;
    } while (0);
    i37 = i11 + 8 | 0;
    return i37 | 0;
   } else i2 = 41992;
   while (1) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (i1 >>> 0 <= i8 >>> 0 ? (i31 = i1 + (HEAP32[i2 + 4 >> 2] | 0) | 0, i31 >>> 0 > i8 >>> 0) : 0) {
     i2 = i31;
     break;
    }
    i2 = HEAP32[i2 + 8 >> 2] | 0;
   }
   i6 = i2 + -47 | 0;
   i3 = i6 + 8 | 0;
   i3 = i6 + ((i3 & 7 | 0) == 0 ? 0 : 0 - i3 & 7) | 0;
   i6 = i8 + 16 | 0;
   i3 = i3 >>> 0 < i6 >>> 0 ? i8 : i3;
   i1 = i3 + 8 | 0;
   i4 = i7 + 8 | 0;
   i4 = (i4 & 7 | 0) == 0 ? 0 : 0 - i4 & 7;
   i37 = i7 + i4 | 0;
   i4 = i5 + -40 - i4 | 0;
   HEAP32[10392] = i37;
   HEAP32[10389] = i4;
   HEAP32[i37 + 4 >> 2] = i4 | 1;
   HEAP32[i37 + i4 + 4 >> 2] = 40;
   HEAP32[10393] = HEAP32[10508];
   i4 = i3 + 4 | 0;
   HEAP32[i4 >> 2] = 27;
   HEAP32[i1 >> 2] = HEAP32[10498];
   HEAP32[i1 + 4 >> 2] = HEAP32[10499];
   HEAP32[i1 + 8 >> 2] = HEAP32[10500];
   HEAP32[i1 + 12 >> 2] = HEAP32[10501];
   HEAP32[10498] = i7;
   HEAP32[10499] = i5;
   HEAP32[10501] = 0;
   HEAP32[10500] = i1;
   i1 = i3 + 24 | 0;
   do {
    i1 = i1 + 4 | 0;
    HEAP32[i1 >> 2] = 7;
   } while ((i1 + 4 | 0) >>> 0 < i2 >>> 0);
   if ((i3 | 0) != (i8 | 0)) {
    i7 = i3 - i8 | 0;
    HEAP32[i4 >> 2] = HEAP32[i4 >> 2] & -2;
    HEAP32[i8 + 4 >> 2] = i7 | 1;
    HEAP32[i3 >> 2] = i7;
    i1 = i7 >>> 3;
    if (i7 >>> 0 < 256) {
     i3 = 41584 + (i1 << 1 << 2) | 0;
     i2 = HEAP32[10386] | 0;
     i1 = 1 << i1;
     if (i2 & i1) {
      i1 = i3 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
       i33 = i1;
       i34 = i2;
      }
     } else {
      HEAP32[10386] = i2 | i1;
      i33 = i3 + 8 | 0;
      i34 = i3;
     }
     HEAP32[i33 >> 2] = i8;
     HEAP32[i34 + 12 >> 2] = i8;
     HEAP32[i8 + 8 >> 2] = i34;
     HEAP32[i8 + 12 >> 2] = i3;
     break;
    }
    i1 = i7 >>> 8;
    if (i1) if (i7 >>> 0 > 16777215) i3 = 31; else {
     i36 = (i1 + 1048320 | 0) >>> 16 & 8;
     i37 = i1 << i36;
     i35 = (i37 + 520192 | 0) >>> 16 & 4;
     i37 = i37 << i35;
     i3 = (i37 + 245760 | 0) >>> 16 & 2;
     i3 = 14 - (i35 | i36 | i3) + (i37 << i3 >>> 15) | 0;
     i3 = i7 >>> (i3 + 7 | 0) & 1 | i3 << 1;
    } else i3 = 0;
    i5 = 41848 + (i3 << 2) | 0;
    HEAP32[i8 + 28 >> 2] = i3;
    HEAP32[i8 + 20 >> 2] = 0;
    HEAP32[i6 >> 2] = 0;
    i1 = HEAP32[10387] | 0;
    i2 = 1 << i3;
    if (!(i1 & i2)) {
     HEAP32[10387] = i1 | i2;
     HEAP32[i5 >> 2] = i8;
     HEAP32[i8 + 24 >> 2] = i5;
     HEAP32[i8 + 12 >> 2] = i8;
     HEAP32[i8 + 8 >> 2] = i8;
     break;
    }
    i4 = i7 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
    i1 = HEAP32[i5 >> 2] | 0;
    while (1) {
     if ((HEAP32[i1 + 4 >> 2] & -8 | 0) == (i7 | 0)) {
      i3 = i1;
      i30 = 307;
      break;
     }
     i2 = i1 + 16 + (i4 >>> 31 << 2) | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if (!i3) {
      i30 = 304;
      break;
     } else {
      i4 = i4 << 1;
      i1 = i3;
     }
    }
    if ((i30 | 0) == 304) if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
     HEAP32[i2 >> 2] = i8;
     HEAP32[i8 + 24 >> 2] = i1;
     HEAP32[i8 + 12 >> 2] = i8;
     HEAP32[i8 + 8 >> 2] = i8;
     break;
    } else if ((i30 | 0) == 307) {
     i1 = i3 + 8 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     i37 = HEAP32[10390] | 0;
     if (i2 >>> 0 >= i37 >>> 0 & i3 >>> 0 >= i37 >>> 0) {
      HEAP32[i2 + 12 >> 2] = i8;
      HEAP32[i1 >> 2] = i8;
      HEAP32[i8 + 8 >> 2] = i2;
      HEAP32[i8 + 12 >> 2] = i3;
      HEAP32[i8 + 24 >> 2] = 0;
      break;
     } else _abort();
    }
   }
  } else {
   i37 = HEAP32[10390] | 0;
   if ((i37 | 0) == 0 | i7 >>> 0 < i37 >>> 0) HEAP32[10390] = i7;
   HEAP32[10498] = i7;
   HEAP32[10499] = i5;
   HEAP32[10501] = 0;
   HEAP32[10395] = HEAP32[10504];
   HEAP32[10394] = -1;
   i1 = 0;
   do {
    i37 = 41584 + (i1 << 1 << 2) | 0;
    HEAP32[i37 + 12 >> 2] = i37;
    HEAP32[i37 + 8 >> 2] = i37;
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != 32);
   i37 = i7 + 8 | 0;
   i37 = (i37 & 7 | 0) == 0 ? 0 : 0 - i37 & 7;
   i36 = i7 + i37 | 0;
   i37 = i5 + -40 - i37 | 0;
   HEAP32[10392] = i36;
   HEAP32[10389] = i37;
   HEAP32[i36 + 4 >> 2] = i37 | 1;
   HEAP32[i36 + i37 + 4 >> 2] = 40;
   HEAP32[10393] = HEAP32[10508];
  } while (0);
  i1 = HEAP32[10389] | 0;
  if (i1 >>> 0 > i14 >>> 0) {
   i35 = i1 - i14 | 0;
   HEAP32[10389] = i35;
   i37 = HEAP32[10392] | 0;
   i36 = i37 + i14 | 0;
   HEAP32[10392] = i36;
   HEAP32[i36 + 4 >> 2] = i35 | 1;
   HEAP32[i37 + 4 >> 2] = i14 | 3;
   i37 = i37 + 8 | 0;
   return i37 | 0;
  }
 }
 i37 = ___errno_location() | 0;
 HEAP32[i37 >> 2] = 12;
 i37 = 0;
 return i37 | 0;
}
function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11visitBinaryEPNS_6BinaryE(i33, i30, i29) {
 i33 = i33 | 0;
 i30 = i30 | 0;
 i29 = i29 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i31 = 0, i32 = 0, i34 = 0;
 i34 = STACKTOP;
 STACKTOP = STACKTOP + 448 | 0;
 i4 = i34 + 424 | 0;
 i31 = i34 + 408 | 0;
 i1 = i34 + 368 | 0;
 i32 = i34 + 392 | 0;
 i6 = i34 + 352 | 0;
 i17 = i34 + 336 | 0;
 i22 = i34 + 320 | 0;
 i23 = i34 + 304 | 0;
 i24 = i34 + 288 | 0;
 i25 = i34 + 272 | 0;
 i26 = i34 + 256 | 0;
 i27 = i34 + 240 | 0;
 i28 = i34 + 224 | 0;
 i7 = i34 + 208 | 0;
 i8 = i34 + 192 | 0;
 i9 = i34 + 176 | 0;
 i10 = i34 + 160 | 0;
 i11 = i34 + 144 | 0;
 i12 = i34 + 128 | 0;
 i13 = i34 + 112 | 0;
 i14 = i34 + 96 | 0;
 i15 = i34 + 80 | 0;
 i16 = i34 + 64 | 0;
 i18 = i34 + 48 | 0;
 i19 = i34 + 32 | 0;
 i20 = i34 + 16 | 0;
 i21 = i34;
 i2 = i29 + 12 | 0;
 __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i4, i30, HEAP32[i2 >> 2] | 0);
 i3 = i4 + 16 | 0;
 if ((HEAP32[i3 >> 2] | 0) == 0 ? (HEAP32[i31 >> 2] = HEAP32[i4 >> 2], HEAP32[i31 + 4 >> 2] = HEAP32[i4 + 4 >> 2], HEAP32[i31 + 8 >> 2] = HEAP32[i4 + 8 >> 2], HEAP32[i31 + 12 >> 2] = HEAP32[i4 + 12 >> 2], i5 = i29 + 16 | 0, __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i1, i30, HEAP32[i5 >> 2] | 0), HEAP32[i4 >> 2] = HEAP32[i1 >> 2], HEAP32[i4 + 4 >> 2] = HEAP32[i1 + 4 >> 2], HEAP32[i4 + 8 >> 2] = HEAP32[i1 + 8 >> 2], HEAP32[i4 + 12 >> 2] = HEAP32[i1 + 12 >> 2], HEAP32[i4 + 16 >> 2] = HEAP32[i1 + 16 >> 2], (HEAP32[i3 >> 2] | 0) == 0) : 0) {
  HEAP32[i32 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i32 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
  HEAP32[i32 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
  HEAP32[i32 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] | 0;
  switch (i1 | 0) {
  case 0:
  case 5:
   break;
  default:
   if ((HEAP32[i31 >> 2] | 0) != (i1 | 0)) ___assert_fail(21190, 20213, 452, 21266);
  }
  i1 = HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] | 0;
  switch (i1 | 0) {
  case 0:
  case 5:
   break;
  default:
   if ((HEAP32[i32 >> 2] | 0) != (i1 | 0)) ___assert_fail(21278, 20213, 453, 21266);
  }
  L13 : do switch (HEAP32[i31 >> 2] | 0) {
  case 1:
   {
    do switch (HEAP32[i29 + 8 >> 2] | 0) {
    case 0:
     {
      __ZNK4wasm7Literal3addERKS0_(i6, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i6 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 1:
     {
      __ZNK4wasm7Literal3subERKS0_(i17, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i17 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i17 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 2:
     {
      __ZNK4wasm7Literal3mulERKS0_(i22, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i22 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i22 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i22 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i22 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 3:
     {
      if ((__ZN4wasm7Literal10getIntegerEv(i32) | 0) == 0 & (tempRet0 | 0) == 0) {
       i29 = HEAP32[(HEAP32[i30 + 4 >> 2] | 0) + 12 >> 2] | 0;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[i29 >> 2] | 0) + 20 >> 2] & 127](i29, 21357);
      }
      if ((__ZN4wasm7Literal10getIntegerEv(i31) | 0) == -2147483648 & (tempRet0 | 0) == -1 ? (i29 = __ZN4wasm7Literal10getIntegerEv(i32) | 0, (i29 | 0) == -1 & (tempRet0 | 0) == -1) : 0) {
       i30 = HEAP32[(HEAP32[i30 + 4 >> 2] | 0) + 12 >> 2] | 0;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[i30 >> 2] | 0) + 20 >> 2] & 127](i30, 21372);
      }
      i1 = i31 + 8 | 0;
      if ((HEAP32[i31 >> 2] | 0) == 1) {
       i3 = 1;
       i1 = (HEAP32[i1 >> 2] | 0) / (HEAP32[i32 + 8 >> 2] | 0) | 0;
       i2 = 0;
      } else {
       i3 = i1;
       i1 = i32 + 8 | 0;
       i1 = ___divdi3(HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0;
       i3 = 2;
       i2 = tempRet0;
      }
      HEAP32[i33 >> 2] = i3;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i1;
      HEAP32[i32 + 4 >> 2] = i2;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 4:
     {
      if ((__ZN4wasm7Literal10getIntegerEv(i32) | 0) == 0 & (tempRet0 | 0) == 0) {
       i30 = HEAP32[(HEAP32[i30 + 4 >> 2] | 0) + 12 >> 2] | 0;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[i30 >> 2] | 0) + 20 >> 2] & 127](i30, 21391);
      }
      i1 = i31 + 8 | 0;
      if ((HEAP32[i31 >> 2] | 0) == 1) {
       i3 = 1;
       i1 = ((HEAP32[i1 >> 2] | 0) >>> 0) / ((HEAP32[i32 + 8 >> 2] | 0) >>> 0) | 0;
       i2 = 0;
      } else {
       i3 = i1;
       i1 = i32 + 8 | 0;
       i1 = ___udivdi3(HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0;
       i3 = 2;
       i2 = tempRet0;
      }
      HEAP32[i33 >> 2] = i3;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i1;
      HEAP32[i32 + 4 >> 2] = i2;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 5:
     {
      if ((__ZN4wasm7Literal10getIntegerEv(i32) | 0) == 0 & (tempRet0 | 0) == 0) {
       i30 = HEAP32[(HEAP32[i30 + 4 >> 2] | 0) + 12 >> 2] | 0;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[i30 >> 2] | 0) + 20 >> 2] & 127](i30, 21406);
      }
      if ((__ZN4wasm7Literal10getIntegerEv(i31) | 0) == -2147483648 & (tempRet0 | 0) == -1 ? (i30 = __ZN4wasm7Literal10getIntegerEv(i32) | 0, (i30 | 0) == -1 & (tempRet0 | 0) == -1) : 0) {
       HEAP32[i33 >> 2] = 1;
       HEAP32[i33 + 8 >> 2] = 0;
       HEAP32[i33 + 16 >> 2] = 0;
       break L13;
      }
      i1 = i31 + 8 | 0;
      if ((HEAP32[i31 >> 2] | 0) == 1) {
       i3 = 1;
       i1 = (HEAP32[i1 >> 2] | 0) % (HEAP32[i32 + 8 >> 2] | 0) | 0;
       i2 = 0;
      } else {
       i3 = i1;
       i1 = i32 + 8 | 0;
       i1 = ___remdi3(HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0;
       i3 = 2;
       i2 = tempRet0;
      }
      HEAP32[i33 >> 2] = i3;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i1;
      HEAP32[i32 + 4 >> 2] = i2;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 6:
     {
      if ((__ZN4wasm7Literal10getIntegerEv(i32) | 0) == 0 & (tempRet0 | 0) == 0) {
       i30 = HEAP32[(HEAP32[i30 + 4 >> 2] | 0) + 12 >> 2] | 0;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[i30 >> 2] | 0) + 20 >> 2] & 127](i30, 21421);
      }
      i1 = i31 + 8 | 0;
      if ((HEAP32[i31 >> 2] | 0) == 1) {
       i3 = 1;
       i1 = ((HEAP32[i1 >> 2] | 0) >>> 0) % ((HEAP32[i32 + 8 >> 2] | 0) >>> 0) | 0;
       i2 = 0;
      } else {
       i3 = i1;
       i1 = i32 + 8 | 0;
       i1 = ___uremdi3(HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0;
       i3 = 2;
       i2 = tempRet0;
      }
      HEAP32[i33 >> 2] = i3;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i1;
      HEAP32[i32 + 4 >> 2] = i2;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 7:
     {
      i31 = HEAP32[i32 + 8 >> 2] & HEAP32[i31 + 8 >> 2];
      HEAP32[i33 >> 2] = 1;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i31;
      HEAP32[i32 + 4 >> 2] = 0;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 8:
     {
      i31 = HEAP32[i32 + 8 >> 2] | HEAP32[i31 + 8 >> 2];
      HEAP32[i33 >> 2] = 1;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i31;
      HEAP32[i32 + 4 >> 2] = 0;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 9:
     {
      i31 = HEAP32[i32 + 8 >> 2] ^ HEAP32[i31 + 8 >> 2];
      HEAP32[i33 >> 2] = 1;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i31;
      HEAP32[i32 + 4 >> 2] = 0;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 10:
     {
      i30 = i32 + 8 | 0;
      i31 = HEAP32[i31 + 8 >> 2] << (((HEAP32[i32 >> 2] | 0) == 1 ? HEAP32[i30 >> 2] | 0 : HEAP32[i30 >> 2] | 0) & 31);
      HEAP32[i33 >> 2] = 1;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i31;
      HEAP32[i32 + 4 >> 2] = 0;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 11:
     {
      i30 = i32 + 8 | 0;
      i31 = (HEAP32[i31 + 8 >> 2] | 0) >>> (((HEAP32[i32 >> 2] | 0) == 1 ? HEAP32[i30 >> 2] | 0 : HEAP32[i30 >> 2] | 0) & 31);
      HEAP32[i33 >> 2] = 1;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i31;
      HEAP32[i32 + 4 >> 2] = 0;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 12:
     {
      i30 = i32 + 8 | 0;
      i31 = HEAP32[i31 + 8 >> 2] >> (((HEAP32[i32 >> 2] | 0) == 1 ? HEAP32[i30 >> 2] | 0 : HEAP32[i30 >> 2] | 0) & 31);
      HEAP32[i33 >> 2] = 1;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i31;
      HEAP32[i32 + 4 >> 2] = 0;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 17:
     {
      __ZNK4wasm7Literal2eqERKS0_(i23, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i23 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i23 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i23 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i23 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 18:
     {
      __ZNK4wasm7Literal2neERKS0_(i24, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i24 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i24 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i24 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i24 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 19:
     {
      i32 = (HEAP32[i31 + 8 >> 2] | 0) < (HEAP32[i32 + 8 >> 2] | 0) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 20:
     {
      i32 = (HEAP32[i31 + 8 >> 2] | 0) >>> 0 < (HEAP32[i32 + 8 >> 2] | 0) >>> 0 & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 21:
     {
      i32 = (HEAP32[i31 + 8 >> 2] | 0) <= (HEAP32[i32 + 8 >> 2] | 0) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 22:
     {
      i32 = (HEAP32[i31 + 8 >> 2] | 0) >>> 0 <= (HEAP32[i32 + 8 >> 2] | 0) >>> 0 & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 23:
     {
      i32 = (HEAP32[i31 + 8 >> 2] | 0) > (HEAP32[i32 + 8 >> 2] | 0) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 24:
     {
      i32 = (HEAP32[i31 + 8 >> 2] | 0) >>> 0 > (HEAP32[i32 + 8 >> 2] | 0) >>> 0 & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 25:
     {
      i32 = (HEAP32[i31 + 8 >> 2] | 0) >= (HEAP32[i32 + 8 >> 2] | 0) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 26:
     {
      i32 = (HEAP32[i31 + 8 >> 2] | 0) >>> 0 >= (HEAP32[i32 + 8 >> 2] | 0) >>> 0 & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    default:
     _abort();
    } while (0);
    break;
   }
  case 2:
   {
    do switch (HEAP32[i29 + 8 >> 2] | 0) {
    case 0:
     {
      __ZNK4wasm7Literal3addERKS0_(i25, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i25 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i25 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i25 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i25 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 1:
     {
      __ZNK4wasm7Literal3subERKS0_(i26, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i26 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i26 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i26 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i26 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 2:
     {
      __ZNK4wasm7Literal3mulERKS0_(i27, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i27 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i27 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i27 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i27 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 3:
     {
      if ((__ZN4wasm7Literal10getIntegerEv(i32) | 0) == 0 & (tempRet0 | 0) == 0) {
       i29 = HEAP32[(HEAP32[i30 + 4 >> 2] | 0) + 12 >> 2] | 0;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[i29 >> 2] | 0) + 20 >> 2] & 127](i29, 21436);
      }
      if ((__ZN4wasm7Literal10getIntegerEv(i31) | 0) == 0 & (tempRet0 | 0) == -2147483648 ? (i29 = __ZN4wasm7Literal10getIntegerEv(i32) | 0, (i29 | 0) == -1 & (tempRet0 | 0) == -1) : 0) {
       i30 = HEAP32[(HEAP32[i30 + 4 >> 2] | 0) + 12 >> 2] | 0;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[i30 >> 2] | 0) + 20 >> 2] & 127](i30, 21451);
      }
      i1 = i31 + 8 | 0;
      if ((HEAP32[i31 >> 2] | 0) == 1) {
       i3 = 1;
       i1 = (HEAP32[i1 >> 2] | 0) / (HEAP32[i32 + 8 >> 2] | 0) | 0;
       i2 = 0;
      } else {
       i3 = i1;
       i1 = i32 + 8 | 0;
       i1 = ___divdi3(HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0;
       i3 = 2;
       i2 = tempRet0;
      }
      HEAP32[i33 >> 2] = i3;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i1;
      HEAP32[i32 + 4 >> 2] = i2;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 4:
     {
      if ((__ZN4wasm7Literal10getIntegerEv(i32) | 0) == 0 & (tempRet0 | 0) == 0) {
       i30 = HEAP32[(HEAP32[i30 + 4 >> 2] | 0) + 12 >> 2] | 0;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[i30 >> 2] | 0) + 20 >> 2] & 127](i30, 21470);
      }
      i1 = i31 + 8 | 0;
      if ((HEAP32[i31 >> 2] | 0) == 1) {
       i3 = 1;
       i1 = ((HEAP32[i1 >> 2] | 0) >>> 0) / ((HEAP32[i32 + 8 >> 2] | 0) >>> 0) | 0;
       i2 = 0;
      } else {
       i3 = i1;
       i1 = i32 + 8 | 0;
       i1 = ___udivdi3(HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0;
       i3 = 2;
       i2 = tempRet0;
      }
      HEAP32[i33 >> 2] = i3;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i1;
      HEAP32[i32 + 4 >> 2] = i2;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 5:
     {
      if ((__ZN4wasm7Literal10getIntegerEv(i32) | 0) == 0 & (tempRet0 | 0) == 0) {
       i30 = HEAP32[(HEAP32[i30 + 4 >> 2] | 0) + 12 >> 2] | 0;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[i30 >> 2] | 0) + 20 >> 2] & 127](i30, 21485);
      }
      if ((__ZN4wasm7Literal10getIntegerEv(i31) | 0) == 0 & (tempRet0 | 0) == -2147483648 ? (i30 = __ZN4wasm7Literal10getIntegerEv(i32) | 0, (i30 | 0) == -1 & (tempRet0 | 0) == -1) : 0) {
       HEAP32[i33 >> 2] = 2;
       i32 = i33 + 8 | 0;
       HEAP32[i32 >> 2] = 0;
       HEAP32[i32 + 4 >> 2] = 0;
       HEAP32[i33 + 16 >> 2] = 0;
       break L13;
      }
      i1 = i31 + 8 | 0;
      if ((HEAP32[i31 >> 2] | 0) == 1) {
       i3 = 1;
       i1 = (HEAP32[i1 >> 2] | 0) % (HEAP32[i32 + 8 >> 2] | 0) | 0;
       i2 = 0;
      } else {
       i3 = i1;
       i1 = i32 + 8 | 0;
       i1 = ___remdi3(HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0;
       i3 = 2;
       i2 = tempRet0;
      }
      HEAP32[i33 >> 2] = i3;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i1;
      HEAP32[i32 + 4 >> 2] = i2;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 6:
     {
      if ((__ZN4wasm7Literal10getIntegerEv(i32) | 0) == 0 & (tempRet0 | 0) == 0) {
       i30 = HEAP32[(HEAP32[i30 + 4 >> 2] | 0) + 12 >> 2] | 0;
       FUNCTION_TABLE_vii[HEAP32[(HEAP32[i30 >> 2] | 0) + 20 >> 2] & 127](i30, 21500);
      }
      i1 = i31 + 8 | 0;
      if ((HEAP32[i31 >> 2] | 0) == 1) {
       i3 = 1;
       i1 = ((HEAP32[i1 >> 2] | 0) >>> 0) % ((HEAP32[i32 + 8 >> 2] | 0) >>> 0) | 0;
       i2 = 0;
      } else {
       i3 = i1;
       i1 = i32 + 8 | 0;
       i1 = ___uremdi3(HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0;
       i3 = 2;
       i2 = tempRet0;
      }
      HEAP32[i33 >> 2] = i3;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i1;
      HEAP32[i32 + 4 >> 2] = i2;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 7:
     {
      i31 = i31 + 8 | 0;
      i32 = i32 + 8 | 0;
      i30 = HEAP32[i32 >> 2] & HEAP32[i31 >> 2];
      i31 = HEAP32[i32 + 4 >> 2] & HEAP32[i31 + 4 >> 2];
      HEAP32[i33 >> 2] = 2;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i30;
      HEAP32[i32 + 4 >> 2] = i31;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 8:
     {
      i31 = i31 + 8 | 0;
      i32 = i32 + 8 | 0;
      i30 = HEAP32[i32 >> 2] | HEAP32[i31 >> 2];
      i31 = HEAP32[i32 + 4 >> 2] | HEAP32[i31 + 4 >> 2];
      HEAP32[i33 >> 2] = 2;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i30;
      HEAP32[i32 + 4 >> 2] = i31;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 9:
     {
      i31 = i31 + 8 | 0;
      i32 = i32 + 8 | 0;
      i30 = HEAP32[i32 >> 2] ^ HEAP32[i31 >> 2];
      i31 = HEAP32[i32 + 4 >> 2] ^ HEAP32[i31 + 4 >> 2];
      HEAP32[i33 >> 2] = 2;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i30;
      HEAP32[i32 + 4 >> 2] = i31;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 10:
     {
      i1 = i32 + 8 | 0;
      if ((HEAP32[i32 >> 2] | 0) == 1) i1 = HEAP32[i1 >> 2] & 63; else i1 = HEAP32[i1 >> 2] & 63;
      i31 = i31 + 8 | 0;
      i31 = _bitshift64Shl(HEAP32[i31 >> 2] | 0, HEAP32[i31 + 4 >> 2] | 0, i1 | 0) | 0;
      HEAP32[i33 >> 2] = 2;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i31;
      HEAP32[i32 + 4 >> 2] = tempRet0;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 11:
     {
      i1 = i32 + 8 | 0;
      if ((HEAP32[i32 >> 2] | 0) == 1) i1 = HEAP32[i1 >> 2] & 63; else i1 = HEAP32[i1 >> 2] & 63;
      i31 = i31 + 8 | 0;
      i31 = _bitshift64Lshr(HEAP32[i31 >> 2] | 0, HEAP32[i31 + 4 >> 2] | 0, i1 | 0) | 0;
      HEAP32[i33 >> 2] = 2;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i31;
      HEAP32[i32 + 4 >> 2] = tempRet0;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 12:
     {
      i1 = i32 + 8 | 0;
      if ((HEAP32[i32 >> 2] | 0) == 1) i1 = HEAP32[i1 >> 2] & 63; else i1 = HEAP32[i1 >> 2] & 63;
      i31 = i31 + 8 | 0;
      i31 = _bitshift64Ashr(HEAP32[i31 >> 2] | 0, HEAP32[i31 + 4 >> 2] | 0, i1 | 0) | 0;
      HEAP32[i33 >> 2] = 2;
      i32 = i33 + 8 | 0;
      HEAP32[i32 >> 2] = i31;
      HEAP32[i32 + 4 >> 2] = tempRet0;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 17:
     {
      __ZNK4wasm7Literal2eqERKS0_(i28, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i28 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i28 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i28 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i28 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 18:
     {
      __ZNK4wasm7Literal2neERKS0_(i7, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i7 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 19:
     {
      i31 = i31 + 8 | 0;
      i29 = HEAP32[i31 + 4 >> 2] | 0;
      i32 = i32 + 8 | 0;
      i30 = HEAP32[i32 + 4 >> 2] | 0;
      i32 = ((i29 | 0) < (i30 | 0) | ((i29 | 0) == (i30 | 0) ? (HEAP32[i31 >> 2] | 0) >>> 0 < (HEAP32[i32 >> 2] | 0) >>> 0 : 0)) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 20:
     {
      i31 = i31 + 8 | 0;
      i29 = HEAP32[i31 + 4 >> 2] | 0;
      i32 = i32 + 8 | 0;
      i30 = HEAP32[i32 + 4 >> 2] | 0;
      i32 = (i29 >>> 0 < i30 >>> 0 | ((i29 | 0) == (i30 | 0) ? (HEAP32[i31 >> 2] | 0) >>> 0 < (HEAP32[i32 >> 2] | 0) >>> 0 : 0)) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 21:
     {
      i31 = i31 + 8 | 0;
      i29 = HEAP32[i31 + 4 >> 2] | 0;
      i32 = i32 + 8 | 0;
      i30 = HEAP32[i32 + 4 >> 2] | 0;
      i32 = ((i29 | 0) < (i30 | 0) | ((i29 | 0) == (i30 | 0) ? (HEAP32[i31 >> 2] | 0) >>> 0 <= (HEAP32[i32 >> 2] | 0) >>> 0 : 0)) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 22:
     {
      i31 = i31 + 8 | 0;
      i29 = HEAP32[i31 + 4 >> 2] | 0;
      i32 = i32 + 8 | 0;
      i30 = HEAP32[i32 + 4 >> 2] | 0;
      i32 = (i29 >>> 0 < i30 >>> 0 | ((i29 | 0) == (i30 | 0) ? (HEAP32[i31 >> 2] | 0) >>> 0 <= (HEAP32[i32 >> 2] | 0) >>> 0 : 0)) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 23:
     {
      i31 = i31 + 8 | 0;
      i29 = HEAP32[i31 + 4 >> 2] | 0;
      i32 = i32 + 8 | 0;
      i30 = HEAP32[i32 + 4 >> 2] | 0;
      i32 = ((i29 | 0) > (i30 | 0) | ((i29 | 0) == (i30 | 0) ? (HEAP32[i31 >> 2] | 0) >>> 0 > (HEAP32[i32 >> 2] | 0) >>> 0 : 0)) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 24:
     {
      i31 = i31 + 8 | 0;
      i29 = HEAP32[i31 + 4 >> 2] | 0;
      i32 = i32 + 8 | 0;
      i30 = HEAP32[i32 + 4 >> 2] | 0;
      i32 = (i29 >>> 0 > i30 >>> 0 | ((i29 | 0) == (i30 | 0) ? (HEAP32[i31 >> 2] | 0) >>> 0 > (HEAP32[i32 >> 2] | 0) >>> 0 : 0)) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 25:
     {
      i31 = i31 + 8 | 0;
      i29 = HEAP32[i31 + 4 >> 2] | 0;
      i32 = i32 + 8 | 0;
      i30 = HEAP32[i32 + 4 >> 2] | 0;
      i32 = ((i29 | 0) > (i30 | 0) | ((i29 | 0) == (i30 | 0) ? (HEAP32[i31 >> 2] | 0) >>> 0 >= (HEAP32[i32 >> 2] | 0) >>> 0 : 0)) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 26:
     {
      i31 = i31 + 8 | 0;
      i29 = HEAP32[i31 + 4 >> 2] | 0;
      i32 = i32 + 8 | 0;
      i30 = HEAP32[i32 + 4 >> 2] | 0;
      i32 = (i29 >>> 0 > i30 >>> 0 | ((i29 | 0) == (i30 | 0) ? (HEAP32[i31 >> 2] | 0) >>> 0 >= (HEAP32[i32 >> 2] | 0) >>> 0 : 0)) & 1;
      HEAP32[i33 >> 2] = 1;
      HEAP32[i33 + 8 >> 2] = i32;
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    default:
     _abort();
    } while (0);
    break;
   }
  case 4:
  case 3:
   {
    do switch (HEAP32[i29 + 8 >> 2] | 0) {
    case 0:
     {
      __ZNK4wasm7Literal3addERKS0_(i8, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i8 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i8 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 1:
     {
      __ZNK4wasm7Literal3subERKS0_(i9, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i9 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 2:
     {
      __ZNK4wasm7Literal3mulERKS0_(i10, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i10 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i10 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 13:
     {
      __ZNK4wasm7Literal3divERKS0_(i11, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i11 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i11 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 14:
     {
      __ZNK4wasm7Literal8copysignERKS0_(i12, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i12 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i12 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 15:
     {
      __ZNK4wasm7Literal3minERKS0_(i13, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i13 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i13 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 16:
     {
      __ZNK4wasm7Literal3maxERKS0_(i14, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i14 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i14 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 17:
     {
      __ZNK4wasm7Literal2eqERKS0_(i15, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i15 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i15 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 18:
     {
      __ZNK4wasm7Literal2neERKS0_(i16, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i16 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i16 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 27:
     {
      __ZNK4wasm7Literal2ltERKS0_(i18, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i18 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i18 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 28:
     {
      __ZNK4wasm7Literal2leERKS0_(i19, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i19 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i19 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i19 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 29:
     {
      __ZNK4wasm7Literal2gtERKS0_(i20, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i20 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i20 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i20 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    case 30:
     {
      __ZNK4wasm7Literal2geERKS0_(i21, i31, i32);
      HEAP32[i33 >> 2] = HEAP32[i21 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i21 + 4 >> 2];
      HEAP32[i33 + 8 >> 2] = HEAP32[i21 + 8 >> 2];
      HEAP32[i33 + 12 >> 2] = HEAP32[i21 + 12 >> 2];
      HEAP32[i33 + 16 >> 2] = 0;
      break L13;
     }
    default:
     _abort();
    } while (0);
    break;
   }
  default:
   _abort();
  } while (0);
 } else {
  HEAP32[i33 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i33 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
  HEAP32[i33 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
  HEAP32[i33 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
  HEAP32[i33 + 16 >> 2] = HEAP32[i4 + 16 >> 2];
  HEAP32[i33 + 20 >> 2] = HEAP32[i4 + 20 >> 2];
 }
 STACKTOP = i34;
 return;
}

function __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i9;
 i2 = __ZN4wasm7Element4listEv(i6) | 0;
 i2 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i2 >> 2] >> 2] | 0) | 0;
 i3 = _strchr(i2, 46) | 0;
 L1 : do if (i3) {
  i4 = __ZN4wasm22SExpressionWasmBuilder16stringToWasmTypeEPKcbb(i7, i2, 0, 1) | 0;
  i1 = i5;
  i2 = i1 + 16 | 0;
  do {
   HEAP8[i1 >> 0] = 0;
   i1 = i1 + 1 | 0;
  } while ((i1 | 0) < (i2 | 0));
  _strncpy(i5, i3 + 1 | 0, 15) | 0;
  L95 : do switch (HEAP8[i5 >> 0] | 0) {
  case 97:
   {
    i1 = i5 + 1 | 0;
    switch (HEAP8[i1 >> 0] | 0) {
    case 98:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 4, i4) | 0;
      i8 = 110;
      break L95;
     }
    case 100:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 0, i4) | 0;
      i8 = 110;
      break L95;
     }
    case 110:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 7, i4) | 0;
      i8 = 110;
      break L95;
     }
    default:
     {
      __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
      __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
      i8 = 24;
      break L95;
     }
    }
   }
  case 99:
   {
    i1 = i5 + 1 | 0;
    i8 = 24;
    break;
   }
  case 100:
   {
    i1 = i5 + 1 | 0;
    i8 = 36;
    break;
   }
  case 101:
   {
    i1 = i5 + 1 | 0;
    i8 = 42;
    break;
   }
  case 102:
   {
    i1 = i5 + 1 | 0;
    i8 = 46;
    break;
   }
  case 103:
   {
    i1 = i5 + 1 | 0;
    i8 = 49;
    break;
   }
  case 108:
   {
    i1 = i5 + 1 | 0;
    i8 = 57;
    break;
   }
  case 109:
   {
    i1 = i5 + 1 | 0;
    i8 = 66;
    break;
   }
  case 110:
   {
    i1 = i5 + 1 | 0;
    i8 = 71;
    break;
   }
  case 111:
   {
    i1 = i5 + 1 | 0;
    i8 = 77;
    break;
   }
  case 112:
   {
    i1 = i5 + 1 | 0;
    i8 = 80;
    break;
   }
  case 114:
   {
    i1 = i5 + 1 | 0;
    i8 = 84;
    break;
   }
  case 115:
   {
    i1 = i5 + 1 | 0;
    i8 = 89;
    break;
   }
  case 116:
   {
    i1 = i5 + 1 | 0;
    i8 = 97;
    break;
   }
  case 119:
   {
    i1 = i5 + 1 | 0;
    i8 = 104;
    break;
   }
  case 120:
   {
    i1 = i5 + 1 | 0;
    i8 = 107;
    break;
   }
  default:
   {
    i1 = i7 + 8 | 0;
    i8 = 111;
   }
  } while (0);
  L118 : do if ((i8 | 0) == 24) {
   L120 : do switch (HEAP8[i1 >> 0] | 0) {
   case 101:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 5, i4) | 0;
     i8 = 110;
     break L118;
    }
   case 108:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 0, i4) | 0;
     i8 = 110;
     break L118;
    }
   case 111:
    {
     switch (HEAP8[i5 + 2 >> 0] | 0) {
     case 112:
      {
       i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 14, i4) | 0;
       i8 = 110;
       break L118;
      }
     case 110:
      break;
     default:
      break L120;
     }
     switch (HEAP8[i5 + 3 >> 0] | 0) {
     case 118:
      break;
     case 115:
      {
       i1 = __ZN4wasm22SExpressionWasmBuilder9makeConstERNS_7ElementENS_8WasmTypeE(i7, i6, i4) | 0;
       i8 = 110;
       break L118;
      }
     default:
      break L120;
     }
     switch (HEAP8[i5 + 8 >> 0] | 0) {
     case 115:
      {
       i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 11 >> 0] | 0) == 51 ? 18 : 20, i4) | 0;
       i8 = 110;
       break L118;
      }
     case 117:
      {
       i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 11 >> 0] | 0) == 51 ? 19 : 21, i4) | 0;
       i8 = 110;
       break L118;
      }
     default:
      break L120;
     }
    }
   case 116:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 1, i4) | 0;
     i8 = 110;
     break L118;
    }
   default:
    {}
   } while (0);
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 36;
  } while (0);
  L135 : do if ((i8 | 0) == 36) {
   switch (HEAP8[i1 >> 0] | 0) {
   case 105:
    {
     i8 = 37;
     break;
    }
   case 101:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 23, i4) | 0;
     i8 = 110;
     break L135;
    }
   default:
    {}
   }
   L139 : do if ((i8 | 0) == 37) switch (HEAP8[i5 + 3 >> 0] | 0) {
   case 95:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 4 >> 0] | 0) == 117 ? 4 : 3, i4) | 0;
     i8 = 110;
     break L135;
    }
   case 0:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 13, i4) | 0;
     i8 = 110;
     break L135;
    }
   default:
    break L139;
   } while (0);
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 42;
  } while (0);
  L145 : do if ((i8 | 0) == 42) switch (HEAP8[i1 >> 0] | 0) {
  case 113:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 17, i4) | 0;
    i8 = 110;
    break L145;
   }
  case 120:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 7 >> 0] | 0) == 117 ? 11 : 10, i4) | 0;
    i8 = 110;
    break L145;
   }
  default:
   {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
    __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
    i8 = 46;
    break L145;
   }
  } while (0);
  do if ((i8 | 0) == 46) if ((HEAP8[i1 >> 0] | 0) == 108) {
   i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 6, i4) | 0;
   i8 = 110;
   break;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 49;
   break;
  } while (0);
  L156 : do if ((i8 | 0) == 49) {
   L158 : do switch (HEAP8[i1 >> 0] | 0) {
   case 116:
    switch (HEAP8[i5 + 2 >> 0] | 0) {
    case 95:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 3 >> 0] | 0) == 117 ? 24 : 23, i4) | 0;
      i8 = 110;
      break L156;
     }
    case 0:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 29, i4) | 0;
      i8 = 110;
      break L156;
     }
    default:
     break L158;
    }
   case 101:
    switch (HEAP8[i5 + 2 >> 0] | 0) {
    case 95:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 3 >> 0] | 0) == 117 ? 26 : 25, i4) | 0;
      i8 = 110;
      break L156;
     }
    case 0:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 30, i4) | 0;
      i8 = 110;
      break L156;
     }
    default:
     break L158;
    }
   default:
    {}
   } while (0);
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 57;
  } while (0);
  L168 : do if ((i8 | 0) == 57) {
   L170 : do switch (HEAP8[i1 >> 0] | 0) {
   case 116:
    switch (HEAP8[i5 + 2 >> 0] | 0) {
    case 95:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 3 >> 0] | 0) == 117 ? 20 : 19, i4) | 0;
      i8 = 110;
      break L168;
     }
    case 0:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 27, i4) | 0;
      i8 = 110;
      break L168;
     }
    default:
     break L170;
    }
   case 101:
    switch (HEAP8[i5 + 2 >> 0] | 0) {
    case 95:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 3 >> 0] | 0) == 117 ? 22 : 21, i4) | 0;
      i8 = 110;
      break L168;
     }
    case 0:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 28, i4) | 0;
      i8 = 110;
      break L168;
     }
    default:
     break L170;
    }
   case 111:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder8makeLoadERNS_7ElementENS_8WasmTypeE(i7, i6, i4) | 0;
     i8 = 110;
     break L168;
    }
   default:
    {}
   } while (0);
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 66;
  } while (0);
  L181 : do if ((i8 | 0) == 66) switch (HEAP8[i1 >> 0] | 0) {
  case 105:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 15, i4) | 0;
    i8 = 110;
    break L181;
   }
  case 97:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 16, i4) | 0;
    i8 = 110;
    break L181;
   }
  case 117:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 2, i4) | 0;
    i8 = 110;
    break L181;
   }
  default:
   {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
    __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
    i8 = 71;
    break L181;
   }
  } while (0);
  L188 : do if ((i8 | 0) == 71) {
   L190 : do if ((HEAP8[i1 >> 0] | 0) == 101) switch (HEAP8[i5 + 2 >> 0] | 0) {
   case 0:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 18, i4) | 0;
     i8 = 110;
     break L188;
    }
   case 97:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 8, i4) | 0;
     i8 = 110;
     break L188;
    }
   case 103:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 3, i4) | 0;
     i8 = 110;
     break L188;
    }
   default:
    break L190;
   } while (0);
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 77;
  } while (0);
  do if ((i8 | 0) == 77) if ((HEAP8[i1 >> 0] | 0) == 114) {
   i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 8, i4) | 0;
   i8 = 110;
   break;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 80;
   break;
  } while (0);
  L202 : do if ((i8 | 0) == 80) switch (HEAP8[i1 >> 0] | 0) {
  case 114:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 22, i4) | 0;
    i8 = 110;
    break L202;
   }
  case 111:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 2, i4) | 0;
    i8 = 110;
    break L202;
   }
  default:
   {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
    __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
    i8 = 84;
    break L202;
   }
  } while (0);
  L208 : do if ((i8 | 0) == 84) {
   L210 : do if ((HEAP8[i1 >> 0] | 0) == 101) switch (HEAP8[i5 + 2 >> 0] | 0) {
   case 109:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 4 >> 0] | 0) == 117 ? 6 : 5, i4) | 0;
     i8 = 110;
     break L208;
    }
   case 105:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, (i4 + -3 | 0) >>> 0 < 2 ? 24 : 17, i4) | 0;
     i8 = 110;
     break L208;
    }
   default:
    break L210;
   } while (0);
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 89;
  } while (0);
  L216 : do if ((i8 | 0) == 89) switch (HEAP8[i1 >> 0] | 0) {
  case 104:
   if ((HEAP8[i5 + 2 >> 0] | 0) == 108) {
    i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 10, i4) | 0;
    i8 = 110;
    break L216;
   } else {
    i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 4 >> 0] | 0) == 117 ? 11 : 12, i4) | 0;
    i8 = 110;
    break L216;
   }
  case 117:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 1, i4) | 0;
    i8 = 110;
    break L216;
   }
  case 113:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 9, i4) | 0;
    i8 = 110;
    break L216;
   }
  case 116:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder9makeStoreERNS_7ElementENS_8WasmTypeE(i7, i6, i4) | 0;
    i8 = 110;
    break L216;
   }
  default:
   {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
    __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
    i8 = 97;
    break L216;
   }
  } while (0);
  L227 : do if ((i8 | 0) == 97) {
   L229 : do if ((HEAP8[i1 >> 0] | 0) == 114) switch (HEAP8[i5 + 6 >> 0] | 0) {
   case 115:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 9 >> 0] | 0) == 51 ? 13 : 15, i4) | 0;
     i8 = 110;
     break L227;
    }
   case 117:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, (HEAP8[i5 + 9 >> 0] | 0) == 51 ? 14 : 16, i4) | 0;
     i8 = 110;
     break L227;
    }
   default:
    {
     if ((HEAP8[i5 + 2 >> 0] | 0) != 117) break L229;
     i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 7, i4) | 0;
     i8 = 110;
     break L227;
    }
   } while (0);
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 104;
  } while (0);
  do if ((i8 | 0) == 104) if ((HEAP8[i1 >> 0] | 0) == 114) {
   i1 = __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i7, i6, 12, i4) | 0;
   i8 = 110;
   break;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 107;
   break;
  } while (0);
  do if ((i8 | 0) == 107) if ((HEAP8[i1 >> 0] | 0) == 111) {
   i1 = __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i7, i6, 9, i4) | 0;
   i8 = 110;
   break;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   i1 = i7 + 8 | 0;
   __ZNKSt3__18functionIFvvEEclEv(i1);
   i8 = 111;
   break;
  } while (0);
  if ((i8 | 0) == 110) {
   i8 = 176;
   break;
  } else if ((i8 | 0) == 111) {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i5) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i1);
   i8 = 175;
   break;
  }
 } else {
  L3 : do switch (HEAP8[i2 >> 0] | 0) {
  case 98:
   {
    i1 = i2 + 1 | 0;
    switch (HEAP8[i1 >> 0] | 0) {
    case 108:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder9makeBlockERNS_7ElementE(i7, i6) | 0;
      i8 = 176;
      break L1;
     }
    case 114:
     {
      i1 = __ZN4wasm22SExpressionWasmBuilder9makeBreakERNS_7ElementE(i7, i6) | 0;
      i8 = 176;
      break L1;
     }
    default:
     {
      __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
      __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
      i8 = 130;
      break L3;
     }
    }
   }
  case 99:
   {
    i1 = i2 + 1 | 0;
    i8 = 130;
    break;
   }
  case 103:
   {
    i1 = i2 + 1 | 0;
    i8 = 138;
    break;
   }
  case 104:
   {
    i1 = i2 + 1 | 0;
    i8 = 142;
    break;
   }
  case 105:
   {
    i1 = i2 + 1 | 0;
    i8 = 145;
    break;
   }
  case 108:
   {
    i1 = i2 + 1 | 0;
    i8 = 148;
    break;
   }
  case 109:
   {
    i1 = i2 + 1 | 0;
    i8 = 151;
    break;
   }
  case 110:
   {
    i1 = i2 + 1 | 0;
    i8 = 154;
    break;
   }
  case 112:
   {
    i1 = i2 + 1 | 0;
    i8 = 157;
    break;
   }
  case 115:
   {
    i1 = i2 + 1 | 0;
    i8 = 160;
    break;
   }
  case 114:
   {
    i1 = i2 + 1 | 0;
    i8 = 165;
    break;
   }
  case 116:
   {
    i1 = i2 + 1 | 0;
    i8 = 168;
    break;
   }
  case 117:
   {
    i1 = i2 + 1 | 0;
    i8 = 171;
    break;
   }
  default:
   i1 = i7 + 8 | 0;
  } while (0);
  if ((i8 | 0) == 130) {
   if ((HEAP8[i1 >> 0] | 0) == 97) {
    if ((i2 | 0) == (HEAP32[10221] | 0)) {
     i1 = __ZN4wasm22SExpressionWasmBuilder8makeCallERNS_7ElementE(i7, i6) | 0;
     i8 = 176;
     break;
    }
    if ((i2 | 0) == (HEAP32[10222] | 0)) {
     i1 = __ZN4wasm22SExpressionWasmBuilder14makeCallImportERNS_7ElementE(i7, i6) | 0;
     i8 = 176;
     break;
    }
    if ((i2 | 0) == (HEAP32[10223] | 0)) {
     i1 = __ZN4wasm22SExpressionWasmBuilder16makeCallIndirectERNS_7ElementE(i7, i6) | 0;
     i8 = 176;
     break;
    }
   }
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 138;
  }
  L34 : do if ((i8 | 0) == 138) switch (HEAP8[i1 >> 0] | 0) {
  case 101:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder12makeGetLocalERNS_7ElementE(i7, i6) | 0;
    i8 = 176;
    break L1;
   }
  case 114:
   {
    i1 = __ZN4wasm22SExpressionWasmBuilder8makeHostERNS_7ElementENS_6HostOpE(i7, i6, 2) | 0;
    i8 = 176;
    break L1;
   }
  default:
   {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
    __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
    i8 = 142;
    break L34;
   }
  } while (0);
  do if ((i8 | 0) == 142) if ((HEAP8[i1 >> 0] | 0) == 97) {
   i1 = __ZN4wasm22SExpressionWasmBuilder8makeHostERNS_7ElementENS_6HostOpE(i7, i6, 3) | 0;
   i8 = 176;
   break L1;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 145;
   break;
  } while (0);
  do if ((i8 | 0) == 145) if ((HEAP8[i1 >> 0] | 0) == 102) {
   i1 = __ZN4wasm22SExpressionWasmBuilder6makeIfERNS_7ElementE(i7, i6) | 0;
   i8 = 176;
   break L1;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 148;
   break;
  } while (0);
  do if ((i8 | 0) == 148) if ((HEAP8[i1 >> 0] | 0) == 111) {
   i1 = __ZN4wasm22SExpressionWasmBuilder8makeLoopERNS_7ElementE(i7, i6) | 0;
   i8 = 176;
   break L1;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 151;
   break;
  } while (0);
  do if ((i8 | 0) == 151) if ((HEAP8[i1 >> 0] | 0) == 101) {
   i1 = __ZN4wasm22SExpressionWasmBuilder8makeHostERNS_7ElementENS_6HostOpE(i7, i6, 1) | 0;
   i8 = 176;
   break L1;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 154;
   break;
  } while (0);
  do if ((i8 | 0) == 154) if ((HEAP8[i1 >> 0] | 0) == 111) {
   i1 = __ZN10MixedArena5allocIN4wasm3NopEEEPT_v(HEAP32[i7 + 4 >> 2] | 0) | 0;
   i8 = 176;
   break L1;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 157;
   break;
  } while (0);
  do if ((i8 | 0) == 157) if ((HEAP8[i1 >> 0] | 0) == 97) {
   i1 = __ZN4wasm22SExpressionWasmBuilder8makeHostERNS_7ElementENS_6HostOpE(i7, i6, 0) | 0;
   i8 = 176;
   break L1;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 160;
   break;
  } while (0);
  if ((i8 | 0) == 160) {
   L72 : do if ((HEAP8[i1 >> 0] | 0) == 101) switch (HEAP8[i2 + 2 >> 0] | 0) {
   case 116:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder12makeSetLocalERNS_7ElementE(i7, i6) | 0;
     i8 = 176;
     break L1;
    }
   case 108:
    {
     i1 = __ZN4wasm22SExpressionWasmBuilder10makeSelectERNS_7ElementE(i7, i6) | 0;
     i8 = 176;
     break L1;
    }
   default:
    break L72;
   } while (0);
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 165;
  }
  do if ((i8 | 0) == 165) if ((HEAP8[i1 >> 0] | 0) == 101) {
   i1 = __ZN4wasm22SExpressionWasmBuilder10makeReturnERNS_7ElementE(i7, i6) | 0;
   i8 = 176;
   break L1;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 168;
   break;
  } while (0);
  do if ((i8 | 0) == 168) if ((HEAP8[i1 >> 0] | 0) == 97) {
   i1 = __ZN4wasm22SExpressionWasmBuilder10makeSwitchERNS_7ElementE(i7, i6) | 0;
   i8 = 176;
   break L1;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
   __ZNKSt3__18functionIFvvEEclEv(i7 + 8 | 0);
   i8 = 171;
   break;
  } while (0);
  do if ((i8 | 0) == 171) if ((HEAP8[i1 >> 0] | 0) == 110) {
   i1 = __ZN10MixedArena5allocIN4wasm11UnreachableEEEPT_v(HEAP32[i7 + 4 >> 2] | 0) | 0;
   i8 = 176;
   break L1;
  } else {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
   i1 = i7 + 8 | 0;
   __ZNKSt3__18functionIFvvEEclEv(i1);
   break;
  } while (0);
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17359) | 0, i2) | 0, 10) | 0;
  __ZNKSt3__18functionIFvvEEclEv(i1);
  i8 = 175;
 } while (0);
 if ((i8 | 0) == 175) _abort(); else if ((i8 | 0) == 176) {
  STACKTOP = i9;
  return i1 | 0;
 }
 return 0;
}

function __ZN4wasm15Asm2WasmBuilder10processAsmEN6cashew3RefE(i69, i4) {
 i69 = i69 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i52 = 0, i53 = 0, i54 = 0, i55 = 0, i56 = 0, i57 = 0, i58 = 0, i59 = 0, i60 = 0, i61 = 0, i62 = 0, i63 = 0, i64 = 0, i65 = 0, i66 = 0, i67 = 0, i68 = 0, i70 = 0;
 i70 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i64 = i70 + 216 | 0;
 i57 = i70 + 212 | 0;
 i67 = i70 + 192 | 0;
 i3 = i70 + 148 | 0;
 i46 = i70 + 140 | 0;
 i1 = i70 + 208 | 0;
 i2 = i70 + 204 | 0;
 i45 = i70 + 132 | 0;
 i61 = i70 + 124 | 0;
 i56 = i70 + 116 | 0;
 i48 = i70 + 108 | 0;
 i49 = i70 + 92 | 0;
 i34 = i70 + 188 | 0;
 i38 = i70 + 184 | 0;
 i39 = i70 + 180 | 0;
 i40 = i70 + 176 | 0;
 i41 = i70 + 172 | 0;
 i47 = i70 + 84 | 0;
 i42 = i70 + 168 | 0;
 i43 = i70 + 164 | 0;
 i44 = i70 + 160 | 0;
 i27 = i70 + 156 | 0;
 i28 = i70 + 152 | 0;
 i29 = i70 + 144 | 0;
 i30 = i70 + 136 | 0;
 i31 = i70 + 128 | 0;
 i32 = i70 + 120 | 0;
 i33 = i70 + 112 | 0;
 i50 = i70 + 96 | 0;
 i51 = i70 + 88 | 0;
 i52 = i70 + 72 | 0;
 i53 = i70 + 68 | 0;
 i35 = i70 + 56 | 0;
 i36 = i70 + 52 | 0;
 i54 = i70 + 40 | 0;
 i55 = i70 + 36 | 0;
 i37 = i70 + 32 | 0;
 i58 = i70 + 28 | 0;
 i59 = i70 + 24 | 0;
 i60 = i70 + 12 | 0;
 i62 = i70 + 8 | 0;
 i65 = i70 + 4 | 0;
 i68 = i70;
 if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i4, 0) | 0, 41036) | 0)) ___assert_fail(13459, 13478, 428, 13493);
 i66 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 1) | 0, 0) | 0;
 HEAP32[i3 >> 2] = HEAP32[i66 >> 2];
 if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i3, 0) | 0, 41040) | 0)) ___assert_fail(13504, 13478, 430, 13493);
 i66 = __ZN6cashew3RefixEj(i3, 3) | 0;
 HEAP32[i46 >> 2] = HEAP32[i66 >> 2];
 do if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i46, 0) | 0, 0) | 0, 41048) | 0 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i46, 0) | 0, 1) | 0, 0) | 0, 41132) | 0 : 0) {
  i66 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i46, 0) | 0, 1) | 0, 1) | 0;
  i66 = __ZN6cashew5Value10getIStringEv(HEAP32[i66 >> 2] | 0) | 0;
  __ZN6cashew7IString3setEPKcb(i1, 13283, 1);
  if ((HEAP32[i66 >> 2] | 0) != (HEAP32[i1 >> 2] | 0) ? (i66 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i46, 0) | 0, 1) | 0, 1) | 0, i66 = __ZN6cashew5Value10getIStringEv(HEAP32[i66 >> 2] | 0) | 0, __ZN6cashew7IString3setEPKcb(i2, 13528, 1), (HEAP32[i66 >> 2] | 0) != (HEAP32[i2 >> 2] | 0)) : 0) break;
  HEAP32[i45 >> 2] = i69;
  i66 = i69 + 4 | 0;
  i20 = i69 + 80 | 0;
  i21 = i69 + 60 | 0;
  i22 = i69 + 64 | 0;
  i23 = i35 + 4 | 0;
  i24 = i35 + 5 | 0;
  i25 = i35 + 8 | 0;
  i63 = i69 + 16 | 0;
  i9 = 0;
  i3 = 0;
  i4 = 0;
  i5 = 0;
  i12 = 0;
  i13 = 0;
  i6 = 0;
  i7 = 0;
  i8 = 0;
  i10 = 0;
  i26 = 1;
  i11 = 0;
  i14 = 0;
  L13 : while (1) {
   if (i26 >>> 0 >= (__ZN6cashew5Value4sizeEv(HEAP32[i46 >> 2] | 0) | 0) >>> 0) {
    i10 = 12;
    break;
   }
   i19 = __ZN6cashew3RefixEj(i46, i26) | 0;
   HEAP32[i61 >> 2] = HEAP32[i19 >> 2];
   L16 : do if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i61, 0) | 0, 41060) | 0)) {
    if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i61, 0) | 0, 41040) | 0) {
     i2 = HEAP32[i69 >> 2] | 0;
     HEAP32[i37 >> 2] = HEAP32[i61 >> 2];
     HEAP32[i64 >> 2] = HEAP32[i37 >> 2];
     __ZN4wasm6Module11addFunctionEPNS_8FunctionE(i2, __ZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefE(i69, i64) | 0);
     i2 = i13;
     i1 = i14;
     break;
    }
    if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i61, 0) | 0, 41076) | 0) {
     i1 = __ZN6cashew3RefixEj(i61, 1) | 0;
     HEAP32[i64 >> 2] = HEAP32[i1 >> 2];
     i1 = __ZN6cashew3RefixEj(i64, 1) | 0;
     i1 = HEAP32[i1 >> 2] | 0;
     HEAP32[i57 >> 2] = i1;
     i2 = 0;
     while (1) {
      if (i2 >>> 0 >= (__ZN6cashew5Value4sizeEv(i1) | 0) >>> 0) break;
      i1 = __ZN6cashew3RefixEj(i57, i2) | 0;
      HEAP32[i67 >> 2] = HEAP32[i1 >> 2];
      i1 = __ZN6cashew3RefixEj(i67, 0) | 0;
      i1 = __ZN6cashew5Value10getIStringEv(HEAP32[i1 >> 2] | 0) | 0;
      i1 = HEAP32[i1 >> 2] | 0;
      i19 = __ZN6cashew3RefixEj(i67, 1) | 0;
      HEAP32[i56 >> 2] = HEAP32[i19 >> 2];
      if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i56, 0) | 0, 41056) | 0)) {
       i10 = 97;
       break L13;
      }
      i19 = __ZN10MixedArena5allocIN4wasm6ExportEEEPT_v(HEAP32[i66 >> 2] | 0) | 0;
      HEAP32[i19 >> 2] = i1;
      i1 = __ZN6cashew3RefixEj(i56, 1) | 0;
      i1 = __ZN6cashew5Value10getIStringEv(HEAP32[i1 >> 2] | 0) | 0;
      HEAP32[i19 + 4 >> 2] = HEAP32[i1 >> 2];
      __ZN4wasm6Module9addExportEPNS_6ExportE(HEAP32[i69 >> 2] | 0, i19);
      i1 = HEAP32[i57 >> 2] | 0;
      i2 = i2 + 1 | 0;
     }
     i2 = i13;
     i1 = i14;
    } else {
     i2 = i13;
     i1 = i14;
    }
   } else {
    i16 = i3;
    i17 = i4;
    i18 = i5;
    i19 = i12;
    i15 = 0;
    while (1) {
     i12 = __ZN6cashew3RefixEj(i61, 1) | 0;
     if (i15 >>> 0 >= (__ZN6cashew5Value4sizeEv(HEAP32[i12 >> 2] | 0) | 0) >>> 0) {
      i3 = i16;
      i4 = i17;
      i5 = i18;
      i12 = i19;
      i2 = i13;
      i1 = i14;
      break L16;
     }
     i12 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i61, 1) | 0, i15) | 0;
     HEAP32[i56 >> 2] = HEAP32[i12 >> 2];
     i12 = __ZN6cashew3RefixEj(i56, 0) | 0;
     i12 = __ZN6cashew5Value10getIStringEv(HEAP32[i12 >> 2] | 0) | 0;
     i12 = HEAP32[i12 >> 2] | 0;
     HEAP32[i48 >> 2] = i12;
     i5 = __ZN6cashew3RefixEj(i56, 1) | 0;
     HEAP32[i49 >> 2] = HEAP32[i5 >> 2];
     do if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i49, 0) | 0, 41112) | 0) {
      i5 = __ZN6cashew3RefixEj(i49, 1) | 0;
      i5 = __ZN6cashew5Value9getNumberEv(HEAP32[i5 >> 2] | 0) | 0;
      if (!(+HEAPF64[i5 >> 3] == 0.0)) {
       i10 = 17;
       break L13;
      }
      HEAP32[i34 >> 2] = i12;
      HEAP32[i38 >> 2] = 0;
      HEAP32[i39 >> 2] = 0;
      HEAP32[i67 >> 2] = HEAP32[i34 >> 2];
      HEAP32[i57 >> 2] = HEAP32[i38 >> 2];
      HEAP32[i64 >> 2] = HEAP32[i39 >> 2];
      __ZN4wasm15Asm2WasmBuilder14allocateGlobalEN6cashew7IStringENS_8WasmTypeEbS2_S2_(i69, i67, 1, 0, i57, i64);
      i1 = i16;
      i2 = i17;
      i3 = i18;
      i4 = i19;
      i5 = i13;
      i12 = i14;
     } else {
      if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i49, 0) | 0, 41072) | 0) {
       if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i49, 1) | 0, 41188) | 0)) {
        i10 = 23;
        break L13;
       }
       if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i49, 3) | 0, 0) | 0, 41112) | 0)) {
        i10 = 23;
        break L13;
       }
       i5 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i49, 3) | 0, 1) | 0;
       i5 = __ZN6cashew5Value9getNumberEv(HEAP32[i5 >> 2] | 0) | 0;
       if (!(+HEAPF64[i5 >> 3] == 0.0)) {
        i10 = 23;
        break L13;
       }
       i1 = __ZN6cashew3RefixEj(i49, 2) | 0;
       i1 = HEAP32[i1 >> 2] | 0;
       HEAP32[i40 >> 2] = i12;
       HEAP32[i41 >> 2] = i1;
       HEAP32[i57 >> 2] = HEAP32[i40 >> 2];
       HEAP32[i64 >> 2] = HEAP32[i41 >> 2];
       __ZZN4wasm15Asm2WasmBuilder10processAsmEN6cashew3RefEENK3__0clENS1_7IStringES2_NS_8WasmTypeE(i45, i57, i64, 1);
       i1 = i16;
       i2 = i17;
       i3 = i18;
       i4 = i19;
       i5 = i13;
       i12 = i14;
       break;
      }
      if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i49, 0) | 0, 41148) | 0) {
       if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i49, 1) | 0, 41180) | 0)) {
        i10 = 27;
        break L13;
       }
       i5 = __ZN6cashew3RefixEj(i49, 2) | 0;
       HEAP32[i47 >> 2] = HEAP32[i5 >> 2];
       if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i47, 0) | 0, 41112) | 0) {
        i5 = __ZN6cashew3RefixEj(i47, 1) | 0;
        i5 = __ZN6cashew5Value9getNumberEv(HEAP32[i5 >> 2] | 0) | 0;
        if (!(+HEAPF64[i5 >> 3] == 0.0)) {
         i10 = 30;
         break L13;
        }
        HEAP32[i42 >> 2] = i12;
        HEAP32[i43 >> 2] = 0;
        HEAP32[i44 >> 2] = 0;
        HEAP32[i67 >> 2] = HEAP32[i42 >> 2];
        HEAP32[i57 >> 2] = HEAP32[i43 >> 2];
        HEAP32[i64 >> 2] = HEAP32[i44 >> 2];
        __ZN4wasm15Asm2WasmBuilder14allocateGlobalEN6cashew7IStringENS_8WasmTypeEbS2_S2_(i69, i67, 4, 0, i57, i64);
       } else {
        HEAP32[i27 >> 2] = i12;
        HEAP32[i28 >> 2] = HEAP32[i47 >> 2];
        HEAP32[i57 >> 2] = HEAP32[i27 >> 2];
        HEAP32[i64 >> 2] = HEAP32[i28 >> 2];
        __ZZN4wasm15Asm2WasmBuilder10processAsmEN6cashew3RefEENK3__0clENS1_7IStringES2_NS_8WasmTypeE(i45, i57, i64, 4);
       }
       i1 = i16;
       i2 = i17;
       i3 = i18;
       i4 = i19;
       i5 = i13;
       i12 = i14;
       break;
      }
      if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i49, 0) | 0, 40884) | 0) {
       if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i49, 1) | 0, 0) | 0, 41056) | 0)) {
        i10 = 39;
        break L13;
       }
       if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i49, 1) | 0, 1) | 0, i20) | 0)) {
        i10 = 39;
        break L13;
       }
       if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i49, 2) | 0, 0) | 0, 0) | 0, 41112) | 0)) {
        i10 = 39;
        break L13;
       }
       i5 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i49, 2) | 0, 0) | 0, 1) | 0;
       i5 = __ZN6cashew5Value9getNumberEv(HEAP32[i5 >> 2] | 0) | 0;
       if (!(+HEAPF64[i5 >> 3] == 0.0)) {
        i10 = 39;
        break L13;
       }
       HEAP32[i29 >> 2] = i12;
       HEAP32[i30 >> 2] = 0;
       HEAP32[i31 >> 2] = 0;
       HEAP32[i67 >> 2] = HEAP32[i29 >> 2];
       HEAP32[i57 >> 2] = HEAP32[i30 >> 2];
       HEAP32[i64 >> 2] = HEAP32[i31 >> 2];
       __ZN4wasm15Asm2WasmBuilder14allocateGlobalEN6cashew7IStringENS_8WasmTypeEbS2_S2_(i69, i67, 3, 0, i57, i64);
       i1 = i16;
       i2 = i17;
       i3 = i18;
       i4 = i19;
       i5 = i13;
       i12 = i14;
       break;
      }
      if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i49, 0) | 0, 41340) | 0) {
       do if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i49, 1) | 0, 0) | 0, 41056) | 0) {
        i5 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i49, 1) | 0, 1) | 0;
        i5 = __ZN6cashew5Value10getIStringEv(HEAP32[i5 >> 2] | 0) | 0;
        i5 = HEAP32[i5 >> 2] | 0;
        i1 = __ZN6cashew3RefixEj(i49, 2) | 0;
        i1 = __ZN6cashew5Value10getIStringEv(HEAP32[i1 >> 2] | 0) | 0;
        if ((i5 | 0) != (HEAP32[10178] | 0)) {
         i1 = i16;
         i2 = i17;
         i3 = i18;
         i4 = i19;
         i5 = i13;
         break;
        }
        i1 = HEAP32[i1 >> 2] | 0;
        if ((i1 | 0) == (HEAP32[10184] | 0)) {
         i1 = i16;
         i2 = i17;
         i3 = i18;
         i4 = i12;
         i5 = i13;
         break;
        }
        if ((i1 | 0) == (HEAP32[10185] | 0)) {
         i1 = i16;
         i2 = i12;
         i3 = i18;
         i4 = i19;
         i5 = i13;
         break;
        }
        if ((i1 | 0) == (HEAP32[10186] | 0)) {
         i1 = i16;
         i2 = i17;
         i3 = i12;
         i4 = i19;
         i5 = i13;
         break;
        }
        if ((i1 | 0) == (HEAP32[10187] | 0)) {
         i1 = i16;
         i2 = i17;
         i3 = i18;
         i4 = i19;
         i5 = i13;
         i7 = i12;
         break;
        }
        if ((i1 | 0) == (HEAP32[10188] | 0)) {
         i1 = i16;
         i2 = i17;
         i3 = i18;
         i4 = i19;
         i5 = i12;
         break;
        }
        if ((i1 | 0) == (HEAP32[10189] | 0)) {
         i1 = i16;
         i2 = i17;
         i3 = i18;
         i4 = i19;
         i5 = i13;
         i6 = i12;
         break;
        }
        if ((i1 | 0) == (HEAP32[10190] | 0)) {
         i9 = i12;
         i1 = i16;
         i2 = i17;
         i3 = i18;
         i4 = i19;
         i5 = i13;
         break;
        }
        i1 = (i1 | 0) == (HEAP32[10191] | 0) ? i12 : i16;
        i2 = i17;
        i3 = i18;
        i4 = i19;
        i5 = i13;
       } else {
        i1 = i16;
        i2 = i17;
        i3 = i18;
        i4 = i19;
        i5 = i13;
       } while (0);
       HEAP32[i32 >> 2] = i12;
       HEAP32[i33 >> 2] = HEAP32[i49 >> 2];
       HEAP32[i57 >> 2] = HEAP32[i32 >> 2];
       HEAP32[i64 >> 2] = HEAP32[i33 >> 2];
       __ZZN4wasm15Asm2WasmBuilder10processAsmEN6cashew3RefEENK3__0clENS1_7IStringES2_NS_8WasmTypeE(i45, i57, i64, 0);
       i12 = i14;
       break;
      }
      if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i49, 0) | 0, 41348) | 0)) {
       if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i49, 0) | 0, 41352) | 0)) {
        i10 = 88;
        break L13;
       }
       i5 = HEAP32[i69 >> 2] | 0;
       i5 = (HEAP32[i5 + 100 >> 2] | 0) - (HEAP32[i5 + 96 >> 2] | 0) >> 2;
       i1 = __ZNSt3__13mapIN6cashew7IStringEiNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_iEEEEEixERS7_(i63, i48) | 0;
       HEAP32[i1 >> 2] = i5;
       i1 = __ZN6cashew3RefixEj(i49, 1) | 0;
       i1 = HEAP32[i1 >> 2] | 0;
       HEAP32[i64 >> 2] = i1;
       i5 = 0;
       while (1) {
        if (i5 >>> 0 >= (__ZN6cashew5Value4sizeEv(i1) | 0) >>> 0) break;
        i1 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i64, i5) | 0, 1) | 0;
        i1 = __ZN6cashew5Value10getIStringEv(HEAP32[i1 >> 2] | 0) | 0;
        i1 = HEAP32[i1 >> 2] | 0;
        i2 = HEAP32[i69 >> 2] | 0;
        HEAP32[i36 >> 2] = i1;
        i3 = i2 + 100 | 0;
        i4 = HEAP32[i3 >> 2] | 0;
        if (i4 >>> 0 < (HEAP32[i2 + 104 >> 2] | 0) >>> 0) {
         HEAP32[i4 >> 2] = i1;
         HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 4;
        } else __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i2 + 96 | 0, i36);
        i1 = HEAP32[i64 >> 2] | 0;
        i5 = i5 + 1 | 0;
       }
       i1 = i16;
       i2 = i17;
       i3 = i18;
       i4 = i19;
       i5 = i13;
       i12 = i14;
       break;
      }
      i14 = __ZN6cashew3RefixEj(i49, 1) | 0;
      HEAP32[i49 >> 2] = HEAP32[i14 >> 2];
      if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i49, 0) | 0, 40884) | 0)) {
       i10 = 55;
       break L13;
      }
      i14 = __ZN6cashew3RefixEj(i49, 1) | 0;
      HEAP32[i57 >> 2] = HEAP32[i14 >> 2];
      do if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i57, 0) | 0, 41340) | 0) {
       i2 = __ZN6cashew3RefixEj(i57, 2) | 0;
       i2 = __ZN6cashew5Value10getIStringEv(HEAP32[i2 >> 2] | 0) | 0;
       i2 = HEAP32[i2 >> 2] | 0;
       i1 = i2;
       if ((i1 | 0) == (HEAP32[10184] | 0)) {
        i8 = 0;
        i10 = 1;
        i11 = 1;
        i12 = 1;
        break;
       }
       if ((i1 | 0) == (HEAP32[10185] | 0)) {
        i8 = 0;
        i10 = 2;
        i11 = 1;
        i12 = 1;
        break;
       }
       if ((i1 | 0) == (HEAP32[10186] | 0)) {
        i8 = 0;
        i10 = 4;
        i11 = 1;
        i12 = 1;
        break;
       }
       if ((i1 | 0) == (HEAP32[10187] | 0)) {
        i8 = 0;
        i10 = 1;
        i11 = 1;
        i12 = 0;
        break;
       }
       if ((i1 | 0) == (HEAP32[10188] | 0)) {
        i8 = 0;
        i10 = 2;
        i11 = 1;
        i12 = 0;
        break;
       }
       if ((i1 | 0) == (HEAP32[10189] | 0)) {
        i8 = 0;
        i10 = 4;
        i11 = 1;
        i12 = 0;
        break;
       }
       if ((i1 | 0) == (HEAP32[10190] | 0)) {
        i8 = 2;
        i10 = 4;
        i11 = 0;
        i12 = 1;
        break;
       }
       if ((i1 | 0) == (HEAP32[10191] | 0)) {
        i8 = 1;
        i10 = 8;
        i11 = 0;
        i12 = 1;
       } else {
        i10 = 65;
        break L13;
       }
      } else {
       if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i57, 0) | 0, 41056) | 0)) {
        i10 = 67;
        break L13;
       }
       i2 = __ZN6cashew3RefixEj(i57, 1) | 0;
       i2 = __ZN6cashew5Value10getIStringEv(HEAP32[i2 >> 2] | 0) | 0;
       i2 = HEAP32[i2 >> 2] | 0;
       i1 = i2;
       if ((i1 | 0) == (i19 | 0)) {
        i8 = 0;
        i10 = 1;
        i11 = 1;
        i12 = 1;
        break;
       }
       if ((i1 | 0) == (i17 | 0)) {
        i8 = 0;
        i10 = 2;
        i11 = 1;
        i12 = 1;
        break;
       }
       if ((i1 | 0) == (i18 | 0)) {
        i8 = 0;
        i10 = 4;
        i11 = 1;
        i12 = 1;
        break;
       }
       if ((i1 | 0) == (i7 | 0)) {
        i8 = 0;
        i10 = 1;
        i11 = 1;
        i12 = 0;
        break;
       }
       if ((i1 | 0) == (i13 | 0)) {
        i8 = 0;
        i10 = 2;
        i11 = 1;
        i12 = 0;
        break;
       }
       if ((i1 | 0) == (i6 | 0)) {
        i8 = 0;
        i10 = 4;
        i11 = 1;
        i12 = 0;
        break;
       }
       if ((i1 | 0) == (i9 | 0)) {
        i8 = 2;
        i10 = 4;
        i11 = 0;
        i12 = 1;
        break;
       }
       if ((i1 | 0) == (i16 | 0)) {
        i8 = 1;
        i10 = 8;
        i11 = 0;
        i12 = 1;
       } else {
        i10 = 76;
        break L13;
       }
      } while (0);
      if ((__ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(i21, i48) | 0) != (i22 | 0)) {
       i10 = 78;
       break L13;
      }
      HEAP32[i35 >> 2] = i10;
      HEAP8[i23 >> 0] = i11 & 1;
      HEAP8[i24 >> 0] = i12 & 1;
      HEAP32[i25 >> 2] = i8;
      __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE7emplaceIJRS2_S5_EEENS9_INS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeIS2_S5_EEPNS_11__tree_nodeISJ_PvEEiEEEEbEEDpOT_(i64, i21, i48, i35);
      i1 = i16;
      i2 = i17;
      i3 = i18;
      i4 = i19;
      i5 = i13;
     } while (0);
     i16 = i1;
     i17 = i2;
     i18 = i3;
     i19 = i4;
     i13 = i5;
     i15 = i15 + 1 | 0;
     i14 = i12;
    }
   } while (0);
   i13 = i2;
   i26 = i26 + 1 | 0;
   i14 = i1;
  }
  switch (i10 | 0) {
  case 12:
   {
    HEAP32[i67 >> 2] = 0;
    i4 = i67 + 4 | 0;
    HEAP32[i4 >> 2] = 0;
    HEAP32[i67 + 8 >> 2] = 0;
    i9 = HEAP32[i69 >> 2] | 0;
    i5 = i9 + 64 | 0;
    i6 = i69 + 100 | 0;
    i7 = i69 + 104 | 0;
    i8 = i67 + 8 | 0;
    i9 = HEAP32[i9 + 60 >> 2] | 0;
    while (1) {
     if ((i9 | 0) == (i5 | 0)) break;
     i2 = HEAP32[i9 + 16 >> 2] | 0;
     HEAP32[i61 >> 2] = i2;
     i3 = HEAP32[i9 + 20 >> 2] | 0;
     do if ((__ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i6, i61) | 0) == (i7 | 0)) {
      if ((HEAP32[i3 + 4 >> 2] | 0) != (HEAP32[10197] | 0)) {
       i1 = HEAP32[i4 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i8 >> 2] | 0)) {
        __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i67, i61);
        break;
       } else {
        HEAP32[i1 >> 2] = i2;
        HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 4;
        break;
       }
      }
     } else {
      HEAP32[i58 >> 2] = HEAP32[i3 + 4 >> 2];
      HEAP32[i59 >> 2] = HEAP32[i3 + 8 >> 2];
      HEAP32[i57 >> 2] = HEAP32[i58 >> 2];
      HEAP32[i64 >> 2] = HEAP32[i59 >> 2];
      i1 = __ZN4wasm15Asm2WasmBuilder22getBuiltinFunctionTypeENS_4NameES1_PNSt3__16vectorIPNS_10ExpressionENS2_9allocatorIS5_EEEE(i69, i57, i64, 0) | 0;
      if (!i1) {
       __ZN4wasm6getSigEPNS_12FunctionTypeE(i60, __ZNSt3__13mapIN6cashew7IStringEN4wasm12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i61) | 0);
       i56 = __ZN4wasm18ensureFunctionTypeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_6ModuleER10MixedArena(i60, HEAP32[i69 >> 2] | 0, HEAP32[i66 >> 2] | 0) | 0;
       HEAP32[i3 + 12 >> 2] = i56;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i60);
       break;
      } else {
       HEAP32[i3 + 12 >> 2] = i1;
       break;
      }
     } while (0);
     i9 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(i9) | 0;
    }
    i1 = HEAP32[i4 >> 2] | 0;
    i2 = HEAP32[i67 >> 2] | 0;
    while (1) {
     if ((i2 | 0) == (i1 | 0)) break;
     i61 = HEAP32[i69 >> 2] | 0;
     HEAP32[i62 >> 2] = HEAP32[i2 >> 2];
     HEAP32[i64 >> 2] = HEAP32[i62 >> 2];
     __ZN4wasm6Module12removeImportENS_4NameE(i61, i64);
     i2 = i2 + 4 | 0;
    }
    i1 = i69 + 32 | 0;
    i2 = i69 + 20 | 0;
    i4 = HEAP32[i69 + 28 >> 2] | 0;
    while (1) {
     if ((i4 | 0) == (i1 | 0)) break;
     i3 = HEAP32[i4 + 16 >> 2] | 0;
     HEAP32[i64 >> 2] = HEAP32[i4 + 20 >> 2];
     if ((__ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE4findIS3_EENS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEiEERKT_(i63, i64) | 0) == (i2 | 0)) {
      i10 = 117;
      break;
     }
     i61 = __ZN10MixedArena5allocIN4wasm6BinaryEEEPT_v(HEAP32[i66 >> 2] | 0) | 0;
     HEAP32[i61 + 8 >> 2] = 0;
     i62 = i3 + 24 | 0;
     HEAP32[i61 + 12 >> 2] = HEAP32[i62 >> 2];
     i60 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i66 >> 2] | 0) | 0;
     i59 = __ZNSt3__13mapIN6cashew7IStringEiNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_iEEEEEixERS7_(i63, i64) | 0;
     i59 = HEAP32[i59 >> 2] | 0;
     HEAP32[i60 + 8 >> 2] = 1;
     HEAP32[i60 + 16 >> 2] = i59;
     HEAP32[i60 + 4 >> 2] = 1;
     HEAP32[i61 + 16 >> 2] = i60;
     HEAP32[i61 + 4 >> 2] = 1;
     HEAP32[i62 >> 2] = i61;
     i4 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(i4) | 0;
    }
    if ((i10 | 0) == 117) ___assert_fail(14104, 13478, 678, 13493);
    if (HEAP8[i69 + 40 >> 0] | 0) {
     i5 = __ZN10MixedArena5allocIN4wasm8FunctionEEEPT_v(HEAP32[i66 >> 2] | 0) | 0;
     HEAP32[i5 >> 2] = HEAP32[10207];
     HEAP32[i65 >> 2] = 1;
     i1 = i5 + 12 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     if (i2 >>> 0 < (HEAP32[i5 + 16 >> 2] | 0) >>> 0) {
      HEAP32[i2 >> 2] = HEAP32[10208];
      HEAP32[i2 + 4 >> 2] = 1;
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 8;
     } else __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN6cashew7IStringENS1_8WasmTypeEEEEvDpOT_(i5 + 8 | 0, 40832, i65);
     i1 = __ZN10MixedArena5allocIN4wasm8GetLocalEEEPT_v(HEAP32[i66 >> 2] | 0) | 0;
     HEAP32[i1 + 8 >> 2] = HEAP32[10208];
     i2 = __ZN10MixedArena5allocIN4wasm4HostEEEPT_v(HEAP32[i66 >> 2] | 0) | 0;
     HEAP32[i2 + 8 >> 2] = 2;
     HEAP32[i68 >> 2] = i1;
     i3 = i2 + 20 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[i4 >> 2] = i1;
      HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 4;
     } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i2 + 16 | 0, i68);
     HEAP32[i5 + 36 >> 2] = i2;
     __ZN4wasm6Module11addFunctionEPNS_8FunctionE(HEAP32[i69 >> 2] | 0, i5);
     i68 = __ZN10MixedArena5allocIN4wasm6ExportEEEPT_v(HEAP32[i66 >> 2] | 0) | 0;
     i66 = HEAP32[10207] | 0;
     HEAP32[i68 + 4 >> 2] = i66;
     HEAP32[i68 >> 2] = i66;
     __ZN4wasm6Module9addExportEPNS_6ExportE(HEAP32[i69 >> 2] | 0, i68);
    }
    __ZNSt3__113__vector_baseIN6cashew7IStringENS_9allocatorIS2_EEED2Ev(i67);
    STACKTOP = i70;
    return;
   }
  case 17:
   {
    ___assert_fail(13696, 13478, 510, 13493);
    break;
   }
  case 23:
   {
    ___assert_fail(13723, 13478, 514, 13493);
    break;
   }
  case 27:
   {
    ___assert_fail(13793, 13478, 519, 13493);
    break;
   }
  case 30:
   {
    ___assert_fail(13810, 13478, 523, 13493);
    break;
   }
  case 39:
   {
    ___assert_fail(13838, 13478, 530, 13493);
    break;
   }
  case 55:
   {
    ___assert_fail(13949, 13478, 562, 13493);
    break;
   }
  case 65:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i50, 13966, 19);
    HEAP32[i51 >> 2] = i2;
    HEAP32[i64 >> 2] = HEAP32[i51 >> 2];
    __ZN4wasmL8abort_onENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN6cashew7IStringE(i50, i64);
    break;
   }
  case 67:
   {
    ___assert_fail(13986, 13478, 589, 13493);
    break;
   }
  case 76:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i52, 14009, 25);
    HEAP32[i53 >> 2] = i2;
    HEAP32[i64 >> 2] = HEAP32[i53 >> 2];
    __ZN4wasmL8abort_onENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN6cashew7IStringE(i52, i64);
    break;
   }
  case 78:
   {
    ___assert_fail(14035, 13478, 611, 13493);
    break;
   }
  case 88:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i54, 14067, 19);
    HEAP32[i55 >> 2] = HEAP32[i56 >> 2];
    HEAP32[i64 >> 2] = HEAP32[i55 >> 2];
    __ZN4wasmL8abort_onENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN6cashew3RefE(i54, i64);
    break;
   }
  case 97:
   {
    ___assert_fail(14087, 13478, 639, 13493);
    break;
   }
  }
 } while (0);
 ___assert_fail(13539, 13478, 432, 13493);
}

function _printf_core(i50, i3, i51, i52, i53) {
 i50 = i50 | 0;
 i3 = i3 | 0;
 i51 = i51 | 0;
 i52 = i52 | 0;
 i53 = i53 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, d13 = 0.0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i54 = 0;
 i54 = STACKTOP;
 STACKTOP = STACKTOP + 624 | 0;
 i45 = i54 + 24 | 0;
 i47 = i54 + 16 | 0;
 i46 = i54 + 588 | 0;
 i42 = i54 + 576 | 0;
 i44 = i54;
 i37 = i54 + 536 | 0;
 i49 = i54 + 8 | 0;
 i48 = i54 + 528 | 0;
 i27 = (i50 | 0) != 0;
 i28 = i37 + 40 | 0;
 i36 = i28;
 i37 = i37 + 39 | 0;
 i38 = i49 + 4 | 0;
 i39 = i46;
 i40 = 0 - i39 | 0;
 i41 = i42 + 12 | 0;
 i42 = i42 + 11 | 0;
 i43 = i41;
 i29 = i43 - i39 | 0;
 i30 = -2 - i39 | 0;
 i31 = i43 + 2 | 0;
 i32 = i45 + 288 | 0;
 i33 = i46 + 9 | 0;
 i34 = i33;
 i35 = i46 + 8 | 0;
 i1 = 0;
 i4 = 0;
 i2 = 0;
 i14 = i3;
 L1 : while (1) {
  do if ((i1 | 0) > -1) if ((i4 | 0) > (2147483647 - i1 | 0)) {
   i1 = ___errno_location() | 0;
   HEAP32[i1 >> 2] = 75;
   i1 = -1;
   break;
  } else {
   i1 = i4 + i1 | 0;
   break;
  } while (0);
  i3 = HEAP8[i14 >> 0] | 0;
  if (!(i3 << 24 >> 24)) {
   i26 = 244;
   break;
  } else i4 = i14;
  L9 : while (1) {
   switch (i3 << 24 >> 24) {
   case 37:
    {
     i3 = i4;
     i26 = 9;
     break L9;
    }
   case 0:
    {
     i3 = i4;
     break L9;
    }
   default:
    {}
   }
   i25 = i4 + 1 | 0;
   i3 = HEAP8[i25 >> 0] | 0;
   i4 = i25;
  }
  L12 : do if ((i26 | 0) == 9) while (1) {
   i26 = 0;
   if ((HEAP8[i3 + 1 >> 0] | 0) != 37) break L12;
   i4 = i4 + 1 | 0;
   i3 = i3 + 2 | 0;
   if ((HEAP8[i3 >> 0] | 0) == 37) i26 = 9; else break;
  } while (0);
  i12 = i4 - i14 | 0;
  if (i27 ? (HEAP32[i50 >> 2] & 32 | 0) == 0 : 0) ___fwritex(i14, i12, i50) | 0;
  if ((i4 | 0) != (i14 | 0)) {
   i4 = i12;
   i14 = i3;
   continue;
  }
  i7 = i3 + 1 | 0;
  i4 = HEAP8[i7 >> 0] | 0;
  i5 = (i4 << 24 >> 24) + -48 | 0;
  if (i5 >>> 0 < 10) {
   i25 = (HEAP8[i3 + 2 >> 0] | 0) == 36;
   i7 = i25 ? i3 + 3 | 0 : i7;
   i4 = HEAP8[i7 >> 0] | 0;
   i10 = i25 ? i5 : -1;
   i2 = i25 ? 1 : i2;
  } else i10 = -1;
  i3 = i4 << 24 >> 24;
  L25 : do if ((i3 & -32 | 0) == 32) {
   i5 = 0;
   while (1) {
    if (!(1 << i3 + -32 & 75913)) {
     i8 = i5;
     break L25;
    }
    i5 = 1 << (i4 << 24 >> 24) + -32 | i5;
    i7 = i7 + 1 | 0;
    i4 = HEAP8[i7 >> 0] | 0;
    i3 = i4 << 24 >> 24;
    if ((i3 & -32 | 0) != 32) {
     i8 = i5;
     break;
    }
   }
  } else i8 = 0; while (0);
  do if (i4 << 24 >> 24 == 42) {
   i4 = i7 + 1 | 0;
   i3 = (HEAP8[i4 >> 0] | 0) + -48 | 0;
   if (i3 >>> 0 < 10 ? (HEAP8[i7 + 2 >> 0] | 0) == 36 : 0) {
    HEAP32[i53 + (i3 << 2) >> 2] = 10;
    i2 = 1;
    i7 = i7 + 3 | 0;
    i3 = HEAP32[i52 + ((HEAP8[i4 >> 0] | 0) + -48 << 3) >> 2] | 0;
   } else {
    if (i2 | 0) {
     i1 = -1;
     break L1;
    }
    if (!i27) {
     i11 = i8;
     i2 = 0;
     i7 = i4;
     i25 = 0;
     break;
    }
    i2 = (HEAP32[i51 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i3 = HEAP32[i2 >> 2] | 0;
    HEAP32[i51 >> 2] = i2 + 4;
    i2 = 0;
    i7 = i4;
   }
   if ((i3 | 0) < 0) {
    i11 = i8 | 8192;
    i25 = 0 - i3 | 0;
   } else {
    i11 = i8;
    i25 = i3;
   }
  } else {
   i5 = (i4 << 24 >> 24) + -48 | 0;
   if (i5 >>> 0 < 10) {
    i3 = i7;
    i4 = 0;
    do {
     i4 = (i4 * 10 | 0) + i5 | 0;
     i3 = i3 + 1 | 0;
     i5 = (HEAP8[i3 >> 0] | 0) + -48 | 0;
    } while (i5 >>> 0 < 10);
    if ((i4 | 0) < 0) {
     i1 = -1;
     break L1;
    } else {
     i11 = i8;
     i7 = i3;
     i25 = i4;
    }
   } else {
    i11 = i8;
    i25 = 0;
   }
  } while (0);
  L46 : do if ((HEAP8[i7 >> 0] | 0) == 46) {
   i3 = i7 + 1 | 0;
   i4 = HEAP8[i3 >> 0] | 0;
   if (i4 << 24 >> 24 != 42) {
    i5 = (i4 << 24 >> 24) + -48 | 0;
    if (i5 >>> 0 < 10) i4 = 0; else {
     i8 = 0;
     break;
    }
    while (1) {
     i4 = (i4 * 10 | 0) + i5 | 0;
     i3 = i3 + 1 | 0;
     i5 = (HEAP8[i3 >> 0] | 0) + -48 | 0;
     if (i5 >>> 0 >= 10) {
      i8 = i4;
      break L46;
     }
    }
   }
   i3 = i7 + 2 | 0;
   i4 = (HEAP8[i3 >> 0] | 0) + -48 | 0;
   if (i4 >>> 0 < 10 ? (HEAP8[i7 + 3 >> 0] | 0) == 36 : 0) {
    HEAP32[i53 + (i4 << 2) >> 2] = 10;
    i8 = HEAP32[i52 + ((HEAP8[i3 >> 0] | 0) + -48 << 3) >> 2] | 0;
    i3 = i7 + 4 | 0;
    break;
   }
   if (i2 | 0) {
    i1 = -1;
    break L1;
   }
   if (i27) {
    i24 = (HEAP32[i51 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i8 = HEAP32[i24 >> 2] | 0;
    HEAP32[i51 >> 2] = i24 + 4;
   } else i8 = 0;
  } else {
   i8 = -1;
   i3 = i7;
  } while (0);
  i9 = 0;
  while (1) {
   i4 = (HEAP8[i3 >> 0] | 0) + -65 | 0;
   if (i4 >>> 0 > 57) {
    i1 = -1;
    break L1;
   }
   i5 = i3 + 1 | 0;
   i4 = HEAP8[31927 + (i9 * 58 | 0) + i4 >> 0] | 0;
   i7 = i4 & 255;
   if ((i7 + -1 | 0) >>> 0 < 8) {
    i3 = i5;
    i9 = i7;
   } else {
    i24 = i5;
    break;
   }
  }
  if (!(i4 << 24 >> 24)) {
   i1 = -1;
   break;
  }
  i5 = (i10 | 0) > -1;
  do if (i4 << 24 >> 24 == 19) if (i5) {
   i1 = -1;
   break L1;
  } else i26 = 52; else {
   if (i5) {
    HEAP32[i53 + (i10 << 2) >> 2] = i7;
    i22 = i52 + (i10 << 3) | 0;
    i23 = HEAP32[i22 + 4 >> 2] | 0;
    i26 = i44;
    HEAP32[i26 >> 2] = HEAP32[i22 >> 2];
    HEAP32[i26 + 4 >> 2] = i23;
    i26 = 52;
    break;
   }
   if (!i27) {
    i1 = 0;
    break L1;
   }
   _pop_arg_529(i44, i7, i51);
  } while (0);
  if ((i26 | 0) == 52 ? (i26 = 0, !i27) : 0) {
   i4 = i12;
   i14 = i24;
   continue;
  }
  i10 = HEAP8[i3 >> 0] | 0;
  i10 = (i9 | 0) != 0 & (i10 & 15 | 0) == 3 ? i10 & -33 : i10;
  i5 = i11 & -65537;
  i23 = (i11 & 8192 | 0) == 0 ? i11 : i5;
  L75 : do switch (i10 | 0) {
  case 110:
   switch (i9 | 0) {
   case 0:
    {
     HEAP32[HEAP32[i44 >> 2] >> 2] = i1;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 1:
    {
     HEAP32[HEAP32[i44 >> 2] >> 2] = i1;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 2:
    {
     i4 = HEAP32[i44 >> 2] | 0;
     HEAP32[i4 >> 2] = i1;
     HEAP32[i4 + 4 >> 2] = ((i1 | 0) < 0) << 31 >> 31;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 3:
    {
     HEAP16[HEAP32[i44 >> 2] >> 1] = i1;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 4:
    {
     HEAP8[HEAP32[i44 >> 2] >> 0] = i1;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 6:
    {
     HEAP32[HEAP32[i44 >> 2] >> 2] = i1;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   case 7:
    {
     i4 = HEAP32[i44 >> 2] | 0;
     HEAP32[i4 >> 2] = i1;
     HEAP32[i4 + 4 >> 2] = ((i1 | 0) < 0) << 31 >> 31;
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   default:
    {
     i4 = i12;
     i14 = i24;
     continue L1;
    }
   }
  case 112:
   {
    i9 = i23 | 8;
    i8 = i8 >>> 0 > 8 ? i8 : 8;
    i10 = 120;
    i26 = 64;
    break;
   }
  case 88:
  case 120:
   {
    i9 = i23;
    i26 = 64;
    break;
   }
  case 111:
   {
    i5 = i44;
    i4 = HEAP32[i5 >> 2] | 0;
    i5 = HEAP32[i5 + 4 >> 2] | 0;
    if ((i4 | 0) == 0 & (i5 | 0) == 0) i3 = i28; else {
     i3 = i28;
     do {
      i3 = i3 + -1 | 0;
      HEAP8[i3 >> 0] = i4 & 7 | 48;
      i4 = _bitshift64Lshr(i4 | 0, i5 | 0, 3) | 0;
      i5 = tempRet0;
     } while (!((i4 | 0) == 0 & (i5 | 0) == 0));
    }
    if (!(i23 & 8)) {
     i4 = i23;
     i9 = 0;
     i7 = 32407;
     i26 = 77;
    } else {
     i9 = i36 - i3 | 0;
     i4 = i23;
     i8 = (i8 | 0) > (i9 | 0) ? i8 : i9 + 1 | 0;
     i9 = 0;
     i7 = 32407;
     i26 = 77;
    }
    break;
   }
  case 105:
  case 100:
   {
    i4 = i44;
    i3 = HEAP32[i4 >> 2] | 0;
    i4 = HEAP32[i4 + 4 >> 2] | 0;
    if ((i4 | 0) < 0) {
     i3 = _i64Subtract(0, 0, i3 | 0, i4 | 0) | 0;
     i4 = tempRet0;
     i5 = i44;
     HEAP32[i5 >> 2] = i3;
     HEAP32[i5 + 4 >> 2] = i4;
     i5 = 1;
     i7 = 32407;
     i26 = 76;
     break L75;
    }
    if (!(i23 & 2048)) {
     i7 = i23 & 1;
     i5 = i7;
     i7 = (i7 | 0) == 0 ? 32407 : 32409;
     i26 = 76;
    } else {
     i5 = 1;
     i7 = 32408;
     i26 = 76;
    }
    break;
   }
  case 117:
   {
    i4 = i44;
    i3 = HEAP32[i4 >> 2] | 0;
    i4 = HEAP32[i4 + 4 >> 2] | 0;
    i5 = 0;
    i7 = 32407;
    i26 = 76;
    break;
   }
  case 99:
   {
    HEAP8[i37 >> 0] = HEAP32[i44 >> 2];
    i3 = i37;
    i10 = 1;
    i12 = 0;
    i11 = 32407;
    i4 = i28;
    break;
   }
  case 109:
   {
    i4 = ___errno_location() | 0;
    i4 = _strerror(HEAP32[i4 >> 2] | 0) | 0;
    i26 = 82;
    break;
   }
  case 115:
   {
    i4 = HEAP32[i44 >> 2] | 0;
    i4 = i4 | 0 ? i4 : 34309;
    i26 = 82;
    break;
   }
  case 67:
   {
    HEAP32[i49 >> 2] = HEAP32[i44 >> 2];
    HEAP32[i38 >> 2] = 0;
    HEAP32[i44 >> 2] = i49;
    i3 = i49;
    i8 = -1;
    i26 = 86;
    break;
   }
  case 83:
   {
    i3 = HEAP32[i44 >> 2] | 0;
    if (!i8) {
     _pad(i50, 32, i25, 0, i23);
     i3 = 0;
     i26 = 97;
    } else i26 = 86;
    break;
   }
  case 65:
  case 71:
  case 70:
  case 69:
  case 97:
  case 103:
  case 102:
  case 101:
   {
    d6 = +HEAPF64[i44 >> 3];
    HEAP32[i47 >> 2] = 0;
    HEAPF64[tempDoublePtr >> 3] = d6;
    if ((HEAP32[tempDoublePtr + 4 >> 2] | 0) >= 0) if (!(i23 & 2048)) {
     i22 = i23 & 1;
     i21 = i22;
     i22 = (i22 | 0) == 0 ? 34317 : 34322;
    } else {
     i21 = 1;
     i22 = 34319;
    } else {
     d6 = -d6;
     i21 = 1;
     i22 = 34316;
    }
    HEAPF64[tempDoublePtr >> 3] = d6;
    i20 = HEAP32[tempDoublePtr + 4 >> 2] & 2146435072;
    do if (i20 >>> 0 < 2146435072 | (i20 | 0) == 2146435072 & 0 < 0) {
     d13 = +_frexpl(d6, i47) * 2.0;
     i4 = d13 != 0.0;
     if (i4) HEAP32[i47 >> 2] = (HEAP32[i47 >> 2] | 0) + -1;
     i18 = i10 | 32;
     if ((i18 | 0) == 97) {
      i11 = i10 & 32;
      i14 = (i11 | 0) == 0 ? i22 : i22 + 9 | 0;
      i12 = i21 | 2;
      i3 = 12 - i8 | 0;
      do if (!(i8 >>> 0 > 11 | (i3 | 0) == 0)) {
       d6 = 8.0;
       do {
        i3 = i3 + -1 | 0;
        d6 = d6 * 16.0;
       } while ((i3 | 0) != 0);
       if ((HEAP8[i14 >> 0] | 0) == 45) {
        d6 = -(d6 + (-d13 - d6));
        break;
       } else {
        d6 = d13 + d6 - d6;
        break;
       }
      } else d6 = d13; while (0);
      i4 = HEAP32[i47 >> 2] | 0;
      i3 = (i4 | 0) < 0 ? 0 - i4 | 0 : i4;
      i3 = _fmt_u(i3, ((i3 | 0) < 0) << 31 >> 31, i41) | 0;
      if ((i3 | 0) == (i41 | 0)) {
       HEAP8[i42 >> 0] = 48;
       i3 = i42;
      }
      HEAP8[i3 + -1 >> 0] = (i4 >> 31 & 2) + 43;
      i9 = i3 + -2 | 0;
      HEAP8[i9 >> 0] = i10 + 15;
      i7 = (i8 | 0) < 1;
      i5 = (i23 & 8 | 0) == 0;
      i4 = i46;
      while (1) {
       i22 = ~~d6;
       i3 = i4 + 1 | 0;
       HEAP8[i4 >> 0] = HEAPU8[32391 + i22 >> 0] | i11;
       d6 = (d6 - +(i22 | 0)) * 16.0;
       do if ((i3 - i39 | 0) == 1) {
        if (i5 & (i7 & d6 == 0.0)) break;
        HEAP8[i3 >> 0] = 46;
        i3 = i4 + 2 | 0;
       } while (0);
       if (!(d6 != 0.0)) break; else i4 = i3;
      }
      i5 = i9;
      i8 = (i8 | 0) != 0 & (i30 + i3 | 0) < (i8 | 0) ? i31 + i8 - i5 | 0 : i29 - i5 + i3 | 0;
      i7 = i8 + i12 | 0;
      _pad(i50, 32, i25, i7, i23);
      if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i14, i12, i50) | 0;
      _pad(i50, 48, i25, i7, i23 ^ 65536);
      i4 = i3 - i39 | 0;
      if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i46, i4, i50) | 0;
      i3 = i43 - i5 | 0;
      _pad(i50, 48, i8 - (i4 + i3) | 0, 0, 0);
      if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i9, i3, i50) | 0;
      _pad(i50, 32, i25, i7, i23 ^ 8192);
      i3 = (i7 | 0) < (i25 | 0) ? i25 : i7;
      break;
     }
     i3 = (i8 | 0) < 0 ? 6 : i8;
     if (i4) {
      i4 = (HEAP32[i47 >> 2] | 0) + -28 | 0;
      HEAP32[i47 >> 2] = i4;
      d6 = d13 * 268435456.0;
     } else {
      d6 = d13;
      i4 = HEAP32[i47 >> 2] | 0;
     }
     i20 = (i4 | 0) < 0 ? i45 : i32;
     i19 = i20;
     i4 = i20;
     do {
      i17 = ~~d6 >>> 0;
      HEAP32[i4 >> 2] = i17;
      i4 = i4 + 4 | 0;
      d6 = (d6 - +(i17 >>> 0)) * 1.0e9;
     } while (d6 != 0.0);
     i5 = i4;
     i4 = HEAP32[i47 >> 2] | 0;
     if ((i4 | 0) > 0) {
      i8 = i20;
      while (1) {
       i9 = (i4 | 0) > 29 ? 29 : i4;
       i7 = i5 + -4 | 0;
       do if (i7 >>> 0 < i8 >>> 0) i7 = i8; else {
        i4 = 0;
        do {
         i17 = _bitshift64Shl(HEAP32[i7 >> 2] | 0, 0, i9 | 0) | 0;
         i17 = _i64Add(i17 | 0, tempRet0 | 0, i4 | 0, 0) | 0;
         i4 = tempRet0;
         i16 = ___uremdi3(i17 | 0, i4 | 0, 1e9, 0) | 0;
         HEAP32[i7 >> 2] = i16;
         i4 = ___udivdi3(i17 | 0, i4 | 0, 1e9, 0) | 0;
         i7 = i7 + -4 | 0;
        } while (i7 >>> 0 >= i8 >>> 0);
        if (!i4) {
         i7 = i8;
         break;
        }
        i7 = i8 + -4 | 0;
        HEAP32[i7 >> 2] = i4;
       } while (0);
       while (1) {
        if (i5 >>> 0 <= i7 >>> 0) break;
        i4 = i5 + -4 | 0;
        if (!(HEAP32[i4 >> 2] | 0)) i5 = i4; else break;
       }
       i4 = (HEAP32[i47 >> 2] | 0) - i9 | 0;
       HEAP32[i47 >> 2] = i4;
       if ((i4 | 0) > 0) i8 = i7; else break;
      }
     } else i7 = i20;
     if ((i4 | 0) < 0) {
      i14 = ((i3 + 25 | 0) / 9 | 0) + 1 | 0;
      i15 = (i18 | 0) == 102;
      i11 = i7;
      while (1) {
       i12 = 0 - i4 | 0;
       i12 = (i12 | 0) > 9 ? 9 : i12;
       do if (i11 >>> 0 < i5 >>> 0) {
        i4 = (1 << i12) + -1 | 0;
        i8 = 1e9 >>> i12;
        i7 = 0;
        i9 = i11;
        do {
         i17 = HEAP32[i9 >> 2] | 0;
         HEAP32[i9 >> 2] = (i17 >>> i12) + i7;
         i7 = Math_imul(i17 & i4, i8) | 0;
         i9 = i9 + 4 | 0;
        } while (i9 >>> 0 < i5 >>> 0);
        i4 = (HEAP32[i11 >> 2] | 0) == 0 ? i11 + 4 | 0 : i11;
        if (!i7) {
         i7 = i4;
         break;
        }
        HEAP32[i5 >> 2] = i7;
        i7 = i4;
        i5 = i5 + 4 | 0;
       } else i7 = (HEAP32[i11 >> 2] | 0) == 0 ? i11 + 4 | 0 : i11; while (0);
       i4 = i15 ? i20 : i7;
       i5 = (i5 - i4 >> 2 | 0) > (i14 | 0) ? i4 + (i14 << 2) | 0 : i5;
       i4 = (HEAP32[i47 >> 2] | 0) + i12 | 0;
       HEAP32[i47 >> 2] = i4;
       if ((i4 | 0) >= 0) {
        i15 = i7;
        break;
       } else i11 = i7;
      }
     } else i15 = i7;
     do if (i15 >>> 0 < i5 >>> 0) {
      i4 = (i19 - i15 >> 2) * 9 | 0;
      i8 = HEAP32[i15 >> 2] | 0;
      if (i8 >>> 0 < 10) break; else i7 = 10;
      do {
       i7 = i7 * 10 | 0;
       i4 = i4 + 1 | 0;
      } while (i8 >>> 0 >= i7 >>> 0);
     } else i4 = 0; while (0);
     i16 = (i18 | 0) == 103;
     i17 = (i3 | 0) != 0;
     i7 = i3 - ((i18 | 0) != 102 ? i4 : 0) + ((i17 & i16) << 31 >> 31) | 0;
     if ((i7 | 0) < (((i5 - i19 >> 2) * 9 | 0) + -9 | 0)) {
      i9 = i7 + 9216 | 0;
      i7 = i20 + 4 + (((i9 | 0) / 9 | 0) + -1024 << 2) | 0;
      i9 = ((i9 | 0) % 9 | 0) + 1 | 0;
      if ((i9 | 0) < 9) {
       i8 = 10;
       do {
        i8 = i8 * 10 | 0;
        i9 = i9 + 1 | 0;
       } while ((i9 | 0) != 9);
      } else i8 = 10;
      i12 = HEAP32[i7 >> 2] | 0;
      i14 = (i12 >>> 0) % (i8 >>> 0) | 0;
      i9 = (i7 + 4 | 0) == (i5 | 0);
      do if (i9 & (i14 | 0) == 0) i8 = i15; else {
       d13 = (((i12 >>> 0) / (i8 >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
       i11 = (i8 | 0) / 2 | 0;
       if (i14 >>> 0 < i11 >>> 0) d6 = .5; else d6 = i9 & (i14 | 0) == (i11 | 0) ? 1.0 : 1.5;
       do if (i21) {
        if ((HEAP8[i22 >> 0] | 0) != 45) break;
        d13 = -d13;
        d6 = -d6;
       } while (0);
       i9 = i12 - i14 | 0;
       HEAP32[i7 >> 2] = i9;
       if (!(d13 + d6 != d13)) {
        i8 = i15;
        break;
       }
       i18 = i9 + i8 | 0;
       HEAP32[i7 >> 2] = i18;
       if (i18 >>> 0 > 999999999) {
        i4 = i15;
        while (1) {
         i8 = i7 + -4 | 0;
         HEAP32[i7 >> 2] = 0;
         if (i8 >>> 0 < i4 >>> 0) {
          i4 = i4 + -4 | 0;
          HEAP32[i4 >> 2] = 0;
         }
         i18 = (HEAP32[i8 >> 2] | 0) + 1 | 0;
         HEAP32[i8 >> 2] = i18;
         if (i18 >>> 0 > 999999999) i7 = i8; else {
          i11 = i4;
          i7 = i8;
          break;
         }
        }
       } else i11 = i15;
       i4 = (i19 - i11 >> 2) * 9 | 0;
       i9 = HEAP32[i11 >> 2] | 0;
       if (i9 >>> 0 < 10) {
        i8 = i11;
        break;
       } else i8 = 10;
       do {
        i8 = i8 * 10 | 0;
        i4 = i4 + 1 | 0;
       } while (i9 >>> 0 >= i8 >>> 0);
       i8 = i11;
      } while (0);
      i18 = i7 + 4 | 0;
      i15 = i8;
      i5 = i5 >>> 0 > i18 >>> 0 ? i18 : i5;
     }
     i12 = 0 - i4 | 0;
     while (1) {
      if (i5 >>> 0 <= i15 >>> 0) {
       i14 = 0;
       i18 = i5;
       break;
      }
      i7 = i5 + -4 | 0;
      if (!(HEAP32[i7 >> 2] | 0)) i5 = i7; else {
       i14 = 1;
       i18 = i5;
       break;
      }
     }
     do if (i16) {
      i3 = (i17 & 1 ^ 1) + i3 | 0;
      if ((i3 | 0) > (i4 | 0) & (i4 | 0) > -5) {
       i10 = i10 + -1 | 0;
       i3 = i3 + -1 - i4 | 0;
      } else {
       i10 = i10 + -2 | 0;
       i3 = i3 + -1 | 0;
      }
      i5 = i23 & 8;
      if (i5 | 0) break;
      do if (i14) {
       i5 = HEAP32[i18 + -4 >> 2] | 0;
       if (!i5) {
        i7 = 9;
        break;
       }
       if (!((i5 >>> 0) % 10 | 0)) {
        i8 = 10;
        i7 = 0;
       } else {
        i7 = 0;
        break;
       }
       do {
        i8 = i8 * 10 | 0;
        i7 = i7 + 1 | 0;
       } while (!((i5 >>> 0) % (i8 >>> 0) | 0 | 0));
      } else i7 = 9; while (0);
      i5 = ((i18 - i19 >> 2) * 9 | 0) + -9 | 0;
      if ((i10 | 32 | 0) == 102) {
       i5 = i5 - i7 | 0;
       i5 = (i5 | 0) < 0 ? 0 : i5;
       i3 = (i3 | 0) < (i5 | 0) ? i3 : i5;
       i5 = 0;
       break;
      } else {
       i5 = i5 + i4 - i7 | 0;
       i5 = (i5 | 0) < 0 ? 0 : i5;
       i3 = (i3 | 0) < (i5 | 0) ? i3 : i5;
       i5 = 0;
       break;
      }
     } else i5 = i23 & 8; while (0);
     i11 = i3 | i5;
     i8 = (i11 | 0) != 0 & 1;
     i9 = (i10 | 32 | 0) == 102;
     if (i9) {
      i4 = (i4 | 0) > 0 ? i4 : 0;
      i10 = 0;
     } else {
      i7 = (i4 | 0) < 0 ? i12 : i4;
      i7 = _fmt_u(i7, ((i7 | 0) < 0) << 31 >> 31, i41) | 0;
      if ((i43 - i7 | 0) < 2) do {
       i7 = i7 + -1 | 0;
       HEAP8[i7 >> 0] = 48;
      } while ((i43 - i7 | 0) < 2);
      HEAP8[i7 + -1 >> 0] = (i4 >> 31 & 2) + 43;
      i19 = i7 + -2 | 0;
      HEAP8[i19 >> 0] = i10;
      i4 = i43 - i19 | 0;
      i10 = i19;
     }
     i12 = i21 + 1 + i3 + i8 + i4 | 0;
     _pad(i50, 32, i25, i12, i23);
     if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i22, i21, i50) | 0;
     _pad(i50, 48, i25, i12, i23 ^ 65536);
     do if (i9) {
      i7 = i15 >>> 0 > i20 >>> 0 ? i20 : i15;
      i4 = i7;
      do {
       i5 = _fmt_u(HEAP32[i4 >> 2] | 0, 0, i33) | 0;
       do if ((i4 | 0) == (i7 | 0)) {
        if ((i5 | 0) != (i33 | 0)) break;
        HEAP8[i35 >> 0] = 48;
        i5 = i35;
       } else {
        if (i5 >>> 0 <= i46 >>> 0) break;
        _memset(i46 | 0, 48, i5 - i39 | 0) | 0;
        do i5 = i5 + -1 | 0; while (i5 >>> 0 > i46 >>> 0);
       } while (0);
       if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i5, i34 - i5 | 0, i50) | 0;
       i4 = i4 + 4 | 0;
      } while (i4 >>> 0 <= i20 >>> 0);
      do if (i11 | 0) {
       if (HEAP32[i50 >> 2] & 32 | 0) break;
       ___fwritex(39508, 1, i50) | 0;
      } while (0);
      if ((i3 | 0) > 0 & i4 >>> 0 < i18 >>> 0) {
       i5 = i4;
       while (1) {
        i4 = _fmt_u(HEAP32[i5 >> 2] | 0, 0, i33) | 0;
        if (i4 >>> 0 > i46 >>> 0) {
         _memset(i46 | 0, 48, i4 - i39 | 0) | 0;
         do i4 = i4 + -1 | 0; while (i4 >>> 0 > i46 >>> 0);
        }
        if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i4, (i3 | 0) > 9 ? 9 : i3, i50) | 0;
        i5 = i5 + 4 | 0;
        i4 = i3 + -9 | 0;
        if (!((i3 | 0) > 9 & i5 >>> 0 < i18 >>> 0)) {
         i3 = i4;
         break;
        } else i3 = i4;
       }
      }
      _pad(i50, 48, i3 + 9 | 0, 9, 0);
     } else {
      i9 = i14 ? i18 : i15 + 4 | 0;
      if ((i3 | 0) > -1) {
       i8 = (i5 | 0) == 0;
       i7 = i15;
       do {
        i4 = _fmt_u(HEAP32[i7 >> 2] | 0, 0, i33) | 0;
        if ((i4 | 0) == (i33 | 0)) {
         HEAP8[i35 >> 0] = 48;
         i4 = i35;
        }
        do if ((i7 | 0) == (i15 | 0)) {
         i5 = i4 + 1 | 0;
         if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i4, 1, i50) | 0;
         if (i8 & (i3 | 0) < 1) {
          i4 = i5;
          break;
         }
         if (HEAP32[i50 >> 2] & 32 | 0) {
          i4 = i5;
          break;
         }
         ___fwritex(39508, 1, i50) | 0;
         i4 = i5;
        } else {
         if (i4 >>> 0 <= i46 >>> 0) break;
         _memset(i46 | 0, 48, i4 + i40 | 0) | 0;
         do i4 = i4 + -1 | 0; while (i4 >>> 0 > i46 >>> 0);
        } while (0);
        i5 = i34 - i4 | 0;
        if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i4, (i3 | 0) > (i5 | 0) ? i5 : i3, i50) | 0;
        i3 = i3 - i5 | 0;
        i7 = i7 + 4 | 0;
       } while (i7 >>> 0 < i9 >>> 0 & (i3 | 0) > -1);
      }
      _pad(i50, 48, i3 + 18 | 0, 18, 0);
      if (HEAP32[i50 >> 2] & 32 | 0) break;
      ___fwritex(i10, i43 - i10 | 0, i50) | 0;
     } while (0);
     _pad(i50, 32, i25, i12, i23 ^ 8192);
     i3 = (i12 | 0) < (i25 | 0) ? i25 : i12;
    } else {
     i9 = (i10 & 32 | 0) != 0;
     i8 = d6 != d6 | 0.0 != 0.0;
     i4 = i8 ? 0 : i21;
     i7 = i4 + 3 | 0;
     _pad(i50, 32, i25, i7, i5);
     i3 = HEAP32[i50 >> 2] | 0;
     if (!(i3 & 32)) {
      ___fwritex(i22, i4, i50) | 0;
      i3 = HEAP32[i50 >> 2] | 0;
     }
     if (!(i3 & 32)) ___fwritex(i8 ? (i9 ? 34343 : 34347) : i9 ? 34335 : 34339, 3, i50) | 0;
     _pad(i50, 32, i25, i7, i23 ^ 8192);
     i3 = (i7 | 0) < (i25 | 0) ? i25 : i7;
    } while (0);
    i4 = i3;
    i14 = i24;
    continue L1;
   }
  default:
   {
    i3 = i14;
    i5 = i23;
    i10 = i8;
    i12 = 0;
    i11 = 32407;
    i4 = i28;
   }
  } while (0);
  L311 : do if ((i26 | 0) == 64) {
   i5 = i44;
   i4 = HEAP32[i5 >> 2] | 0;
   i5 = HEAP32[i5 + 4 >> 2] | 0;
   i7 = i10 & 32;
   if (!((i4 | 0) == 0 & (i5 | 0) == 0)) {
    i3 = i28;
    do {
     i3 = i3 + -1 | 0;
     HEAP8[i3 >> 0] = HEAPU8[32391 + (i4 & 15) >> 0] | i7;
     i4 = _bitshift64Lshr(i4 | 0, i5 | 0, 4) | 0;
     i5 = tempRet0;
    } while (!((i4 | 0) == 0 & (i5 | 0) == 0));
    i26 = i44;
    if ((i9 & 8 | 0) == 0 | (HEAP32[i26 >> 2] | 0) == 0 & (HEAP32[i26 + 4 >> 2] | 0) == 0) {
     i4 = i9;
     i9 = 0;
     i7 = 32407;
     i26 = 77;
    } else {
     i4 = i9;
     i9 = 2;
     i7 = 32407 + (i10 >> 4) | 0;
     i26 = 77;
    }
   } else {
    i3 = i28;
    i4 = i9;
    i9 = 0;
    i7 = 32407;
    i26 = 77;
   }
  } else if ((i26 | 0) == 76) {
   i3 = _fmt_u(i3, i4, i28) | 0;
   i4 = i23;
   i9 = i5;
   i26 = 77;
  } else if ((i26 | 0) == 82) {
   i26 = 0;
   i23 = _memchr(i4, 0, i8) | 0;
   i22 = (i23 | 0) == 0;
   i3 = i4;
   i10 = i22 ? i8 : i23 - i4 | 0;
   i12 = 0;
   i11 = 32407;
   i4 = i22 ? i4 + i8 | 0 : i23;
  } else if ((i26 | 0) == 86) {
   i26 = 0;
   i5 = 0;
   i4 = 0;
   i9 = i3;
   while (1) {
    i7 = HEAP32[i9 >> 2] | 0;
    if (!i7) break;
    i4 = _wctomb(i48, i7) | 0;
    if ((i4 | 0) < 0 | i4 >>> 0 > (i8 - i5 | 0) >>> 0) break;
    i5 = i4 + i5 | 0;
    if (i8 >>> 0 > i5 >>> 0) i9 = i9 + 4 | 0; else break;
   }
   if ((i4 | 0) < 0) {
    i1 = -1;
    break L1;
   }
   _pad(i50, 32, i25, i5, i23);
   if (!i5) {
    i3 = 0;
    i26 = 97;
   } else {
    i7 = 0;
    while (1) {
     i4 = HEAP32[i3 >> 2] | 0;
     if (!i4) {
      i3 = i5;
      i26 = 97;
      break L311;
     }
     i4 = _wctomb(i48, i4) | 0;
     i7 = i4 + i7 | 0;
     if ((i7 | 0) > (i5 | 0)) {
      i3 = i5;
      i26 = 97;
      break L311;
     }
     if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i48, i4, i50) | 0;
     if (i7 >>> 0 >= i5 >>> 0) {
      i3 = i5;
      i26 = 97;
      break;
     } else i3 = i3 + 4 | 0;
    }
   }
  } while (0);
  if ((i26 | 0) == 97) {
   i26 = 0;
   _pad(i50, 32, i25, i3, i23 ^ 8192);
   i4 = (i25 | 0) > (i3 | 0) ? i25 : i3;
   i14 = i24;
   continue;
  }
  if ((i26 | 0) == 77) {
   i26 = 0;
   i5 = (i8 | 0) > -1 ? i4 & -65537 : i4;
   i4 = i44;
   i4 = (HEAP32[i4 >> 2] | 0) != 0 | (HEAP32[i4 + 4 >> 2] | 0) != 0;
   if ((i8 | 0) != 0 | i4) {
    i10 = (i4 & 1 ^ 1) + (i36 - i3) | 0;
    i10 = (i8 | 0) > (i10 | 0) ? i8 : i10;
    i12 = i9;
    i11 = i7;
    i4 = i28;
   } else {
    i3 = i28;
    i10 = 0;
    i12 = i9;
    i11 = i7;
    i4 = i28;
   }
  }
  i9 = i4 - i3 | 0;
  i7 = (i10 | 0) < (i9 | 0) ? i9 : i10;
  i8 = i12 + i7 | 0;
  i4 = (i25 | 0) < (i8 | 0) ? i8 : i25;
  _pad(i50, 32, i4, i8, i5);
  if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i11, i12, i50) | 0;
  _pad(i50, 48, i4, i8, i5 ^ 65536);
  _pad(i50, 48, i7, i9, 0);
  if (!(HEAP32[i50 >> 2] & 32)) ___fwritex(i3, i9, i50) | 0;
  _pad(i50, 32, i4, i8, i5 ^ 8192);
  i14 = i24;
 }
 L345 : do if ((i26 | 0) == 244) if (!i50) if (i2) {
  i1 = 1;
  while (1) {
   i2 = HEAP32[i53 + (i1 << 2) >> 2] | 0;
   if (!i2) break;
   _pop_arg_529(i52 + (i1 << 3) | 0, i2, i51);
   i1 = i1 + 1 | 0;
   if ((i1 | 0) >= 10) {
    i1 = 1;
    break L345;
   }
  }
  if ((i1 | 0) < 10) while (1) {
   if (HEAP32[i53 + (i1 << 2) >> 2] | 0) {
    i1 = -1;
    break L345;
   }
   i1 = i1 + 1 | 0;
   if ((i1 | 0) >= 10) {
    i1 = 1;
    break;
   }
  } else i1 = 1;
 } else i1 = 0; while (0);
 STACKTOP = i54;
 return i1 | 0;
}

function ___floatscan(i24, i2, i21) {
 i24 = i24 | 0;
 i2 = i2 | 0;
 i21 = i21 | 0;
 var d1 = 0.0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, d11 = 0.0, d12 = 0.0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i23 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, d32 = 0.0;
 i31 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 i27 = i31;
 switch (i2 | 0) {
 case 0:
  {
   i30 = 24;
   i29 = -149;
   i19 = 4;
   break;
  }
 case 1:
  {
   i30 = 53;
   i29 = -1074;
   i19 = 4;
   break;
  }
 case 2:
  {
   i30 = 53;
   i29 = -1074;
   i19 = 4;
   break;
  }
 default:
  d1 = 0.0;
 }
 L4 : do if ((i19 | 0) == 4) {
  i23 = i24 + 4 | 0;
  i22 = i24 + 100 | 0;
  do {
   i2 = HEAP32[i23 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
    HEAP32[i23 >> 2] = i2 + 1;
    i2 = HEAPU8[i2 >> 0] | 0;
   } else i2 = ___shgetc(i24) | 0;
  } while ((_isspace(i2) | 0) != 0);
  L13 : do switch (i2 | 0) {
  case 43:
  case 45:
   {
    i3 = 1 - (((i2 | 0) == 45 & 1) << 1) | 0;
    i2 = HEAP32[i23 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
     HEAP32[i23 >> 2] = i2 + 1;
     i2 = HEAPU8[i2 >> 0] | 0;
     i28 = i3;
     break L13;
    } else {
     i2 = ___shgetc(i24) | 0;
     i28 = i3;
     break L13;
    }
   }
  default:
   i28 = 1;
  } while (0);
  i3 = i2;
  i2 = 0;
  do {
   if ((i3 | 32 | 0) != (HEAP8[31918 + i2 >> 0] | 0)) break;
   do if (i2 >>> 0 < 7) {
    i3 = HEAP32[i23 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
     HEAP32[i23 >> 2] = i3 + 1;
     i3 = HEAPU8[i3 >> 0] | 0;
     break;
    } else {
     i3 = ___shgetc(i24) | 0;
     break;
    }
   } while (0);
   i2 = i2 + 1 | 0;
  } while (i2 >>> 0 < 8);
  L29 : do switch (i2 | 0) {
  case 8:
   break;
  case 3:
   {
    i19 = 23;
    break;
   }
  default:
   {
    i5 = (i21 | 0) != 0;
    if (i5 & i2 >>> 0 > 3) if ((i2 | 0) == 8) break L29; else {
     i19 = 23;
     break L29;
    }
    L34 : do if (!i2) {
     i2 = 0;
     do {
      if ((i3 | 32 | 0) != (HEAP8[34343 + i2 >> 0] | 0)) break L34;
      do if (i2 >>> 0 < 2) {
       i3 = HEAP32[i23 >> 2] | 0;
       if (i3 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i3 + 1;
        i3 = HEAPU8[i3 >> 0] | 0;
        break;
       } else {
        i3 = ___shgetc(i24) | 0;
        break;
       }
      } while (0);
      i2 = i2 + 1 | 0;
     } while (i2 >>> 0 < 3);
    } while (0);
    switch (i2 | 0) {
    case 3:
     {
      i2 = HEAP32[i23 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
       HEAP32[i23 >> 2] = i2 + 1;
       i2 = HEAPU8[i2 >> 0] | 0;
      } else i2 = ___shgetc(i24) | 0;
      if ((i2 | 0) == 40) i2 = 1; else {
       if (!(HEAP32[i22 >> 2] | 0)) {
        d1 = nan;
        break L4;
       }
       HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
       d1 = nan;
       break L4;
      }
      while (1) {
       i3 = HEAP32[i23 >> 2] | 0;
       if (i3 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i3 + 1;
        i3 = HEAPU8[i3 >> 0] | 0;
       } else i3 = ___shgetc(i24) | 0;
       if (!((i3 + -48 | 0) >>> 0 < 10 | (i3 + -65 | 0) >>> 0 < 26) ? !((i3 | 0) == 95 | (i3 + -97 | 0) >>> 0 < 26) : 0) break;
       i2 = i2 + 1 | 0;
      }
      if ((i3 | 0) == 41) {
       d1 = nan;
       break L4;
      }
      i3 = (HEAP32[i22 >> 2] | 0) == 0;
      if (!i3) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
      if (!i5) {
       i30 = ___errno_location() | 0;
       HEAP32[i30 >> 2] = 22;
       ___shlim(i24, 0);
       d1 = 0.0;
       break L4;
      }
      if (!i2) {
       d1 = nan;
       break L4;
      }
      while (1) {
       i2 = i2 + -1 | 0;
       if (!i3) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
       if (!i2) {
        d1 = nan;
        break L4;
       }
      }
     }
    case 0:
     {
      do if ((i3 | 0) == 48) {
       i2 = HEAP32[i23 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
       } else i2 = ___shgetc(i24) | 0;
       if ((i2 | 32 | 0) != 120) {
        if (!(HEAP32[i22 >> 2] | 0)) {
         i2 = 48;
         break;
        }
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
        i2 = 48;
        break;
       }
       i2 = HEAP32[i23 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
        i5 = 0;
       } else {
        i2 = ___shgetc(i24) | 0;
        i5 = 0;
       }
       L94 : while (1) {
        switch (i2 | 0) {
        case 46:
         {
          i19 = 74;
          break L94;
         }
        case 48:
         break;
        default:
         {
          i17 = 0;
          i6 = 0;
          i16 = 0;
          i3 = 0;
          i8 = i5;
          i9 = 0;
          i15 = 0;
          d7 = 1.0;
          i5 = 0;
          d1 = 0.0;
          break L94;
         }
        }
        i2 = HEAP32[i23 >> 2] | 0;
        if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
         HEAP32[i23 >> 2] = i2 + 1;
         i2 = HEAPU8[i2 >> 0] | 0;
         i5 = 1;
         continue;
        } else {
         i2 = ___shgetc(i24) | 0;
         i5 = 1;
         continue;
        }
       }
       if ((i19 | 0) == 74) {
        i2 = HEAP32[i23 >> 2] | 0;
        if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
         HEAP32[i23 >> 2] = i2 + 1;
         i2 = HEAPU8[i2 >> 0] | 0;
        } else i2 = ___shgetc(i24) | 0;
        if ((i2 | 0) == 48) {
         i5 = 0;
         i3 = 0;
         do {
          i2 = HEAP32[i23 >> 2] | 0;
          if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
           HEAP32[i23 >> 2] = i2 + 1;
           i2 = HEAPU8[i2 >> 0] | 0;
          } else i2 = ___shgetc(i24) | 0;
          i5 = _i64Add(i5 | 0, i3 | 0, -1, -1) | 0;
          i3 = tempRet0;
         } while ((i2 | 0) == 48);
         i17 = 0;
         i6 = 0;
         i16 = i5;
         i8 = 1;
         i9 = 1;
         i15 = 0;
         d7 = 1.0;
         i5 = 0;
         d1 = 0.0;
        } else {
         i17 = 0;
         i6 = 0;
         i16 = 0;
         i3 = 0;
         i8 = i5;
         i9 = 1;
         i15 = 0;
         d7 = 1.0;
         i5 = 0;
         d1 = 0.0;
        }
       }
       while (1) {
        i13 = i2 + -48 | 0;
        i10 = i2 | 32;
        if (i13 >>> 0 >= 10) {
         i14 = (i2 | 0) == 46;
         if (!(i14 | (i10 + -97 | 0) >>> 0 < 6)) {
          i10 = i16;
          i13 = i17;
          break;
         }
         if (i14) if (!i9) {
          i14 = i6;
          i3 = i17;
          i13 = i17;
          i9 = 1;
          i10 = i15;
          d4 = d7;
         } else {
          i10 = i16;
          i13 = i17;
          i2 = 46;
          break;
         } else i19 = 86;
        } else i19 = 86;
        if ((i19 | 0) == 86) {
         i19 = 0;
         i2 = (i2 | 0) > 57 ? i10 + -87 | 0 : i13;
         do if (!((i17 | 0) < 0 | (i17 | 0) == 0 & i6 >>> 0 < 8)) {
          if ((i17 | 0) < 0 | (i17 | 0) == 0 & i6 >>> 0 < 14) {
           d12 = d7 * .0625;
           i10 = i15;
           d4 = d12;
           d1 = d1 + d12 * +(i2 | 0);
           break;
          }
          if ((i15 | 0) != 0 | (i2 | 0) == 0) {
           i10 = i15;
           d4 = d7;
          } else {
           i10 = 1;
           d4 = d7;
           d1 = d1 + d7 * .5;
          }
         } else {
          i10 = i15;
          d4 = d7;
          i5 = i2 + (i5 << 4) | 0;
         } while (0);
         i6 = _i64Add(i6 | 0, i17 | 0, 1, 0) | 0;
         i14 = i16;
         i13 = tempRet0;
         i8 = 1;
        }
        i2 = HEAP32[i23 >> 2] | 0;
        if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
         HEAP32[i23 >> 2] = i2 + 1;
         i17 = i13;
         i16 = i14;
         i2 = HEAPU8[i2 >> 0] | 0;
         i15 = i10;
         d7 = d4;
         continue;
        } else {
         i17 = i13;
         i16 = i14;
         i2 = ___shgetc(i24) | 0;
         i15 = i10;
         d7 = d4;
         continue;
        }
       }
       if (!i8) {
        i2 = (HEAP32[i22 >> 2] | 0) == 0;
        if (!i2) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
        if (i21) {
         if (!i2 ? (i18 = HEAP32[i23 >> 2] | 0, HEAP32[i23 >> 2] = i18 + -1, i9 | 0) : 0) HEAP32[i23 >> 2] = i18 + -2;
        } else ___shlim(i24, 0);
        d1 = +(i28 | 0) * 0.0;
        break L4;
       }
       i8 = (i9 | 0) == 0;
       i9 = i8 ? i6 : i10;
       i8 = i8 ? i13 : i3;
       if ((i13 | 0) < 0 | (i13 | 0) == 0 & i6 >>> 0 < 8) {
        i3 = i13;
        do {
         i5 = i5 << 4;
         i6 = _i64Add(i6 | 0, i3 | 0, 1, 0) | 0;
         i3 = tempRet0;
        } while ((i3 | 0) < 0 | (i3 | 0) == 0 & i6 >>> 0 < 8);
       }
       if ((i2 | 32 | 0) == 112) {
        i3 = _scanexp(i24, i21) | 0;
        i2 = tempRet0;
        if ((i3 | 0) == 0 & (i2 | 0) == -2147483648) {
         if (!i21) {
          ___shlim(i24, 0);
          d1 = 0.0;
          break L4;
         }
         if (!(HEAP32[i22 >> 2] | 0)) {
          i3 = 0;
          i2 = 0;
         } else {
          HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
          i3 = 0;
          i2 = 0;
         }
        }
       } else if (!(HEAP32[i22 >> 2] | 0)) {
        i3 = 0;
        i2 = 0;
       } else {
        HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
        i3 = 0;
        i2 = 0;
       }
       i27 = _bitshift64Shl(i9 | 0, i8 | 0, 2) | 0;
       i27 = _i64Add(i27 | 0, tempRet0 | 0, -32, -1) | 0;
       i2 = _i64Add(i27 | 0, tempRet0 | 0, i3 | 0, i2 | 0) | 0;
       i3 = tempRet0;
       if (!i5) {
        d1 = +(i28 | 0) * 0.0;
        break L4;
       }
       if ((i3 | 0) > 0 | (i3 | 0) == 0 & i2 >>> 0 > (0 - i29 | 0) >>> 0) {
        i30 = ___errno_location() | 0;
        HEAP32[i30 >> 2] = 34;
        d1 = +(i28 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
        break L4;
       }
       i27 = i29 + -106 | 0;
       i26 = ((i27 | 0) < 0) << 31 >> 31;
       if ((i3 | 0) < (i26 | 0) | (i3 | 0) == (i26 | 0) & i2 >>> 0 < i27 >>> 0) {
        i30 = ___errno_location() | 0;
        HEAP32[i30 >> 2] = 34;
        d1 = +(i28 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break L4;
       }
       if ((i5 | 0) > -1) {
        do {
         i26 = !(d1 >= .5);
         i27 = i26 & 1 | i5 << 1;
         i5 = i27 ^ 1;
         d1 = d1 + (i26 ? d1 : d1 + -1.0);
         i2 = _i64Add(i2 | 0, i3 | 0, -1, -1) | 0;
         i3 = tempRet0;
        } while ((i27 | 0) > -1);
        i6 = i2;
        d7 = d1;
       } else {
        i6 = i2;
        d7 = d1;
       }
       i2 = _i64Subtract(32, 0, i29 | 0, ((i29 | 0) < 0) << 31 >> 31 | 0) | 0;
       i2 = _i64Add(i6 | 0, i3 | 0, i2 | 0, tempRet0 | 0) | 0;
       i29 = tempRet0;
       if (0 > (i29 | 0) | 0 == (i29 | 0) & i30 >>> 0 > i2 >>> 0) if ((i2 | 0) < 0) {
        i2 = 0;
        i19 = 127;
       } else i19 = 125; else {
        i2 = i30;
        i19 = 125;
       }
       if ((i19 | 0) == 125) if ((i2 | 0) < 53) i19 = 127; else {
        i3 = i2;
        d4 = +(i28 | 0);
        d1 = 0.0;
       }
       if ((i19 | 0) == 127) {
        d1 = +(i28 | 0);
        i3 = i2;
        d4 = d1;
        d1 = +_copysignl(+_scalbn(1.0, 84 - i2 | 0), d1);
       }
       i30 = (i5 & 1 | 0) == 0 & (d7 != 0.0 & (i3 | 0) < 32);
       d1 = d4 * (i30 ? 0.0 : d7) + (d1 + d4 * +(((i30 & 1) + i5 | 0) >>> 0)) - d1;
       if (!(d1 != 0.0)) {
        i30 = ___errno_location() | 0;
        HEAP32[i30 >> 2] = 34;
       }
       d1 = +_scalbnl(d1, i6);
       break L4;
      } else i2 = i3; while (0);
      i25 = i29 + i30 | 0;
      i26 = 0 - i25 | 0;
      i5 = 0;
      L184 : while (1) {
       switch (i2 | 0) {
       case 46:
        {
         i19 = 138;
         break L184;
        }
       case 48:
        break;
       default:
        {
         i3 = 0;
         i10 = 0;
         i9 = 0;
         break L184;
        }
       }
       i2 = HEAP32[i23 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
        i5 = 1;
        continue;
       } else {
        i2 = ___shgetc(i24) | 0;
        i5 = 1;
        continue;
       }
      }
      if ((i19 | 0) == 138) {
       i2 = HEAP32[i23 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
        HEAP32[i23 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
       } else i2 = ___shgetc(i24) | 0;
       if ((i2 | 0) == 48) {
        i3 = 0;
        i2 = 0;
        while (1) {
         i3 = _i64Add(i3 | 0, i2 | 0, -1, -1) | 0;
         i5 = tempRet0;
         i2 = HEAP32[i23 >> 2] | 0;
         if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
          HEAP32[i23 >> 2] = i2 + 1;
          i2 = HEAPU8[i2 >> 0] | 0;
         } else i2 = ___shgetc(i24) | 0;
         if ((i2 | 0) == 48) i2 = i5; else {
          i10 = i5;
          i5 = 1;
          i9 = 1;
          break;
         }
        }
       } else {
        i3 = 0;
        i10 = 0;
        i9 = 1;
       }
      }
      HEAP32[i27 >> 2] = 0;
      i8 = i2 + -48 | 0;
      i6 = (i2 | 0) == 46;
      L203 : do if (i6 | i8 >>> 0 < 10) {
       i20 = i27 + 496 | 0;
       i17 = 0;
       i14 = 0;
       i15 = i6;
       i19 = i10;
       i13 = i5;
       i18 = i9;
       i5 = 0;
       i6 = 0;
       i9 = 0;
       L205 : while (1) {
        do if (i15) if (!i18) {
         i3 = i17;
         i10 = i14;
         i18 = 1;
        } else {
         i10 = i19;
         i2 = i17;
         i8 = i14;
         break L205;
        } else {
         i15 = _i64Add(i17 | 0, i14 | 0, 1, 0) | 0;
         i14 = tempRet0;
         i16 = (i2 | 0) != 48;
         if ((i6 | 0) >= 125) {
          if (!i16) {
           i10 = i19;
           i17 = i15;
           break;
          }
          HEAP32[i20 >> 2] = HEAP32[i20 >> 2] | 1;
          i10 = i19;
          i17 = i15;
          break;
         }
         i10 = i27 + (i6 << 2) | 0;
         if (i5) i8 = i2 + -48 + ((HEAP32[i10 >> 2] | 0) * 10 | 0) | 0;
         HEAP32[i10 >> 2] = i8;
         i5 = i5 + 1 | 0;
         i8 = (i5 | 0) == 9;
         i10 = i19;
         i17 = i15;
         i13 = 1;
         i5 = i8 ? 0 : i5;
         i6 = (i8 & 1) + i6 | 0;
         i9 = i16 ? i15 : i9;
        } while (0);
        i2 = HEAP32[i23 >> 2] | 0;
        if (i2 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
         HEAP32[i23 >> 2] = i2 + 1;
         i2 = HEAPU8[i2 >> 0] | 0;
        } else i2 = ___shgetc(i24) | 0;
        i8 = i2 + -48 | 0;
        i15 = (i2 | 0) == 46;
        if (!(i15 | i8 >>> 0 < 10)) {
         i8 = i18;
         i19 = 161;
         break L203;
        } else i19 = i10;
       }
       i13 = (i13 | 0) != 0;
       i19 = 169;
      } else {
       i17 = 0;
       i14 = 0;
       i13 = i5;
       i8 = i9;
       i5 = 0;
       i6 = 0;
       i9 = 0;
       i19 = 161;
      } while (0);
      do if ((i19 | 0) == 161) {
       i20 = (i8 | 0) == 0;
       i3 = i20 ? i17 : i3;
       i10 = i20 ? i14 : i10;
       i13 = (i13 | 0) != 0;
       if (!((i2 | 32 | 0) == 101 & i13)) if ((i2 | 0) > -1) {
        i2 = i17;
        i8 = i14;
        i19 = 169;
        break;
       } else {
        i2 = i17;
        i8 = i14;
        i19 = 171;
        break;
       }
       i8 = _scanexp(i24, i21) | 0;
       i2 = tempRet0;
       if ((i8 | 0) == 0 & (i2 | 0) == -2147483648) {
        if (!i21) {
         ___shlim(i24, 0);
         d1 = 0.0;
         break;
        }
        if (!(HEAP32[i22 >> 2] | 0)) {
         i8 = 0;
         i2 = 0;
        } else {
         HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
         i8 = 0;
         i2 = 0;
        }
       }
       i3 = _i64Add(i8 | 0, i2 | 0, i3 | 0, i10 | 0) | 0;
       i13 = i17;
       i10 = tempRet0;
       i8 = i14;
       i19 = 173;
      } while (0);
      if ((i19 | 0) == 169) if (HEAP32[i22 >> 2] | 0) {
       HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
       if (i13) {
        i13 = i2;
        i19 = 173;
       } else i19 = 172;
      } else i19 = 171;
      if ((i19 | 0) == 171) if (i13) {
       i13 = i2;
       i19 = 173;
      } else i19 = 172;
      do if ((i19 | 0) == 172) {
       i30 = ___errno_location() | 0;
       HEAP32[i30 >> 2] = 22;
       ___shlim(i24, 0);
       d1 = 0.0;
      } else if ((i19 | 0) == 173) {
       i2 = HEAP32[i27 >> 2] | 0;
       if (!i2) {
        d1 = +(i28 | 0) * 0.0;
        break;
       }
       if (((i8 | 0) < 0 | (i8 | 0) == 0 & i13 >>> 0 < 10) & ((i3 | 0) == (i13 | 0) & (i10 | 0) == (i8 | 0)) ? i30 >>> 0 > 30 | (i2 >>> i30 | 0) == 0 : 0) {
        d1 = +(i28 | 0) * +(i2 >>> 0);
        break;
       }
       i24 = (i29 | 0) / -2 | 0;
       i23 = ((i24 | 0) < 0) << 31 >> 31;
       if ((i10 | 0) > (i23 | 0) | (i10 | 0) == (i23 | 0) & i3 >>> 0 > i24 >>> 0) {
        i30 = ___errno_location() | 0;
        HEAP32[i30 >> 2] = 34;
        d1 = +(i28 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
        break;
       }
       i24 = i29 + -106 | 0;
       i23 = ((i24 | 0) < 0) << 31 >> 31;
       if ((i10 | 0) < (i23 | 0) | (i10 | 0) == (i23 | 0) & i3 >>> 0 < i24 >>> 0) {
        i30 = ___errno_location() | 0;
        HEAP32[i30 >> 2] = 34;
        d1 = +(i28 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break;
       }
       if (i5) {
        if ((i5 | 0) < 9) {
         i8 = i27 + (i6 << 2) | 0;
         i2 = HEAP32[i8 >> 2] | 0;
         do {
          i2 = i2 * 10 | 0;
          i5 = i5 + 1 | 0;
         } while ((i5 | 0) != 9);
         HEAP32[i8 >> 2] = i2;
        }
        i6 = i6 + 1 | 0;
       }
       if ((i9 | 0) < 9 ? (i9 | 0) <= (i3 | 0) & (i3 | 0) < 18 : 0) {
        if ((i3 | 0) == 9) {
         d1 = +(i28 | 0) * +((HEAP32[i27 >> 2] | 0) >>> 0);
         break;
        }
        if ((i3 | 0) < 9) {
         d1 = +(i28 | 0) * +((HEAP32[i27 >> 2] | 0) >>> 0) / +(HEAP32[5088 + (8 - i3 << 2) >> 2] | 0);
         break;
        }
        i24 = i30 + 27 + (Math_imul(i3, -3) | 0) | 0;
        i2 = HEAP32[i27 >> 2] | 0;
        if ((i24 | 0) > 30 | (i2 >>> i24 | 0) == 0) {
         d1 = +(i28 | 0) * +(i2 >>> 0) * +(HEAP32[5088 + (i3 + -10 << 2) >> 2] | 0);
         break;
        }
       }
       i2 = (i3 | 0) % 9 | 0;
       if (!i2) {
        i5 = 0;
        i2 = 0;
       } else {
        i13 = (i3 | 0) > -1 ? i2 : i2 + 9 | 0;
        i8 = HEAP32[5088 + (8 - i13 << 2) >> 2] | 0;
        if (i6) {
         i9 = 1e9 / (i8 | 0) | 0;
         i5 = 0;
         i2 = 0;
         i10 = 0;
         do {
          i22 = i27 + (i10 << 2) | 0;
          i23 = HEAP32[i22 >> 2] | 0;
          i24 = ((i23 >>> 0) / (i8 >>> 0) | 0) + i2 | 0;
          HEAP32[i22 >> 2] = i24;
          i2 = Math_imul((i23 >>> 0) % (i8 >>> 0) | 0, i9) | 0;
          i24 = (i10 | 0) == (i5 | 0) & (i24 | 0) == 0;
          i10 = i10 + 1 | 0;
          i3 = i24 ? i3 + -9 | 0 : i3;
          i5 = i24 ? i10 & 127 : i5;
         } while ((i10 | 0) != (i6 | 0));
         if (i2) {
          HEAP32[i27 + (i6 << 2) >> 2] = i2;
          i6 = i6 + 1 | 0;
         }
        } else {
         i5 = 0;
         i6 = 0;
        }
        i2 = 0;
        i3 = 9 - i13 + i3 | 0;
       }
       L284 : while (1) {
        i14 = (i3 | 0) < 18;
        i15 = (i3 | 0) == 18;
        i16 = i27 + (i5 << 2) | 0;
        do {
         if (!i14) {
          if (!i15) {
           i17 = i6;
           break L284;
          }
          if ((HEAP32[i16 >> 2] | 0) >>> 0 >= 9007199) {
           i3 = 18;
           i17 = i6;
           break L284;
          }
         }
         i8 = 0;
         i9 = i6 + 127 | 0;
         while (1) {
          i13 = i9 & 127;
          i10 = i27 + (i13 << 2) | 0;
          i9 = _bitshift64Shl(HEAP32[i10 >> 2] | 0, 0, 29) | 0;
          i9 = _i64Add(i9 | 0, tempRet0 | 0, i8 | 0, 0) | 0;
          i8 = tempRet0;
          if (i8 >>> 0 > 0 | (i8 | 0) == 0 & i9 >>> 0 > 1e9) {
           i24 = ___udivdi3(i9 | 0, i8 | 0, 1e9, 0) | 0;
           i9 = ___uremdi3(i9 | 0, i8 | 0, 1e9, 0) | 0;
           i8 = i24;
          } else i8 = 0;
          HEAP32[i10 >> 2] = i9;
          i24 = (i13 | 0) == (i5 | 0);
          i6 = (i13 | 0) != (i6 + 127 & 127 | 0) | i24 ? i6 : (i9 | 0) == 0 ? i13 : i6;
          if (i24) break; else i9 = i13 + -1 | 0;
         }
         i2 = i2 + -29 | 0;
        } while ((i8 | 0) == 0);
        i5 = i5 + 127 & 127;
        if ((i5 | 0) == (i6 | 0)) {
         i24 = i6 + 127 & 127;
         i6 = i27 + ((i6 + 126 & 127) << 2) | 0;
         HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | HEAP32[i27 + (i24 << 2) >> 2];
         i6 = i24;
        }
        HEAP32[i27 + (i5 << 2) >> 2] = i8;
        i3 = i3 + 9 | 0;
       }
       L302 : while (1) {
        i6 = i17 + 1 & 127;
        i16 = i27 + ((i17 + 127 & 127) << 2) | 0;
        while (1) {
         i14 = (i3 | 0) == 18;
         i15 = (i3 | 0) > 27 ? 9 : 1;
         i13 = i14 ^ 1;
         while (1) {
          i9 = i5 & 127;
          i10 = (i9 | 0) == (i17 | 0);
          do if (!i10) {
           i8 = HEAP32[i27 + (i9 << 2) >> 2] | 0;
           if (i8 >>> 0 < 9007199) {
            i19 = 219;
            break;
           }
           if (i8 >>> 0 > 9007199) break;
           i8 = i5 + 1 & 127;
           if ((i8 | 0) == (i17 | 0)) {
            i19 = 219;
            break;
           }
           i8 = HEAP32[i27 + (i8 << 2) >> 2] | 0;
           if (i8 >>> 0 < 254740991) {
            i19 = 219;
            break;
           }
           if (!(i8 >>> 0 > 254740991 | i13)) {
            i3 = i9;
            i6 = i17;
            break L302;
           }
          } else i19 = 219; while (0);
          if ((i19 | 0) == 219 ? (i19 = 0, i14) : 0) {
           i19 = 220;
           break L302;
          }
          i2 = i2 + i15 | 0;
          if ((i5 | 0) == (i17 | 0)) i5 = i17; else break;
         }
         i13 = (1 << i15) + -1 | 0;
         i14 = 1e9 >>> i15;
         i9 = i5;
         i8 = 0;
         i10 = i5;
         while (1) {
          i23 = i27 + (i10 << 2) | 0;
          i24 = HEAP32[i23 >> 2] | 0;
          i5 = (i24 >>> i15) + i8 | 0;
          HEAP32[i23 >> 2] = i5;
          i8 = Math_imul(i24 & i13, i14) | 0;
          i5 = (i10 | 0) == (i9 | 0) & (i5 | 0) == 0;
          i10 = i10 + 1 & 127;
          i3 = i5 ? i3 + -9 | 0 : i3;
          i5 = i5 ? i10 : i9;
          if ((i10 | 0) == (i17 | 0)) break; else i9 = i5;
         }
         if (!i8) continue;
         if ((i6 | 0) != (i5 | 0)) break;
         HEAP32[i16 >> 2] = HEAP32[i16 >> 2] | 1;
        }
        HEAP32[i27 + (i17 << 2) >> 2] = i8;
        i17 = i6;
       }
       if ((i19 | 0) == 220) if (i10) {
        HEAP32[i27 + (i6 + -1 << 2) >> 2] = 0;
        i3 = i17;
       } else {
        i3 = i9;
        i6 = i17;
       }
       d1 = +((HEAP32[i27 + (i3 << 2) >> 2] | 0) >>> 0);
       i3 = i5 + 1 & 127;
       if ((i3 | 0) == (i6 | 0)) {
        i6 = i5 + 2 & 127;
        HEAP32[i27 + (i6 + -1 << 2) >> 2] = 0;
       }
       d12 = +(i28 | 0);
       d4 = d12 * (d1 * 1.0e9 + +((HEAP32[i27 + (i3 << 2) >> 2] | 0) >>> 0));
       i14 = i2 + 53 | 0;
       i10 = i14 - i29 | 0;
       i13 = (i10 | 0) < (i30 | 0);
       i3 = i13 & 1;
       i9 = i13 ? ((i10 | 0) < 0 ? 0 : i10) : i30;
       if ((i9 | 0) < 53) {
        d32 = +_copysignl(+_scalbn(1.0, 105 - i9 | 0), d4);
        d7 = +_fmodl(d4, +_scalbn(1.0, 53 - i9 | 0));
        d11 = d32;
        d1 = d7;
        d7 = d32 + (d4 - d7);
       } else {
        d11 = 0.0;
        d1 = 0.0;
        d7 = d4;
       }
       i8 = i5 + 2 & 127;
       do if ((i8 | 0) == (i6 | 0)) d4 = d1; else {
        i8 = HEAP32[i27 + (i8 << 2) >> 2] | 0;
        do if (i8 >>> 0 >= 5e8) {
         if (i8 >>> 0 > 5e8) {
          d1 = d12 * .75 + d1;
          break;
         }
         if ((i5 + 3 & 127 | 0) == (i6 | 0)) {
          d1 = d12 * .5 + d1;
          break;
         } else {
          d1 = d12 * .75 + d1;
          break;
         }
        } else {
         if ((i8 | 0) == 0 ? (i5 + 3 & 127 | 0) == (i6 | 0) : 0) break;
         d1 = d12 * .25 + d1;
        } while (0);
        if ((53 - i9 | 0) <= 1) {
         d4 = d1;
         break;
        }
        if (+_fmodl(d1, 1.0) != 0.0) {
         d4 = d1;
         break;
        }
        d4 = d1 + 1.0;
       } while (0);
       d1 = d7 + d4 - d11;
       do if ((i14 & 2147483647 | 0) > (-2 - i25 | 0)) {
        if (+Math_abs(+d1) >= 9007199254740992.0) {
         i3 = i13 & (i9 | 0) == (i10 | 0) ? 0 : i3;
         i2 = i2 + 1 | 0;
         d1 = d1 * .5;
        }
        if ((i2 + 50 | 0) <= (i26 | 0) ? !(d4 != 0.0 & (i3 | 0) != 0) : 0) break;
        i30 = ___errno_location() | 0;
        HEAP32[i30 >> 2] = 34;
       } while (0);
       d1 = +_scalbnl(d1, i2);
      } while (0);
      break L4;
     }
    default:
     {
      if (HEAP32[i22 >> 2] | 0) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
      i30 = ___errno_location() | 0;
      HEAP32[i30 >> 2] = 22;
      ___shlim(i24, 0);
      d1 = 0.0;
      break L4;
     }
    }
   }
  } while (0);
  if ((i19 | 0) == 23) {
   i3 = (HEAP32[i22 >> 2] | 0) == 0;
   if (!i3) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
   if ((i21 | 0) != 0 & i2 >>> 0 > 3) do {
    if (!i3) HEAP32[i23 >> 2] = (HEAP32[i23 >> 2] | 0) + -1;
    i2 = i2 + -1 | 0;
   } while (i2 >>> 0 > 3);
  }
  d1 = +(i28 | 0) * inf;
 } while (0);
 STACKTOP = i31;
 return +d1;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_(i1, i18, i35) {
 i1 = i1 | 0;
 i18 = i18 | 0;
 i35 = i35 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i36 = 0;
 i36 = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 i29 = i36 + 72 | 0;
 i28 = i36 + 48 | 0;
 i27 = i36 + 24 | 0;
 i32 = i36;
 i31 = i36 + 432 | 0;
 i33 = i36 + 408 | 0;
 i34 = i36 + 384 | 0;
 i11 = i36 + 396 | 0;
 i19 = i36 + 360 | 0;
 i20 = i36 + 336 | 0;
 i12 = i36 + 320 | 0;
 i13 = i36 + 308 | 0;
 i14 = i36 + 296 | 0;
 i15 = i36 + 284 | 0;
 i2 = i36 + 272 | 0;
 i3 = i36 + 260 | 0;
 i4 = i36 + 248 | 0;
 i5 = i36 + 236 | 0;
 i6 = i36 + 224 | 0;
 i7 = i36 + 212 | 0;
 i8 = i36 + 200 | 0;
 i9 = i36 + 188 | 0;
 i10 = i36 + 176 | 0;
 i21 = i36 + 152 | 0;
 i22 = i36 + 140 | 0;
 i23 = i36 + 128 | 0;
 i24 = i36 + 116 | 0;
 i25 = i36 + 104 | 0;
 i26 = i36 + 92 | 0;
 i17 = i18;
 L1 : do if ((i17 - i1 | 0) > 3 ? (HEAP8[i1 >> 0] | 0) == 76 : 0) {
  i16 = i1 + 1 | 0;
  do switch (HEAP8[i16 >> 0] | 0) {
  case 84:
   break L1;
  case 119:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i11, 38149, 7);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i11, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 98:
   {
    if ((HEAP8[i1 + 3 >> 0] | 0) != 69) break L1;
    switch (HEAP8[i1 + 2 >> 0] | 0) {
    case 48:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc(i19, 38471);
      i2 = i35 + 4 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      i34 = HEAP32[i35 + 8 >> 2] | 0;
      i4 = i34;
      if (i3 >>> 0 < i34 >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i19);
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
      } else {
       i2 = HEAP32[i35 >> 2] | 0;
       i34 = i3 - i2 | 0;
       i5 = (i34 | 0) / 24 | 0;
       i3 = i5 + 1 | 0;
       if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i35);
       i2 = (i4 - i2 | 0) / 24 | 0;
       if (i2 >>> 0 < 1073741823) {
        i2 = i2 << 1;
        i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
       } else i2 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i32, i2, i5, i35 + 12 | 0);
       i34 = i32 + 8 | 0;
       i33 = HEAP32[i34 >> 2] | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i19);
       HEAP32[i34 >> 2] = i33 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i35, i32);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i32);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i19);
      i1 = i1 + 4 | 0;
      break L1;
     }
    case 49:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc(i20, 38477);
      i2 = i35 + 4 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      i34 = HEAP32[i35 + 8 >> 2] | 0;
      i4 = i34;
      if (i3 >>> 0 < i34 >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i20);
       HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
      } else {
       i2 = HEAP32[i35 >> 2] | 0;
       i34 = i3 - i2 | 0;
       i5 = (i34 | 0) / 24 | 0;
       i3 = i5 + 1 | 0;
       if ((i34 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i35);
       i2 = (i4 - i2 | 0) / 24 | 0;
       if (i2 >>> 0 < 1073741823) {
        i2 = i2 << 1;
        i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
       } else i2 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i32, i2, i5, i35 + 12 | 0);
       i34 = i32 + 8 | 0;
       i33 = HEAP32[i34 >> 2] | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i33, i20);
       HEAP32[i34 >> 2] = i33 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i35, i32);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i32);
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i20);
      i1 = i1 + 4 | 0;
      break L1;
     }
    default:
     break L1;
    }
   }
  case 99:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i12, 38162, 4);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i12, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 97:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i13, 38167, 11);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i13, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 104:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i14, 38179, 13);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i14, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 115:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i15, 38193, 5);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i15, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 116:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i2, 38199, 14);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i2, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i2);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 105:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i3, 49108, 0);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i3, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i3);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 106:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i4, 38482, 1);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i4, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i4);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 108:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i5, 38484, 1);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i5, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 109:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i6, 38486, 2);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i6, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 120:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i7, 38489, 2);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i7, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 121:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i8, 38492, 3);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i8, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 110:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i9, 38279, 8);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i9, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 111:
   {
    i34 = i1 + 2 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i10, 38288, 17);
    i35 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i34, i18, i10, i35) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
    i1 = (i35 | 0) == (i34 | 0) ? i1 : i35;
    break L1;
   }
  case 102:
   {
    i6 = i1 + 2 | 0;
    L79 : do if ((i17 - i6 | 0) >>> 0 > 8) {
     i4 = i1 + 10 | 0;
     i2 = i32;
     i5 = i6;
     while (1) {
      i3 = HEAP8[i5 >> 0] | 0;
      if ((i5 | 0) == (i4 | 0)) {
       i30 = 41;
       break;
      }
      if (!(_isxdigit(i3 << 24 >> 24) | 0)) break;
      i29 = HEAP8[i5 >> 0] | 0;
      i28 = HEAP8[i5 + 1 >> 0] | 0;
      HEAP8[i2 >> 0] = (((i28 << 24 >> 24) + -48 | 0) >>> 0 < 10 ? 208 : 169) + (i28 & 255) + (((i29 + -48 | 0) >>> 0 < 10 ? 0 : 9) + i29 << 4);
      i2 = i2 + 1 | 0;
      i5 = i5 + 2 | 0;
     }
     do if ((i30 | 0) == 41) {
      if (i3 << 24 >> 24 == 69) {
       L89 : do if ((i32 | 0) != (i2 | 0)) {
        i3 = i32;
        while (1) {
         i2 = i2 + -1 | 0;
         if (i3 >>> 0 >= i2 >>> 0) break L89;
         i30 = HEAP8[i3 >> 0] | 0;
         HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
         HEAP8[i2 >> 0] = i30;
         i3 = i3 + 1 | 0;
        }
       } while (0);
       i2 = i31;
       i3 = i2 + 24 | 0;
       do {
        HEAP8[i2 >> 0] = 0;
        i2 = i2 + 1 | 0;
       } while ((i2 | 0) < (i3 | 0));
       HEAPF64[i27 >> 3] = +HEAPF32[i32 >> 2];
       i2 = _snprintf(i31, 24, 38496, i27) | 0;
       if (i2 >>> 0 > 23) break;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i34, i31, i2);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i33, i34);
       i2 = i35 + 4 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       i32 = HEAP32[i35 + 8 >> 2] | 0;
       i4 = i32;
       if (i3 >>> 0 < i32 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i33);
        HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
       } else {
        i2 = HEAP32[i35 >> 2] | 0;
        i32 = i3 - i2 | 0;
        i5 = (i32 | 0) / 24 | 0;
        i3 = i5 + 1 | 0;
        if ((i32 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i35);
        i2 = (i4 - i2 | 0) / 24 | 0;
        if (i2 >>> 0 < 1073741823) {
         i2 = i2 << 1;
         i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
        } else i2 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i27, i2, i5, i35 + 12 | 0);
        i32 = i27 + 8 | 0;
        i31 = HEAP32[i32 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i31, i33);
        HEAP32[i32 >> 2] = i31 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i35, i27);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i27);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i33);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i34);
       i2 = i1 + 11 | 0;
      } else i2 = i6;
      break L79;
     } while (0);
     i2 = i6;
    } else i2 = i6; while (0);
    i1 = (i2 | 0) == (i6 | 0) ? i1 : i2;
    break L1;
   }
  case 100:
   {
    i6 = i1 + 2 | 0;
    L111 : do if ((i17 - i6 | 0) >>> 0 > 16) {
     i4 = i1 + 18 | 0;
     i2 = i32;
     i5 = i6;
     while (1) {
      i3 = HEAP8[i5 >> 0] | 0;
      if ((i5 | 0) == (i4 | 0)) {
       i30 = 63;
       break;
      }
      if (!(_isxdigit(i3 << 24 >> 24) | 0)) break;
      i29 = HEAP8[i5 >> 0] | 0;
      i27 = HEAP8[i5 + 1 >> 0] | 0;
      HEAP8[i2 >> 0] = (((i27 << 24 >> 24) + -48 | 0) >>> 0 < 10 ? 208 : 169) + (i27 & 255) + (((i29 + -48 | 0) >>> 0 < 10 ? 0 : 9) + i29 << 4);
      i2 = i2 + 1 | 0;
      i5 = i5 + 2 | 0;
     }
     do if ((i30 | 0) == 63) {
      if (i3 << 24 >> 24 == 69) {
       L121 : do if ((i32 | 0) != (i2 | 0)) {
        i3 = i32;
        while (1) {
         i2 = i2 + -1 | 0;
         if (i3 >>> 0 >= i2 >>> 0) break L121;
         i30 = HEAP8[i3 >> 0] | 0;
         HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
         HEAP8[i2 >> 0] = i30;
         i3 = i3 + 1 | 0;
        }
       } while (0);
       i2 = i31;
       i3 = i2 + 32 | 0;
       do {
        HEAP8[i2 >> 0] = 0;
        i2 = i2 + 1 | 0;
       } while ((i2 | 0) < (i3 | 0));
       HEAPF64[i28 >> 3] = +HEAPF64[i32 >> 3];
       i2 = _snprintf(i31, 32, 38500, i28) | 0;
       if (i2 >>> 0 > 31) break;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i34, i31, i2);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i33, i34);
       i2 = i35 + 4 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       i32 = HEAP32[i35 + 8 >> 2] | 0;
       i4 = i32;
       if (i3 >>> 0 < i32 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i33);
        HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
       } else {
        i2 = HEAP32[i35 >> 2] | 0;
        i32 = i3 - i2 | 0;
        i5 = (i32 | 0) / 24 | 0;
        i3 = i5 + 1 | 0;
        if ((i32 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i35);
        i2 = (i4 - i2 | 0) / 24 | 0;
        if (i2 >>> 0 < 1073741823) {
         i2 = i2 << 1;
         i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
        } else i2 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i28, i2, i5, i35 + 12 | 0);
        i32 = i28 + 8 | 0;
        i31 = HEAP32[i32 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i31, i33);
        HEAP32[i32 >> 2] = i31 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i35, i28);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i28);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i33);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i34);
       i2 = i1 + 19 | 0;
      } else i2 = i6;
      break L111;
     } while (0);
     i2 = i6;
    } else i2 = i6; while (0);
    i1 = (i2 | 0) == (i6 | 0) ? i1 : i2;
    break L1;
   }
  case 101:
   {
    i6 = i1 + 2 | 0;
    L143 : do if ((i17 - i6 | 0) >>> 0 > 20) {
     i4 = i1 + 22 | 0;
     i2 = i32;
     i5 = i6;
     while (1) {
      i3 = HEAP8[i5 >> 0] | 0;
      if ((i5 | 0) == (i4 | 0)) {
       i30 = 85;
       break;
      }
      if (!(_isxdigit(i3 << 24 >> 24) | 0)) break;
      i28 = HEAP8[i5 >> 0] | 0;
      i27 = HEAP8[i5 + 1 >> 0] | 0;
      HEAP8[i2 >> 0] = (((i27 << 24 >> 24) + -48 | 0) >>> 0 < 10 ? 208 : 169) + (i27 & 255) + (((i28 + -48 | 0) >>> 0 < 10 ? 0 : 9) + i28 << 4);
      i2 = i2 + 1 | 0;
      i5 = i5 + 2 | 0;
     }
     do if ((i30 | 0) == 85) {
      if (i3 << 24 >> 24 == 69) {
       L153 : do if ((i32 | 0) != (i2 | 0)) {
        i3 = i32;
        while (1) {
         i2 = i2 + -1 | 0;
         if (i3 >>> 0 >= i2 >>> 0) break L153;
         i30 = HEAP8[i3 >> 0] | 0;
         HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
         HEAP8[i2 >> 0] = i30;
         i3 = i3 + 1 | 0;
        }
       } while (0);
       i2 = i31;
       i3 = i2 + 40 | 0;
       do {
        HEAP8[i2 >> 0] = 0;
        i2 = i2 + 1 | 0;
       } while ((i2 | 0) < (i3 | 0));
       HEAPF64[i29 >> 3] = +HEAPF64[i32 >> 3];
       i2 = _snprintf(i31, 40, 38503, i29) | 0;
       if (i2 >>> 0 > 39) break;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i34, i31, i2);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i33, i34);
       i2 = i35 + 4 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       i32 = HEAP32[i35 + 8 >> 2] | 0;
       i4 = i32;
       if (i3 >>> 0 < i32 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i33);
        HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
       } else {
        i2 = HEAP32[i35 >> 2] | 0;
        i32 = i3 - i2 | 0;
        i5 = (i32 | 0) / 24 | 0;
        i3 = i5 + 1 | 0;
        if ((i32 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i35);
        i2 = (i4 - i2 | 0) / 24 | 0;
        if (i2 >>> 0 < 1073741823) {
         i2 = i2 << 1;
         i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
        } else i2 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i29, i2, i5, i35 + 12 | 0);
        i32 = i29 + 8 | 0;
        i31 = HEAP32[i32 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i31, i33);
        HEAP32[i32 >> 2] = i31 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i35, i29);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i29);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i33);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i34);
       i2 = i1 + 23 | 0;
      } else i2 = i6;
      break L143;
     } while (0);
     i2 = i6;
    } else i2 = i6; while (0);
    i1 = (i2 | 0) == (i6 | 0) ? i1 : i2;
    break L1;
   }
  case 95:
   {
    if ((HEAP8[i1 + 2 >> 0] | 0) != 90) break L1;
    i34 = i1 + 3 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i34, i18, i35) | 0;
    if ((i2 | 0) == (i34 | 0) | (i2 | 0) == (i18 | 0)) break L1;
    i1 = (HEAP8[i2 >> 0] | 0) == 69 ? i2 + 1 | 0 : i1;
    break L1;
   }
  default:
   {
    i6 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i16, i18, i35) | 0;
    if ((i6 | 0) == (i16 | 0) | (i6 | 0) == (i18 | 0)) break L1;
    if ((HEAP8[i6 >> 0] | 0) == 69) {
     i1 = i6 + 1 | 0;
     break L1;
    } else i3 = i6;
    while (1) {
     if ((i3 | 0) == (i18 | 0)) break L1;
     i2 = HEAP8[i3 >> 0] | 0;
     if (((i2 << 24 >> 24) + -48 | 0) >>> 0 >= 10) {
      i7 = i3;
      break;
     }
     i3 = i3 + 1 | 0;
    }
    if (!((i7 | 0) != (i6 | 0) & i2 << 24 >> 24 == 69)) break L1;
    i2 = HEAP32[i35 + 4 >> 2] | 0;
    if ((HEAP32[i35 >> 2] | 0) == (i2 | 0)) break L1;
    i5 = i2 + -24 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i25, i5);
    i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i25, 0, 38467) | 0;
    HEAP32[i24 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i24 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
    HEAP32[i24 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i24, 38469) | 0;
    HEAP32[i23 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i23 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
    HEAP32[i23 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i3 = i7 - i6 | 0;
    if (i3 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i26);
    if (i3 >>> 0 < 11) {
     HEAP8[i26 >> 0] = i3 << 1;
     i4 = i26 + 1 | 0;
    } else {
     i35 = i3 + 16 & -16;
     i4 = _malloc(i35) | 0;
     HEAP32[i26 + 8 >> 2] = i4;
     HEAP32[i26 >> 2] = i35 | 1;
     HEAP32[i26 + 4 >> 2] = i3;
    }
    i1 = i6;
    i2 = i4;
    while (1) {
     if ((i1 | 0) == (i7 | 0)) break;
     HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
     i1 = i1 + 1 | 0;
     i2 = i2 + 1 | 0;
    }
    HEAP8[i4 + i3 >> 0] = 0;
    i1 = HEAP8[i26 >> 0] | 0;
    i2 = (i1 & 1) == 0;
    i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i23, i2 ? i26 + 1 | 0 : HEAP32[i26 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) | 0;
    HEAP32[i22 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i22 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
    HEAP32[i22 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i21, i22);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i5, i21);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i21);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i22);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i26);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i23);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i24);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i25);
    i1 = i7 + 1 | 0;
    break L1;
   }
  } while (0);
 } while (0);
 STACKTOP = i36;
 return i1 | 0;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i36, i37, i2, i3, i4, i38, i30, i25, i33, i34, i1) {
 i36 = i36 | 0;
 i37 = i37 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i38 = i38 | 0;
 i30 = i30 | 0;
 i25 = i25 | 0;
 i33 = i33 | 0;
 i34 = i34 | 0;
 i1 = i1 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i31 = 0, i32 = 0, i35 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0;
 i47 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 i24 = i47 + 96 | 0;
 i8 = i47 + 104 | 0;
 i46 = i47 + 88 | 0;
 i29 = i47 + 80 | 0;
 i28 = i47 + 76 | 0;
 i31 = i47 + 504 | 0;
 i26 = i47 + 72 | 0;
 i32 = i47 + 68 | 0;
 i41 = i47 + 56 | 0;
 i45 = i47 + 44 | 0;
 i43 = i47 + 32 | 0;
 i42 = i47 + 20 | 0;
 i44 = i47 + 8 | 0;
 i27 = i47 + 4 | 0;
 i39 = i47;
 HEAP32[i24 >> 2] = i1;
 HEAP32[i46 >> 2] = i8;
 i40 = i46 + 4 | 0;
 HEAP32[i40 >> 2] = 220;
 HEAP32[i29 >> 2] = i8;
 HEAP32[i28 >> 2] = i8 + 400;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i41 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i45 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i43 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i42 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i44 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri(i2, i3, i31, i26, i32, i41, i45, i43, i42, i27);
 HEAP32[i34 >> 2] = HEAP32[i33 >> 2];
 i20 = i43 + 4 | 0;
 i21 = i42 + 4 | 0;
 i22 = i42 + 8 | 0;
 i23 = i43 + 8 | 0;
 i13 = (i4 & 512 | 0) != 0;
 i14 = i45 + 8 | 0;
 i15 = i45 + 4 | 0;
 i16 = i44 + 4 | 0;
 i17 = i44 + 8 | 0;
 i18 = i31 + 3 | 0;
 i19 = i41 + 4 | 0;
 i12 = 0;
 i7 = 0;
 L21 : while (1) {
  if (i12 >>> 0 >= 4) {
   i35 = 232;
   break;
  }
  i1 = HEAP32[i36 >> 2] | 0;
  do if (i1) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i36 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i36 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  i2 = HEAP32[i37 >> 2] | 0;
  do if (i2) {
   i1 = HEAP32[i2 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i3) {
    i11 = i2;
    break;
   } else {
    i35 = 232;
    break L21;
   } else {
    HEAP32[i37 >> 2] = 0;
    i35 = 31;
    break;
   }
  } else i35 = 31; while (0);
  if ((i35 | 0) == 31) {
   i35 = 0;
   if (i3) {
    i35 = 232;
    break;
   } else i11 = 0;
  }
  L46 : do switch (HEAP8[i31 + i12 >> 0] | 0) {
  case 1:
   {
    if ((i12 | 0) != 3) {
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i25 >> 2] | 0) + 12 >> 2] & 31](i25, 8192, i1) | 0)) {
      i35 = 44;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i2 >> 2] = i3 + 4;
      i1 = HEAP32[i3 >> 2] | 0;
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i44, i1);
     i1 = i11;
     i4 = i11;
     i35 = 46;
    }
    break;
   }
  case 0:
   {
    if ((i12 | 0) != 3) {
     i1 = i11;
     i4 = i11;
     i35 = 46;
    }
    break;
   }
  case 3:
   {
    i5 = HEAP8[i43 >> 0] | 0;
    i1 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i20 >> 2] | 0;
    i3 = HEAP8[i42 >> 0] | 0;
    i3 = (i3 & 1) == 0 ? (i3 & 255) >>> 1 : HEAP32[i21 >> 2] | 0;
    if ((i1 | 0) != (0 - i3 | 0)) {
     i4 = (i1 | 0) == 0;
     i6 = HEAP32[i36 >> 2] | 0;
     i9 = HEAP32[i6 + 12 >> 2] | 0;
     i1 = HEAP32[i6 + 16 >> 2] | 0;
     i2 = (i9 | 0) == (i1 | 0);
     if (i4 | (i3 | 0) == 0) {
      if (i2) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i1 = HEAP32[i9 >> 2] | 0;
      if (i4) {
       if ((i1 | 0) != (HEAP32[((HEAP8[i42 >> 0] & 1) == 0 ? i21 : HEAP32[i22 >> 2] | 0) >> 2] | 0)) break L46;
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 4;
       HEAP8[i30 >> 0] = 1;
       i11 = HEAP8[i42 >> 0] | 0;
       i7 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i21 >> 2] | 0) >>> 0 > 1 ? i42 : i7;
       break L46;
      }
      if ((i1 | 0) != (HEAP32[((HEAP8[i43 >> 0] & 1) == 0 ? i20 : HEAP32[i23 >> 2] | 0) >> 2] | 0)) {
       HEAP8[i30 >> 0] = 1;
       break L46;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 4;
      i11 = HEAP8[i43 >> 0] | 0;
      i7 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i20 >> 2] | 0) >>> 0 > 1 ? i43 : i7;
      break L46;
     }
     if (i2) {
      i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0;
      i1 = HEAP32[i36 >> 2] | 0;
      i5 = HEAP8[i43 >> 0] | 0;
      i6 = i1;
      i3 = HEAP32[i1 + 12 >> 2] | 0;
      i1 = HEAP32[i1 + 16 >> 2] | 0;
     } else {
      i4 = HEAP32[i9 >> 2] | 0;
      i3 = i9;
     }
     i2 = i6 + 12 | 0;
     i1 = (i3 | 0) == (i1 | 0);
     if ((i4 | 0) == (HEAP32[((i5 & 1) == 0 ? i20 : HEAP32[i23 >> 2] | 0) >> 2] | 0)) {
      if (i1) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] & 127](i6) | 0; else HEAP32[i2 >> 2] = i3 + 4;
      i11 = HEAP8[i43 >> 0] | 0;
      i7 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i20 >> 2] | 0) >>> 0 > 1 ? i43 : i7;
      break L46;
     }
     if (i1) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i1 = HEAP32[i3 >> 2] | 0;
     if ((i1 | 0) != (HEAP32[((HEAP8[i42 >> 0] & 1) == 0 ? i21 : HEAP32[i22 >> 2] | 0) >> 2] | 0)) {
      i35 = 102;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 4;
     HEAP8[i30 >> 0] = 1;
     i11 = HEAP8[i42 >> 0] | 0;
     i7 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i21 >> 2] | 0) >>> 0 > 1 ? i42 : i7;
    }
    break;
   }
  case 2:
   {
    if (!(i12 >>> 0 < 2 | (i7 | 0) != 0) ? !(i13 | (i12 | 0) == 2 & (HEAP8[i18 >> 0] | 0) != 0) : 0) {
     i7 = 0;
     break L46;
    }
    i2 = HEAP8[i45 >> 0] | 0;
    i3 = HEAP32[i14 >> 2] | 0;
    i1 = (i2 & 1) == 0 ? i15 : i3;
    L107 : do if ((i12 | 0) != 0 ? (HEAPU8[i31 + (i12 + -1) >> 0] | 0) < 2 : 0) {
     i4 = i3;
     while (1) {
      i10 = (i2 & 1) == 0;
      i3 = i1;
      if ((i3 | 0) == ((i10 ? i15 : i4) + ((i10 ? (i2 & 255) >>> 1 : HEAP32[i15 >> 2] | 0) << 2) | 0)) break;
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i25 >> 2] | 0) + 12 >> 2] & 31](i25, 8192, HEAP32[i3 >> 2] | 0) | 0)) {
       i35 = 109;
       break;
      }
      i2 = HEAP8[i45 >> 0] | 0;
      i4 = HEAP32[i14 >> 2] | 0;
      i1 = i3 + 4 | 0;
     }
     if ((i35 | 0) == 109) {
      i35 = 0;
      i2 = HEAP8[i45 >> 0] | 0;
      i4 = HEAP32[i14 >> 2] | 0;
     }
     i6 = (i2 & 1) == 0 ? i15 : i4;
     i3 = i6;
     i10 = i1 - i3 >> 2;
     i9 = HEAP8[i44 >> 0] | 0;
     i5 = (i9 & 1) == 0;
     i9 = i5 ? (i9 & 255) >>> 1 : HEAP32[i16 >> 2] | 0;
     if (i10 >>> 0 > i9 >>> 0) {
      i9 = i11;
      i5 = i11;
     } else {
      i9 = (i5 ? i16 : HEAP32[i17 >> 2] | 0) + (i9 << 2) | 0;
      i5 = i9 + (0 - i10 << 2) | 0;
      while (1) {
       if ((i5 | 0) == (i9 | 0)) {
        i9 = i11;
        i5 = i11;
        i3 = i1;
        break L107;
       }
       if ((HEAP32[i5 >> 2] | 0) != (HEAP32[i6 >> 2] | 0)) {
        i9 = i11;
        i5 = i11;
        break L107;
       }
       i6 = i6 + 4 | 0;
       i5 = i5 + 4 | 0;
      }
     }
    } else {
     i9 = i11;
     i4 = i3;
     i5 = i11;
     i3 = i1;
    } while (0);
    L121 : while (1) {
     i1 = (i2 & 1) == 0;
     i1 = (i1 ? i15 : i4) + ((i1 ? (i2 & 255) >>> 1 : HEAP32[i15 >> 2] | 0) << 2) | 0;
     i6 = i3;
     if ((i6 | 0) == (i1 | 0)) break;
     i1 = HEAP32[i36 >> 2] | 0;
     do if (i1) {
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
      if ((i1 | 0) == -1) {
       HEAP32[i36 >> 2] = 0;
       i2 = 1;
       break;
      } else {
       i2 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i2 = 1; while (0);
     do if (i5) {
      i1 = HEAP32[i5 + 12 >> 2] | 0;
      if ((i1 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i1 = HEAP32[i1 >> 2] | 0;
      if ((i1 | 0) != -1) if (i2 ^ (i9 | 0) == 0) {
       i1 = i9;
       i5 = i9;
       break;
      } else {
       i1 = i6;
       break L121;
      } else {
       HEAP32[i37 >> 2] = 0;
       i1 = 0;
       i35 = 130;
       break;
      }
     } else {
      i1 = i9;
      i35 = 130;
     } while (0);
     if ((i35 | 0) == 130) {
      i35 = 0;
      if (i2) {
       i1 = i6;
       break;
      } else i5 = 0;
     }
     i2 = HEAP32[i36 >> 2] | 0;
     i3 = HEAP32[i2 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
     if ((i2 | 0) != (HEAP32[i6 >> 2] | 0)) {
      i1 = i6;
      break;
     }
     i2 = HEAP32[i36 >> 2] | 0;
     i3 = i2 + 12 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else HEAP32[i3 >> 2] = i4 + 4;
     i9 = i1;
     i2 = HEAP8[i45 >> 0] | 0;
     i4 = HEAP32[i14 >> 2] | 0;
     i3 = i6 + 4 | 0;
    }
    if (i13 ? (i11 = HEAP8[i45 >> 0] | 0, i10 = (i11 & 1) == 0, (i1 | 0) != ((i10 ? i15 : HEAP32[i14 >> 2] | 0) + ((i10 ? (i11 & 255) >>> 1 : HEAP32[i15 >> 2] | 0) << 2) | 0)) : 0) {
     i35 = 142;
     break L21;
    }
    break;
   }
  case 4:
   {
    i9 = HEAP32[i32 >> 2] | 0;
    i5 = i11;
    i4 = i11;
    i1 = 0;
    L158 : while (1) {
     i2 = HEAP32[i36 >> 2] | 0;
     do if (i2) {
      i3 = HEAP32[i2 + 12 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
      if ((i2 | 0) == -1) {
       HEAP32[i36 >> 2] = 0;
       i3 = 1;
       break;
      } else {
       i3 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i3 = 1; while (0);
     do if (i4) {
      i2 = HEAP32[i4 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = HEAP32[i2 >> 2] | 0;
      if ((i2 | 0) != -1) if (i3 ^ (i5 | 0) == 0) {
       i2 = i5;
       i6 = i5;
       break;
      } else break L158; else {
       HEAP32[i37 >> 2] = 0;
       i2 = 0;
       i35 = 156;
       break;
      }
     } else {
      i2 = i5;
      i35 = 156;
     } while (0);
     if ((i35 | 0) == 156) {
      i35 = 0;
      if (i3) {
       i5 = i2;
       break;
      } else i6 = 0;
     }
     i3 = HEAP32[i36 >> 2] | 0;
     i4 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i4 = HEAP32[i4 >> 2] | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i25 >> 2] | 0) + 12 >> 2] & 31](i25, 2048, i4) | 0) {
      i3 = HEAP32[i34 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i24 >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i33, i34, i24);
       i3 = HEAP32[i34 >> 2] | 0;
      }
      HEAP32[i34 >> 2] = i3 + 4;
      HEAP32[i3 >> 2] = i4;
      i1 = i1 + 1 | 0;
     } else {
      i11 = HEAP8[i41 >> 0] | 0;
      if (!((i4 | 0) == (i9 | 0) & (i1 | 0 ? (((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 >> 2] | 0) | 0) != 0 : 0))) {
       i5 = i2;
       break;
      }
      if ((i8 | 0) == (HEAP32[i28 >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i46, i29, i28);
       i8 = HEAP32[i29 >> 2] | 0;
      }
      i11 = i8 + 4 | 0;
      HEAP32[i29 >> 2] = i11;
      HEAP32[i8 >> 2] = i1;
      i8 = i11;
      i1 = 0;
     }
     i3 = HEAP32[i36 >> 2] | 0;
     i4 = i3 + 12 | 0;
     i5 = HEAP32[i4 >> 2] | 0;
     if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
      i5 = i2;
      i4 = i6;
      continue;
     } else {
      HEAP32[i4 >> 2] = i5 + 4;
      i5 = i2;
      i4 = i6;
      continue;
     }
    }
    if (i1 | 0 ? (HEAP32[i46 >> 2] | 0) != (i8 | 0) : 0) {
     if ((i8 | 0) == (HEAP32[i28 >> 2] | 0)) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i46, i29, i28);
      i8 = HEAP32[i29 >> 2] | 0;
     }
     i11 = i8 + 4 | 0;
     HEAP32[i29 >> 2] = i11;
     HEAP32[i8 >> 2] = i1;
     i8 = i11;
    }
    i4 = HEAP32[i27 >> 2] | 0;
    L207 : do if ((i4 | 0) > 0) {
     i1 = HEAP32[i36 >> 2] | 0;
     do if (i1) {
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
      if ((i1 | 0) == -1) {
       HEAP32[i36 >> 2] = 0;
       i2 = 1;
       break;
      } else {
       i2 = (HEAP32[i36 >> 2] | 0) == 0;
       break;
      }
     } else i2 = 1; while (0);
     do if (i5) {
      i1 = HEAP32[i5 + 12 >> 2] | 0;
      if ((i1 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i1 = HEAP32[i1 >> 2] | 0;
      if ((i1 | 0) != -1) if (i2) break; else {
       i35 = 196;
       break L21;
      } else {
       HEAP32[i37 >> 2] = 0;
       i35 = 190;
       break;
      }
     } else i35 = 190; while (0);
     if ((i35 | 0) == 190) {
      i35 = 0;
      if (i2) {
       i35 = 196;
       break L21;
      } else i5 = 0;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
     if ((i1 | 0) != (HEAP32[i26 >> 2] | 0)) {
      i35 = 196;
      break L21;
     }
     i1 = HEAP32[i36 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
      i1 = i5;
     } else {
      HEAP32[i2 >> 2] = i3 + 4;
      i1 = i5;
     }
     while (1) {
      if ((i4 | 0) <= 0) break L207;
      i2 = HEAP32[i36 >> 2] | 0;
      do if (i2) {
       i3 = HEAP32[i2 + 12 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
       if ((i2 | 0) == -1) {
        HEAP32[i36 >> 2] = 0;
        i3 = 1;
        break;
       } else {
        i3 = (HEAP32[i36 >> 2] | 0) == 0;
        break;
       }
      } else i3 = 1; while (0);
      do if (i5) {
       i2 = HEAP32[i5 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i2 = HEAP32[i2 >> 2] | 0;
       if ((i2 | 0) != -1) if (i3 ^ (i1 | 0) == 0) {
        i6 = i1;
        i5 = i1;
        break;
       } else {
        i35 = 220;
        break L21;
       } else {
        HEAP32[i37 >> 2] = 0;
        i1 = 0;
        i35 = 214;
        break;
       }
      } else i35 = 214; while (0);
      if ((i35 | 0) == 214) {
       i35 = 0;
       if (i3) {
        i35 = 220;
        break L21;
       } else {
        i6 = i1;
        i5 = 0;
       }
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i25 >> 2] | 0) + 12 >> 2] & 31](i25, 2048, i1) | 0)) {
       i35 = 220;
       break L21;
      }
      if ((HEAP32[i34 >> 2] | 0) == (HEAP32[i24 >> 2] | 0)) __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i33, i34, i24);
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
      i2 = HEAP32[i34 >> 2] | 0;
      HEAP32[i34 >> 2] = i2 + 4;
      HEAP32[i2 >> 2] = i1;
      i4 = i4 + -1 | 0;
      HEAP32[i27 >> 2] = i4;
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
       i1 = i6;
       continue;
      } else {
       HEAP32[i2 >> 2] = i3 + 4;
       i1 = i6;
       continue;
      }
     }
    } while (0);
    if ((HEAP32[i34 >> 2] | 0) == (HEAP32[i33 >> 2] | 0)) {
     i35 = 230;
     break L21;
    }
    break;
   }
  default:
   {}
  } while (0);
  L280 : do if ((i35 | 0) == 46) while (1) {
   i35 = 0;
   i2 = HEAP32[i36 >> 2] | 0;
   do if (i2) {
    i3 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i36 >> 2] = 0;
     i3 = 1;
     break;
    } else {
     i3 = (HEAP32[i36 >> 2] | 0) == 0;
     break;
    }
   } else i3 = 1; while (0);
   do if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) != -1) if (i3 ^ (i1 | 0) == 0) {
     i5 = i1;
     i4 = i1;
     break;
    } else break L280; else {
     HEAP32[i37 >> 2] = 0;
     i1 = 0;
     i35 = 59;
     break;
    }
   } else i35 = 59; while (0);
   if ((i35 | 0) == 59) {
    i35 = 0;
    if (i3) break L280; else {
     i5 = i1;
     i4 = 0;
    }
   }
   i1 = HEAP32[i36 >> 2] | 0;
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i25 >> 2] | 0) + 12 >> 2] & 31](i25, 8192, i1) | 0)) break L280;
   i1 = HEAP32[i36 >> 2] | 0;
   i2 = i1 + 12 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
    HEAP32[i2 >> 2] = i3 + 4;
    i1 = HEAP32[i3 >> 2] | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i44, i1);
   i1 = i5;
   i35 = 46;
  } while (0);
  i12 = i12 + 1 | 0;
 }
 L315 : do if ((i35 | 0) == 44) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 102) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 142) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 196) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 220) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 230) {
  HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
  i2 = 0;
 } else if ((i35 | 0) == 232) {
  L317 : do if (i7 | 0) {
   i5 = i7 + 4 | 0;
   i6 = i7 + 8 | 0;
   i4 = 1;
   L319 : while (1) {
    i1 = HEAP8[i7 >> 0] | 0;
    if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i5 >> 2] | 0;
    if (i4 >>> 0 >= i1 >>> 0) break L317;
    i1 = HEAP32[i36 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i36 >> 2] = 0;
      i3 = 1;
      break;
     } else {
      i3 = (HEAP32[i36 >> 2] | 0) == 0;
      break;
     }
    } else i3 = 1; while (0);
    i1 = HEAP32[i37 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
     if ((i1 | 0) != -1) if (i3) break; else break L319; else {
      HEAP32[i37 >> 2] = 0;
      i35 = 251;
      break;
     }
    } else i35 = 251; while (0);
    if ((i35 | 0) == 251 ? (i35 = 0, i3) : 0) break;
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
    if (!(HEAP8[i7 >> 0] & 1)) i2 = i5; else i2 = HEAP32[i6 >> 2] | 0;
    if ((i1 | 0) != (HEAP32[i2 + (i4 << 2) >> 2] | 0)) break;
    i1 = i4 + 1 | 0;
    i2 = HEAP32[i36 >> 2] | 0;
    i3 = i2 + 12 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
     i4 = i1;
     continue;
    } else {
     HEAP32[i3 >> 2] = i4 + 4;
     i4 = i1;
     continue;
    }
   }
   HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
   i2 = 0;
   break L315;
  } while (0);
  i1 = HEAP32[i46 >> 2] | 0;
  if ((i1 | 0) != (i8 | 0)) {
   HEAP32[i39 >> 2] = 0;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i41, i1, i8, i39);
   if (!(HEAP32[i39 >> 2] | 0)) {
    i2 = 1;
    break;
   } else {
    HEAP32[i38 >> 2] = HEAP32[i38 >> 2] | 4;
    i2 = 0;
    break;
   }
  } else i2 = 1;
 } while (0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i44);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i42);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i43);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i45);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i41);
 i1 = HEAP32[i46 >> 2] | 0;
 HEAP32[i46 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i40 >> 2] & 255](i1);
 STACKTOP = i47;
 return i2 | 0;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i40, i41, i3, i4, i5, i42, i34, i2, i37, i38, i1) {
 i40 = i40 | 0;
 i41 = i41 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i42 = i42 | 0;
 i34 = i34 | 0;
 i2 = i2 | 0;
 i37 = i37 | 0;
 i38 = i38 | 0;
 i1 = i1 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i35 = 0, i36 = 0, i39 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0;
 i51 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 i29 = i51 + 88 | 0;
 i9 = i51 + 96 | 0;
 i50 = i51 + 80 | 0;
 i33 = i51 + 72 | 0;
 i32 = i51 + 68 | 0;
 i35 = i51 + 500 | 0;
 i30 = i51 + 497 | 0;
 i36 = i51 + 496 | 0;
 i45 = i51 + 56 | 0;
 i49 = i51 + 44 | 0;
 i47 = i51 + 32 | 0;
 i46 = i51 + 20 | 0;
 i48 = i51 + 8 | 0;
 i31 = i51 + 4 | 0;
 i43 = i51;
 HEAP32[i29 >> 2] = i1;
 HEAP32[i50 >> 2] = i9;
 i44 = i50 + 4 | 0;
 HEAP32[i44 >> 2] = 220;
 HEAP32[i33 >> 2] = i9;
 HEAP32[i32 >> 2] = i9 + 400;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i45 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i49 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i47 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i46 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i48 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri(i3, i4, i35, i30, i36, i45, i49, i47, i46, i31);
 HEAP32[i38 >> 2] = HEAP32[i37 >> 2];
 i22 = i2 + 8 | 0;
 i23 = i47 + 4 | 0;
 i24 = i46 + 4 | 0;
 i25 = i46 + 8 | 0;
 i26 = i46 + 1 | 0;
 i27 = i47 + 8 | 0;
 i28 = i47 + 1 | 0;
 i13 = (i5 & 512 | 0) != 0;
 i14 = i49 + 8 | 0;
 i15 = i49 + 1 | 0;
 i16 = i49 + 4 | 0;
 i17 = i48 + 4 | 0;
 i18 = i48 + 8 | 0;
 i19 = i48 + 1 | 0;
 i20 = i35 + 3 | 0;
 i21 = i45 + 4 | 0;
 i12 = 0;
 i8 = 0;
 L21 : while (1) {
  if (i12 >>> 0 >= 4) {
   i39 = 218;
   break;
  }
  i1 = HEAP32[i40 >> 2] | 0;
  do if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
    HEAP32[i40 >> 2] = 0;
    i1 = 0;
    break;
   } else {
    i1 = HEAP32[i40 >> 2] | 0;
    break;
   }
  } else i1 = 0; while (0);
  i1 = (i1 | 0) == 0;
  i2 = HEAP32[i41 >> 2] | 0;
  do if (i2) {
   if ((HEAP32[i2 + 12 >> 2] | 0) != (HEAP32[i2 + 16 >> 2] | 0)) if (i1) break; else {
    i39 = 218;
    break L21;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) != -1) if (i1) break; else {
    i39 = 218;
    break L21;
   } else {
    HEAP32[i41 >> 2] = 0;
    i39 = 28;
    break;
   }
  } else i39 = 28; while (0);
  if ((i39 | 0) == 28) {
   i39 = 0;
   if (i1) {
    i39 = 218;
    break;
   } else i2 = 0;
  }
  L42 : do switch (HEAP8[i35 + i12 >> 0] | 0) {
  case 1:
   {
    if ((i12 | 0) != 3) {
     i1 = HEAP32[i40 >> 2] | 0;
     i3 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i3 >> 0] | 0;
     if ((i1 & 255) << 24 >> 24 <= -1) {
      i39 = 42;
      break L21;
     }
     if (!(HEAP16[(HEAP32[i22 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) {
      i39 = 42;
      break L21;
     }
     i1 = HEAP32[i40 >> 2] | 0;
     i3 = i1 + 12 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
      HEAP32[i3 >> 2] = i4 + 1;
      i1 = HEAPU8[i4 >> 0] | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i48, i1 & 255);
     i1 = i2;
     i3 = i2;
     i39 = 44;
    }
    break;
   }
  case 0:
   {
    if ((i12 | 0) != 3) {
     i1 = i2;
     i3 = i2;
     i39 = 44;
    }
    break;
   }
  case 3:
   {
    i4 = HEAP8[i47 >> 0] | 0;
    i1 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i23 >> 2] | 0;
    i3 = HEAP8[i46 >> 0] | 0;
    i3 = (i3 & 1) == 0 ? (i3 & 255) >>> 1 : HEAP32[i24 >> 2] | 0;
    if ((i1 | 0) != (0 - i3 | 0)) {
     i5 = (i1 | 0) == 0;
     i6 = HEAP32[i40 >> 2] | 0;
     i7 = HEAP32[i6 + 12 >> 2] | 0;
     i1 = HEAP32[i6 + 16 >> 2] | 0;
     i2 = (i7 | 0) == (i1 | 0);
     if (i5 | (i3 | 0) == 0) {
      if (i2) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i1 = HEAPU8[i7 >> 0] | 0;
      i1 = i1 & 255;
      if (i5) {
       if (i1 << 24 >> 24 != (HEAP8[((HEAP8[i46 >> 0] & 1) == 0 ? i26 : HEAP32[i25 >> 2] | 0) >> 0] | 0)) break L42;
       i1 = HEAP32[i40 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 1;
       HEAP8[i34 >> 0] = 1;
       i11 = HEAP8[i46 >> 0] | 0;
       i8 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i24 >> 2] | 0) >>> 0 > 1 ? i46 : i8;
       break L42;
      }
      if (i1 << 24 >> 24 != (HEAP8[((HEAP8[i47 >> 0] & 1) == 0 ? i28 : HEAP32[i27 >> 2] | 0) >> 0] | 0)) {
       HEAP8[i34 >> 0] = 1;
       break L42;
      }
      i1 = HEAP32[i40 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 1;
      i11 = HEAP8[i47 >> 0] | 0;
      i8 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i23 >> 2] | 0) >>> 0 > 1 ? i47 : i8;
      break L42;
     }
     if (i2) {
      i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0;
      i1 = HEAP32[i40 >> 2] | 0;
      i4 = HEAP8[i47 >> 0] | 0;
      i6 = i1;
      i3 = HEAP32[i1 + 12 >> 2] | 0;
      i1 = HEAP32[i1 + 16 >> 2] | 0;
     } else {
      i5 = HEAPU8[i7 >> 0] | 0;
      i3 = i7;
     }
     i2 = i6 + 12 | 0;
     i1 = (i3 | 0) == (i1 | 0);
     if ((i5 & 255) << 24 >> 24 == (HEAP8[((i4 & 1) == 0 ? i28 : HEAP32[i27 >> 2] | 0) >> 0] | 0)) {
      if (i1) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] & 127](i6) | 0; else HEAP32[i2 >> 2] = i3 + 1;
      i11 = HEAP8[i47 >> 0] | 0;
      i8 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i23 >> 2] | 0) >>> 0 > 1 ? i47 : i8;
      break L42;
     }
     if (i1) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i1 = HEAPU8[i3 >> 0] | 0;
     if ((i1 & 255) << 24 >> 24 != (HEAP8[((HEAP8[i46 >> 0] & 1) == 0 ? i26 : HEAP32[i25 >> 2] | 0) >> 0] | 0)) {
      i39 = 98;
      break L21;
     }
     i1 = HEAP32[i40 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i2 >> 2] = i3 + 1;
     HEAP8[i34 >> 0] = 1;
     i11 = HEAP8[i46 >> 0] | 0;
     i8 = ((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i24 >> 2] | 0) >>> 0 > 1 ? i46 : i8;
    }
    break;
   }
  case 2:
   {
    if (!(i12 >>> 0 < 2 | (i8 | 0) != 0) ? !(i13 | (i12 | 0) == 2 & (HEAP8[i20 >> 0] | 0) != 0) : 0) {
     i8 = 0;
     break L42;
    }
    i7 = HEAP8[i49 >> 0] | 0;
    i1 = (i7 & 1) == 0;
    i10 = HEAP32[i14 >> 2] | 0;
    i3 = i1 ? i15 : i10;
    i11 = i3;
    L104 : do if ((i12 | 0) != 0 ? (HEAPU8[i35 + (i12 + -1) >> 0] | 0) < 2 : 0) {
     i1 = i3 + (i1 ? (i7 & 255) >>> 1 : HEAP32[i16 >> 2] | 0) | 0;
     i6 = i11;
     while (1) {
      i4 = i6;
      if ((i4 | 0) == (i1 | 0)) break;
      i5 = HEAP8[i4 >> 0] | 0;
      if (i5 << 24 >> 24 <= -1) break;
      if (!(HEAP16[(HEAP32[i22 >> 2] | 0) + (i5 << 24 >> 24 << 1) >> 1] & 8192)) break;
      i6 = i4 + 1 | 0;
     }
     i5 = i6 - i11 | 0;
     i4 = HEAP8[i48 >> 0] | 0;
     i1 = (i4 & 1) == 0;
     i4 = i1 ? (i4 & 255) >>> 1 : HEAP32[i17 >> 2] | 0;
     if (i5 >>> 0 <= i4 >>> 0) {
      i4 = (i1 ? i19 : HEAP32[i18 >> 2] | 0) + i4 | 0;
      i1 = i4 + (0 - i5) | 0;
      while (1) {
       if ((i1 | 0) == (i4 | 0)) {
        i4 = i2;
        i3 = i7;
        i1 = i10;
        i5 = i2;
        i2 = i6;
        break L104;
       }
       if ((HEAP8[i1 >> 0] | 0) != (HEAP8[i3 >> 0] | 0)) {
        i4 = i2;
        i3 = i7;
        i1 = i10;
        i5 = i2;
        i2 = i11;
        break L104;
       }
       i3 = i3 + 1 | 0;
       i1 = i1 + 1 | 0;
      }
     } else {
      i4 = i2;
      i3 = i7;
      i1 = i10;
      i5 = i2;
      i2 = i11;
     }
    } else {
     i4 = i2;
     i3 = i7;
     i1 = i10;
     i5 = i2;
     i2 = i11;
    } while (0);
    L118 : while (1) {
     i6 = (i3 & 1) == 0;
     i1 = (i6 ? i15 : i1) + (i6 ? (i3 & 255) >>> 1 : HEAP32[i16 >> 2] | 0) | 0;
     i6 = i2;
     if ((i6 | 0) == (i1 | 0)) break;
     i1 = HEAP32[i40 >> 2] | 0;
     do if (i1) {
      if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
       HEAP32[i40 >> 2] = 0;
       i1 = 0;
       break;
      } else {
       i1 = HEAP32[i40 >> 2] | 0;
       break;
      }
     } else i1 = 0; while (0);
     i2 = (i1 | 0) == 0;
     do if (i5) {
      if ((HEAP32[i5 + 12 >> 2] | 0) != (HEAP32[i5 + 16 >> 2] | 0)) if (i2) {
       i1 = i4;
       break;
      } else {
       i1 = i6;
       break L118;
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0) != -1) if (i2 ^ (i4 | 0) == 0) {
       i1 = i4;
       i5 = i4;
       break;
      } else {
       i1 = i6;
       break L118;
      } else {
       HEAP32[i41 >> 2] = 0;
       i1 = 0;
       i39 = 124;
       break;
      }
     } else {
      i1 = i4;
      i39 = 124;
     } while (0);
     if ((i39 | 0) == 124) {
      i39 = 0;
      if (i2) {
       i1 = i6;
       break;
      } else i5 = 0;
     }
     i2 = HEAP32[i40 >> 2] | 0;
     i3 = HEAP32[i2 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAPU8[i3 >> 0] | 0;
     if ((i2 & 255) << 24 >> 24 != (HEAP8[i6 >> 0] | 0)) {
      i1 = i6;
      break;
     }
     i2 = HEAP32[i40 >> 2] | 0;
     i3 = i2 + 12 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else HEAP32[i3 >> 2] = i4 + 1;
     i4 = i1;
     i3 = HEAP8[i49 >> 0] | 0;
     i1 = HEAP32[i14 >> 2] | 0;
     i2 = i6 + 1 | 0;
    }
    if (i13 ? (i11 = HEAP8[i49 >> 0] | 0, i10 = (i11 & 1) == 0, (i1 | 0) != ((i10 ? i15 : HEAP32[i14 >> 2] | 0) + (i10 ? (i11 & 255) >>> 1 : HEAP32[i16 >> 2] | 0) | 0)) : 0) {
     i39 = 136;
     break L21;
    }
    break;
   }
  case 4:
   {
    i7 = HEAP8[i36 >> 0] | 0;
    i5 = i2;
    i4 = i2;
    i1 = 0;
    L151 : while (1) {
     i2 = HEAP32[i40 >> 2] | 0;
     do if (i2) {
      if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
       HEAP32[i40 >> 2] = 0;
       i2 = 0;
       break;
      } else {
       i2 = HEAP32[i40 >> 2] | 0;
       break;
      }
     } else i2 = 0; while (0);
     i3 = (i2 | 0) == 0;
     do if (i4) {
      if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i3) {
       i2 = i5;
       i6 = i4;
       break;
      } else {
       i2 = i5;
       break L151;
      }
      if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i3 ^ (i5 | 0) == 0) {
       i2 = i5;
       i6 = i5;
       break;
      } else {
       i2 = i5;
       break L151;
      } else {
       HEAP32[i41 >> 2] = 0;
       i2 = 0;
       i39 = 147;
       break;
      }
     } else {
      i2 = i5;
      i39 = 147;
     } while (0);
     if ((i39 | 0) == 147) {
      i39 = 0;
      if (i3) break; else i6 = 0;
     }
     i3 = HEAP32[i40 >> 2] | 0;
     i4 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i3 = HEAPU8[i4 >> 0] | 0;
     i4 = i3 & 255;
     if (i4 << 24 >> 24 > -1 ? (HEAP16[(HEAP32[i22 >> 2] | 0) + (i3 << 24 >> 24 << 1) >> 1] & 2048) != 0 : 0) {
      i3 = HEAP32[i38 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i29 >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i37, i38, i29);
       i3 = HEAP32[i38 >> 2] | 0;
      }
      HEAP32[i38 >> 2] = i3 + 1;
      HEAP8[i3 >> 0] = i4;
      i1 = i1 + 1 | 0;
     } else {
      i11 = HEAP8[i45 >> 0] | 0;
      if (!(i4 << 24 >> 24 == i7 << 24 >> 24 & (i1 | 0 ? (((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i21 >> 2] | 0) | 0) != 0 : 0))) break;
      if ((i9 | 0) == (HEAP32[i32 >> 2] | 0)) {
       __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i50, i33, i32);
       i9 = HEAP32[i33 >> 2] | 0;
      }
      i11 = i9 + 4 | 0;
      HEAP32[i33 >> 2] = i11;
      HEAP32[i9 >> 2] = i1;
      i9 = i11;
      i1 = 0;
     }
     i3 = HEAP32[i40 >> 2] | 0;
     i4 = i3 + 12 | 0;
     i5 = HEAP32[i4 >> 2] | 0;
     if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
      i5 = i2;
      i4 = i6;
      continue;
     } else {
      HEAP32[i4 >> 2] = i5 + 1;
      i5 = i2;
      i4 = i6;
      continue;
     }
    }
    if (i1 | 0 ? (HEAP32[i50 >> 2] | 0) != (i9 | 0) : 0) {
     if ((i9 | 0) == (HEAP32[i32 >> 2] | 0)) {
      __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i50, i33, i32);
      i9 = HEAP32[i33 >> 2] | 0;
     }
     i11 = i9 + 4 | 0;
     HEAP32[i33 >> 2] = i11;
     HEAP32[i9 >> 2] = i1;
     i9 = i11;
    }
    i4 = HEAP32[i31 >> 2] | 0;
    L198 : do if ((i4 | 0) > 0) {
     i1 = HEAP32[i40 >> 2] | 0;
     do if (i1) {
      if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
       HEAP32[i40 >> 2] = 0;
       i1 = 0;
       break;
      } else {
       i1 = HEAP32[i40 >> 2] | 0;
       break;
      }
     } else i1 = 0; while (0);
     i1 = (i1 | 0) == 0;
     do if (i2) {
      if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1 : 0) {
       HEAP32[i41 >> 2] = 0;
       i39 = 179;
       break;
      }
      if (i1) i5 = i2; else {
       i39 = 184;
       break L21;
      }
     } else i39 = 179; while (0);
     if ((i39 | 0) == 179) {
      i39 = 0;
      if (i1) {
       i39 = 184;
       break L21;
      } else i5 = 0;
     }
     i1 = HEAP32[i40 >> 2] | 0;
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
     if ((i1 & 255) << 24 >> 24 != (HEAP8[i30 >> 0] | 0)) {
      i39 = 184;
      break L21;
     }
     i1 = HEAP32[i40 >> 2] | 0;
     i2 = i1 + 12 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
      i1 = i5;
      i3 = i5;
     } else {
      HEAP32[i2 >> 2] = i3 + 1;
      i1 = i5;
      i3 = i5;
     }
     while (1) {
      if ((i4 | 0) <= 0) break L198;
      i2 = HEAP32[i40 >> 2] | 0;
      do if (i2) {
       if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
        HEAP32[i40 >> 2] = 0;
        i2 = 0;
        break;
       } else {
        i2 = HEAP32[i40 >> 2] | 0;
        break;
       }
      } else i2 = 0; while (0);
      i2 = (i2 | 0) == 0;
      do if (i3) {
       if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i2) {
        i6 = i1;
        i5 = i3;
        break;
       } else {
        i39 = 206;
        break L21;
       }
       if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) != -1) if (i2 ^ (i1 | 0) == 0) {
        i6 = i1;
        i5 = i1;
        break;
       } else {
        i39 = 206;
        break L21;
       } else {
        HEAP32[i41 >> 2] = 0;
        i1 = 0;
        i39 = 199;
        break;
       }
      } else i39 = 199; while (0);
      if ((i39 | 0) == 199) {
       i39 = 0;
       if (i2) {
        i39 = 206;
        break L21;
       } else {
        i6 = i1;
        i5 = 0;
       }
      }
      i1 = HEAP32[i40 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
      if ((i1 & 255) << 24 >> 24 <= -1) {
       i39 = 206;
       break L21;
      }
      if (!(HEAP16[(HEAP32[i22 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 2048)) {
       i39 = 206;
       break L21;
      }
      if ((HEAP32[i38 >> 2] | 0) == (HEAP32[i29 >> 2] | 0)) __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i37, i38, i29);
      i1 = HEAP32[i40 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
      i2 = HEAP32[i38 >> 2] | 0;
      HEAP32[i38 >> 2] = i2 + 1;
      HEAP8[i2 >> 0] = i1;
      i4 = i4 + -1 | 0;
      HEAP32[i31 >> 2] = i4;
      i1 = HEAP32[i40 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
       i1 = i6;
       i3 = i5;
       continue;
      } else {
       HEAP32[i2 >> 2] = i3 + 1;
       i1 = i6;
       i3 = i5;
       continue;
      }
     }
    } while (0);
    if ((HEAP32[i38 >> 2] | 0) == (HEAP32[i37 >> 2] | 0)) {
     i39 = 216;
     break L21;
    }
    break;
   }
  default:
   {}
  } while (0);
  L262 : do if ((i39 | 0) == 44) while (1) {
   i39 = 0;
   i2 = HEAP32[i40 >> 2] | 0;
   do if (i2) {
    if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
     HEAP32[i40 >> 2] = 0;
     i2 = 0;
     break;
    } else {
     i2 = HEAP32[i40 >> 2] | 0;
     break;
    }
   } else i2 = 0; while (0);
   i2 = (i2 | 0) == 0;
   do if (i3) {
    if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i2) {
     i5 = i1;
     i4 = i3;
     break;
    } else break L262;
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) != -1) if (i2 ^ (i1 | 0) == 0) {
     i5 = i1;
     i4 = i1;
     break;
    } else break L262; else {
     HEAP32[i41 >> 2] = 0;
     i1 = 0;
     i39 = 54;
     break;
    }
   } else i39 = 54; while (0);
   if ((i39 | 0) == 54) {
    i39 = 0;
    if (i2) break L262; else {
     i5 = i1;
     i4 = 0;
    }
   }
   i1 = HEAP32[i40 >> 2] | 0;
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
   if ((i1 & 255) << 24 >> 24 <= -1) break L262;
   if (!(HEAP16[(HEAP32[i22 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) break L262;
   i1 = HEAP32[i40 >> 2] | 0;
   i2 = i1 + 12 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else {
    HEAP32[i2 >> 2] = i3 + 1;
    i1 = HEAPU8[i3 >> 0] | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i48, i1 & 255);
   i1 = i5;
   i3 = i4;
   i39 = 44;
  } while (0);
  i12 = i12 + 1 | 0;
 }
 L294 : do if ((i39 | 0) == 42) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 98) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 136) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 184) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 206) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 216) {
  HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
  i2 = 0;
 } else if ((i39 | 0) == 218) {
  L296 : do if (i8 | 0) {
   i5 = i8 + 1 | 0;
   i6 = i8 + 8 | 0;
   i7 = i8 + 4 | 0;
   i3 = 1;
   L298 : while (1) {
    i1 = HEAP8[i8 >> 0] | 0;
    if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i7 >> 2] | 0;
    if (i3 >>> 0 >= i1 >>> 0) break L296;
    i1 = HEAP32[i40 >> 2] | 0;
    do if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
      HEAP32[i40 >> 2] = 0;
      i1 = 0;
      break;
     } else {
      i1 = HEAP32[i40 >> 2] | 0;
      break;
     }
    } else i1 = 0; while (0);
    i1 = (i1 | 0) == 0;
    i2 = HEAP32[i41 >> 2] | 0;
    do if (i2) {
     if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1 : 0) {
      HEAP32[i41 >> 2] = 0;
      i39 = 234;
      break;
     }
     if (!i1) break L298;
    } else i39 = 234; while (0);
    if ((i39 | 0) == 234 ? (i39 = 0, i1) : 0) break;
    i1 = HEAP32[i40 >> 2] | 0;
    i2 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
    if (!(HEAP8[i8 >> 0] & 1)) i2 = i5; else i2 = HEAP32[i6 >> 2] | 0;
    if ((i1 & 255) << 24 >> 24 != (HEAP8[i2 + i3 >> 0] | 0)) break;
    i1 = i3 + 1 | 0;
    i2 = HEAP32[i40 >> 2] | 0;
    i3 = i2 + 12 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
     i3 = i1;
     continue;
    } else {
     HEAP32[i3 >> 2] = i4 + 1;
     i3 = i1;
     continue;
    }
   }
   HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
   i2 = 0;
   break L294;
  } while (0);
  i1 = HEAP32[i50 >> 2] | 0;
  if ((i1 | 0) != (i9 | 0)) {
   HEAP32[i43 >> 2] = 0;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i45, i1, i9, i43);
   if (!(HEAP32[i43 >> 2] | 0)) {
    i2 = 1;
    break;
   } else {
    HEAP32[i42 >> 2] = HEAP32[i42 >> 2] | 4;
    i2 = 0;
    break;
   }
  } else i2 = 1;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i48);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i46);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i47);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i49);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
 i1 = HEAP32[i50 >> 2] | 0;
 HEAP32[i50 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i44 >> 2] & 255](i1);
 STACKTOP = i51;
 return i2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i22, i19, i20) {
 i22 = i22 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i21 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0;
 i28 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i23 = i28 + 60 | 0;
 i21 = i28 + 48 | 0;
 i12 = i28 + 36 | 0;
 i13 = i28 + 24 | 0;
 i14 = i28 + 12 | 0;
 i15 = i28;
 L1 : do if ((i22 | 0) == (i19 | 0)) i1 = i22; else {
  i25 = i20 + 56 | 0;
  i26 = HEAP32[i25 >> 2] | 0;
  i18 = i26 + 1 | 0;
  HEAP32[i25 >> 2] = i18;
  i27 = i20 + 61 | 0;
  i24 = HEAP8[i27 >> 0] | 0;
  if (i18 >>> 0 > 1) HEAP8[i27 >> 0] = 1;
  i1 = HEAP8[i22 >> 0] | 0;
  L6 : do switch (i1 | 0) {
  case 84:
  case 71:
   {
    L126 : do if ((i19 - i22 | 0) > 2) {
     switch (i1 | 0) {
     case 84:
      break;
     case 71:
      switch (HEAP8[i22 + 1 >> 0] | 0) {
      case 86:
       {
        i23 = i22 + 2 | 0;
        i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i23, i19, i20) | 0;
        if ((i1 | 0) == (i23 | 0)) {
         i1 = i22;
         break L126;
        }
        i2 = HEAP32[i20 + 4 >> 2] | 0;
        if ((HEAP32[i20 >> 2] | 0) == (i2 | 0)) {
         i1 = i22;
         break L126;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 39951) | 0;
        break L126;
       }
      case 82:
       {
        i23 = i22 + 2 | 0;
        i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i23, i19, i20) | 0;
        if ((i1 | 0) == (i23 | 0)) {
         i1 = i22;
         break L126;
        }
        i2 = HEAP32[i20 + 4 >> 2] | 0;
        if ((HEAP32[i20 >> 2] | 0) == (i2 | 0)) {
         i1 = i22;
         break L126;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 39971) | 0;
        break L126;
       }
      default:
       {
        i1 = i22;
        break L126;
       }
      }
     default:
      {
       i1 = i22;
       break L126;
      }
     }
     i1 = i22 + 1 | 0;
     switch (HEAP8[i1 >> 0] | 0) {
     case 86:
      {
       i23 = i22 + 2 | 0;
       i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i23, i19, i20) | 0;
       if ((i1 | 0) == (i23 | 0)) {
        i1 = i22;
        break L126;
       }
       i2 = HEAP32[i20 + 4 >> 2] | 0;
       if ((HEAP32[i20 >> 2] | 0) == (i2 | 0)) {
        i1 = i22;
        break L126;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 39800) | 0;
       break L126;
      }
     case 84:
      {
       i23 = i22 + 2 | 0;
       i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i23, i19, i20) | 0;
       if ((i1 | 0) == (i23 | 0)) {
        i1 = i22;
        break L126;
       }
       i2 = HEAP32[i20 + 4 >> 2] | 0;
       if ((HEAP32[i20 >> 2] | 0) == (i2 | 0)) {
        i1 = i22;
        break L126;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 39812) | 0;
       break L126;
      }
     case 73:
      {
       i23 = i22 + 2 | 0;
       i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i23, i19, i20) | 0;
       if ((i1 | 0) == (i23 | 0)) {
        i1 = i22;
        break L126;
       }
       i2 = HEAP32[i20 + 4 >> 2] | 0;
       if ((HEAP32[i20 >> 2] | 0) == (i2 | 0)) {
        i1 = i22;
        break L126;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 39821) | 0;
       break L126;
      }
     case 83:
      {
       i23 = i22 + 2 | 0;
       i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i23, i19, i20) | 0;
       if ((i1 | 0) == (i23 | 0)) {
        i1 = i22;
        break L126;
       }
       i2 = HEAP32[i20 + 4 >> 2] | 0;
       if ((HEAP32[i20 >> 2] | 0) == (i2 | 0)) {
        i1 = i22;
        break L126;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 39835) | 0;
       break L126;
      }
     case 99:
      {
       i23 = i22 + 2 | 0;
       i1 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i23, i19) | 0;
       if ((i1 | 0) == (i23 | 0)) {
        i1 = i22;
        break L126;
       }
       i2 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i1, i19) | 0;
       if ((i2 | 0) == (i1 | 0)) {
        i1 = i22;
        break L126;
       }
       i1 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i2, i19, i20) | 0;
       if ((i1 | 0) == (i2 | 0)) {
        i1 = i22;
        break L126;
       }
       i2 = HEAP32[i20 + 4 >> 2] | 0;
       if ((HEAP32[i20 >> 2] | 0) == (i2 | 0)) {
        i1 = i22;
        break L126;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 39854) | 0;
       break L126;
      }
     case 67:
      {
       i18 = i22 + 2 | 0;
       i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i18, i19, i20) | 0;
       if ((i1 | 0) == (i18 | 0)) {
        i1 = i22;
        break L126;
       }
       i2 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i1, i19) | 0;
       if ((i2 | 0) == (i1 | 0) | (i2 | 0) == (i19 | 0)) {
        i1 = i22;
        break L126;
       }
       if ((HEAP8[i2 >> 0] | 0) != 95) {
        i1 = i22;
        break L126;
       }
       i18 = i2 + 1 | 0;
       i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i18, i19, i20) | 0;
       if ((i1 | 0) == (i18 | 0)) {
        i1 = i22;
        break L126;
       }
       i4 = i20 + 4 | 0;
       i2 = HEAP32[i4 >> 2] | 0;
       if (((i2 - (HEAP32[i20 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
        i1 = i22;
        break L126;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i23, i2 + -24 | 0);
       i5 = HEAP32[i4 >> 2] | 0;
       i2 = i5 + -24 | 0;
       i3 = i5;
       while (1) {
        if ((i3 | 0) == (i2 | 0)) break;
        i22 = i3 + -24 | 0;
        HEAP32[i4 >> 2] = i22;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i22);
        i3 = HEAP32[i4 >> 2] | 0;
       }
       i11 = i5 + -48 | 0;
       i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i23, 0, 39881) | 0;
       HEAP32[i13 >> 2] = HEAP32[i2 >> 2];
       HEAP32[i13 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
       HEAP32[i13 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i2 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 39906) | 0;
       HEAP32[i12 >> 2] = HEAP32[i2 >> 2];
       HEAP32[i12 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
       HEAP32[i12 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i2 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i14, (HEAP32[i4 >> 2] | 0) + -24 | 0);
       i2 = HEAP8[i14 >> 0] | 0;
       i3 = (i2 & 1) == 0;
       i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i12, i3 ? i14 + 1 | 0 : HEAP32[i14 + 8 >> 2] | 0, i3 ? (i2 & 255) >>> 1 : HEAP32[i14 + 4 >> 2] | 0) | 0;
       HEAP32[i21 >> 2] = HEAP32[i2 >> 2];
       HEAP32[i21 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
       HEAP32[i21 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
       i3 = 0;
       while (1) {
        if ((i3 | 0) == 3) break;
        HEAP32[i2 + (i3 << 2) >> 2] = 0;
        i3 = i3 + 1 | 0;
       }
       do if (HEAP8[i11 >> 0] & 1) {
        i10 = i5 + -40 | 0;
        HEAP8[HEAP32[i10 >> 2] >> 0] = 0;
        i7 = i5 + -44 | 0;
        HEAP32[i7 >> 2] = 0;
        i2 = HEAP8[i11 >> 0] | 0;
        if (!(i2 & 1)) i6 = 10; else {
         i6 = HEAP32[i11 >> 2] | 0;
         i2 = i6 & 255;
         i6 = (i6 & -2) + -1 | 0;
        }
        if (!(i2 & 1)) {
         i3 = (i2 & 255) >>> 1;
         if ((i2 & 255) < 22) {
          i5 = 10;
          i8 = i3;
          i9 = 1;
         } else {
          i5 = (i3 + 16 & 240) + -1 | 0;
          i8 = i3;
          i9 = 1;
         }
        } else {
         i5 = 10;
         i8 = 0;
         i9 = 0;
        }
        if ((i5 | 0) != (i6 | 0)) {
         if ((i5 | 0) == 10) {
          i4 = i11 + 1 | 0;
          i3 = HEAP32[i10 >> 2] | 0;
          if (i9) {
           _memcpy(i4 | 0, i3 | 0, ((i2 & 255) >>> 1) + 1 | 0) | 0;
           _free(i3);
          } else {
           HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
           _free(i3);
          }
          HEAP8[i11 >> 0] = i8 << 1;
          break;
         }
         i3 = i5 + 1 | 0;
         i4 = _malloc(i3) | 0;
         if (!(i5 >>> 0 <= i6 >>> 0 & (i4 | 0) == 0)) {
          if (i9) _memcpy(i4 | 0, i11 + 1 | 0, ((i2 & 255) >>> 1) + 1 | 0) | 0; else {
           i22 = HEAP32[i10 >> 2] | 0;
           HEAP8[i4 >> 0] = HEAP8[i22 >> 0] | 0;
           _free(i22);
          }
          HEAP32[i11 >> 2] = i3 | 1;
          HEAP32[i7 >> 2] = i8;
          HEAP32[i10 >> 2] = i4;
         }
        }
       } else {
        HEAP8[i11 + 1 >> 0] = 0;
        HEAP8[i11 >> 0] = 0;
       } while (0);
       HEAP32[i11 >> 2] = HEAP32[i21 >> 2];
       HEAP32[i11 + 4 >> 2] = HEAP32[i21 + 4 >> 2];
       HEAP32[i11 + 8 >> 2] = HEAP32[i21 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i21 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i21);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i23);
       break L126;
      }
     default:
      {
       i2 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i1, i19) | 0;
       if ((i2 | 0) == (i1 | 0)) {
        i1 = i22;
        break L126;
       }
       i1 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i2, i19, i20) | 0;
       if ((i1 | 0) == (i2 | 0)) {
        i1 = i22;
        break L126;
       }
       i2 = HEAP32[i20 + 4 >> 2] | 0;
       if ((HEAP32[i20 >> 2] | 0) == (i2 | 0)) {
        i1 = i22;
        break L126;
       }
       i2 = i2 + -24 | 0;
       if ((HEAP8[i22 + 2 >> 0] | 0) == 118) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2, 0, 39911) | 0;
        break L126;
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2, 0, 39929) | 0;
        break L126;
       }
      }
     }
    } else i1 = i22; while (0);
    break;
   }
  default:
   {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_(i22, i19, i20) | 0;
    i16 = HEAP32[i20 + 48 >> 2] | 0;
    i17 = HEAP32[i20 + 52 >> 2] | 0;
    if ((i1 | 0) != (i22 | 0)) if ((i1 | 0) != (i19 | 0)) {
     switch (HEAP8[i1 >> 0] | 0) {
     case 46:
     case 69:
      break L6;
     default:
      {}
     }
     i18 = HEAP8[i27 >> 0] | 0;
     HEAP8[i27 >> 0] = 0;
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i23 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     i14 = i20 + 4 | 0;
     i7 = HEAP32[i14 >> 2] | 0;
     L15 : do if ((HEAP32[i20 >> 2] | 0) != (i7 | 0)) {
      i6 = i7 + -24 | 0;
      i4 = HEAP8[i6 >> 0] | 0;
      i5 = (i4 & 1) == 0;
      if (i5) i2 = (i4 & 255) >>> 1; else i2 = HEAP32[i7 + -20 >> 2] | 0;
      if (i2) {
       if (!(HEAP8[i20 + 60 >> 0] | 0)) {
        if (i5) {
         i2 = i6 + 1 | 0;
         i3 = (i4 & 255) >>> 1;
        } else {
         i2 = HEAP32[i7 + -16 >> 2] | 0;
         i3 = HEAP32[i7 + -20 >> 2] | 0;
        }
        if ((HEAP8[i2 + i3 + -1 >> 0] | 0) == 62) {
         if (i5) {
          i2 = (i4 & 255) >>> 1;
          i3 = i6 + 1 | 0;
         } else {
          i2 = HEAP32[i7 + -20 >> 2] | 0;
          i3 = HEAP32[i7 + -16 >> 2] | 0;
         }
         if ((HEAP8[i3 + (i2 + -2) >> 0] | 0) != 45) {
          if (i5) {
           i3 = (i4 & 255) >>> 1;
           i2 = i6 + 1 | 0;
          } else {
           i3 = HEAP32[i7 + -20 >> 2] | 0;
           i2 = HEAP32[i7 + -16 >> 2] | 0;
          }
          if ((HEAP8[i2 + (i3 + -2) >> 0] | 0) != 62) {
           i10 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i19, i20) | 0;
           if ((i10 | 0) == (i1 | 0)) {
            i1 = i22;
            i2 = 0;
            break;
           }
           i13 = HEAP32[i14 >> 2] | 0;
           i1 = i13;
           if (((i13 - (HEAP32[i20 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
            i1 = i22;
            i2 = 0;
            break;
           }
           i2 = i1 + -24 | 0;
           HEAP32[i21 >> 2] = HEAP32[i2 >> 2];
           HEAP32[i21 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
           HEAP32[i21 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
           i3 = 0;
           while (1) {
            if ((i3 | 0) == 3) break;
            HEAP32[i2 + (i3 << 2) >> 2] = 0;
            i3 = i3 + 1 | 0;
           }
           i9 = i1 + -12 | 0;
           L45 : do if (!(HEAP8[i23 >> 0] & 1)) {
            HEAP8[i23 + 1 >> 0] = 0;
            HEAP8[i23 >> 0] = 0;
           } else {
            i5 = i23 + 8 | 0;
            i2 = HEAP32[i5 >> 2] | 0;
            HEAP8[i2 >> 0] = 0;
            i6 = i23 + 4 | 0;
            HEAP32[i6 >> 2] = 0;
            i7 = HEAP32[i23 >> 2] | 0;
            i8 = (i7 & -2) + -1 | 0;
            i3 = i7 & 255;
            do if (!(i3 & 1)) {
             i1 = i7 >>> 1 & 127;
             if ((i3 & 255) < 22) {
              _memcpy(i23 + 1 | 0, i2 | 0, (i7 >>> 1 & 127) + 1 | 0) | 0;
              _free(i2);
              break;
             }
             i2 = i1 + 16 & 240;
             i4 = i2 + -1 | 0;
             if ((i4 | 0) == (i8 | 0)) break L45;
             i3 = _malloc(i2) | 0;
             if (i4 >>> 0 <= i8 >>> 0 & (i3 | 0) == 0) break L45;
             _memcpy(i3 | 0, i23 + 1 | 0, (i7 >>> 1 & 127) + 1 | 0) | 0;
             HEAP32[i23 >> 2] = i2 | 1;
             HEAP32[i6 >> 2] = i1;
             HEAP32[i5 >> 2] = i3;
             break L45;
            } else {
             HEAP8[i23 + 1 >> 0] = 0;
             _free(i2);
             i1 = 0;
            } while (0);
            HEAP8[i23 >> 0] = i1 << 1;
           } while (0);
           HEAP32[i23 >> 2] = HEAP32[i9 >> 2];
           HEAP32[i23 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
           HEAP32[i23 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
           i1 = 0;
           while (1) {
            if ((i1 | 0) == 3) break;
            HEAP32[i9 + (i1 << 2) >> 2] = 0;
            i1 = i1 + 1 | 0;
           }
           i13 = HEAP8[i23 >> 0] | 0;
           if (!(((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i23 + 4 >> 2] | 0) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i21, 32);
           i1 = HEAP32[i14 >> 2] | 0;
           i2 = i1 + -24 | 0;
           i3 = i1;
           while (1) {
            if ((i3 | 0) == (i2 | 0)) break;
            i13 = i3 + -24 | 0;
            HEAP32[i14 >> 2] = i13;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i13);
            i3 = HEAP32[i14 >> 2] | 0;
           }
           i2 = HEAP8[i21 >> 0] | 0;
           i13 = (i2 & 1) == 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj(i1 + -48 | 0, 0, i13 ? i21 + 1 | 0 : HEAP32[i21 + 8 >> 2] | 0, i13 ? (i2 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i21);
           i2 = HEAP32[i14 >> 2] | 0;
           i1 = i10;
          } else i2 = i7;
         } else i2 = i7;
        } else i2 = i7;
       } else i2 = i7;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i2 + -24 | 0, 40);
       if ((i1 | 0) != (i19 | 0) ? (HEAP8[i1 >> 0] | 0) == 118 : 0) {
        i2 = HEAP32[i20 >> 2] | 0;
        i3 = HEAP32[i14 >> 2] | 0;
        i1 = i1 + 1 | 0;
       } else i11 = 128;
       do if ((i11 | 0) == 128) {
        i8 = i21 + 4 | 0;
        i9 = i15 + 8 | 0;
        i10 = i15 + 1 | 0;
        i11 = i15 + 4 | 0;
        i12 = i21 + 8 | 0;
        i13 = i21 + 1 | 0;
        i7 = 1;
        L75 : while (1) {
         i2 = HEAP32[i20 >> 2] | 0;
         i3 = HEAP32[i14 >> 2] | 0;
         while (1) {
          i4 = (i3 - i2 | 0) / 24 | 0;
          i5 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i19, i20) | 0;
          i3 = HEAP32[i14 >> 2] | 0;
          i2 = HEAP32[i20 >> 2] | 0;
          i6 = (i3 - i2 | 0) / 24 | 0;
          if ((i5 | 0) == (i1 | 0)) {
           i11 = 151;
           break L75;
          }
          if (i6 >>> 0 > i4 >>> 0) {
           i1 = i5;
           i5 = i6;
           break;
          } else i1 = i5;
         }
         i2 = 0;
         while (1) {
          if ((i2 | 0) == 3) {
           i2 = i4;
           break;
          }
          HEAP32[i21 + (i2 << 2) >> 2] = 0;
          i2 = i2 + 1 | 0;
         }
         while (1) {
          if (i2 >>> 0 >= i5 >>> 0) break;
          i6 = HEAP8[i21 >> 0] | 0;
          if (((i6 & 1) == 0 ? (i6 & 255) >>> 1 : HEAP32[i8 >> 2] | 0) | 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i21, 39101) | 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i15, (HEAP32[i20 >> 2] | 0) + (i2 * 24 | 0) | 0);
          i6 = HEAP8[i15 >> 0] | 0;
          i3 = (i6 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i21, i3 ? i10 : HEAP32[i9 >> 2] | 0, i3 ? (i6 & 255) >>> 1 : HEAP32[i11 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
          i2 = i2 + 1 | 0;
         }
         while (1) {
          if (i4 >>> 0 >= i5 >>> 0) break;
          i3 = HEAP32[i14 >> 2] | 0;
          i2 = i3 + -24 | 0;
          while (1) {
           if ((i3 | 0) == (i2 | 0)) break;
           i6 = i3 + -24 | 0;
           HEAP32[i14 >> 2] = i6;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
           i3 = HEAP32[i14 >> 2] | 0;
          }
          i4 = i4 + 1 | 0;
         }
         i4 = HEAP8[i21 >> 0] | 0;
         i2 = HEAP32[i8 >> 2] | 0;
         if (!(((i4 & 1) == 0 ? (i4 & 255) >>> 1 : i2) | 0)) i2 = i7; else {
          i3 = HEAP32[i14 >> 2] | 0;
          if ((HEAP32[i20 >> 2] | 0) == (i3 | 0)) {
           i11 = 163;
           break;
          }
          if (!i7) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i3 + -24 | 0, 39101) | 0;
           i3 = HEAP32[i14 >> 2] | 0;
           i4 = HEAP8[i21 >> 0] | 0;
           i2 = HEAP32[i8 >> 2] | 0;
          }
          i7 = (i4 & 1) == 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i3 + -24 | 0, i7 ? i13 : HEAP32[i12 >> 2] | 0, i7 ? (i4 & 255) >>> 1 : i2) | 0;
          i2 = 0;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i21);
         i7 = i2;
        }
        if ((i11 | 0) == 151) break; else if ((i11 | 0) == 163) {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i21);
         i1 = i22;
         i2 = 0;
         break L15;
        }
       } while (0);
       if ((i2 | 0) != (i3 | 0)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i3 + -24 | 0, 41);
        if (i16 & 1 | 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i14 >> 2] | 0) + -24 | 0, 38117) | 0;
        if (i16 & 2 | 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i14 >> 2] | 0) + -24 | 0, 38124) | 0;
        if (i16 & 4 | 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i14 >> 2] | 0) + -24 | 0, 38134) | 0;
        switch (i17 | 0) {
        case 1:
         {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i14 >> 2] | 0) + -24 | 0, 39708) | 0;
          break;
         }
        case 2:
         {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i14 >> 2] | 0) + -24 | 0, 39711) | 0;
          break;
         }
        default:
         {}
        }
        i2 = HEAP8[i23 >> 0] | 0;
        i21 = (i2 & 1) == 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[i14 >> 2] | 0) + -24 | 0, i21 ? i23 + 1 | 0 : HEAP32[i23 + 8 >> 2] | 0, i21 ? (i2 & 255) >>> 1 : HEAP32[i23 + 4 >> 2] | 0) | 0;
        i2 = 1;
       } else {
        i1 = i22;
        i2 = 0;
       }
      } else {
       i1 = i22;
       i2 = 0;
      }
     } else {
      i1 = i22;
      i2 = 0;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i23);
     HEAP8[i27 >> 0] = i18;
     if (!i2) {
      HEAP8[i27 >> 0] = i24;
      HEAP32[i25 >> 2] = i26;
      i1 = i22;
      break L1;
     }
    } else i1 = i19; else i1 = i22;
   }
  } while (0);
  HEAP8[i27 >> 0] = i24;
  HEAP32[i25 >> 2] = i26;
 } while (0);
 STACKTOP = i28;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i13) {
 i1 = i1 | 0;
 i16 = i16 | 0;
 i13 = i13 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i15 = i17 + 88 | 0;
 i8 = i17 + 64 | 0;
 i9 = i17 + 48 | 0;
 i7 = i17 + 24 | 0;
 i10 = i17 + 12 | 0;
 i12 = i17;
 L1 : do if ((i1 | 0) != (i16 | 0)) {
  i3 = HEAP8[i1 >> 0] | 0;
  i4 = i3 << 24 >> 24;
  switch (i4 | 0) {
  case 68:
  case 67:
   {
    L6 : do if ((i16 - i1 | 0) > 1 ? (i6 = i13 + 4 | 0, i2 = HEAP32[i6 >> 2] | 0, (HEAP32[i13 >> 2] | 0) != (i2 | 0)) : 0) {
     switch (i4 | 0) {
     case 67:
      {
       switch (HEAP8[i1 + 1 >> 0] | 0) {
       case 53:
       case 51:
       case 50:
       case 49:
        break;
       default:
        break L6;
       }
       __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_(i9, i2 + -24 | 0);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i8, i9);
       i2 = HEAP32[i6 >> 2] | 0;
       i16 = HEAP32[i13 + 8 >> 2] | 0;
       i5 = i16;
       if (i2 >>> 0 < i16 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i8);
        HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 24;
       } else {
        i3 = HEAP32[i13 >> 2] | 0;
        i16 = i2 - i3 | 0;
        i6 = (i16 | 0) / 24 | 0;
        i4 = i6 + 1 | 0;
        if ((i16 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i13);
        i2 = (i5 - i3 | 0) / 24 | 0;
        if (i2 >>> 0 < 1073741823) {
         i2 = i2 << 1;
         i2 = i2 >>> 0 < i4 >>> 0 ? i4 : i2;
        } else i2 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i15, i2, i6, i13 + 12 | 0);
        i16 = i15 + 8 | 0;
        i14 = HEAP32[i16 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i14, i8);
        HEAP32[i16 >> 2] = i14 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i13, i15);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i15);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
       HEAP8[i13 + 60 >> 0] = 1;
       i1 = i1 + 2 | 0;
       break L6;
      }
     case 68:
      break;
     default:
      break L6;
     }
     switch (HEAP8[i1 + 1 >> 0] | 0) {
     case 53:
     case 50:
     case 49:
     case 48:
      break;
     default:
      break L6;
     }
     __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_(i12, i2 + -24 | 0);
     i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i12, 0, 38556) | 0;
     HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
     HEAP32[i10 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
     HEAP32[i10 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
     i3 = 0;
     while (1) {
      if ((i3 | 0) == 3) break;
      HEAP32[i2 + (i3 << 2) >> 2] = 0;
      i3 = i3 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i7, i10);
     i2 = HEAP32[i6 >> 2] | 0;
     i16 = HEAP32[i13 + 8 >> 2] | 0;
     i5 = i16;
     if (i2 >>> 0 < i16 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i7);
      HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 24;
     } else {
      i3 = HEAP32[i13 >> 2] | 0;
      i16 = i2 - i3 | 0;
      i6 = (i16 | 0) / 24 | 0;
      i4 = i6 + 1 | 0;
      if ((i16 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i13);
      i2 = (i5 - i3 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i4 >>> 0 ? i4 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i15, i2, i6, i13 + 12 | 0);
      i16 = i15 + 8 | 0;
      i14 = HEAP32[i16 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i14, i7);
      HEAP32[i16 >> 2] = i14 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i13, i15);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i15);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
     HEAP8[i13 + 60 >> 0] = 1;
     i1 = i1 + 2 | 0;
    } while (0);
    break L1;
   }
  case 85:
   {
    L40 : do if ((i16 - i1 | 0) > 2 & i3 << 24 >> 24 == 85) {
     switch (HEAP8[i1 + 1 >> 0] | 0) {
     case 116:
      {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i9, 39480, 8);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i8, i9);
       i7 = i13 + 4 | 0;
       i2 = HEAP32[i7 >> 2] | 0;
       i14 = HEAP32[i13 + 8 >> 2] | 0;
       i3 = i14;
       if (i2 >>> 0 < i14 >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i8);
        HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 24;
       } else {
        i4 = HEAP32[i13 >> 2] | 0;
        i14 = i2 - i4 | 0;
        i6 = (i14 | 0) / 24 | 0;
        i5 = i6 + 1 | 0;
        if ((i14 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i13);
        i2 = (i3 - i4 | 0) / 24 | 0;
        if (i2 >>> 0 < 1073741823) {
         i2 = i2 << 1;
         i2 = i2 >>> 0 < i5 >>> 0 ? i5 : i2;
        } else i2 = 2147483647;
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i15, i2, i6, i13 + 12 | 0);
        i14 = i15 + 8 | 0;
        i12 = HEAP32[i14 >> 2] | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i12, i8);
        HEAP32[i14 >> 2] = i12 + 24;
        __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i13, i15);
        __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i15);
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
       i2 = i1 + 2 | 0;
       if ((i2 | 0) == (i16 | 0)) {
        i3 = HEAP32[i7 >> 2] | 0;
        i2 = i3 + -24 | 0;
        while (1) {
         if ((i3 | 0) == (i2 | 0)) break L40;
         i16 = i3 + -24 | 0;
         HEAP32[i7 >> 2] = i16;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
         i3 = HEAP32[i7 >> 2] | 0;
        }
       }
       if (((HEAP8[i2 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
        i3 = i1 + 3 | 0;
        while (1) {
         if ((i3 | 0) == (i16 | 0)) {
          i3 = i16;
          break;
         }
         if (((HEAP8[i3 >> 0] | 0) + -48 | 0) >>> 0 >= 10) break;
         i3 = i3 + 1 | 0;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_((HEAP32[i7 >> 2] | 0) + -24 | 0, i2, i3);
        i2 = i3;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[i7 >> 2] | 0) + -24 | 0, 39);
       if ((i2 | 0) != (i16 | 0) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) {
        i1 = i2 + 1 | 0;
        break L40;
       }
       i3 = HEAP32[i7 >> 2] | 0;
       i2 = i3 + -24 | 0;
       while (1) {
        if ((i3 | 0) == (i2 | 0)) break L40;
        i16 = i3 + -24 | 0;
        HEAP32[i7 >> 2] = i16;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
        i3 = HEAP32[i7 >> 2] | 0;
       }
      }
     case 108:
      break;
     default:
      break L40;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i10, 39489, 9);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i7, i10);
     i14 = i13 + 4 | 0;
     i2 = HEAP32[i14 >> 2] | 0;
     i11 = HEAP32[i13 + 8 >> 2] | 0;
     i3 = i11;
     if (i2 >>> 0 < i11 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i7);
      HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 24;
     } else {
      i4 = HEAP32[i13 >> 2] | 0;
      i11 = i2 - i4 | 0;
      i6 = (i11 | 0) / 24 | 0;
      i5 = i6 + 1 | 0;
      if ((i11 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i13);
      i2 = (i3 - i4 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i5 >>> 0 ? i5 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i15, i2, i6, i13 + 12 | 0);
      i11 = i15 + 8 | 0;
      i9 = HEAP32[i11 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i9, i7);
      HEAP32[i11 >> 2] = i9 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i13, i15);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i15);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
     i3 = i1 + 2 | 0;
     do if ((HEAP8[i3 >> 0] | 0) != 118) {
      i2 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i3, i16, i13) | 0;
      if ((i2 | 0) == (i3 | 0)) {
       i3 = HEAP32[i14 >> 2] | 0;
       i2 = i3 + -24 | 0;
       while (1) {
        if ((i3 | 0) == (i2 | 0)) break L40;
        i16 = i3 + -24 | 0;
        HEAP32[i14 >> 2] = i16;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
        i3 = HEAP32[i14 >> 2] | 0;
       }
      }
      i3 = HEAP32[i14 >> 2] | 0;
      if (((i3 - (HEAP32[i13 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) break L40;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i15, i3 + -24 | 0);
      i5 = HEAP32[i14 >> 2] | 0;
      i3 = i5 + -24 | 0;
      i4 = i5;
      while (1) {
       if ((i4 | 0) == (i3 | 0)) break;
       i11 = i4 + -24 | 0;
       HEAP32[i14 >> 2] = i11;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11);
       i4 = HEAP32[i14 >> 2] | 0;
      }
      i3 = HEAP8[i15 >> 0] | 0;
      i8 = (i3 & 1) == 0;
      i9 = i15 + 8 | 0;
      i10 = i15 + 1 | 0;
      i11 = i15 + 4 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i5 + -48 | 0, i8 ? i10 : HEAP32[i9 >> 2] | 0, i8 ? (i3 & 255) >>> 1 : HEAP32[i11 >> 2] | 0) | 0;
      while (1) {
       i8 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i2, i16, i13) | 0;
       if ((i8 | 0) == (i2 | 0)) {
        i4 = 91;
        break;
       }
       i2 = HEAP32[i14 >> 2] | 0;
       if (((i2 - (HEAP32[i13 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
        i4 = 129;
        break;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i12, i2 + -24 | 0);
       L104 : do if (!(i3 & 1)) {
        HEAP8[i10 >> 0] = 0;
        HEAP8[i15 >> 0] = 0;
       } else {
        i3 = HEAP32[i9 >> 2] | 0;
        HEAP8[i3 >> 0] = 0;
        HEAP32[i11 >> 2] = 0;
        i6 = HEAP32[i15 >> 2] | 0;
        i7 = (i6 & -2) + -1 | 0;
        i4 = i6 & 255;
        do if (!(i4 & 1)) {
         i2 = i6 >>> 1 & 127;
         if ((i4 & 255) < 22) {
          _memcpy(i10 | 0, i3 | 0, (i6 >>> 1 & 127) + 1 | 0) | 0;
          _free(i3);
          break;
         }
         i3 = i2 + 16 & 240;
         i5 = i3 + -1 | 0;
         if ((i5 | 0) == (i7 | 0)) break L104;
         i4 = _malloc(i3) | 0;
         if (i5 >>> 0 <= i7 >>> 0 & (i4 | 0) == 0) break L104;
         _memcpy(i4 | 0, i10 | 0, (i6 >>> 1 & 127) + 1 | 0) | 0;
         HEAP32[i15 >> 2] = i3 | 1;
         HEAP32[i11 >> 2] = i2;
         HEAP32[i9 >> 2] = i4;
         break L104;
        } else {
         HEAP8[i10 >> 0] = 0;
         _free(i3);
         i2 = 0;
        } while (0);
        HEAP8[i15 >> 0] = i2 << 1;
       } while (0);
       HEAP32[i15 >> 2] = HEAP32[i12 >> 2];
       HEAP32[i15 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
       HEAP32[i15 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i12 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
       i5 = HEAP32[i14 >> 2] | 0;
       i2 = i5 + -24 | 0;
       i3 = i5;
       while (1) {
        if ((i3 | 0) == (i2 | 0)) break;
        i7 = i3 + -24 | 0;
        HEAP32[i14 >> 2] = i7;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
        i3 = HEAP32[i14 >> 2] | 0;
       }
       i3 = HEAP8[i15 >> 0] | 0;
       i2 = (i3 & 1) == 0;
       i4 = i2 ? (i3 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
       if (!i4) {
        i2 = i8;
        continue;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i5 + -48 | 0, 39101) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[i14 >> 2] | 0) + -24 | 0, i2 ? i10 : HEAP32[i9 >> 2] | 0, i4) | 0;
       i2 = i8;
      }
      if ((i4 | 0) == 91) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[i14 >> 2] | 0) + -24 | 0, 38469) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
       i3 = i2;
       break;
      } else if ((i4 | 0) == 129) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
       break L40;
      }
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[i14 >> 2] | 0) + -24 | 0, 41);
      i3 = i1 + 3 | 0;
     } while (0);
     if ((i3 | 0) != (i16 | 0) ? (HEAP8[i3 >> 0] | 0) == 69 : 0) {
      i2 = i3 + 1 | 0;
      if ((i2 | 0) == (i16 | 0)) {
       i3 = HEAP32[i14 >> 2] | 0;
       i2 = i3 + -24 | 0;
       while (1) {
        if ((i3 | 0) == (i2 | 0)) break L40;
        i16 = i3 + -24 | 0;
        HEAP32[i14 >> 2] = i16;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
        i3 = HEAP32[i14 >> 2] | 0;
       }
      }
      L139 : do if (((HEAP8[i2 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
       i3 = i3 + 2 | 0;
       while (1) {
        if ((i3 | 0) == (i16 | 0)) {
         i3 = i16;
         break;
        }
        if (((HEAP8[i3 >> 0] | 0) + -48 | 0) >>> 0 >= 10) break;
        i3 = i3 + 1 | 0;
       }
       i11 = HEAP32[i14 >> 2] | 0;
       i12 = i11 + -24 | 0;
       i6 = HEAP8[i12 >> 0] | 0;
       i4 = i11 + -16 | 0;
       if (!(i6 & 1)) {
        i5 = i12 + 1 | 0;
        i10 = (i6 & 255) >>> 1;
        i8 = 10;
       } else {
        i5 = HEAP32[i4 >> 2] | 0;
        i6 = HEAP32[i12 >> 2] | 0;
        i4 = i5 + 7 | 0;
        i10 = HEAP32[i11 + -20 >> 2] | 0;
        i8 = (i6 & -2) + -1 | 0;
        i6 = i6 & 255;
       }
       i9 = i4 - i5 | 0;
       i7 = i3 - i2 | 0;
       if ((i3 | 0) != (i2 | 0)) {
        if ((i8 - i10 | 0) >>> 0 >= i7 >>> 0) {
         if (!(i6 & 1)) i4 = i12 + 1 | 0; else i4 = HEAP32[i11 + -16 >> 2] | 0;
         if ((i10 | 0) == (i9 | 0)) i5 = i4; else {
          i5 = i4 + i9 | 0;
          _memmove(i5 + i7 | 0, i5 | 0, i10 - i9 | 0) | 0;
          i5 = i4;
         }
        } else {
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj(i12, i8, i10 + i7 - i8 | 0, i10, i9, i7);
         i5 = HEAP32[i11 + -16 >> 2] | 0;
        }
        i4 = i10 + i7 | 0;
        if (!(HEAP8[i12 >> 0] & 1)) HEAP8[i12 >> 0] = i4 << 1; else HEAP32[i11 + -20 >> 2] = i4;
        HEAP8[i5 + i4 >> 0] = 0;
        i4 = i5 + i9 | 0;
        while (1) {
         if ((i2 | 0) == (i3 | 0)) {
          i2 = i3;
          break L139;
         }
         HEAP8[i4 >> 0] = HEAP8[i2 >> 0] | 0;
         i2 = i2 + 1 | 0;
         i4 = i4 + 1 | 0;
        }
       }
      } while (0);
      if ((i2 | 0) != (i16 | 0) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) {
       i1 = i2 + 1 | 0;
       break;
      }
      i3 = HEAP32[i14 >> 2] | 0;
      i2 = i3 + -24 | 0;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break L40;
       i16 = i3 + -24 | 0;
       HEAP32[i14 >> 2] = i16;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
       i3 = HEAP32[i14 >> 2] | 0;
      }
     }
     i3 = HEAP32[i14 >> 2] | 0;
     i2 = i3 + -24 | 0;
     while (1) {
      if ((i3 | 0) == (i2 | 0)) break L40;
      i16 = i3 + -24 | 0;
      HEAP32[i14 >> 2] = i16;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
      i3 = HEAP32[i14 >> 2] | 0;
     }
    } while (0);
    break L1;
   }
  case 57:
  case 56:
  case 55:
  case 54:
  case 53:
  case 52:
  case 51:
  case 50:
  case 49:
   {
    i1 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i13) | 0;
    break L1;
   }
  default:
   {
    i16 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i16, i13) | 0;
    STACKTOP = i17;
    return i16 | 0;
   }
  }
 } while (0);
 STACKTOP = i17;
 return i1 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner10visitUnaryEPNS_5UnaryE(i44, i36, i43) {
 i44 = i44 | 0;
 i36 = i36 | 0;
 i43 = i43 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i45 = 0;
 i45 = STACKTOP;
 STACKTOP = STACKTOP + 624 | 0;
 i38 = i45 + 600 | 0;
 i35 = i45 + 544 | 0;
 i37 = i45 + 512 | 0;
 i2 = i45 + 584 | 0;
 i3 = i45 + 568 | 0;
 i14 = i45 + 528 | 0;
 i25 = i45 + 496 | 0;
 i29 = i45 + 480 | 0;
 i30 = i45 + 464 | 0;
 i40 = i45 + 456 | 0;
 i39 = i45 + 448 | 0;
 i31 = i45 + 432 | 0;
 i32 = i45 + 416 | 0;
 i33 = i45 + 400 | 0;
 i34 = i45 + 384 | 0;
 i4 = i45 + 368 | 0;
 i42 = i45 + 360 | 0;
 i41 = i45 + 352 | 0;
 i5 = i45 + 336 | 0;
 i6 = i45 + 320 | 0;
 i7 = i45 + 304 | 0;
 i8 = i45 + 288 | 0;
 i9 = i45 + 272 | 0;
 i10 = i45 + 256 | 0;
 i11 = i45 + 240 | 0;
 i12 = i45 + 224 | 0;
 i13 = i45 + 208 | 0;
 i15 = i45 + 192 | 0;
 i16 = i45 + 176 | 0;
 i17 = i45 + 160 | 0;
 i18 = i45 + 144 | 0;
 i19 = i45 + 128 | 0;
 i20 = i45 + 112 | 0;
 i21 = i45 + 96 | 0;
 i22 = i45 + 80 | 0;
 i23 = i45 + 64 | 0;
 i24 = i45 + 48 | 0;
 i26 = i45 + 32 | 0;
 i27 = i45 + 16 | 0;
 i28 = i45;
 __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i35, i36, HEAP32[i43 + 12 >> 2] | 0);
 if (!(HEAP32[i35 + 16 >> 2] | 0)) {
  HEAP32[i37 >> 2] = HEAP32[i35 >> 2];
  HEAP32[i37 + 4 >> 2] = HEAP32[i35 + 4 >> 2];
  HEAP32[i37 + 8 >> 2] = HEAP32[i35 + 8 >> 2];
  HEAP32[i37 + 12 >> 2] = HEAP32[i35 + 12 >> 2];
  L3 : do switch (HEAP32[i37 >> 2] | 0) {
  case 1:
   {
    switch (HEAP32[i43 + 8 >> 2] | 0) {
    case 0:
     {
      __ZNK4wasm7Literal18countLeadingZeroesEv(i2, i37);
      HEAP32[i44 >> 2] = HEAP32[i2 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 1:
     {
      __ZNK4wasm7Literal19countTrailingZeroesEv(i3, i37);
      HEAP32[i44 >> 2] = HEAP32[i3 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 2:
     {
      __ZNK4wasm7Literal8popCountEv(i14, i37);
      HEAP32[i44 >> 2] = HEAP32[i14 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i14 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 24:
     {
      __ZN4wasm7Literal9castToF32Ev(i25, i37);
      HEAP32[i44 >> 2] = HEAP32[i25 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i25 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i25 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i25 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 10:
     {
      __ZNK4wasm7Literal12extendToSI64Ev(i29, i37);
      HEAP32[i44 >> 2] = HEAP32[i29 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i29 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i29 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i29 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 11:
     {
      __ZNK4wasm7Literal12extendToUI64Ev(i30, i37);
      HEAP32[i44 >> 2] = HEAP32[i30 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i30 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i30 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i30 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 19:
     {
      i2 = HEAP32[i37 + 8 >> 2] | 0;
      if ((HEAP32[i43 + 4 >> 2] | 0) == 3) {
       HEAPF32[i40 >> 2] = +(i2 >>> 0);
       i2 = 3;
       d1 = +HEAPF64[i40 >> 3];
      } else {
       d1 = +(i2 >>> 0);
       HEAPF64[i40 >> 3] = d1;
       i2 = 4;
      }
      HEAP32[i44 >> 2] = i2;
      HEAPF64[i44 + 8 >> 3] = d1;
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 18:
     {
      i2 = HEAP32[i37 + 8 >> 2] | 0;
      if ((HEAP32[i43 + 4 >> 2] | 0) == 3) {
       HEAPF32[i39 >> 2] = +(i2 | 0);
       i2 = 3;
       d1 = +HEAPF64[i39 >> 3];
      } else {
       d1 = +(i2 | 0);
       HEAPF64[i39 >> 3] = d1;
       i2 = 4;
      }
      HEAP32[i44 >> 2] = i2;
      HEAPF64[i44 + 8 >> 3] = d1;
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    default:
     _abort();
    }
    break;
   }
  case 2:
   {
    switch (HEAP32[i43 + 8 >> 2] | 0) {
    case 0:
     {
      __ZNK4wasm7Literal18countLeadingZeroesEv(i31, i37);
      HEAP32[i44 >> 2] = HEAP32[i31 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i31 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i31 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i31 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 1:
     {
      __ZNK4wasm7Literal19countTrailingZeroesEv(i32, i37);
      HEAP32[i44 >> 2] = HEAP32[i32 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i32 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i32 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i32 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 2:
     {
      __ZNK4wasm7Literal8popCountEv(i33, i37);
      HEAP32[i44 >> 2] = HEAP32[i33 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i33 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i33 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i33 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 12:
     {
      __ZNK4wasm7Literal13truncateToI32Ev(i34, i37);
      HEAP32[i44 >> 2] = HEAP32[i34 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i34 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i34 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i34 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 24:
     {
      __ZN4wasm7Literal9castToF64Ev(i4, i37);
      HEAP32[i44 >> 2] = HEAP32[i4 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 21:
     {
      i3 = i37 + 8 | 0;
      i2 = HEAP32[i3 >> 2] | 0;
      i3 = HEAP32[i3 + 4 >> 2] | 0;
      if ((HEAP32[i43 + 4 >> 2] | 0) == 3) {
       HEAPF32[i42 >> 2] = +(i2 >>> 0) + 4294967296.0 * +(i3 >>> 0);
       i2 = 3;
       d1 = +HEAPF64[i42 >> 3];
      } else {
       d1 = +(i2 >>> 0) + 4294967296.0 * +(i3 >>> 0);
       HEAPF64[i42 >> 3] = d1;
       i2 = 4;
      }
      HEAP32[i44 >> 2] = i2;
      HEAPF64[i44 + 8 >> 3] = d1;
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 20:
     {
      i3 = i37 + 8 | 0;
      i2 = HEAP32[i3 >> 2] | 0;
      i3 = HEAP32[i3 + 4 >> 2] | 0;
      if ((HEAP32[i43 + 4 >> 2] | 0) == 3) {
       HEAPF32[i41 >> 2] = +(i2 >>> 0) + 4294967296.0 * +(i3 | 0);
       i2 = 3;
       d1 = +HEAPF64[i41 >> 3];
      } else {
       d1 = +(i2 >>> 0) + 4294967296.0 * +(i3 | 0);
       HEAPF64[i41 >> 3] = d1;
       i2 = 4;
      }
      HEAP32[i44 >> 2] = i2;
      HEAPF64[i44 + 8 >> 3] = d1;
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    default:
     _abort();
    }
    break;
   }
  case 3:
   {
    do switch (HEAP32[i43 + 8 >> 2] | 0) {
    case 3:
     {
      __ZNK4wasm7Literal3negEv(i5, i37);
      HEAP32[i44 >> 2] = HEAP32[i5 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 4:
     {
      __ZNK4wasm7Literal3absEv(i6, i37);
      HEAP32[i44 >> 2] = HEAP32[i6 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 5:
     {
      __ZNK4wasm7Literal4ceilEv(i7, i37);
      HEAP32[i44 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i7 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 6:
     {
      __ZNK4wasm7Literal5floorEv(i8, i37);
      HEAP32[i44 >> 2] = HEAP32[i8 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i8 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 7:
     {
      __ZNK4wasm7Literal5truncEv(i9, i37);
      HEAP32[i44 >> 2] = HEAP32[i9 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 8:
     {
      __ZNK4wasm7Literal9nearbyintEv(i10, i37);
      HEAP32[i44 >> 2] = HEAP32[i10 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i10 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 9:
     {
      __ZNK4wasm7Literal4sqrtEv(i11, i37);
      HEAP32[i44 >> 2] = HEAP32[i11 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i11 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 13:
     {
      HEAP32[i38 >> 2] = HEAP32[i37 >> 2];
      HEAP32[i38 + 4 >> 2] = HEAP32[i37 + 4 >> 2];
      HEAP32[i38 + 8 >> 2] = HEAP32[i37 + 8 >> 2];
      HEAP32[i38 + 12 >> 2] = HEAP32[i37 + 12 >> 2];
      __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11truncSFloatEPNS_5UnaryES5_(i12, i36, i43, i38);
      HEAP32[i44 >> 2] = HEAP32[i12 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i12 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 14:
     {
      HEAP32[i38 >> 2] = HEAP32[i37 >> 2];
      HEAP32[i38 + 4 >> 2] = HEAP32[i37 + 4 >> 2];
      HEAP32[i38 + 8 >> 2] = HEAP32[i37 + 8 >> 2];
      HEAP32[i38 + 12 >> 2] = HEAP32[i37 + 12 >> 2];
      __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11truncUFloatEPNS_5UnaryES5_(i13, i36, i43, i38);
      HEAP32[i44 >> 2] = HEAP32[i13 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i13 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 17:
     {
      __ZN4wasm7Literal9castToI32Ev(i15, i37);
      HEAP32[i44 >> 2] = HEAP32[i15 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i15 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 22:
     {
      __ZNK4wasm7Literal11extendToF64Ev(i16, i37);
      HEAP32[i44 >> 2] = HEAP32[i16 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i16 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    default:
     _abort();
    } while (0);
    break;
   }
  case 4:
   {
    do switch (HEAP32[i43 + 8 >> 2] | 0) {
    case 3:
     {
      __ZNK4wasm7Literal3negEv(i17, i37);
      HEAP32[i44 >> 2] = HEAP32[i17 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i17 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 4:
     {
      __ZNK4wasm7Literal3absEv(i18, i37);
      HEAP32[i44 >> 2] = HEAP32[i18 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i18 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 5:
     {
      __ZNK4wasm7Literal4ceilEv(i19, i37);
      HEAP32[i44 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i19 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i19 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i19 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 6:
     {
      __ZNK4wasm7Literal5floorEv(i20, i37);
      HEAP32[i44 >> 2] = HEAP32[i20 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i20 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i20 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i20 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 7:
     {
      __ZNK4wasm7Literal5truncEv(i21, i37);
      HEAP32[i44 >> 2] = HEAP32[i21 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i21 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i21 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i21 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 8:
     {
      __ZNK4wasm7Literal9nearbyintEv(i22, i37);
      HEAP32[i44 >> 2] = HEAP32[i22 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i22 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i22 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i22 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 9:
     {
      __ZNK4wasm7Literal4sqrtEv(i23, i37);
      HEAP32[i44 >> 2] = HEAP32[i23 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i23 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i23 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i23 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 15:
     {
      HEAP32[i38 >> 2] = HEAP32[i37 >> 2];
      HEAP32[i38 + 4 >> 2] = HEAP32[i37 + 4 >> 2];
      HEAP32[i38 + 8 >> 2] = HEAP32[i37 + 8 >> 2];
      HEAP32[i38 + 12 >> 2] = HEAP32[i37 + 12 >> 2];
      __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11truncSFloatEPNS_5UnaryES5_(i24, i36, i43, i38);
      HEAP32[i44 >> 2] = HEAP32[i24 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i24 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i24 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i24 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 16:
     {
      HEAP32[i38 >> 2] = HEAP32[i37 >> 2];
      HEAP32[i38 + 4 >> 2] = HEAP32[i37 + 4 >> 2];
      HEAP32[i38 + 8 >> 2] = HEAP32[i37 + 8 >> 2];
      HEAP32[i38 + 12 >> 2] = HEAP32[i37 + 12 >> 2];
      __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11truncUFloatEPNS_5UnaryES5_(i26, i36, i43, i38);
      HEAP32[i44 >> 2] = HEAP32[i26 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i26 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i26 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i26 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 17:
     {
      __ZN4wasm7Literal9castToI64Ev(i27, i37);
      HEAP32[i44 >> 2] = HEAP32[i27 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i27 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i27 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i27 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    case 23:
     {
      __ZNK4wasm7Literal13truncateToF32Ev(i28, i37);
      HEAP32[i44 >> 2] = HEAP32[i28 >> 2];
      HEAP32[i44 + 4 >> 2] = HEAP32[i28 + 4 >> 2];
      HEAP32[i44 + 8 >> 2] = HEAP32[i28 + 8 >> 2];
      HEAP32[i44 + 12 >> 2] = HEAP32[i28 + 12 >> 2];
      HEAP32[i44 + 16 >> 2] = 0;
      break L3;
     }
    default:
     _abort();
    } while (0);
    break;
   }
  default:
   _abort();
  } while (0);
 } else {
  HEAP32[i44 >> 2] = HEAP32[i35 >> 2];
  HEAP32[i44 + 4 >> 2] = HEAP32[i35 + 4 >> 2];
  HEAP32[i44 + 8 >> 2] = HEAP32[i35 + 8 >> 2];
  HEAP32[i44 + 12 >> 2] = HEAP32[i35 + 12 >> 2];
  HEAP32[i44 + 16 >> 2] = HEAP32[i35 + 16 >> 2];
  HEAP32[i44 + 20 >> 2] = HEAP32[i35 + 20 >> 2];
 }
 STACKTOP = i45;
 return;
}

function _vfscanf(i33, i2, i24) {
 i33 = i33 | 0;
 i2 = i2 | 0;
 i24 = i24 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i34 = 0;
 i34 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i25 = i34 + 16 | 0;
 i27 = i34 + 8 | 0;
 i26 = i34 + 33 | 0;
 i28 = i34;
 i16 = i34 + 32 | 0;
 if ((HEAP32[i33 + 76 >> 2] | 0) > -1) i32 = ___lockfile(i33) | 0; else i32 = 0;
 i1 = HEAP8[i2 >> 0] | 0;
 L4 : do if (i1 << 24 >> 24) {
  i29 = i33 + 4 | 0;
  i30 = i33 + 100 | 0;
  i23 = i33 + 108 | 0;
  i17 = i33 + 8 | 0;
  i18 = i26 + 10 | 0;
  i19 = i26 + 33 | 0;
  i20 = i27 + 4 | 0;
  i21 = i26 + 46 | 0;
  i22 = i26 + 94 | 0;
  i4 = i1;
  i1 = 0;
  i5 = i2;
  i10 = 0;
  i3 = 0;
  i2 = 0;
  L6 : while (1) {
   L8 : do if (!(_isspace(i4 & 255) | 0)) {
    i4 = (HEAP8[i5 >> 0] | 0) == 37;
    L10 : do if (i4) {
     i8 = i5 + 1 | 0;
     i6 = HEAP8[i8 >> 0] | 0;
     L12 : do switch (i6 << 24 >> 24) {
     case 37:
      break L10;
     case 42:
      {
       i15 = 0;
       i6 = i5 + 2 | 0;
       break;
      }
     default:
      {
       i6 = (i6 & 255) + -48 | 0;
       if (i6 >>> 0 < 10 ? (HEAP8[i5 + 2 >> 0] | 0) == 36 : 0) {
        HEAP32[i25 >> 2] = HEAP32[i24 >> 2];
        while (1) {
         i15 = (HEAP32[i25 >> 2] | 0) + (4 - 1) & ~(4 - 1);
         i4 = HEAP32[i15 >> 2] | 0;
         HEAP32[i25 >> 2] = i15 + 4;
         if (i6 >>> 0 > 1) i6 = i6 + -1 | 0; else break;
        }
        i15 = i4;
        i6 = i5 + 3 | 0;
        break L12;
       }
       i6 = (HEAP32[i24 >> 2] | 0) + (4 - 1) & ~(4 - 1);
       i15 = HEAP32[i6 >> 2] | 0;
       HEAP32[i24 >> 2] = i6 + 4;
       i6 = i8;
      }
     } while (0);
     i4 = HEAP8[i6 >> 0] | 0;
     i5 = i4 & 255;
     if ((i5 + -48 | 0) >>> 0 < 10) {
      i4 = 0;
      while (1) {
       i8 = (i4 * 10 | 0) + -48 + i5 | 0;
       i6 = i6 + 1 | 0;
       i4 = HEAP8[i6 >> 0] | 0;
       i5 = i4 & 255;
       if ((i5 + -48 | 0) >>> 0 >= 10) break; else i4 = i8;
      }
     } else i8 = 0;
     if (i4 << 24 >> 24 == 109) {
      i6 = i6 + 1 | 0;
      i9 = HEAP8[i6 >> 0] | 0;
      i4 = (i15 | 0) != 0 & 1;
      i3 = 0;
      i2 = 0;
     } else {
      i9 = i4;
      i4 = 0;
     }
     i5 = i6 + 1 | 0;
     switch (i9 & 255 | 0) {
     case 104:
      {
       i14 = (HEAP8[i5 >> 0] | 0) == 104;
       i5 = i14 ? i6 + 2 | 0 : i5;
       i6 = i14 ? -2 : -1;
       break;
      }
     case 108:
      {
       i14 = (HEAP8[i5 >> 0] | 0) == 108;
       i5 = i14 ? i6 + 2 | 0 : i5;
       i6 = i14 ? 3 : 1;
       break;
      }
     case 106:
      {
       i6 = 3;
       break;
      }
     case 116:
     case 122:
      {
       i6 = 1;
       break;
      }
     case 76:
      {
       i6 = 2;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       i5 = i6;
       i6 = 0;
       break;
      }
     default:
      {
       i31 = 154;
       break L6;
      }
     }
     i9 = HEAPU8[i5 >> 0] | 0;
     i11 = (i9 & 47 | 0) == 3;
     i9 = i11 ? i9 | 32 : i9;
     i11 = i11 ? 1 : i6;
     switch (i9 | 0) {
     case 99:
      {
       i14 = i10;
       i13 = (i8 | 0) < 1 ? 1 : i8;
       break;
      }
     case 91:
      {
       i14 = i10;
       i13 = i8;
       break;
      }
     case 110:
      {
       if (!i15) {
        i6 = i10;
        break L8;
       }
       switch (i11 | 0) {
       case -2:
        {
         HEAP8[i15 >> 0] = i10;
         i6 = i10;
         break L8;
        }
       case -1:
        {
         HEAP16[i15 >> 1] = i10;
         i6 = i10;
         break L8;
        }
       case 0:
        {
         HEAP32[i15 >> 2] = i10;
         i6 = i10;
         break L8;
        }
       case 1:
        {
         HEAP32[i15 >> 2] = i10;
         i6 = i10;
         break L8;
        }
       case 3:
        {
         i6 = i15;
         HEAP32[i6 >> 2] = i10;
         HEAP32[i6 + 4 >> 2] = ((i10 | 0) < 0) << 31 >> 31;
         i6 = i10;
         break L8;
        }
       default:
        {
         i6 = i10;
         break L8;
        }
       }
      }
     default:
      {
       ___shlim(i33, 0);
       do {
        i6 = HEAP32[i29 >> 2] | 0;
        if (i6 >>> 0 < (HEAP32[i30 >> 2] | 0) >>> 0) {
         HEAP32[i29 >> 2] = i6 + 1;
         i6 = HEAPU8[i6 >> 0] | 0;
        } else i6 = ___shgetc(i33) | 0;
       } while ((_isspace(i6) | 0) != 0);
       if (!(HEAP32[i30 >> 2] | 0)) i6 = HEAP32[i29 >> 2] | 0; else {
        i6 = (HEAP32[i29 >> 2] | 0) + -1 | 0;
        HEAP32[i29 >> 2] = i6;
       }
       i14 = (HEAP32[i23 >> 2] | 0) + i10 + i6 - (HEAP32[i17 >> 2] | 0) | 0;
       i13 = i8;
      }
     }
     ___shlim(i33, i13);
     i6 = HEAP32[i29 >> 2] | 0;
     i8 = HEAP32[i30 >> 2] | 0;
     if (i6 >>> 0 < i8 >>> 0) HEAP32[i29 >> 2] = i6 + 1; else {
      if ((___shgetc(i33) | 0) < 0) {
       i31 = 154;
       break L6;
      }
      i8 = HEAP32[i30 >> 2] | 0;
     }
     if (i8 | 0) HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + -1;
     L68 : do switch (i9 | 0) {
     case 91:
     case 99:
     case 115:
      {
       i12 = (i9 | 0) == 99;
       L70 : do if ((i9 | 16 | 0) == 115) {
        _memset(i26 | 0, -1, 257) | 0;
        HEAP8[i26 >> 0] = 0;
        if ((i9 | 0) == 115) {
         HEAP8[i19 >> 0] = 0;
         HEAP8[i18 >> 0] = 0;
         HEAP8[i18 + 1 >> 0] = 0;
         HEAP8[i18 + 2 >> 0] = 0;
         HEAP8[i18 + 3 >> 0] = 0;
         HEAP8[i18 + 4 >> 0] = 0;
        }
       } else {
        i9 = i5 + 1 | 0;
        i10 = (HEAP8[i9 >> 0] | 0) == 94;
        i6 = i10 & 1;
        i5 = i10 ? i5 + 2 | 0 : i9;
        _memset(i26 | 0, i10 & 1 | 0, 257) | 0;
        HEAP8[i26 >> 0] = 0;
        switch (HEAP8[i5 >> 0] | 0) {
        case 45:
         {
          i10 = (i6 ^ 1) & 255;
          HEAP8[i21 >> 0] = i10;
          i5 = i5 + 1 | 0;
          break;
         }
        case 93:
         {
          i10 = (i6 ^ 1) & 255;
          HEAP8[i22 >> 0] = i10;
          i5 = i5 + 1 | 0;
          break;
         }
        default:
         i10 = (i6 ^ 1) & 255;
        }
        while (1) {
         i6 = HEAP8[i5 >> 0] | 0;
         L81 : do switch (i6 << 24 >> 24) {
         case 0:
          {
           i31 = 154;
           break L6;
          }
         case 93:
          break L70;
         case 45:
          {
           i9 = i5 + 1 | 0;
           i6 = HEAP8[i9 >> 0] | 0;
           switch (i6 << 24 >> 24) {
           case 93:
           case 0:
            {
             i6 = 45;
             break L81;
            }
           default:
            {}
           }
           i5 = HEAP8[i5 + -1 >> 0] | 0;
           if ((i5 & 255) < (i6 & 255)) {
            i5 = i5 & 255;
            do {
             i5 = i5 + 1 | 0;
             HEAP8[i26 + i5 >> 0] = i10;
             i6 = HEAP8[i9 >> 0] | 0;
            } while ((i5 | 0) < (i6 & 255 | 0));
            i5 = i9;
           } else i5 = i9;
           break;
          }
         default:
          {}
         } while (0);
         HEAP8[i26 + ((i6 & 255) + 1) >> 0] = i10;
         i5 = i5 + 1 | 0;
        }
       } while (0);
       i9 = i12 ? i13 + 1 | 0 : 31;
       i10 = (i11 | 0) == 1;
       i11 = (i4 | 0) != 0;
       L89 : do if (i10) {
        if (i11) {
         i2 = _malloc(i9 << 2) | 0;
         if (!i2) {
          i3 = 0;
          i31 = 154;
          break L6;
         }
        } else i2 = i15;
        HEAP32[i27 >> 2] = 0;
        HEAP32[i20 >> 2] = 0;
        i3 = 0;
        L95 : while (1) {
         i8 = (i2 | 0) == 0;
         do {
          L99 : while (1) {
           i6 = HEAP32[i29 >> 2] | 0;
           if (i6 >>> 0 < (HEAP32[i30 >> 2] | 0) >>> 0) {
            HEAP32[i29 >> 2] = i6 + 1;
            i6 = HEAPU8[i6 >> 0] | 0;
           } else i6 = ___shgetc(i33) | 0;
           if (!(HEAP8[i26 + (i6 + 1) >> 0] | 0)) break L95;
           HEAP8[i16 >> 0] = i6;
           switch (_mbrtowc(i28, i16, 1, i27) | 0) {
           case -1:
            {
             i3 = 0;
             i31 = 154;
             break L6;
            }
           case -2:
            break;
           default:
            break L99;
           }
          }
          if (!i8) {
           HEAP32[i2 + (i3 << 2) >> 2] = HEAP32[i28 >> 2];
           i3 = i3 + 1 | 0;
          }
         } while (!(i11 & (i3 | 0) == (i9 | 0)));
         i3 = i9 << 1 | 1;
         i6 = _realloc(i2, i3 << 2) | 0;
         if (!i6) {
          i3 = 0;
          i31 = 154;
          break L6;
         } else {
          i8 = i9;
          i9 = i3;
          i2 = i6;
          i3 = i8;
         }
        }
        if (!(_mbsinit(i27) | 0)) {
         i3 = 0;
         i31 = 154;
         break L6;
        } else {
         i8 = i3;
         i3 = 0;
        }
       } else {
        if (i11) {
         i3 = _malloc(i9) | 0;
         if (!i3) {
          i3 = 0;
          i2 = 0;
          i31 = 154;
          break L6;
         } else i6 = 0;
         while (1) {
          do {
           i2 = HEAP32[i29 >> 2] | 0;
           if (i2 >>> 0 < (HEAP32[i30 >> 2] | 0) >>> 0) {
            HEAP32[i29 >> 2] = i2 + 1;
            i2 = HEAPU8[i2 >> 0] | 0;
           } else i2 = ___shgetc(i33) | 0;
           if (!(HEAP8[i26 + (i2 + 1) >> 0] | 0)) {
            i8 = i6;
            i2 = 0;
            break L89;
           }
           HEAP8[i3 + i6 >> 0] = i2;
           i6 = i6 + 1 | 0;
          } while ((i6 | 0) != (i9 | 0));
          i2 = i9 << 1 | 1;
          i6 = _realloc(i3, i2) | 0;
          if (!i6) {
           i2 = 0;
           i31 = 154;
           break L6;
          } else {
           i8 = i9;
           i9 = i2;
           i3 = i6;
           i6 = i8;
          }
         }
        }
        if (!i15) {
         i3 = i8;
         while (1) {
          i2 = HEAP32[i29 >> 2] | 0;
          if (i2 >>> 0 < i3 >>> 0) {
           HEAP32[i29 >> 2] = i2 + 1;
           i2 = HEAPU8[i2 >> 0] | 0;
          } else i2 = ___shgetc(i33) | 0;
          if (!(HEAP8[i26 + (i2 + 1) >> 0] | 0)) {
           i8 = 0;
           i3 = 0;
           i2 = 0;
           break L89;
          }
          i3 = HEAP32[i30 >> 2] | 0;
         }
        } else {
         i3 = 0;
         while (1) {
          i2 = HEAP32[i29 >> 2] | 0;
          if (i2 >>> 0 < i8 >>> 0) {
           HEAP32[i29 >> 2] = i2 + 1;
           i2 = HEAPU8[i2 >> 0] | 0;
          } else i2 = ___shgetc(i33) | 0;
          if (!(HEAP8[i26 + (i2 + 1) >> 0] | 0)) {
           i8 = i3;
           i3 = i15;
           i2 = 0;
           break L89;
          }
          HEAP8[i15 + i3 >> 0] = i2;
          i8 = HEAP32[i30 >> 2] | 0;
          i3 = i3 + 1 | 0;
         }
        }
       } while (0);
       if (!(HEAP32[i30 >> 2] | 0)) i6 = HEAP32[i29 >> 2] | 0; else {
        i6 = (HEAP32[i29 >> 2] | 0) + -1 | 0;
        HEAP32[i29 >> 2] = i6;
       }
       i6 = i6 - (HEAP32[i17 >> 2] | 0) + (HEAP32[i23 >> 2] | 0) | 0;
       if (!i6) break L6;
       if (!((i6 | 0) == (i13 | 0) | i12 ^ 1)) break L6;
       do if (i11) if (i10) {
        HEAP32[i15 >> 2] = i2;
        break;
       } else {
        HEAP32[i15 >> 2] = i3;
        break;
       } while (0);
       if (!i12) {
        if (i2 | 0) HEAP32[i2 + (i8 << 2) >> 2] = 0;
        if (!i3) {
         i3 = 0;
         break L68;
        }
        HEAP8[i3 + i8 >> 0] = 0;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       i6 = 16;
       i31 = 136;
       break;
      }
     case 111:
      {
       i6 = 8;
       i31 = 136;
       break;
      }
     case 117:
     case 100:
      {
       i6 = 10;
       i31 = 136;
       break;
      }
     case 105:
      {
       i6 = 0;
       i31 = 136;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       d7 = +___floatscan(i33, i11, 0);
       if ((HEAP32[i23 >> 2] | 0) == ((HEAP32[i17 >> 2] | 0) - (HEAP32[i29 >> 2] | 0) | 0)) break L6;
       if (i15) switch (i11 | 0) {
       case 0:
        {
         HEAPF32[i15 >> 2] = d7;
         break L68;
        }
       case 1:
        {
         HEAPF64[i15 >> 3] = d7;
         break L68;
        }
       case 2:
        {
         HEAPF64[i15 >> 3] = d7;
         break L68;
        }
       default:
        break L68;
       }
       break;
      }
     default:
      {}
     } while (0);
     L169 : do if ((i31 | 0) == 136) {
      i31 = 0;
      i6 = ___intscan(i33, i6, 0, -1, -1) | 0;
      if ((HEAP32[i23 >> 2] | 0) == ((HEAP32[i17 >> 2] | 0) - (HEAP32[i29 >> 2] | 0) | 0)) break L6;
      if ((i15 | 0) != 0 & (i9 | 0) == 112) {
       HEAP32[i15 >> 2] = i6;
       break;
      }
      if (i15) switch (i11 | 0) {
      case -2:
       {
        HEAP8[i15 >> 0] = i6;
        break L169;
       }
      case -1:
       {
        HEAP16[i15 >> 1] = i6;
        break L169;
       }
      case 0:
       {
        HEAP32[i15 >> 2] = i6;
        break L169;
       }
      case 1:
       {
        HEAP32[i15 >> 2] = i6;
        break L169;
       }
      case 3:
       {
        i13 = i15;
        HEAP32[i13 >> 2] = i6;
        HEAP32[i13 + 4 >> 2] = tempRet0;
        break L169;
       }
      default:
       break L169;
      }
     } while (0);
     i1 = ((i15 | 0) != 0 & 1) + i1 | 0;
     i6 = (HEAP32[i23 >> 2] | 0) + i14 + (HEAP32[i29 >> 2] | 0) - (HEAP32[i17 >> 2] | 0) | 0;
     break L8;
    } while (0);
    i5 = i5 + (i4 & 1) | 0;
    ___shlim(i33, 0);
    i4 = HEAP32[i29 >> 2] | 0;
    if (i4 >>> 0 < (HEAP32[i30 >> 2] | 0) >>> 0) {
     HEAP32[i29 >> 2] = i4 + 1;
     i4 = HEAPU8[i4 >> 0] | 0;
    } else i4 = ___shgetc(i33) | 0;
    if ((i4 | 0) != (HEAPU8[i5 >> 0] | 0)) {
     i31 = 22;
     break L6;
    }
    i6 = i10 + 1 | 0;
   } else {
    while (1) {
     i4 = i5 + 1 | 0;
     if (!(_isspace(HEAPU8[i4 >> 0] | 0) | 0)) break; else i5 = i4;
    }
    ___shlim(i33, 0);
    do {
     i4 = HEAP32[i29 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i30 >> 2] | 0) >>> 0) {
      HEAP32[i29 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i33) | 0;
    } while ((_isspace(i4) | 0) != 0);
    if (!(HEAP32[i30 >> 2] | 0)) i4 = HEAP32[i29 >> 2] | 0; else {
     i4 = (HEAP32[i29 >> 2] | 0) + -1 | 0;
     HEAP32[i29 >> 2] = i4;
    }
    i6 = (HEAP32[i23 >> 2] | 0) + i10 + i4 - (HEAP32[i17 >> 2] | 0) | 0;
   } while (0);
   i5 = i5 + 1 | 0;
   i4 = HEAP8[i5 >> 0] | 0;
   if (!(i4 << 24 >> 24)) break L4; else i10 = i6;
  }
  if ((i31 | 0) == 22) {
   if (HEAP32[i30 >> 2] | 0) HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + -1;
   if ((i1 | 0) != 0 | (i4 | 0) > -1) break; else {
    i1 = 0;
    i31 = 155;
   }
  } else if ((i31 | 0) == 154) if (!i1) {
   i1 = i4;
   i31 = 155;
  }
  if ((i31 | 0) == 155) {
   i4 = i1;
   i1 = -1;
  }
  if (i4) {
   _free(i3);
   _free(i2);
  }
 } else i1 = 0; while (0);
 if (i32 | 0) ___unlockfile(i33);
 STACKTOP = i34;
 return i1 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseExpressionENS3_17ExpressionElementERPcPKc(i40, i17, i15, i14) {
 i40 = i40 | 0;
 i17 = i17 | 0;
 i15 = i15 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i41 = 0, i42 = 0;
 i42 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i39 = i42 + 112 | 0;
 i19 = i42 + 16 | 0;
 i18 = i42 + 100 | 0;
 i11 = i42 + 8 | 0;
 i5 = i42 + 104 | 0;
 i8 = i42 + 96 | 0;
 i9 = i42;
 i38 = i42 + 44 | 0;
 i32 = i42 + 92 | 0;
 i33 = i42 + 88 | 0;
 i34 = i42 + 84 | 0;
 i35 = i42 + 80 | 0;
 i36 = i42 + 76 | 0;
 i37 = i42 + 72 | 0;
 i20 = i42 + 68 | 0;
 i21 = i42 + 64 | 0;
 i22 = i42 + 60 | 0;
 i23 = i42 + 56 | 0;
 i24 = i42 + 52 | 0;
 i25 = i42 + 48 | 0;
 i26 = i42 + 40 | 0;
 i27 = i42 + 36 | 0;
 i29 = i42 + 32 | 0;
 i13 = i40 + 4 | 0;
 i12 = HEAP32[i13 >> 2] | 0;
 i16 = i12 + -12 | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i15);
 i4 = HEAP32[i15 >> 2] | 0;
 i2 = HEAP8[i4 >> 0] | 0;
 L1 : do if (i2 << 24 >> 24) {
  i1 = i14;
  while (1) {
   i3 = HEAP8[i1 >> 0] | 0;
   if (!(i3 << 24 >> 24)) break;
   if (i3 << 24 >> 24 == i2 << 24 >> 24) {
    i41 = 4;
    break L1;
   } else i1 = i1 + 1 | 0;
  }
  i3 = i12 + -8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  i10 = (i1 | 0) == (HEAP32[i16 >> 2] | 0);
  do if (!(HEAP8[i17 >> 0] | 0)) if ((i1 | 0) == (HEAP32[i12 + -4 >> 2] | 0)) {
   __ZNSt3__16vectorIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(i16, i17);
   break;
  } else {
   i12 = i17;
   i16 = HEAP32[i12 + 4 >> 2] | 0;
   i17 = i1;
   HEAP32[i17 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i17 + 4 >> 2] = i16;
   HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 8;
   break;
  } else {
   __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i19, i4);
   if ((HEAP32[i19 + 12 >> 2] | 0) != 1) {
    i1 = HEAP32[i15 >> 2] | 0;
    switch (HEAP8[i1 >> 0] | 0) {
    case 40:
     {
      i7 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv(i17) | 0;
      HEAP32[i5 >> 2] = i7;
      HEAP32[i39 >> 2] = HEAP32[i5 >> 2];
      i7 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9parseCallES1_RPc(i40, i39, i15) | 0;
      i6 = i17;
      HEAP32[i6 >> 2] = 1;
      HEAP32[i6 + 4 >> 2] = i7;
      i6 = 1;
      break;
     }
    case 91:
     {
      i7 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv(i17) | 0;
      HEAP32[i8 >> 2] = i7;
      HEAP32[i39 >> 2] = HEAP32[i8 >> 2];
      i7 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseIndexingES1_RPc(i40, i39, i15) | 0;
      i6 = i17;
      HEAP32[i6 >> 2] = 1;
      HEAP32[i6 + 4 >> 2] = i7;
      i6 = 1;
      break;
     }
    default:
     {
      __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4dumpEPKcPc(24239, i1);
      _abort();
     }
    }
    i1 = i9;
    HEAP32[i1 >> 2] = i6;
    HEAP32[i1 + 4 >> 2] = i7;
    HEAP32[i39 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i39 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
    i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseExpressionENS3_17ExpressionElementERPcPKc(i40, i39, i15, i14) | 0;
    break L1;
   }
   i1 = HEAP32[i3 >> 2] | 0;
   i2 = i12 + -4 | 0;
   if ((i1 | 0) == (HEAP32[i2 >> 2] | 0)) __ZNSt3__16vectorIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(i16, i17); else {
    i9 = i17;
    i12 = HEAP32[i9 + 4 >> 2] | 0;
    i17 = i1;
    HEAP32[i17 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i17 + 4 >> 2] = i12;
    HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 8;
   }
   HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + (HEAP32[i19 + 8 >> 2] | 0);
   i1 = HEAP32[i19 >> 2] | 0;
   HEAP8[i11 >> 0] = 0;
   HEAP32[i11 + 4 >> 2] = i1;
   i1 = HEAP32[i3 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i2 >> 2] | 0) >>> 0) {
    i12 = i11;
    i16 = HEAP32[i12 + 4 >> 2] | 0;
    i17 = i1;
    HEAP32[i17 >> 2] = HEAP32[i12 >> 2];
    HEAP32[i17 + 4 >> 2] = i16;
    HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 8;
   } else __ZNSt3__16vectorIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(i16, i11);
  } while (0);
  i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i40, i15, i14) | 0;
  if (i10) {
   i11 = HEAP32[i13 >> 2] | 0;
   i10 = i11 + -12 | 0;
   i8 = HEAP32[10348] | 0;
   i11 = i11 + -8 | 0;
   i9 = HEAP32[10347] | 0;
   L30 : while (1) {
    if ((i9 | 0) == (i8 | 0)) break;
    L33 : do if (!(HEAP8[i9 + 20 >> 0] | 0)) {
     i5 = i9 + 24 | 0;
     i4 = 0;
     while (1) {
      i17 = HEAP32[i10 >> 2] | 0;
      i1 = i17;
      if ((i4 | 0) >= ((HEAP32[i11 >> 2] | 0) - i17 >> 3 | 0)) break L33;
      if (!(HEAP8[i1 + (i4 << 3) >> 0] | 0)) {
       i3 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement5getOpEv(i1 + (i4 << 3) | 0) | 0;
       HEAP32[i38 >> 2] = i3;
       L40 : do if (__ZNKSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(i9, i38) | 0) {
        i1 = HEAP32[i5 >> 2] | 0;
        i2 = (i4 | 0) > 0;
        if (i2 & (i1 | 0) == 0 ? (i17 = HEAP32[i10 >> 2] | 0, i30 = i17, (i4 | 0) < (((HEAP32[i11 >> 2] | 0) - i17 >> 3) + -1 | 0)) : 0) {
         i1 = i4 + -1 | 0;
         i17 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv(i30 + (i1 << 3) | 0) | 0;
         HEAP32[i24 >> 2] = i17;
         HEAP32[i25 >> 2] = i3;
         i17 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv((HEAP32[i10 >> 2] | 0) + (i4 + 1 << 3) | 0) | 0;
         HEAP32[i26 >> 2] = i17;
         HEAP32[i18 >> 2] = HEAP32[i24 >> 2];
         HEAP32[i19 >> 2] = HEAP32[i25 >> 2];
         HEAP32[i39 >> 2] = HEAP32[i26 >> 2];
         i17 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE10makeBinaryES1_NS_7IStringES1_(i40, i18, i19, i39) | 0;
         i2 = i30 + (i4 << 3) | 0;
         HEAP32[i2 >> 2] = 1;
         HEAP32[i2 + 4 >> 2] = i17;
         i2 = (HEAP32[i10 >> 2] | 0) + (i4 << 3) + 8 | 0;
         i17 = i2 + 8 | 0;
         i3 = (HEAP32[i11 >> 2] | 0) - i17 | 0;
         _memmove(i2 | 0, i17 | 0, i3 | 0) | 0;
         i3 = i2 + (i3 >> 3 << 3) | 0;
         i2 = HEAP32[i11 >> 2] | 0;
         while (1) {
          if ((i2 | 0) == (i3 | 0)) break;
          i17 = i2 + -8 | 0;
          HEAP32[i11 >> 2] = i17;
          i2 = i17;
         }
         i3 = (HEAP32[i10 >> 2] | 0) + (i4 << 3) + -8 | 0;
         i17 = i3 + 8 | 0;
         i2 = i2 - i17 | 0;
         _memmove(i3 | 0, i17 | 0, i2 | 0) | 0;
         i2 = i3 + (i2 >> 3 << 3) | 0;
         i3 = HEAP32[i11 >> 2] | 0;
         while (1) {
          if ((i3 | 0) == (i2 | 0)) break L40;
          i17 = i3 + -8 | 0;
          HEAP32[i11 >> 2] = i17;
          i3 = i17;
         }
        }
        if ((i1 | 0) == 1 ? (i17 = HEAP32[i10 >> 2] | 0, i31 = i17, (i4 | 0) < (((HEAP32[i11 >> 2] | 0) - i17 >> 3) + -1 | 0)) : 0) {
         if (i2 ? HEAP8[i31 + (i4 + -1 << 3) >> 0] | 0 : 0) {
          i1 = i4;
          break;
         }
         HEAP32[i27 >> 2] = i3;
         i17 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv(i31 + (i4 + 1 << 3) | 0) | 0;
         HEAP32[i29 >> 2] = i17;
         HEAP32[i19 >> 2] = HEAP32[i27 >> 2];
         HEAP32[i39 >> 2] = HEAP32[i29 >> 2];
         i17 = __ZN6cashew12ValueBuilder10makePrefixENS_7IStringENS_3RefE(i19, i39) | 0;
         i2 = i31 + (i4 << 3) | 0;
         HEAP32[i2 >> 2] = 1;
         HEAP32[i2 + 4 >> 2] = i17;
         i2 = (HEAP32[i10 >> 2] | 0) + (i4 << 3) + 8 | 0;
         i17 = i2 + 8 | 0;
         i1 = (HEAP32[i11 >> 2] | 0) - i17 | 0;
         _memmove(i2 | 0, i17 | 0, i1 | 0) | 0;
         i1 = i2 + (i1 >> 3 << 3) | 0;
         i2 = HEAP32[i11 >> 2] | 0;
         while (1) {
          if ((i2 | 0) == (i1 | 0)) break;
          i17 = i2 + -8 | 0;
          HEAP32[i11 >> 2] = i17;
          i2 = i17;
         }
         i1 = i4 + -2 | 0;
         i1 = (i1 | 0) < 0 ? 0 : i1;
        } else i1 = i4;
       } else i1 = i4; while (0);
      } else i1 = i4;
      i4 = i1 + 1 | 0;
     }
    } else {
     i7 = i9 + 24 | 0;
     i6 = (HEAP32[i11 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) >> 3;
     while (1) {
      i1 = i6 + -1 | 0;
      if ((i1 | 0) <= -1) break L33;
      i2 = HEAP32[i10 >> 2] | 0;
      if (HEAP8[i2 + (i1 << 3) >> 0] | 0) {
       i6 = i1;
       continue;
      }
      i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement5getOpEv(i2 + (i1 << 3) | 0) | 0;
      HEAP32[i38 >> 2] = i2;
      i4 = i2;
      L69 : do if (__ZNKSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(i9, i38) | 0) {
       i3 = HEAP32[i7 >> 2] | 0;
       i5 = (i1 | 0) > 0;
       if (i5 & (i3 | 0) == 0 ? (i17 = HEAP32[i10 >> 2] | 0, i28 = i17, (i1 | 0) < (((HEAP32[i11 >> 2] | 0) - i17 >> 3) + -1 | 0)) : 0) {
        i17 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv(i28 + (i6 + -2 << 3) | 0) | 0;
        HEAP32[i32 >> 2] = i17;
        HEAP32[i33 >> 2] = i4;
        i17 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv((HEAP32[i10 >> 2] | 0) + (i6 << 3) | 0) | 0;
        HEAP32[i34 >> 2] = i17;
        HEAP32[i18 >> 2] = HEAP32[i32 >> 2];
        HEAP32[i19 >> 2] = HEAP32[i33 >> 2];
        HEAP32[i39 >> 2] = HEAP32[i34 >> 2];
        i17 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE10makeBinaryES1_NS_7IStringES1_(i40, i18, i19, i39) | 0;
        i2 = i28 + (i1 << 3) | 0;
        HEAP32[i2 >> 2] = 1;
        HEAP32[i2 + 4 >> 2] = i17;
        i2 = (HEAP32[i10 >> 2] | 0) + (i1 << 3) + 8 | 0;
        i17 = i2 + 8 | 0;
        i3 = (HEAP32[i11 >> 2] | 0) - i17 | 0;
        _memmove(i2 | 0, i17 | 0, i3 | 0) | 0;
        i3 = i2 + (i3 >> 3 << 3) | 0;
        i2 = HEAP32[i11 >> 2] | 0;
        while (1) {
         if ((i2 | 0) == (i3 | 0)) break;
         i17 = i2 + -8 | 0;
         HEAP32[i11 >> 2] = i17;
         i2 = i17;
        }
        i3 = (HEAP32[i10 >> 2] | 0) + (i1 << 3) + -8 | 0;
        i17 = i3 + 8 | 0;
        i2 = i2 - i17 | 0;
        _memmove(i3 | 0, i17 | 0, i2 | 0) | 0;
        i2 = i3 + (i2 >> 3 << 3) | 0;
        i3 = HEAP32[i11 >> 2] | 0;
        while (1) {
         if ((i3 | 0) == (i2 | 0)) break L69;
         i17 = i3 + -8 | 0;
         HEAP32[i11 >> 2] = i17;
         i3 = i17;
        }
       }
       switch (i3 | 0) {
       case 1:
        break;
       case 3:
        {
         if ((i2 | 0) != (HEAP32[10332] | 0)) break L69;
         i2 = HEAP32[i10 >> 2] | 0;
         if (!((i1 | 0) > 2 ? (i1 | 0) < (((HEAP32[i11 >> 2] | 0) - i2 >> 3) + -1 | 0) : 0)) {
          i41 = 53;
          break L30;
         }
         if ((__ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement5getOpEv(i2 + (i6 + -3 << 3) | 0) | 0) != (HEAP32[10331] | 0)) break L69;
         i17 = (HEAP32[i10 >> 2] | 0) + (i6 + -4 << 3) | 0;
         i16 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv(i17) | 0;
         HEAP32[i37 >> 2] = i16;
         i16 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv((HEAP32[i10 >> 2] | 0) + (i6 + -2 << 3) | 0) | 0;
         HEAP32[i20 >> 2] = i16;
         i16 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv((HEAP32[i10 >> 2] | 0) + (i6 << 3) | 0) | 0;
         HEAP32[i21 >> 2] = i16;
         HEAP32[i18 >> 2] = HEAP32[i37 >> 2];
         HEAP32[i19 >> 2] = HEAP32[i20 >> 2];
         HEAP32[i39 >> 2] = HEAP32[i21 >> 2];
         i16 = __ZN6cashew12ValueBuilder15makeConditionalENS_3RefES1_S1_(i18, i19, i39) | 0;
         HEAP32[i17 >> 2] = 1;
         HEAP32[i17 + 4 >> 2] = i16;
         i1 = (HEAP32[i10 >> 2] | 0) + (i1 << 3) | 0;
         HEAP32[i22 >> 2] = i1 + -16;
         HEAP32[i23 >> 2] = i1 + 16;
         HEAP32[i19 >> 2] = HEAP32[i22 >> 2];
         HEAP32[i39 >> 2] = HEAP32[i23 >> 2];
         __ZNSt3__16vectorIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEE5eraseENS_11__wrap_iterIPKS6_EESD_(i10, i19, i39) | 0;
         i1 = (HEAP32[i11 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) >> 3;
         break L69;
        }
       default:
        break L69;
       }
       i17 = HEAP32[i10 >> 2] | 0;
       i2 = i17;
       if ((i1 | 0) < (((HEAP32[i11 >> 2] | 0) - i17 >> 3) + -1 | 0)) {
        if (i5 ? HEAP8[i2 + (i6 + -2 << 3) >> 0] | 0 : 0) break;
        HEAP32[i35 >> 2] = i4;
        i17 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv(i2 + (i6 << 3) | 0) | 0;
        HEAP32[i36 >> 2] = i17;
        HEAP32[i19 >> 2] = HEAP32[i35 >> 2];
        HEAP32[i39 >> 2] = HEAP32[i36 >> 2];
        i17 = __ZN6cashew12ValueBuilder10makePrefixENS_7IStringENS_3RefE(i19, i39) | 0;
        i3 = i2 + (i1 << 3) | 0;
        HEAP32[i3 >> 2] = 1;
        HEAP32[i3 + 4 >> 2] = i17;
        i3 = (HEAP32[i10 >> 2] | 0) + (i1 << 3) + 8 | 0;
        i17 = i3 + 8 | 0;
        i2 = (HEAP32[i11 >> 2] | 0) - i17 | 0;
        _memmove(i3 | 0, i17 | 0, i2 | 0) | 0;
        i2 = i3 + (i2 >> 3 << 3) | 0;
        i3 = HEAP32[i11 >> 2] | 0;
        while (1) {
         if ((i3 | 0) == (i2 | 0)) break L69;
         i17 = i3 + -8 | 0;
         HEAP32[i11 >> 2] = i17;
         i3 = i17;
        }
       }
      } while (0);
      i6 = i1;
     }
    } while (0);
    i9 = i9 + 28 | 0;
   }
   if ((i41 | 0) == 53) ___assert_fail(24265, 23426, 794, 24299);
   i1 = HEAP32[i10 >> 2] | 0;
   if (((HEAP32[i11 >> 2] | 0) - i1 | 0) != 8) ___assert_fail(24315, 23426, 821, 24299);
   i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv(i1) | 0;
   i2 = HEAP32[i10 >> 2] | 0;
   i3 = HEAP32[i11 >> 2] | 0;
   while (1) {
    if ((i3 | 0) == (i2 | 0)) break L1;
    i40 = i3 + -8 | 0;
    HEAP32[i11 >> 2] = i40;
    i3 = i40;
   }
  }
 } else i41 = 4; while (0);
 if ((i41 | 0) == 4) {
  i1 = i12 + -8 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  do if ((i2 | 0) != (HEAP32[i16 >> 2] | 0)) if ((i2 | 0) == (HEAP32[i12 + -4 >> 2] | 0)) {
   __ZNSt3__16vectorIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(i16, i17);
   break;
  } else {
   i39 = i17;
   i40 = HEAP32[i39 + 4 >> 2] | 0;
   i41 = i2;
   HEAP32[i41 >> 2] = HEAP32[i39 >> 2];
   HEAP32[i41 + 4 >> 2] = i40;
   HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 8;
   break;
  } while (0);
  i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv(i17) | 0;
 }
 STACKTOP = i42;
 return i1 | 0;
}

function __ZN4wasm10parseConstEN6cashew7IStringENS_8WasmTypeER10MixedArena(i1, i19, i2) {
 i1 = i1 | 0;
 i19 = i19 | 0;
 i2 = i2 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, d24 = 0.0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 i21 = i23 + 208 | 0;
 i20 = i23 + 64 | 0;
 i6 = i23 + 408 | 0;
 i13 = i23 + 48 | 0;
 i14 = i23 + 32 | 0;
 i7 = i23 + 396 | 0;
 i15 = i23 + 16 | 0;
 i16 = i23;
 i11 = i23 + 384 | 0;
 i8 = i23 + 372 | 0;
 i12 = i23 + 360 | 0;
 i9 = i23 + 348 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 i22 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(i2) | 0;
 HEAP32[i22 + 4 >> 2] = i19;
 L1 : do if ((i19 + -3 | 0) >>> 0 < 2) {
  if ((i4 | 0) == (HEAP32[10180] | 0)) switch (i19 | 0) {
  case 3:
   {
    HEAP32[i22 + 8 >> 2] = 3;
    HEAPF32[i22 + 16 >> 2] = inf;
    i18 = i22;
    break L1;
   }
  case 4:
   {
    HEAP32[i22 + 8 >> 2] = 4;
    HEAPF64[i22 + 16 >> 3] = inf;
    i18 = i22;
    break L1;
   }
  default:
   {
    i18 = 0;
    break L1;
   }
  }
  if ((i4 | 0) == (HEAP32[10225] | 0)) switch (i19 | 0) {
  case 3:
   {
    HEAP32[i22 + 8 >> 2] = 3;
    HEAPF32[i22 + 16 >> 2] = -inf;
    i18 = i22;
    break L1;
   }
  case 4:
   {
    HEAP32[i22 + 8 >> 2] = 4;
    HEAPF64[i22 + 16 >> 3] = -inf;
    i18 = i22;
    break L1;
   }
  default:
   {
    i18 = 0;
    break L1;
   }
  }
  if ((i4 | 0) == (HEAP32[10179] | 0)) switch (i19 | 0) {
  case 3:
   {
    d3 = +_nan(49108);
    HEAP32[i22 + 8 >> 2] = 3;
    HEAPF32[i22 + 16 >> 2] = d3;
    i18 = i22;
    break L1;
   }
  case 4:
   {
    d3 = +_nan(49108);
    HEAP32[i22 + 8 >> 2] = 4;
    HEAPF64[i22 + 16 >> 3] = d3;
    i18 = i22;
    break L1;
   }
  default:
   {
    i18 = 0;
    break L1;
   }
  }
  i10 = (HEAP8[i4 >> 0] | 0) == 45;
  i1 = i4 + 1 | 0;
  i2 = i10 ? i1 : i4;
  if (i10) i5 = i1; else i5 = (HEAP8[i2 >> 0] | 0) == 43 ? i2 + 1 | 0 : i2;
  if (((HEAP8[i5 >> 0] | 0) == 110 ? (HEAP8[i5 + 1 >> 0] | 0) == 97 : 0) ? (HEAP8[i5 + 2 >> 0] | 0) == 110 : 0) {
   i1 = (HEAP8[i5 + 3 >> 0] | 0) == 58;
   i2 = i5 + 4 | 0;
   i4 = i1 ? i2 : 0;
   do if (i1) {
    if ((HEAP8[i2 >> 0] | 0) == 48 ? (HEAP8[i5 + 5 >> 0] | 0) == 120 : 0) break;
    ___assert_fail(14338, 14394, 70, 14408);
   } while (0);
   switch (i19 | 0) {
   case 3:
    {
     if (i1) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i6, i4, _strlen(i4) | 0);
      i2 = i20 + 60 | 0;
      i1 = i20 + 8 | 0;
      HEAP32[i20 >> 2] = 3012;
      HEAP32[i2 >> 2] = 3032;
      HEAP32[i20 + 4 >> 2] = 0;
      __ZNSt3__18ios_base4initEPv(i20 + 60 | 0, i1);
      HEAP32[i20 + 132 >> 2] = 0;
      HEAP32[i20 + 136 >> 2] = -1;
      HEAP32[i20 >> 2] = 2956;
      HEAP32[i2 >> 2] = 2976;
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1);
      HEAP32[i1 >> 2] = 3048;
      i2 = i20 + 40 | 0;
      i4 = 0;
      while (1) {
       if ((i4 | 0) == 3) break;
       HEAP32[i2 + (i4 << 2) >> 2] = 0;
       i4 = i4 + 1 | 0;
      }
      HEAP32[i20 + 52 >> 2] = 0;
      HEAP32[i20 + 56 >> 2] = 8;
      __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i1, i6);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
      i19 = i20 + (HEAP32[(HEAP32[i20 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0;
      HEAP32[i19 >> 2] = HEAP32[i19 >> 2] & -75 | 8;
      __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERj(i20, i21) | 0;
      HEAP32[i21 >> 2] = HEAP32[i21 >> 2] | 2139095040;
      __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i20);
     } else HEAP32[i21 >> 2] = 2143289344;
     if (i10) {
      i1 = HEAP32[i21 >> 2] | -2147483648;
      HEAP32[i21 >> 2] = i1;
      d3 = (HEAP32[tempDoublePtr >> 2] = i1, +HEAPF32[tempDoublePtr >> 2]);
     } else {
      d24 = +HEAPF32[i21 >> 2];
      d3 = d24;
      i1 = (HEAPF32[tempDoublePtr >> 2] = d24, HEAP32[tempDoublePtr >> 2] | 0);
     }
     d24 = +Math_abs(+d3);
     if ((HEAPF32[tempDoublePtr >> 2] = d24, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 <= 2139095040) {
      i1 = i1 | 1;
      HEAP32[i21 >> 2] = i1;
     }
     i18 = i22 + 8 | 0;
     HEAP32[i14 >> 2] = 1;
     HEAP32[i14 + 8 >> 2] = i1;
     __ZN4wasm7Literal9castToF32Ev(i13, i14);
     HEAP32[i18 >> 2] = HEAP32[i13 >> 2];
     HEAP32[i18 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
     HEAP32[i18 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
     HEAP32[i18 + 12 >> 2] = HEAP32[i13 + 12 >> 2];
     i18 = i22;
     break L1;
    }
   case 4:
    {
     if (i1) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i7, i4, _strlen(i4) | 0);
      i1 = i20 + 60 | 0;
      i2 = i20 + 8 | 0;
      HEAP32[i20 >> 2] = 3012;
      HEAP32[i1 >> 2] = 3032;
      HEAP32[i20 + 4 >> 2] = 0;
      __ZNSt3__18ios_base4initEPv(i20 + 60 | 0, i2);
      HEAP32[i20 + 132 >> 2] = 0;
      HEAP32[i20 + 136 >> 2] = -1;
      HEAP32[i20 >> 2] = 2956;
      HEAP32[i1 >> 2] = 2976;
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i2);
      HEAP32[i2 >> 2] = 3048;
      i1 = i20 + 40 | 0;
      i4 = 0;
      while (1) {
       if ((i4 | 0) == 3) break;
       HEAP32[i1 + (i4 << 2) >> 2] = 0;
       i4 = i4 + 1 | 0;
      }
      HEAP32[i20 + 52 >> 2] = 0;
      HEAP32[i20 + 56 >> 2] = 8;
      __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i2, i7);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
      i14 = i20 + (HEAP32[(HEAP32[i20 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0;
      HEAP32[i14 >> 2] = HEAP32[i14 >> 2] & -75 | 8;
      __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERy(i20, i21) | 0;
      i14 = i21;
      i18 = HEAP32[i14 + 4 >> 2] | 2146435072;
      i19 = i21;
      HEAP32[i19 >> 2] = HEAP32[i14 >> 2];
      HEAP32[i19 + 4 >> 2] = i18;
      __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i20);
     } else {
      i20 = i21;
      HEAP32[i20 >> 2] = 0;
      HEAP32[i20 + 4 >> 2] = 2146959360;
     }
     if (i10) {
      i1 = i21;
      i2 = HEAP32[i1 >> 2] | 0;
      i1 = HEAP32[i1 + 4 >> 2] | -2147483648;
      i20 = i21;
      HEAP32[i20 >> 2] = i2;
      HEAP32[i20 + 4 >> 2] = i1;
      HEAP32[tempDoublePtr >> 2] = i2;
      HEAP32[tempDoublePtr + 4 >> 2] = i1;
      d3 = +HEAPF64[tempDoublePtr >> 3];
     } else {
      d3 = +HEAPF64[i21 >> 3];
      HEAPF64[tempDoublePtr >> 3] = d3;
      i2 = HEAP32[tempDoublePtr >> 2] | 0;
      i1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
     }
     d24 = +Math_abs(+d3);
     HEAPF64[tempDoublePtr >> 3] = d24;
     i20 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
     if (!(i20 >>> 0 > 2146435072 | (i20 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0)) {
      i2 = i2 | 1;
      HEAP32[i21 >> 2] = i2;
      HEAP32[i21 + 4 >> 2] = i1;
     }
     i18 = i22 + 8 | 0;
     HEAP32[i16 >> 2] = 2;
     i21 = i16 + 8 | 0;
     HEAP32[i21 >> 2] = i2;
     HEAP32[i21 + 4 >> 2] = i1;
     __ZN4wasm7Literal9castToF64Ev(i15, i16);
     HEAP32[i18 >> 2] = HEAP32[i15 >> 2];
     HEAP32[i18 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
     HEAP32[i18 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
     HEAP32[i18 + 12 >> 2] = HEAP32[i15 + 12 >> 2];
     i18 = i22;
     break L1;
    }
   default:
    {
     i18 = 0;
     break L1;
    }
   }
  }
  if ((i4 | 0) == (HEAP32[10226] | 0)) switch (i19 | 0) {
  case 3:
   {
    d24 = -+_nan(49108);
    HEAP32[i22 + 8 >> 2] = 3;
    HEAPF32[i22 + 16 >> 2] = d24;
    i18 = i22;
    break L1;
   }
  case 4:
   {
    d24 = -+_nan(49108);
    HEAP32[i22 + 8 >> 2] = 4;
    HEAPF64[i22 + 16 >> 3] = d24;
    i18 = i22;
    break L1;
   }
  default:
   {
    i18 = 0;
    break L1;
   }
  } else i17 = 52;
 } else i17 = 52; while (0);
 L72 : do if ((i17 | 0) == 52) {
  L74 : do switch (i19 | 0) {
  case 1:
   {
    i2 = HEAP8[i4 >> 0] | 0;
    switch (i2 << 24 >> 24) {
    case 48:
     {
      i1 = i4 + 1 | 0;
      if ((HEAP8[i1 >> 0] | 0) == 120) i17 = 57; else i17 = 61;
      break;
     }
    case 45:
     {
      i1 = i4 + 1 | 0;
      if ((HEAP8[i1 >> 0] | 0) == 48 ? (HEAP8[i4 + 2 >> 0] | 0) == 120 : 0) i17 = 57; else i17 = 61;
      break;
     }
    default:
     i17 = 61;
    }
    if ((i17 | 0) == 57) {
     i5 = i2 << 24 >> 24 == 45;
     i2 = i5 ? i1 : i4;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i11, i2, _strlen(i2) | 0);
     i2 = i21 + 60 | 0;
     i1 = i21 + 8 | 0;
     HEAP32[i21 >> 2] = 3012;
     HEAP32[i2 >> 2] = 3032;
     HEAP32[i21 + 4 >> 2] = 0;
     __ZNSt3__18ios_base4initEPv(i21 + 60 | 0, i1);
     HEAP32[i21 + 132 >> 2] = 0;
     HEAP32[i21 + 136 >> 2] = -1;
     HEAP32[i21 >> 2] = 2956;
     HEAP32[i2 >> 2] = 2976;
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1);
     HEAP32[i1 >> 2] = 3048;
     i2 = i21 + 40 | 0;
     i4 = 0;
     while (1) {
      if ((i4 | 0) == 3) break;
      HEAP32[i2 + (i4 << 2) >> 2] = 0;
      i4 = i4 + 1 | 0;
     }
     HEAP32[i21 + 52 >> 2] = 0;
     HEAP32[i21 + 56 >> 2] = 8;
     __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i1, i11);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
     i1 = i21 + (HEAP32[(HEAP32[i21 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0;
     HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -75 | 8;
     __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERj(i21, i20) | 0;
     i20 = HEAP32[i20 >> 2] | 0;
     i1 = i22 + 8 | 0;
     HEAP32[i1 >> 2] = 1;
     HEAP32[i22 + 16 >> 2] = i5 ? 0 - i20 | 0 : i20;
     __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i21);
     break L74;
    } else if ((i17 | 0) == 61) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i8, i4, _strlen(i4) | 0);
     i2 = i21 + 60 | 0;
     i1 = i21 + 8 | 0;
     HEAP32[i21 >> 2] = 3012;
     HEAP32[i2 >> 2] = 3032;
     HEAP32[i21 + 4 >> 2] = 0;
     __ZNSt3__18ios_base4initEPv(i21 + 60 | 0, i1);
     HEAP32[i21 + 132 >> 2] = 0;
     HEAP32[i21 + 136 >> 2] = -1;
     HEAP32[i21 >> 2] = 2956;
     HEAP32[i2 >> 2] = 2976;
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1);
     HEAP32[i1 >> 2] = 3048;
     i2 = i21 + 40 | 0;
     i4 = 0;
     while (1) {
      if ((i4 | 0) == 3) break;
      HEAP32[i2 + (i4 << 2) >> 2] = 0;
      i4 = i4 + 1 | 0;
     }
     HEAP32[i21 + 52 >> 2] = 0;
     HEAP32[i21 + 56 >> 2] = 8;
     __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i1, i8);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
     __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi(i21, i20) | 0;
     i20 = HEAP32[i20 >> 2] | 0;
     i1 = i22 + 8 | 0;
     HEAP32[i1 >> 2] = 1;
     HEAP32[i22 + 16 >> 2] = i20;
     __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i21);
     break L74;
    }
    break;
   }
  case 2:
   {
    i2 = HEAP8[i4 >> 0] | 0;
    switch (i2 << 24 >> 24) {
    case 48:
     {
      i1 = i4 + 1 | 0;
      if ((HEAP8[i1 >> 0] | 0) == 120) i17 = 69; else i17 = 73;
      break;
     }
    case 45:
     {
      i1 = i4 + 1 | 0;
      if ((HEAP8[i1 >> 0] | 0) == 48 ? (HEAP8[i4 + 2 >> 0] | 0) == 120 : 0) i17 = 69; else i17 = 73;
      break;
     }
    default:
     i17 = 73;
    }
    if ((i17 | 0) == 69) {
     i5 = i2 << 24 >> 24 == 45;
     i2 = i5 ? i1 : i4;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i12, i2, _strlen(i2) | 0);
     i2 = i21 + 60 | 0;
     i1 = i21 + 8 | 0;
     HEAP32[i21 >> 2] = 3012;
     HEAP32[i2 >> 2] = 3032;
     HEAP32[i21 + 4 >> 2] = 0;
     __ZNSt3__18ios_base4initEPv(i21 + 60 | 0, i1);
     HEAP32[i21 + 132 >> 2] = 0;
     HEAP32[i21 + 136 >> 2] = -1;
     HEAP32[i21 >> 2] = 2956;
     HEAP32[i2 >> 2] = 2976;
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1);
     HEAP32[i1 >> 2] = 3048;
     i2 = i21 + 40 | 0;
     i4 = 0;
     while (1) {
      if ((i4 | 0) == 3) break;
      HEAP32[i2 + (i4 << 2) >> 2] = 0;
      i4 = i4 + 1 | 0;
     }
     HEAP32[i21 + 52 >> 2] = 0;
     HEAP32[i21 + 56 >> 2] = 8;
     __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i1, i12);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
     i17 = i21 + (HEAP32[(HEAP32[i21 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0;
     HEAP32[i17 >> 2] = HEAP32[i17 >> 2] & -75 | 8;
     __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERy(i21, i20) | 0;
     i17 = i20;
     i16 = HEAP32[i17 >> 2] | 0;
     i17 = HEAP32[i17 + 4 >> 2] | 0;
     i15 = _i64Subtract(0, 0, i16 | 0, i17 | 0) | 0;
     i1 = i22 + 8 | 0;
     HEAP32[i1 >> 2] = 2;
     i20 = i22 + 16 | 0;
     HEAP32[i20 >> 2] = i5 ? i15 : i16;
     HEAP32[i20 + 4 >> 2] = i5 ? tempRet0 : i17;
     __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i21);
     break L74;
    } else if ((i17 | 0) == 73) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i9, i4, _strlen(i4) | 0);
     i2 = i21 + 60 | 0;
     i1 = i21 + 8 | 0;
     HEAP32[i21 >> 2] = 3012;
     HEAP32[i2 >> 2] = 3032;
     HEAP32[i21 + 4 >> 2] = 0;
     __ZNSt3__18ios_base4initEPv(i21 + 60 | 0, i1);
     HEAP32[i21 + 132 >> 2] = 0;
     HEAP32[i21 + 136 >> 2] = -1;
     HEAP32[i21 >> 2] = 2956;
     HEAP32[i2 >> 2] = 2976;
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1);
     HEAP32[i1 >> 2] = 3048;
     i2 = i21 + 40 | 0;
     i4 = 0;
     while (1) {
      if ((i4 | 0) == 3) break;
      HEAP32[i2 + (i4 << 2) >> 2] = 0;
      i4 = i4 + 1 | 0;
     }
     HEAP32[i21 + 52 >> 2] = 0;
     HEAP32[i21 + 56 >> 2] = 8;
     __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i1, i9);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
     __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERx(i21, i20) | 0;
     i17 = i20;
     i16 = HEAP32[i17 >> 2] | 0;
     i17 = HEAP32[i17 + 4 >> 2] | 0;
     i1 = i22 + 8 | 0;
     HEAP32[i1 >> 2] = 2;
     i20 = i22 + 16 | 0;
     HEAP32[i20 >> 2] = i16;
     HEAP32[i20 + 4 >> 2] = i17;
     __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i21);
     break L74;
    }
    break;
   }
  case 3:
   {
    d24 = +_strtof(i4, i21);
    i1 = i22 + 8 | 0;
    HEAP32[i1 >> 2] = 3;
    HEAPF32[i22 + 16 >> 2] = d24;
    break;
   }
  case 4:
   {
    d24 = +_strtod(i4, i21);
    i1 = i22 + 8 | 0;
    HEAP32[i1 >> 2] = 4;
    HEAPF64[i22 + 16 >> 3] = d24;
    break;
   }
  default:
   {
    i18 = 0;
    break L72;
   }
  } while (0);
  if ((HEAP32[i1 >> 2] | 0) == (i19 | 0)) i18 = i22; else ___assert_fail(14419, 14394, 160, 14408);
 } while (0);
 STACKTOP = i23;
 return i18 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i12, i5, i15) {
 i12 = i12 | 0;
 i5 = i5 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i14 = i16 + 144 | 0;
 i6 = i16 + 120 | 0;
 i7 = i16 + 96 | 0;
 i8 = i16 + 72 | 0;
 i9 = i16 + 48 | 0;
 i10 = i16 + 24 | 0;
 i11 = i16;
 L1 : do if ((i5 - i12 | 0) > 1 ? (HEAP8[i12 >> 0] | 0) == 83 : 0) {
  i2 = i12 + 1 | 0;
  i1 = HEAP8[i2 >> 0] | 0;
  i3 = i1 << 24 >> 24;
  switch (i3 | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc(i6, 39117);
    i1 = i15 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i13 = HEAP32[i15 + 8 >> 2] | 0;
    i3 = i13;
    if (i2 >>> 0 < i13 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i6);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i15 >> 2] | 0;
     i13 = i2 - i1 | 0;
     i4 = (i13 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i13 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i15);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i14, i1, i4, i15 + 12 | 0);
     i13 = i14 + 8 | 0;
     i11 = HEAP32[i13 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i11, i6);
     HEAP32[i13 >> 2] = i11 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i15, i14);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i14);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
    i13 = i12 + 2 | 0;
    break L1;
   }
  case 98:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc(i7, 39132);
    i1 = i15 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i13 = HEAP32[i15 + 8 >> 2] | 0;
    i3 = i13;
    if (i2 >>> 0 < i13 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i7);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i15 >> 2] | 0;
     i13 = i2 - i1 | 0;
     i4 = (i13 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i13 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i15);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i14, i1, i4, i15 + 12 | 0);
     i13 = i14 + 8 | 0;
     i11 = HEAP32[i13 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i11, i7);
     HEAP32[i13 >> 2] = i11 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i15, i14);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i14);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
    i13 = i12 + 2 | 0;
    break L1;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc(i8, 39150);
    i1 = i15 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i13 = HEAP32[i15 + 8 >> 2] | 0;
    i3 = i13;
    if (i2 >>> 0 < i13 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i8);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i15 >> 2] | 0;
     i13 = i2 - i1 | 0;
     i4 = (i13 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i13 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i15);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i14, i1, i4, i15 + 12 | 0);
     i13 = i14 + 8 | 0;
     i11 = HEAP32[i13 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i11, i8);
     HEAP32[i13 >> 2] = i11 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i15, i14);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i14);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i8);
    i13 = i12 + 2 | 0;
    break L1;
   }
  case 105:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc(i9, 39162);
    i1 = i15 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i13 = HEAP32[i15 + 8 >> 2] | 0;
    i4 = i13;
    if (i2 >>> 0 < i13 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i9);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i15 >> 2] | 0;
     i13 = i2 - i1 | 0;
     i3 = (i13 | 0) / 24 | 0;
     i2 = i3 + 1 | 0;
     if ((i13 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i15);
     i1 = (i4 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i14, i1, i3, i15 + 12 | 0);
     i13 = i14 + 8 | 0;
     i11 = HEAP32[i13 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i11, i9);
     HEAP32[i13 >> 2] = i11 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i15, i14);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i14);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9);
    i13 = i12 + 2 | 0;
    break L1;
   }
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc(i10, 39175);
    i1 = i15 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i13 = HEAP32[i15 + 8 >> 2] | 0;
    i3 = i13;
    if (i2 >>> 0 < i13 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i10);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i15 >> 2] | 0;
     i13 = i2 - i1 | 0;
     i4 = (i13 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i13 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i15);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i14, i1, i4, i15 + 12 | 0);
     i13 = i14 + 8 | 0;
     i11 = HEAP32[i13 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i11, i10);
     HEAP32[i13 >> 2] = i11 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i15, i14);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i14);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i10);
    i13 = i12 + 2 | 0;
    break L1;
   }
  case 100:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc(i11, 39188);
    i1 = i15 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i13 = HEAP32[i15 + 8 >> 2] | 0;
    i3 = i13;
    if (i2 >>> 0 < i13 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i11);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i15 >> 2] | 0;
     i13 = i2 - i1 | 0;
     i4 = (i13 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i13 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i15);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i14, i1, i4, i15 + 12 | 0);
     i13 = i14 + 8 | 0;
     i10 = HEAP32[i13 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i10, i11);
     HEAP32[i13 >> 2] = i10 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i15, i14);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i14);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11);
    i13 = i12 + 2 | 0;
    break L1;
   }
  case 95:
   {
    i1 = HEAP32[i15 + 16 >> 2] | 0;
    if ((i1 | 0) == (HEAP32[i15 + 20 >> 2] | 0)) {
     i13 = i12;
     break L1;
    }
    i7 = HEAP32[i1 + 4 >> 2] | 0;
    i8 = i15 + 4 | 0;
    i9 = i15 + 8 | 0;
    i10 = i15 + 12 | 0;
    i11 = i14 + 8 | 0;
    i6 = HEAP32[i1 >> 2] | 0;
    while (1) {
     if ((i6 | 0) == (i7 | 0)) {
      i1 = 55;
      break;
     }
     i1 = HEAP32[i8 >> 2] | 0;
     i5 = HEAP32[i9 >> 2] | 0;
     i2 = i5;
     if ((i1 | 0) == (i5 | 0)) {
      i3 = HEAP32[i15 >> 2] | 0;
      i1 = i1 - i3 | 0;
      i5 = (i1 | 0) / 24 | 0;
      i4 = i5 + 1 | 0;
      if ((i1 | 0) < -24) {
       i1 = 59;
       break;
      }
      i1 = (i2 - i3 | 0) / 24 | 0;
      if (i1 >>> 0 < 1073741823) {
       i1 = i1 << 1;
       i1 = i1 >>> 0 < i4 >>> 0 ? i4 : i1;
      } else i1 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i14, i1, i5, i10);
      i5 = HEAP32[i11 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i5, i6);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i5 + 12 | 0, i6 + 12 | 0);
      HEAP32[i11 >> 2] = i5 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i15, i14);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i14);
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1, i6);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1 + 12 | 0, i6 + 12 | 0);
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
     }
     i6 = i6 + 24 | 0;
    }
    if ((i1 | 0) == 55) {
     i13 = i12 + 2 | 0;
     break L1;
    } else if ((i1 | 0) == 59) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i15);
    break;
   }
  default:
   {
    if ((i3 + -48 | 0) >>> 0 >= 10) {
     if (!(_isupper(i3) | 0)) {
      i13 = i12;
      break L1;
     }
     i1 = HEAP8[i2 >> 0] | 0;
    }
    i2 = i1 << 24 >> 24;
    i4 = i2 + -48 | 0;
    i2 = i4 >>> 0 < 10 ? i4 : i2 + -55 | 0;
    i4 = i12 + 2 | 0;
    while (1) {
     if ((i4 | 0) == (i5 | 0)) {
      i13 = i12;
      break L1;
     }
     i1 = HEAP8[i4 >> 0] | 0;
     i3 = i1 << 24 >> 24;
     if ((i3 + -48 | 0) >>> 0 >= 10) {
      i11 = (_isupper(i3) | 0) == 0;
      i1 = HEAP8[i4 >> 0] | 0;
      if (i11) break;
     }
     i11 = i1 << 24 >> 24;
     i10 = i11 + -48 | 0;
     i2 = (i10 >>> 0 < 10 ? i10 : i11 + -55 | 0) + (i2 * 36 | 0) | 0;
     i4 = i4 + 1 | 0;
    }
    if (i1 << 24 >> 24 != 95) {
     i13 = i12;
     break L1;
    }
    i1 = i2 + 1 | 0;
    i11 = HEAP32[i15 + 16 >> 2] | 0;
    i2 = i11;
    if (i1 >>> 0 >= (HEAP32[i15 + 20 >> 2] | 0) - i11 >> 4 >>> 0) {
     i13 = i12;
     break L1;
    }
    i8 = HEAP32[i2 + (i1 << 4) + 4 >> 2] | 0;
    i9 = i15 + 4 | 0;
    i10 = i15 + 8 | 0;
    i11 = i15 + 12 | 0;
    i12 = i14 + 8 | 0;
    i7 = HEAP32[i2 + (i1 << 4) >> 2] | 0;
    while (1) {
     if ((i7 | 0) == (i8 | 0)) {
      i1 = 76;
      break;
     }
     i1 = HEAP32[i9 >> 2] | 0;
     i6 = HEAP32[i10 >> 2] | 0;
     i2 = i6;
     if ((i1 | 0) == (i6 | 0)) {
      i3 = HEAP32[i15 >> 2] | 0;
      i1 = i1 - i3 | 0;
      i6 = (i1 | 0) / 24 | 0;
      i5 = i6 + 1 | 0;
      if ((i1 | 0) < -24) {
       i1 = 80;
       break;
      }
      i1 = (i2 - i3 | 0) / 24 | 0;
      if (i1 >>> 0 < 1073741823) {
       i1 = i1 << 1;
       i1 = i1 >>> 0 < i5 >>> 0 ? i5 : i1;
      } else i1 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i14, i1, i6, i11);
      i6 = HEAP32[i12 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i6, i7);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i6 + 12 | 0, i7 + 12 | 0);
      HEAP32[i12 >> 2] = i6 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i15, i14);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i14);
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1, i7);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1 + 12 | 0, i7 + 12 | 0);
      HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
     }
     i7 = i7 + 24 | 0;
    }
    if ((i1 | 0) == 76) {
     i13 = i4 + 1 | 0;
     break L1;
    } else if ((i1 | 0) == 80) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i15);
   }
  }
 } else i13 = i12; while (0);
 STACKTOP = i16;
 return i13 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i15, i13, i14) {
 i15 = i15 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i16 = i17 + 60 | 0;
 i10 = i17 + 48 | 0;
 i12 = i17 + 36 | 0;
 i6 = i17 + 24 | 0;
 i9 = i17 + 12 | 0;
 i11 = i17;
 i2 = i13;
 L1 : do if ((i2 - i15 | 0) > 2) {
  if ((HEAP8[i15 >> 0] | 0) == 103) {
   i4 = (HEAP8[i15 + 1 >> 0] | 0) == 115;
   i5 = i4;
   i4 = i4 ? i15 + 2 | 0 : i15;
  } else {
   i5 = 0;
   i4 = i15;
  }
  i1 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i4, i13, i14) | 0;
  if ((i1 | 0) != (i4 | 0)) {
   if (!i5) break;
   i2 = HEAP32[i14 + 4 >> 2] | 0;
   if ((HEAP32[i14 >> 2] | 0) == (i2 | 0)) {
    i1 = i15;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 38561) | 0;
   break;
  }
  if (((i2 - i4 | 0) > 2 ? (HEAP8[i4 >> 0] | 0) == 115 : 0) ? (HEAP8[i4 + 1 >> 0] | 0) == 114 : 0) {
   i3 = i4 + 2 | 0;
   if ((HEAP8[i3 >> 0] | 0) == 78) {
    i11 = i4 + 3 | 0;
    i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i11, i13, i14) | 0;
    if ((i1 | 0) == (i11 | 0) | (i1 | 0) == (i13 | 0)) {
     i1 = i15;
     break;
    }
    i4 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i1, i13, i14) | 0;
    i9 = i14 + 4 | 0;
    do if ((i4 | 0) == (i1 | 0)) i8 = i14; else {
     i1 = HEAP32[i9 >> 2] | 0;
     if (((i1 - (HEAP32[i14 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i1 = i15;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i16, i1 + -24 | 0);
     i1 = HEAP32[i9 >> 2] | 0;
     i2 = i1 + -24 | 0;
     i3 = i1;
     while (1) {
      if ((i3 | 0) == (i2 | 0)) break;
      i11 = i3 + -24 | 0;
      HEAP32[i9 >> 2] = i11;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11);
      i3 = HEAP32[i9 >> 2] | 0;
     }
     i11 = HEAP8[i16 >> 0] | 0;
     i8 = (i11 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1 + -48 | 0, i8 ? i16 + 1 | 0 : HEAP32[i16 + 8 >> 2] | 0, i8 ? (i11 & 255) >>> 1 : HEAP32[i16 + 4 >> 2] | 0) | 0;
     if ((i4 | 0) != (i13 | 0)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
      i8 = i14;
      i1 = i4;
      break;
     }
     i2 = HEAP32[i9 >> 2] | 0;
     i1 = i2 + -24 | 0;
     while (1) {
      if ((i2 | 0) == (i1 | 0)) break;
      i14 = i2 + -24 | 0;
      HEAP32[i9 >> 2] = i14;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i14);
      i2 = HEAP32[i9 >> 2] | 0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
     i1 = i15;
     break L1;
    } while (0);
    i5 = i10 + 8 | 0;
    i6 = i10 + 1 | 0;
    i7 = i10 + 4 | 0;
    while (1) {
     if ((HEAP8[i1 >> 0] | 0) == 69) break;
     i4 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i1, i13, i14) | 0;
     if ((i4 | 0) == (i1 | 0) | (i4 | 0) == (i13 | 0)) {
      i1 = i15;
      break L1;
     }
     i1 = HEAP32[i9 >> 2] | 0;
     if (((i1 - (HEAP32[i8 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i1 = i15;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i16, i1 + -24 | 0);
     i3 = HEAP32[i9 >> 2] | 0;
     i1 = i3 + -24 | 0;
     i2 = i3;
     while (1) {
      if ((i2 | 0) == (i1 | 0)) break;
      i11 = i2 + -24 | 0;
      HEAP32[i9 >> 2] = i11;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i11);
      i2 = HEAP32[i9 >> 2] | 0;
     }
     i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i16, 0, 38561) | 0;
     HEAP32[i10 >> 2] = HEAP32[i1 >> 2];
     HEAP32[i10 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
     HEAP32[i10 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i1 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     i1 = HEAP8[i10 >> 0] | 0;
     i11 = (i1 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i3 + -48 | 0, i11 ? i6 : HEAP32[i5 >> 2] | 0, i11 ? (i1 & 255) >>> 1 : HEAP32[i7 >> 2] | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
     i1 = i4;
    }
    i11 = i1 + 1 | 0;
    i1 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i11, i13, i14) | 0;
    if ((i1 | 0) == (i11 | 0)) {
     i1 = HEAP32[i9 >> 2] | 0;
     if ((HEAP32[i14 >> 2] | 0) == (i1 | 0)) {
      i1 = i15;
      break;
     }
     i2 = i1 + -24 | 0;
     while (1) {
      if ((i1 | 0) == (i2 | 0)) {
       i1 = i15;
       break L1;
      }
      i16 = i1 + -24 | 0;
      HEAP32[i9 >> 2] = i16;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
      i1 = HEAP32[i9 >> 2] | 0;
     }
    }
    i2 = HEAP32[i9 >> 2] | 0;
    if (((i2 - (HEAP32[i8 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     i1 = i15;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i16, i2 + -24 | 0);
    i4 = HEAP32[i9 >> 2] | 0;
    i2 = i4 + -24 | 0;
    i3 = i4;
    while (1) {
     if ((i3 | 0) == (i2 | 0)) break;
     i15 = i3 + -24 | 0;
     HEAP32[i9 >> 2] = i15;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i15);
     i3 = HEAP32[i9 >> 2] | 0;
    }
    i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i16, 0, 38561) | 0;
    HEAP32[i12 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i12 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
    HEAP32[i12 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
    i3 = 0;
    while (1) {
     if ((i3 | 0) == 3) break;
     HEAP32[i2 + (i3 << 2) >> 2] = 0;
     i3 = i3 + 1 | 0;
    }
    i15 = HEAP8[i12 >> 0] | 0;
    i14 = (i15 & 1) == 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i4 + -48 | 0, i14 ? i12 + 1 | 0 : HEAP32[i12 + 8 >> 2] | 0, i14 ? (i15 & 255) >>> 1 : HEAP32[i12 + 4 >> 2] | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
    break;
   }
   i2 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i3, i13, i14) | 0;
   if ((i2 | 0) != (i3 | 0)) {
    i5 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i2, i13, i14) | 0;
    if ((i5 | 0) != (i2 | 0)) {
     i4 = i14 + 4 | 0;
     i1 = HEAP32[i4 >> 2] | 0;
     if (((i1 - (HEAP32[i14 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i1 = i15;
      break;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i16, i1 + -24 | 0);
     i1 = HEAP32[i4 >> 2] | 0;
     i2 = i1 + -24 | 0;
     i3 = i1;
     while (1) {
      if ((i3 | 0) == (i2 | 0)) break;
      i12 = i3 + -24 | 0;
      HEAP32[i4 >> 2] = i12;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i12);
      i3 = HEAP32[i4 >> 2] | 0;
     }
     i2 = HEAP8[i16 >> 0] | 0;
     i12 = (i2 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1 + -48 | 0, i12 ? i16 + 1 | 0 : HEAP32[i16 + 8 >> 2] | 0, i12 ? (i2 & 255) >>> 1 : HEAP32[i16 + 4 >> 2] | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
     i2 = i5;
    }
    i1 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i2, i13, i14) | 0;
    if ((i1 | 0) == (i2 | 0)) {
     i3 = i14 + 4 | 0;
     i1 = HEAP32[i3 >> 2] | 0;
     if ((HEAP32[i14 >> 2] | 0) == (i1 | 0)) {
      i1 = i15;
      break;
     }
     i2 = i1 + -24 | 0;
     while (1) {
      if ((i1 | 0) == (i2 | 0)) {
       i1 = i15;
       break L1;
      }
      i16 = i1 + -24 | 0;
      HEAP32[i3 >> 2] = i16;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
      i1 = HEAP32[i3 >> 2] | 0;
     }
    }
    i5 = i14 + 4 | 0;
    i2 = HEAP32[i5 >> 2] | 0;
    if (((i2 - (HEAP32[i14 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     i1 = i15;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i16, i2 + -24 | 0);
    i4 = HEAP32[i5 >> 2] | 0;
    i2 = i4 + -24 | 0;
    i3 = i4;
    while (1) {
     if ((i3 | 0) == (i2 | 0)) break;
     i15 = i3 + -24 | 0;
     HEAP32[i5 >> 2] = i15;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i15);
     i3 = HEAP32[i5 >> 2] | 0;
    }
    i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i16, 0, 38561) | 0;
    HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i6 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
    HEAP32[i6 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
    i3 = 0;
    while (1) {
     if ((i3 | 0) == 3) break;
     HEAP32[i2 + (i3 << 2) >> 2] = 0;
     i3 = i3 + 1 | 0;
    }
    i15 = HEAP8[i6 >> 0] | 0;
    i14 = (i15 & 1) == 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i4 + -48 | 0, i14 ? i6 + 1 | 0 : HEAP32[i6 + 8 >> 2] | 0, i14 ? (i15 & 255) >>> 1 : HEAP32[i6 + 4 >> 2] | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
    break;
   }
   i1 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i3, i13, i14) | 0;
   if (!((i1 | 0) == (i3 | 0) | (i1 | 0) == (i13 | 0))) {
    if (i5) {
     i2 = i14 + 4 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((HEAP32[i14 >> 2] | 0) == (i3 | 0)) {
      i1 = i15;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i3 + -24 | 0, 0, 38561) | 0;
     i8 = i2;
    } else i8 = i14 + 4 | 0;
    i5 = i9 + 8 | 0;
    i6 = i9 + 1 | 0;
    i7 = i9 + 4 | 0;
    while (1) {
     if ((HEAP8[i1 >> 0] | 0) == 69) break;
     i4 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i1, i13, i14) | 0;
     if ((i4 | 0) == (i1 | 0) | (i4 | 0) == (i13 | 0)) {
      i1 = i15;
      break L1;
     }
     i1 = HEAP32[i8 >> 2] | 0;
     if (((i1 - (HEAP32[i14 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      i1 = i15;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i16, i1 + -24 | 0);
     i3 = HEAP32[i8 >> 2] | 0;
     i1 = i3 + -24 | 0;
     i2 = i3;
     while (1) {
      if ((i2 | 0) == (i1 | 0)) break;
      i12 = i2 + -24 | 0;
      HEAP32[i8 >> 2] = i12;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i12);
      i2 = HEAP32[i8 >> 2] | 0;
     }
     i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i16, 0, 38561) | 0;
     HEAP32[i9 >> 2] = HEAP32[i1 >> 2];
     HEAP32[i9 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
     HEAP32[i9 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i1 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     i1 = HEAP8[i9 >> 0] | 0;
     i12 = (i1 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i3 + -48 | 0, i12 ? i6 : HEAP32[i5 >> 2] | 0, i12 ? (i1 & 255) >>> 1 : HEAP32[i7 >> 2] | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
     i1 = i4;
    }
    i12 = i1 + 1 | 0;
    i1 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i12, i13, i14) | 0;
    if ((i1 | 0) == (i12 | 0)) {
     i1 = HEAP32[i8 >> 2] | 0;
     if ((HEAP32[i14 >> 2] | 0) == (i1 | 0)) {
      i1 = i15;
      break;
     }
     i2 = i1 + -24 | 0;
     while (1) {
      if ((i1 | 0) == (i2 | 0)) {
       i1 = i15;
       break L1;
      }
      i16 = i1 + -24 | 0;
      HEAP32[i8 >> 2] = i16;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
      i1 = HEAP32[i8 >> 2] | 0;
     }
    }
    i2 = HEAP32[i8 >> 2] | 0;
    if (((i2 - (HEAP32[i14 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i16, i2 + -24 | 0);
     i4 = HEAP32[i8 >> 2] | 0;
     i2 = i4 + -24 | 0;
     i3 = i4;
     while (1) {
      if ((i3 | 0) == (i2 | 0)) break;
      i15 = i3 + -24 | 0;
      HEAP32[i8 >> 2] = i15;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i15);
      i3 = HEAP32[i8 >> 2] | 0;
     }
     i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i16, 0, 38561) | 0;
     HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
     HEAP32[i11 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
     HEAP32[i11 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
     i3 = 0;
     while (1) {
      if ((i3 | 0) == 3) break;
      HEAP32[i2 + (i3 << 2) >> 2] = 0;
      i3 = i3 + 1 | 0;
     }
     i15 = HEAP8[i11 >> 0] | 0;
     i14 = (i15 & 1) == 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i4 + -48 | 0, i14 ? i11 + 1 | 0 : HEAP32[i11 + 8 >> 2] | 0, i14 ? (i15 & 255) >>> 1 : HEAP32[i11 + 4 >> 2] | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
    } else i1 = i15;
   } else i1 = i15;
  } else i1 = i15;
 } else i1 = i15; while (0);
 STACKTOP = i17;
 return i1 | 0;
}

function __ZNSt3__16__sortIRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEvT0_S9_T_(i2, i1, i35) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i35 = i35 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0;
 i37 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i34 = i37 + 168 | 0;
 i33 = i37 + 160 | 0;
 i31 = i37 + 152 | 0;
 i32 = i37 + 144 | 0;
 i22 = i37 + 136 | 0;
 i24 = i37 + 128 | 0;
 i25 = i37 + 120 | 0;
 i26 = i37 + 112 | 0;
 i27 = i37 + 104 | 0;
 i28 = i37 + 96 | 0;
 i29 = i37 + 88 | 0;
 i30 = i37 + 80 | 0;
 i12 = i37 + 72 | 0;
 i13 = i37 + 64 | 0;
 i14 = i37 + 56 | 0;
 i15 = i37 + 48 | 0;
 i16 = i37 + 40 | 0;
 i17 = i37 + 32 | 0;
 i18 = i37 + 24 | 0;
 i19 = i37 + 16 | 0;
 i20 = i37 + 8 | 0;
 i21 = i37;
 L1 : while (1) {
  i11 = i1;
  i23 = i1 + -8 | 0;
  L3 : while (1) {
   i10 = i2;
   i3 = i11 - i10 | 0;
   i4 = i3 >> 3;
   switch (i4 | 0) {
   case 1:
   case 0:
    break L1;
   case 2:
    {
     i1 = i23;
     i36 = 4;
     break L1;
    }
   case 3:
    {
     i1 = i23;
     i36 = 6;
     break L1;
    }
   case 4:
    {
     i1 = i23;
     i36 = 7;
     break L1;
    }
   case 5:
    {
     i1 = i23;
     i36 = 8;
     break L1;
    }
   default:
    {}
   }
   if ((i3 | 0) < 248) {
    i36 = 10;
    break L1;
   }
   i7 = i2 + (((i4 | 0) / 2 | 0) << 3) | 0;
   if ((i3 | 0) > 7992) {
    i4 = (i4 | 0) / 4 | 0;
    i4 = __ZNSt3__17__sort5IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_S9_S9_T_(i2, i2 + (i4 << 3) | 0, i7, i7 + (i4 << 3) | 0, i23, i35) | 0;
   } else i4 = __ZNSt3__17__sort3IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_T_(i2, i7, i23, i35) | 0;
   i9 = i2;
   i8 = HEAP32[i9 + 4 >> 2] | 0;
   i6 = i22;
   HEAP32[i6 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i6 + 4 >> 2] = i8;
   i6 = i7;
   i8 = HEAP32[i6 + 4 >> 2] | 0;
   i9 = i24;
   HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i9 + 4 >> 2] = i8;
   HEAP32[i33 >> 2] = HEAP32[i22 >> 2];
   HEAP32[i33 + 4 >> 2] = HEAP32[i22 + 4 >> 2];
   HEAP32[i34 >> 2] = HEAP32[i24 >> 2];
   HEAP32[i34 + 4 >> 2] = HEAP32[i24 + 4 >> 2];
   do if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i35, i33, i34) | 0) i5 = i23; else {
    i3 = i23;
    while (1) {
     i3 = i3 + -8 | 0;
     if ((i2 | 0) == (i3 | 0)) break;
     i9 = i3;
     i8 = HEAP32[i9 + 4 >> 2] | 0;
     i6 = i14;
     HEAP32[i6 >> 2] = HEAP32[i9 >> 2];
     HEAP32[i6 + 4 >> 2] = i8;
     i6 = i7;
     i8 = HEAP32[i6 + 4 >> 2] | 0;
     i9 = i15;
     HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
     HEAP32[i9 + 4 >> 2] = i8;
     HEAP32[i33 >> 2] = HEAP32[i14 >> 2];
     HEAP32[i33 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
     HEAP32[i34 >> 2] = HEAP32[i15 >> 2];
     HEAP32[i34 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
     if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i35, i33, i34) | 0) {
      i5 = i3;
      i36 = 29;
      break;
     }
    }
    if ((i36 | 0) == 29) {
     i36 = 0;
     i9 = i2;
     i8 = HEAP32[i9 >> 2] | 0;
     i9 = HEAP32[i9 + 4 >> 2] | 0;
     i39 = i5;
     i38 = HEAP32[i39 + 4 >> 2] | 0;
     i6 = i2;
     HEAP32[i6 >> 2] = HEAP32[i39 >> 2];
     HEAP32[i6 + 4 >> 2] = i38;
     HEAP32[i5 >> 2] = i8;
     HEAP32[i5 + 4 >> 2] = i9;
     i5 = i3;
     i4 = i4 + 1 | 0;
     break;
    }
    i3 = i2 + 8 | 0;
    i39 = i2;
    i38 = HEAP32[i39 + 4 >> 2] | 0;
    i10 = i25;
    HEAP32[i10 >> 2] = HEAP32[i39 >> 2];
    HEAP32[i10 + 4 >> 2] = i38;
    i10 = i23;
    i38 = HEAP32[i10 + 4 >> 2] | 0;
    i39 = i26;
    HEAP32[i39 >> 2] = HEAP32[i10 >> 2];
    HEAP32[i39 + 4 >> 2] = i38;
    HEAP32[i33 >> 2] = HEAP32[i25 >> 2];
    HEAP32[i33 + 4 >> 2] = HEAP32[i25 + 4 >> 2];
    HEAP32[i34 >> 2] = HEAP32[i26 >> 2];
    HEAP32[i34 + 4 >> 2] = HEAP32[i26 + 4 >> 2];
    if (!(__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i35, i33, i34) | 0)) {
     while (1) {
      if ((i3 | 0) == (i23 | 0)) break L1;
      i39 = i2;
      i38 = HEAP32[i39 + 4 >> 2] | 0;
      i10 = i27;
      HEAP32[i10 >> 2] = HEAP32[i39 >> 2];
      HEAP32[i10 + 4 >> 2] = i38;
      i10 = i3;
      i38 = HEAP32[i10 + 4 >> 2] | 0;
      i39 = i28;
      HEAP32[i39 >> 2] = HEAP32[i10 >> 2];
      HEAP32[i39 + 4 >> 2] = i38;
      HEAP32[i33 >> 2] = HEAP32[i27 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i27 + 4 >> 2];
      HEAP32[i34 >> 2] = HEAP32[i28 >> 2];
      HEAP32[i34 + 4 >> 2] = HEAP32[i28 + 4 >> 2];
      if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i35, i33, i34) | 0) {
       i4 = i3;
       break;
      }
      i3 = i3 + 8 | 0;
     }
     i38 = i4;
     i10 = HEAP32[i38 >> 2] | 0;
     i38 = HEAP32[i38 + 4 >> 2] | 0;
     i8 = i23;
     i9 = HEAP32[i8 + 4 >> 2] | 0;
     i39 = i4;
     HEAP32[i39 >> 2] = HEAP32[i8 >> 2];
     HEAP32[i39 + 4 >> 2] = i9;
     i39 = i23;
     HEAP32[i39 >> 2] = i10;
     HEAP32[i39 + 4 >> 2] = i38;
     i3 = i3 + 8 | 0;
    }
    if ((i3 | 0) == (i23 | 0)) break L1; else i4 = i23;
    while (1) {
     i5 = i3;
     while (1) {
      i3 = i2;
      i39 = HEAP32[i3 + 4 >> 2] | 0;
      i38 = i29;
      HEAP32[i38 >> 2] = HEAP32[i3 >> 2];
      HEAP32[i38 + 4 >> 2] = i39;
      i38 = i5;
      i39 = HEAP32[i38 + 4 >> 2] | 0;
      i3 = i30;
      HEAP32[i3 >> 2] = HEAP32[i38 >> 2];
      HEAP32[i3 + 4 >> 2] = i39;
      HEAP32[i33 >> 2] = HEAP32[i29 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i29 + 4 >> 2];
      HEAP32[i34 >> 2] = HEAP32[i30 >> 2];
      HEAP32[i34 + 4 >> 2] = HEAP32[i30 + 4 >> 2];
      i3 = i5 + 8 | 0;
      if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i35, i33, i34) | 0) {
       i7 = i5;
       i6 = i5;
       break;
      } else i5 = i3;
     }
     do {
      i39 = i2;
      i38 = HEAP32[i39 + 4 >> 2] | 0;
      i10 = i12;
      HEAP32[i10 >> 2] = HEAP32[i39 >> 2];
      HEAP32[i10 + 4 >> 2] = i38;
      i4 = i4 + -8 | 0;
      i10 = i4;
      i38 = HEAP32[i10 + 4 >> 2] | 0;
      i39 = i13;
      HEAP32[i39 >> 2] = HEAP32[i10 >> 2];
      HEAP32[i39 + 4 >> 2] = i38;
      HEAP32[i33 >> 2] = HEAP32[i12 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
      HEAP32[i34 >> 2] = HEAP32[i13 >> 2];
      HEAP32[i34 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
     } while (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i35, i33, i34) | 0);
     i5 = i4;
     if (i6 >>> 0 >= i5 >>> 0) {
      i2 = i6;
      continue L3;
     }
     i39 = i7;
     i38 = HEAP32[i39 >> 2] | 0;
     i39 = HEAP32[i39 + 4 >> 2] | 0;
     i8 = i4;
     i9 = HEAP32[i8 + 4 >> 2] | 0;
     i10 = i7;
     HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
     HEAP32[i10 + 4 >> 2] = i9;
     HEAP32[i4 >> 2] = i38;
     HEAP32[i4 + 4 >> 2] = i39;
     i4 = i5;
    }
   } while (0);
   i3 = i2 + 8 | 0;
   L35 : do if (i3 >>> 0 < i5 >>> 0) {
    i6 = i5;
    i5 = i7;
    while (1) {
     i7 = i3;
     while (1) {
      i3 = i7;
      i39 = HEAP32[i3 + 4 >> 2] | 0;
      i38 = i16;
      HEAP32[i38 >> 2] = HEAP32[i3 >> 2];
      HEAP32[i38 + 4 >> 2] = i39;
      i38 = i5;
      i39 = HEAP32[i38 + 4 >> 2] | 0;
      i3 = i17;
      HEAP32[i3 >> 2] = HEAP32[i38 >> 2];
      HEAP32[i3 + 4 >> 2] = i39;
      HEAP32[i33 >> 2] = HEAP32[i16 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
      HEAP32[i34 >> 2] = HEAP32[i17 >> 2];
      HEAP32[i34 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
      i3 = i7 + 8 | 0;
      if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i35, i33, i34) | 0) i7 = i3; else {
       i9 = i7;
       i8 = i7;
       break;
      }
     }
     do {
      i6 = i6 + -8 | 0;
      i39 = i6;
      i38 = HEAP32[i39 + 4 >> 2] | 0;
      i7 = i18;
      HEAP32[i7 >> 2] = HEAP32[i39 >> 2];
      HEAP32[i7 + 4 >> 2] = i38;
      i7 = i5;
      i38 = HEAP32[i7 + 4 >> 2] | 0;
      i39 = i19;
      HEAP32[i39 >> 2] = HEAP32[i7 >> 2];
      HEAP32[i39 + 4 >> 2] = i38;
      HEAP32[i33 >> 2] = HEAP32[i18 >> 2];
      HEAP32[i33 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
      HEAP32[i34 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i34 + 4 >> 2] = HEAP32[i19 + 4 >> 2];
     } while (!(__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i35, i33, i34) | 0));
     i7 = i6;
     if (i8 >>> 0 > i7 >>> 0) {
      i3 = i8;
      break L35;
     }
     i39 = i9;
     i38 = HEAP32[i39 >> 2] | 0;
     i39 = HEAP32[i39 + 4 >> 2] | 0;
     i41 = i6;
     i40 = HEAP32[i41 + 4 >> 2] | 0;
     HEAP32[i9 >> 2] = HEAP32[i41 >> 2];
     HEAP32[i9 + 4 >> 2] = i40;
     HEAP32[i6 >> 2] = i38;
     HEAP32[i6 + 4 >> 2] = i39;
     i6 = i7;
     i5 = (i5 | 0) == (i8 | 0) ? i7 : i5;
     i4 = i4 + 1 | 0;
    }
   } else i5 = i7; while (0);
   if ((i3 | 0) != (i5 | 0) ? (i41 = i5, i40 = HEAP32[i41 + 4 >> 2] | 0, i39 = i20, HEAP32[i39 >> 2] = HEAP32[i41 >> 2], HEAP32[i39 + 4 >> 2] = i40, i39 = i3, i40 = HEAP32[i39 + 4 >> 2] | 0, i41 = i21, HEAP32[i41 >> 2] = HEAP32[i39 >> 2], HEAP32[i41 + 4 >> 2] = i40, HEAP32[i33 >> 2] = HEAP32[i20 >> 2], HEAP32[i33 + 4 >> 2] = HEAP32[i20 + 4 >> 2], HEAP32[i34 >> 2] = HEAP32[i21 >> 2], HEAP32[i34 + 4 >> 2] = HEAP32[i21 + 4 >> 2], __ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i35, i33, i34) | 0) : 0) {
    i40 = i3;
    i39 = HEAP32[i40 >> 2] | 0;
    i40 = HEAP32[i40 + 4 >> 2] | 0;
    i9 = i5;
    i38 = HEAP32[i9 + 4 >> 2] | 0;
    i41 = i3;
    HEAP32[i41 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i41 + 4 >> 2] = i38;
    i41 = i5;
    HEAP32[i41 >> 2] = i39;
    HEAP32[i41 + 4 >> 2] = i40;
    i4 = i4 + 1 | 0;
   }
   if (!i4) {
    i4 = __ZNSt3__127__insertion_sort_incompleteIRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEbT0_S9_T_(i2, i3, i35) | 0;
    i5 = i3 + 8 | 0;
    if (__ZNSt3__127__insertion_sort_incompleteIRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEbT0_S9_T_(i5, i1, i35) | 0) {
     i36 = 46;
     break;
    }
    if (i4) {
     i2 = i5;
     continue;
    }
   }
   i41 = i3;
   if ((i41 - i10 | 0) >= (i11 - i41 | 0)) {
    i36 = 45;
    break;
   }
   __ZNSt3__16__sortIRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEvT0_S9_T_(i2, i3, i35);
   i2 = i3 + 8 | 0;
  }
  if ((i36 | 0) == 45) {
   i36 = 0;
   __ZNSt3__16__sortIRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEvT0_S9_T_(i3 + 8 | 0, i1, i35);
   i1 = i3;
   continue;
  } else if ((i36 | 0) == 46) {
   i36 = 0;
   if (i4) break; else {
    i1 = i3;
    continue;
   }
  }
 }
 if ((i36 | 0) == 4) {
  i41 = i1;
  i40 = HEAP32[i41 + 4 >> 2] | 0;
  i39 = i31;
  HEAP32[i39 >> 2] = HEAP32[i41 >> 2];
  HEAP32[i39 + 4 >> 2] = i40;
  i39 = i2;
  i40 = HEAP32[i39 + 4 >> 2] | 0;
  i41 = i32;
  HEAP32[i41 >> 2] = HEAP32[i39 >> 2];
  HEAP32[i41 + 4 >> 2] = i40;
  HEAP32[i33 >> 2] = HEAP32[i31 >> 2];
  HEAP32[i33 + 4 >> 2] = HEAP32[i31 + 4 >> 2];
  HEAP32[i34 >> 2] = HEAP32[i32 >> 2];
  HEAP32[i34 + 4 >> 2] = HEAP32[i32 + 4 >> 2];
  if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i35, i33, i34) | 0) {
   i40 = i2;
   i39 = HEAP32[i40 >> 2] | 0;
   i40 = HEAP32[i40 + 4 >> 2] | 0;
   i36 = i1;
   i38 = HEAP32[i36 + 4 >> 2] | 0;
   i41 = i2;
   HEAP32[i41 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i41 + 4 >> 2] = i38;
   i41 = i1;
   HEAP32[i41 >> 2] = i39;
   HEAP32[i41 + 4 >> 2] = i40;
  }
 } else if ((i36 | 0) == 6) __ZNSt3__17__sort3IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_T_(i2, i2 + 8 | 0, i1, i35) | 0; else if ((i36 | 0) == 7) __ZNSt3__17__sort4IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_S9_T_(i2, i2 + 8 | 0, i2 + 16 | 0, i1, i35) | 0; else if ((i36 | 0) == 8) __ZNSt3__17__sort5IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_S9_S9_T_(i2, i2 + 8 | 0, i2 + 16 | 0, i2 + 24 | 0, i1, i35) | 0; else if ((i36 | 0) == 10) __ZNSt3__118__insertion_sort_3IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEvT0_S9_T_(i2, i1, i35);
 STACKTOP = i37;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i29, i28, i35) {
 i29 = i29 | 0;
 i28 = i28 | 0;
 i35 = i35 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i36 = 0, i37 = 0;
 i36 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i33 = i36 + 60 | 0;
 i34 = i36;
 i25 = i36 + 48 | 0;
 i31 = i36 + 24 | 0;
 i32 = i36 + 12 | 0;
 do if ((i28 - i29 | 0) > 1 ? (HEAP8[i29 >> 0] | 0) == 73 : 0) {
  i27 = i35 + 61 | 0;
  i24 = i35 + 36 | 0;
  L4 : do if (HEAP8[i27 >> 0] | 0) {
   i2 = HEAP32[i24 >> 2] | 0;
   i1 = HEAP32[i2 + -16 >> 2] | 0;
   i2 = i2 + -12 | 0;
   while (1) {
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i3 | 0) == (i1 | 0)) break L4;
    i30 = i3 + -16 | 0;
    HEAP32[i2 >> 2] = i30;
    __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i30);
   }
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i34, 39099, 1);
  i30 = i35 + 4 | 0;
  i14 = i35 + 12 | 0;
  i15 = i33 + 8 | 0;
  i16 = i33 + 8 | 0;
  i26 = i34 + 4 | 0;
  i17 = i25 + 8 | 0;
  i18 = i25 + 1 | 0;
  i19 = i25 + 4 | 0;
  i23 = i35 + 32 | 0;
  i20 = i35 + 40 | 0;
  i21 = i35 + 44 | 0;
  i22 = i33 + 8 | 0;
  i1 = i29 + 1 | 0;
  L10 : while (1) {
   if ((HEAP8[i1 >> 0] | 0) == 69) {
    i2 = 48;
    break;
   }
   do if (HEAP8[i27 >> 0] | 0) {
    i8 = HEAP32[i14 >> 2] | 0;
    i2 = HEAP32[i24 >> 2] | 0;
    i3 = HEAP32[i20 >> 2] | 0;
    if (i2 >>> 0 < i3 >>> 0) {
     HEAP32[i2 >> 2] = 0;
     HEAP32[i2 + 4 >> 2] = 0;
     HEAP32[i2 + 8 >> 2] = 0;
     HEAP32[i2 + 12 >> 2] = i8;
     HEAP32[i24 >> 2] = (HEAP32[i24 >> 2] | 0) + 16;
     break;
    }
    i4 = HEAP32[i23 >> 2] | 0;
    i13 = i2 - i4 | 0;
    i7 = i13 >> 4;
    i5 = i7 + 1 | 0;
    if ((i13 | 0) < -16) {
     i2 = 13;
     break L10;
    }
    i2 = i3 - i4 | 0;
    if (i2 >> 4 >>> 0 < 1073741823) {
     i2 = i2 >> 3;
     i2 = i2 >>> 0 < i5 >>> 0 ? i5 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_(i33, i2, i7, i21);
    i13 = HEAP32[i22 >> 2] | 0;
    HEAP32[i13 >> 2] = 0;
    HEAP32[i13 + 4 >> 2] = 0;
    HEAP32[i13 + 8 >> 2] = 0;
    HEAP32[i13 + 12 >> 2] = i8;
    HEAP32[i22 >> 2] = i13 + 16;
    __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(i23, i33);
    __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev(i33);
   } while (0);
   i12 = ((HEAP32[i30 >> 2] | 0) - (HEAP32[i35 >> 2] | 0) | 0) / 24 | 0;
   i13 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_(i1, i28, i35) | 0;
   i3 = ((HEAP32[i30 >> 2] | 0) - (HEAP32[i35 >> 2] | 0) | 0) / 24 | 0;
   L23 : do if (HEAP8[i27 >> 0] | 0) {
    i4 = HEAP32[i24 >> 2] | 0;
    i2 = i4 + -16 | 0;
    while (1) {
     if ((i4 | 0) == (i2 | 0)) break L23;
     i11 = i4 + -16 | 0;
     HEAP32[i24 >> 2] = i11;
     __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev(i11);
     i4 = HEAP32[i24 >> 2] | 0;
    }
   } while (0);
   if ((i13 | 0) == (i1 | 0) | (i13 | 0) == (i28 | 0)) {
    i2 = 62;
    break;
   }
   L30 : do if (!(HEAP8[i27 >> 0] | 0)) i1 = i12; else {
    i8 = HEAP32[i24 >> 2] | 0;
    i1 = i8 + -16 | 0;
    i9 = HEAP32[i14 >> 2] | 0;
    i2 = i8 + -12 | 0;
    i4 = HEAP32[i2 >> 2] | 0;
    i11 = HEAP32[i8 + -8 >> 2] | 0;
    i7 = i11;
    if (i4 >>> 0 < i11 >>> 0) {
     HEAP32[i4 >> 2] = 0;
     HEAP32[i4 + 4 >> 2] = 0;
     HEAP32[i4 + 8 >> 2] = 0;
     HEAP32[i4 + 12 >> 2] = i9;
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
     i11 = i12;
    } else {
     i2 = HEAP32[i1 >> 2] | 0;
     i11 = i4 - i2 | 0;
     i5 = i11 >> 4;
     i4 = i5 + 1 | 0;
     if ((i11 | 0) < -16) {
      i2 = 26;
      break L10;
     }
     i2 = i7 - i2 | 0;
     if (i2 >> 4 >>> 0 < 1073741823) {
      i2 = i2 >> 3;
      i2 = i2 >>> 0 < i4 >>> 0 ? i4 : i2;
     } else i2 = 2147483647;
     __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i33, i2, i5, i8 + -4 | 0);
     i11 = HEAP32[i15 >> 2] | 0;
     HEAP32[i11 >> 2] = 0;
     HEAP32[i11 + 4 >> 2] = 0;
     HEAP32[i11 + 8 >> 2] = 0;
     HEAP32[i11 + 12 >> 2] = i9;
     HEAP32[i15 >> 2] = i11 + 16;
     __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i1, i33);
     __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i33);
     i11 = i12;
    }
    while (1) {
     if (i11 >>> 0 >= i3 >>> 0) {
      i1 = i12;
      break L30;
     }
     i8 = HEAP32[(HEAP32[i24 >> 2] | 0) + -12 >> 2] | 0;
     i1 = i8 + -16 | 0;
     i9 = HEAP32[i35 >> 2] | 0;
     i10 = i9 + (i11 * 24 | 0) | 0;
     i2 = i8 + -12 | 0;
     i4 = HEAP32[i2 >> 2] | 0;
     i7 = HEAP32[i8 + -8 >> 2] | 0;
     i5 = i7;
     if ((i4 | 0) == (i7 | 0)) {
      i2 = HEAP32[i1 >> 2] | 0;
      i37 = i4 - i2 | 0;
      i7 = (i37 | 0) / 24 | 0;
      i4 = i7 + 1 | 0;
      if ((i37 | 0) < -24) {
       i2 = 34;
       break L10;
      }
      i2 = (i5 - i2 | 0) / 24 | 0;
      if (i2 >>> 0 < 1073741823) {
       i2 = i2 << 1;
       i2 = i2 >>> 0 < i4 >>> 0 ? i4 : i2;
      } else i2 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i33, i2, i7, i8 + -4 | 0);
      i37 = HEAP32[i16 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i37, i10);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i37 + 12 | 0, i9 + (i11 * 24 | 0) + 12 | 0);
      HEAP32[i16 >> 2] = i37 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i1, i33);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i33);
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i4, i10);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i4 + 12 | 0, i9 + (i11 * 24 | 0) + 12 | 0);
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
     }
     i11 = i11 + 1 | 0;
    }
   } while (0);
   while (1) {
    if (i1 >>> 0 >= i3 >>> 0) break;
    i37 = HEAP8[i34 >> 0] | 0;
    if (((i37 & 1) == 0 ? (i37 & 255) >>> 1 : HEAP32[i26 >> 2] | 0) >>> 0 > 1) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i34, 39101) | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i25, (HEAP32[i35 >> 2] | 0) + (i1 * 24 | 0) | 0);
    i37 = HEAP8[i25 >> 0] | 0;
    i11 = (i37 & 1) == 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i34, i11 ? i18 : HEAP32[i17 >> 2] | 0, i11 ? (i37 & 255) >>> 1 : HEAP32[i19 >> 2] | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i25);
    i1 = i1 + 1 | 0;
   }
   while (1) {
    if ((i3 | 0) == (i12 | 0)) {
     i1 = i13;
     continue L10;
    }
    i2 = HEAP32[i30 >> 2] | 0;
    i1 = i2 + -24 | 0;
    while (1) {
     if ((i2 | 0) == (i1 | 0)) break;
     i37 = i2 + -24 | 0;
     HEAP32[i30 >> 2] = i37;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i37);
     i2 = HEAP32[i30 >> 2] | 0;
    }
    i3 = i3 + -1 | 0;
   }
  }
  if ((i2 | 0) == 13) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i23); else if ((i2 | 0) == 26) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i1); else if ((i2 | 0) == 34) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i1); else if ((i2 | 0) == 48) {
   i6 = i1 + 1 | 0;
   i37 = HEAP8[i34 >> 0] | 0;
   i29 = (i37 & 1) == 0;
   if ((HEAP8[(i29 ? i34 + 1 | 0 : HEAP32[i34 + 8 >> 2] | 0) + (i29 ? (i37 & 255) >>> 1 : HEAP32[i26 >> 2] | 0) + -1 >> 0] | 0) == 62) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i34, 39104) | 0; else __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i34, 38514) | 0;
   HEAP32[i32 >> 2] = HEAP32[i34 >> 2];
   HEAP32[i32 + 4 >> 2] = HEAP32[i34 + 4 >> 2];
   HEAP32[i32 + 8 >> 2] = HEAP32[i34 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i34 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i31, i32);
   i1 = HEAP32[i30 >> 2] | 0;
   i37 = HEAP32[i35 + 8 >> 2] | 0;
   i4 = i37;
   if (i1 >>> 0 < i37 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i1, i31);
    HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i35 >> 2] | 0;
    i37 = i1 - i2 | 0;
    i5 = (i37 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i37 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i35);
    i1 = (i4 - i2 | 0) / 24 | 0;
    if (i1 >>> 0 < 1073741823) {
     i1 = i1 << 1;
     i1 = i1 >>> 0 < i3 >>> 0 ? i3 : i1;
    } else i1 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i33, i1, i5, i35 + 12 | 0);
    i37 = i33 + 8 | 0;
    i30 = HEAP32[i37 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i30, i31);
    HEAP32[i37 >> 2] = i30 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i35, i33);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i33);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i31);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i32);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i34);
   break;
  } else if ((i2 | 0) == 62) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i34);
   i6 = i29;
   break;
  }
 } else i6 = i29; while (0);
 STACKTOP = i36;
 return i6 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(i41, i35, i36, i39, i37, i40, i38, i1) {
 i41 = i41 | 0;
 i35 = i35 | 0;
 i36 = i36 | 0;
 i39 = i39 | 0;
 i37 = i37 | 0;
 i40 = i40 | 0;
 i38 = i38 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i42 = 0, i43 = 0, i44 = 0;
 i42 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 i2 = i42 + 132 | 0;
 i1 = i42 + 116 | 0;
 i28 = i42 + 128 | 0;
 i13 = i42 + 124 | 0;
 i24 = i42 + 120 | 0;
 i29 = i42 + 112 | 0;
 i30 = i42 + 108 | 0;
 i31 = i42 + 104 | 0;
 i32 = i42 + 100 | 0;
 i33 = i42 + 96 | 0;
 i34 = i42 + 92 | 0;
 i3 = i42 + 88 | 0;
 i4 = i42 + 84 | 0;
 i5 = i42 + 80 | 0;
 i6 = i42 + 76 | 0;
 i7 = i42 + 72 | 0;
 i8 = i42 + 68 | 0;
 i9 = i42 + 64 | 0;
 i10 = i42 + 60 | 0;
 i11 = i42 + 56 | 0;
 i12 = i42 + 52 | 0;
 i14 = i42 + 48 | 0;
 i15 = i42 + 44 | 0;
 i16 = i42 + 40 | 0;
 i17 = i42 + 36 | 0;
 i18 = i42 + 32 | 0;
 i19 = i42 + 28 | 0;
 i20 = i42 + 24 | 0;
 i21 = i42 + 20 | 0;
 i22 = i42 + 16 | 0;
 i23 = i42 + 12 | 0;
 i25 = i42 + 8 | 0;
 i26 = i42 + 4 | 0;
 i27 = i42;
 HEAP32[i37 >> 2] = 0;
 i44 = __ZNKSt3__18ios_base6getlocEv(i39) | 0;
 HEAP32[i28 >> 2] = i44;
 i28 = __ZNKSt3__16locale9use_facetERNS0_2idE(i28, 43120) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i44) | 0;
 do switch (i38 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[i13 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i13 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 24 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[i24 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i24 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 16 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 99:
  {
   i44 = i41 + 8 | 0;
   i44 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i44 >> 2] | 0) + 12 >> 2] & 127](i44) | 0;
   HEAP32[i29 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i30 >> 2] = HEAP32[i36 >> 2];
   i38 = HEAP8[i44 >> 0] | 0;
   i36 = (i38 & 1) == 0;
   i43 = i44 + 4 | 0;
   i44 = i36 ? i43 : HEAP32[i44 + 8 >> 2] | 0;
   i43 = i44 + ((i36 ? (i38 & 255) >>> 1 : HEAP32[i43 >> 2] | 0) << 2) | 0;
   HEAP32[i1 >> 2] = HEAP32[i29 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i30 >> 2];
   i43 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, i44, i43) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[i31 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i31 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 12 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 68:
  {
   HEAP32[i32 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i33 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i32 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i33 >> 2];
   i43 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, 9756, 9788) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 70:
  {
   HEAP32[i34 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i3 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i34 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
   i43 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, 9788, 9820) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 72:
  {
   HEAP32[i4 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 73:
  {
   HEAP32[i5 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 106:
  {
   HEAP32[i6 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 28 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 109:
  {
   HEAP32[i7 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 16 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 77:
  {
   HEAP32[i8 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 4 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[i9 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i9 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(i41, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 112:
  {
   HEAP32[i10 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 114:
  {
   HEAP32[i11 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i12 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i12 >> 2];
   i43 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, 9820, 9864) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 82:
  {
   HEAP32[i14 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i15 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i14 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i15 >> 2];
   i43 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, 9864, 9884) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 83:
  {
   HEAP32[i16 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 84:
  {
   HEAP32[i17 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i18 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i18 >> 2];
   i43 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, 9884, 9916) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 119:
  {
   HEAP32[i19 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i19 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 24 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 120:
  {
   i44 = HEAP32[(HEAP32[i41 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[i20 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i21 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i20 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i21 >> 2];
   i1 = FUNCTION_TABLE_iiiiiii[i44 & 63](i41, i1, i2, i39, i37, i40) | 0;
   break;
  }
 case 88:
  {
   i44 = i41 + 8 | 0;
   i44 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i44 >> 2] | 0) + 24 >> 2] & 127](i44) | 0;
   HEAP32[i22 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i23 >> 2] = HEAP32[i36 >> 2];
   i38 = HEAP8[i44 >> 0] | 0;
   i36 = (i38 & 1) == 0;
   i43 = i44 + 4 | 0;
   i44 = i36 ? i43 : HEAP32[i44 + 8 >> 2] | 0;
   i43 = i44 + ((i36 ? (i38 & 255) >>> 1 : HEAP32[i43 >> 2] | 0) << 2) | 0;
   HEAP32[i1 >> 2] = HEAP32[i22 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i23 >> 2];
   i43 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i41, i1, i2, i39, i37, i40, i44, i43) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 121:
  {
   HEAP32[i25 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i25 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 20 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 89:
  {
   HEAP32[i26 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i26 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(i41, i40 + 20 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 37:
  {
   HEAP32[i27 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i27 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(i41, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 default:
  {
   HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 4;
   i43 = 26;
  }
 } while (0);
 if ((i43 | 0) == 26) i1 = HEAP32[i35 >> 2] | 0;
 STACKTOP = i42;
 return i1 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(i41, i35, i36, i39, i37, i40, i38, i1) {
 i41 = i41 | 0;
 i35 = i35 | 0;
 i36 = i36 | 0;
 i39 = i39 | 0;
 i37 = i37 | 0;
 i40 = i40 | 0;
 i38 = i38 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i42 = 0, i43 = 0, i44 = 0;
 i42 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 i2 = i42 + 132 | 0;
 i1 = i42 + 116 | 0;
 i28 = i42 + 128 | 0;
 i13 = i42 + 124 | 0;
 i24 = i42 + 120 | 0;
 i29 = i42 + 112 | 0;
 i30 = i42 + 108 | 0;
 i31 = i42 + 104 | 0;
 i32 = i42 + 100 | 0;
 i33 = i42 + 96 | 0;
 i34 = i42 + 92 | 0;
 i3 = i42 + 88 | 0;
 i4 = i42 + 84 | 0;
 i5 = i42 + 80 | 0;
 i6 = i42 + 76 | 0;
 i7 = i42 + 72 | 0;
 i8 = i42 + 68 | 0;
 i9 = i42 + 64 | 0;
 i10 = i42 + 60 | 0;
 i11 = i42 + 56 | 0;
 i12 = i42 + 52 | 0;
 i14 = i42 + 48 | 0;
 i15 = i42 + 44 | 0;
 i16 = i42 + 40 | 0;
 i17 = i42 + 36 | 0;
 i18 = i42 + 32 | 0;
 i19 = i42 + 28 | 0;
 i20 = i42 + 24 | 0;
 i21 = i42 + 20 | 0;
 i22 = i42 + 16 | 0;
 i23 = i42 + 12 | 0;
 i25 = i42 + 8 | 0;
 i26 = i42 + 4 | 0;
 i27 = i42;
 HEAP32[i37 >> 2] = 0;
 i44 = __ZNKSt3__18ios_base6getlocEv(i39) | 0;
 HEAP32[i28 >> 2] = i44;
 i28 = __ZNKSt3__16locale9use_facetERNS0_2idE(i28, 43088) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i44) | 0;
 do switch (i38 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[i13 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i13 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 24 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[i24 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i24 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 16 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 99:
  {
   i43 = i41 + 8 | 0;
   i43 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i43 >> 2] | 0) + 12 >> 2] & 127](i43) | 0;
   HEAP32[i29 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i30 >> 2] = HEAP32[i36 >> 2];
   i38 = HEAP8[i43 >> 0] | 0;
   i36 = (i38 & 1) == 0;
   i44 = i36 ? i43 + 1 | 0 : HEAP32[i43 + 8 >> 2] | 0;
   i43 = i44 + (i36 ? (i38 & 255) >>> 1 : HEAP32[i43 + 4 >> 2] | 0) | 0;
   HEAP32[i1 >> 2] = HEAP32[i29 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i30 >> 2];
   i43 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, i44, i43) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[i31 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i31 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 12 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 68:
  {
   HEAP32[i32 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i33 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i32 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i33 >> 2];
   i43 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, 35747, 35755) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 70:
  {
   HEAP32[i34 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i3 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i34 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
   i43 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, 35755, 35763) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 72:
  {
   HEAP32[i4 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 73:
  {
   HEAP32[i5 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 106:
  {
   HEAP32[i6 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 28 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 109:
  {
   HEAP32[i7 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 16 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 77:
  {
   HEAP32[i8 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 4 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[i9 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i9 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(i41, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 112:
  {
   HEAP32[i10 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 8 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 114:
  {
   HEAP32[i11 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i12 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i12 >> 2];
   i43 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, 35763, 35774) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 82:
  {
   HEAP32[i14 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i15 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i14 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i15 >> 2];
   i43 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, 35774, 35779) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 83:
  {
   HEAP32[i16 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 84:
  {
   HEAP32[i17 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i18 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i18 >> 2];
   i43 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, 35779, 35787) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 119:
  {
   HEAP32[i19 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i19 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 24 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 120:
  {
   i44 = HEAP32[(HEAP32[i41 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[i20 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i21 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i20 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i21 >> 2];
   i1 = FUNCTION_TABLE_iiiiiii[i44 & 63](i41, i1, i2, i39, i37, i40) | 0;
   break;
  }
 case 88:
  {
   i43 = i41 + 8 | 0;
   i43 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i43 >> 2] | 0) + 24 >> 2] & 127](i43) | 0;
   HEAP32[i22 >> 2] = HEAP32[i35 >> 2];
   HEAP32[i23 >> 2] = HEAP32[i36 >> 2];
   i38 = HEAP8[i43 >> 0] | 0;
   i36 = (i38 & 1) == 0;
   i44 = i36 ? i43 + 1 | 0 : HEAP32[i43 + 8 >> 2] | 0;
   i43 = i44 + (i36 ? (i38 & 255) >>> 1 : HEAP32[i43 + 4 >> 2] | 0) | 0;
   HEAP32[i1 >> 2] = HEAP32[i22 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i23 >> 2];
   i43 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i41, i1, i2, i39, i37, i40, i44, i43) | 0;
   HEAP32[i35 >> 2] = i43;
   i43 = 26;
   break;
  }
 case 121:
  {
   HEAP32[i25 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i25 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 20 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 89:
  {
   HEAP32[i26 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i26 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(i41, i40 + 20 | 0, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 case 37:
  {
   HEAP32[i27 >> 2] = HEAP32[i36 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i27 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(i41, i35, i2, i37, i28);
   i43 = 26;
   break;
  }
 default:
  {
   HEAP32[i37 >> 2] = HEAP32[i37 >> 2] | 4;
   i43 = 26;
  }
 } while (0);
 if ((i43 | 0) == 26) i1 = HEAP32[i35 >> 2] | 0;
 STACKTOP = i42;
 return i1 | 0;
}

function _free(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 if (!i1) return;
 i3 = i1 + -8 | 0;
 i7 = HEAP32[10390] | 0;
 if (i3 >>> 0 < i7 >>> 0) _abort();
 i1 = HEAP32[i1 + -4 >> 2] | 0;
 i2 = i1 & 3;
 if ((i2 | 0) == 1) _abort();
 i4 = i1 & -8;
 i12 = i3 + i4 | 0;
 do if (!(i1 & 1)) {
  i1 = HEAP32[i3 >> 2] | 0;
  if (!i2) return;
  i10 = i3 + (0 - i1) | 0;
  i9 = i1 + i4 | 0;
  if (i10 >>> 0 < i7 >>> 0) _abort();
  if ((i10 | 0) == (HEAP32[10391] | 0)) {
   i1 = i12 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if ((i2 & 3 | 0) != 3) {
    i16 = i10;
    i6 = i9;
    break;
   }
   HEAP32[10388] = i9;
   HEAP32[i1 >> 2] = i2 & -2;
   HEAP32[i10 + 4 >> 2] = i9 | 1;
   HEAP32[i10 + i9 >> 2] = i9;
   return;
  }
  i4 = i1 >>> 3;
  if (i1 >>> 0 < 256) {
   i2 = HEAP32[i10 + 8 >> 2] | 0;
   i3 = HEAP32[i10 + 12 >> 2] | 0;
   i1 = 41584 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < i7 >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i10 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[10386] = HEAP32[10386] & ~(1 << i4);
    i16 = i10;
    i6 = i9;
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < i7 >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i10 | 0)) i5 = i1; else _abort();
   } else i5 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i5 >> 2] = i2;
   i16 = i10;
   i6 = i9;
   break;
  }
  i5 = HEAP32[i10 + 24 >> 2] | 0;
  i3 = HEAP32[i10 + 12 >> 2] | 0;
  do if ((i3 | 0) == (i10 | 0)) {
   i2 = i10 + 16 | 0;
   i3 = i2 + 4 | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i8 = 0;
     break;
    }
   } else i2 = i3;
   while (1) {
    i3 = i1 + 20 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (i4 | 0) {
     i1 = i4;
     i2 = i3;
     continue;
    }
    i3 = i1 + 16 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (!i4) break; else {
     i1 = i4;
     i2 = i3;
    }
   }
   if (i2 >>> 0 < i7 >>> 0) _abort(); else {
    HEAP32[i2 >> 2] = 0;
    i8 = i1;
    break;
   }
  } else {
   i4 = HEAP32[i10 + 8 >> 2] | 0;
   if (i4 >>> 0 < i7 >>> 0) _abort();
   i1 = i4 + 12 | 0;
   if ((HEAP32[i1 >> 2] | 0) != (i10 | 0)) _abort();
   i2 = i3 + 8 | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i10 | 0)) {
    HEAP32[i1 >> 2] = i3;
    HEAP32[i2 >> 2] = i4;
    i8 = i3;
    break;
   } else _abort();
  } while (0);
  if (i5) {
   i1 = HEAP32[i10 + 28 >> 2] | 0;
   i2 = 41848 + (i1 << 2) | 0;
   if ((i10 | 0) == (HEAP32[i2 >> 2] | 0)) {
    HEAP32[i2 >> 2] = i8;
    if (!i8) {
     HEAP32[10387] = HEAP32[10387] & ~(1 << i1);
     i16 = i10;
     i6 = i9;
     break;
    }
   } else {
    if (i5 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
    i1 = i5 + 16 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i10 | 0)) HEAP32[i1 >> 2] = i8; else HEAP32[i5 + 20 >> 2] = i8;
    if (!i8) {
     i16 = i10;
     i6 = i9;
     break;
    }
   }
   i3 = HEAP32[10390] | 0;
   if (i8 >>> 0 < i3 >>> 0) _abort();
   HEAP32[i8 + 24 >> 2] = i5;
   i1 = i10 + 16 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
    HEAP32[i8 + 16 >> 2] = i2;
    HEAP32[i2 + 24 >> 2] = i8;
    break;
   } while (0);
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   if (i1) if (i1 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
    HEAP32[i8 + 20 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i8;
    i16 = i10;
    i6 = i9;
    break;
   } else {
    i16 = i10;
    i6 = i9;
   }
  } else {
   i16 = i10;
   i6 = i9;
  }
 } else {
  i16 = i3;
  i6 = i4;
 } while (0);
 if (i16 >>> 0 >= i12 >>> 0) _abort();
 i1 = i12 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!(i2 & 1)) _abort();
 if (!(i2 & 2)) {
  if ((i12 | 0) == (HEAP32[10392] | 0)) {
   i15 = (HEAP32[10389] | 0) + i6 | 0;
   HEAP32[10389] = i15;
   HEAP32[10392] = i16;
   HEAP32[i16 + 4 >> 2] = i15 | 1;
   if ((i16 | 0) != (HEAP32[10391] | 0)) return;
   HEAP32[10391] = 0;
   HEAP32[10388] = 0;
   return;
  }
  if ((i12 | 0) == (HEAP32[10391] | 0)) {
   i15 = (HEAP32[10388] | 0) + i6 | 0;
   HEAP32[10388] = i15;
   HEAP32[10391] = i16;
   HEAP32[i16 + 4 >> 2] = i15 | 1;
   HEAP32[i16 + i15 >> 2] = i15;
   return;
  }
  i6 = (i2 & -8) + i6 | 0;
  i4 = i2 >>> 3;
  do if (i2 >>> 0 >= 256) {
   i5 = HEAP32[i12 + 24 >> 2] | 0;
   i1 = HEAP32[i12 + 12 >> 2] | 0;
   do if ((i1 | 0) == (i12 | 0)) {
    i2 = i12 + 16 | 0;
    i3 = i2 + 4 | 0;
    i1 = HEAP32[i3 >> 2] | 0;
    if (!i1) {
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i13 = 0;
      break;
     }
    } else i2 = i3;
    while (1) {
     i3 = i1 + 20 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (i4 | 0) {
      i1 = i4;
      i2 = i3;
      continue;
     }
     i3 = i1 + 16 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (!i4) break; else {
      i1 = i4;
      i2 = i3;
     }
    }
    if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
     HEAP32[i2 >> 2] = 0;
     i13 = i1;
     break;
    }
   } else {
    i2 = HEAP32[i12 + 8 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
    i3 = i2 + 12 | 0;
    if ((HEAP32[i3 >> 2] | 0) != (i12 | 0)) _abort();
    i4 = i1 + 8 | 0;
    if ((HEAP32[i4 >> 2] | 0) == (i12 | 0)) {
     HEAP32[i3 >> 2] = i1;
     HEAP32[i4 >> 2] = i2;
     i13 = i1;
     break;
    } else _abort();
   } while (0);
   if (i5 | 0) {
    i1 = HEAP32[i12 + 28 >> 2] | 0;
    i2 = 41848 + (i1 << 2) | 0;
    if ((i12 | 0) == (HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = i13;
     if (!i13) {
      HEAP32[10387] = HEAP32[10387] & ~(1 << i1);
      break;
     }
    } else {
     if (i5 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
     i1 = i5 + 16 | 0;
     if ((HEAP32[i1 >> 2] | 0) == (i12 | 0)) HEAP32[i1 >> 2] = i13; else HEAP32[i5 + 20 >> 2] = i13;
     if (!i13) break;
    }
    i3 = HEAP32[10390] | 0;
    if (i13 >>> 0 < i3 >>> 0) _abort();
    HEAP32[i13 + 24 >> 2] = i5;
    i1 = i12 + 16 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
     HEAP32[i13 + 16 >> 2] = i2;
     HEAP32[i2 + 24 >> 2] = i13;
     break;
    } while (0);
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    if (i1 | 0) if (i1 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
     HEAP32[i13 + 20 >> 2] = i1;
     HEAP32[i1 + 24 >> 2] = i13;
     break;
    }
   }
  } else {
   i2 = HEAP32[i12 + 8 >> 2] | 0;
   i3 = HEAP32[i12 + 12 >> 2] | 0;
   i1 = 41584 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i12 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[10386] = HEAP32[10386] & ~(1 << i4);
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i12 | 0)) i11 = i1; else _abort();
   } else i11 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i11 >> 2] = i2;
  } while (0);
  HEAP32[i16 + 4 >> 2] = i6 | 1;
  HEAP32[i16 + i6 >> 2] = i6;
  if ((i16 | 0) == (HEAP32[10391] | 0)) {
   HEAP32[10388] = i6;
   return;
  }
 } else {
  HEAP32[i1 >> 2] = i2 & -2;
  HEAP32[i16 + 4 >> 2] = i6 | 1;
  HEAP32[i16 + i6 >> 2] = i6;
 }
 i1 = i6 >>> 3;
 if (i6 >>> 0 < 256) {
  i3 = 41584 + (i1 << 1 << 2) | 0;
  i2 = HEAP32[10386] | 0;
  i1 = 1 << i1;
  if (i2 & i1) {
   i1 = i3 + 8 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
    i14 = i1;
    i15 = i2;
   }
  } else {
   HEAP32[10386] = i2 | i1;
   i14 = i3 + 8 | 0;
   i15 = i3;
  }
  HEAP32[i14 >> 2] = i16;
  HEAP32[i15 + 12 >> 2] = i16;
  HEAP32[i16 + 8 >> 2] = i15;
  HEAP32[i16 + 12 >> 2] = i3;
  return;
 }
 i1 = i6 >>> 8;
 if (i1) if (i6 >>> 0 > 16777215) i3 = 31; else {
  i14 = (i1 + 1048320 | 0) >>> 16 & 8;
  i15 = i1 << i14;
  i13 = (i15 + 520192 | 0) >>> 16 & 4;
  i15 = i15 << i13;
  i3 = (i15 + 245760 | 0) >>> 16 & 2;
  i3 = 14 - (i13 | i14 | i3) + (i15 << i3 >>> 15) | 0;
  i3 = i6 >>> (i3 + 7 | 0) & 1 | i3 << 1;
 } else i3 = 0;
 i4 = 41848 + (i3 << 2) | 0;
 HEAP32[i16 + 28 >> 2] = i3;
 HEAP32[i16 + 20 >> 2] = 0;
 HEAP32[i16 + 16 >> 2] = 0;
 i1 = HEAP32[10387] | 0;
 i2 = 1 << i3;
 do if (i1 & i2) {
  i5 = i6 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
  i1 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((HEAP32[i1 + 4 >> 2] & -8 | 0) == (i6 | 0)) {
    i3 = i1;
    i4 = 130;
    break;
   }
   i2 = i1 + 16 + (i5 >>> 31 << 2) | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   if (!i3) {
    i4 = 127;
    break;
   } else {
    i5 = i5 << 1;
    i1 = i3;
   }
  }
  if ((i4 | 0) == 127) if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
   HEAP32[i2 >> 2] = i16;
   HEAP32[i16 + 24 >> 2] = i1;
   HEAP32[i16 + 12 >> 2] = i16;
   HEAP32[i16 + 8 >> 2] = i16;
   break;
  } else if ((i4 | 0) == 130) {
   i1 = i3 + 8 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   i15 = HEAP32[10390] | 0;
   if (i2 >>> 0 >= i15 >>> 0 & i3 >>> 0 >= i15 >>> 0) {
    HEAP32[i2 + 12 >> 2] = i16;
    HEAP32[i1 >> 2] = i16;
    HEAP32[i16 + 8 >> 2] = i2;
    HEAP32[i16 + 12 >> 2] = i3;
    HEAP32[i16 + 24 >> 2] = 0;
    break;
   } else _abort();
  }
 } else {
  HEAP32[10387] = i1 | i2;
  HEAP32[i4 >> 2] = i16;
  HEAP32[i16 + 24 >> 2] = i4;
  HEAP32[i16 + 12 >> 2] = i16;
  HEAP32[i16 + 8 >> 2] = i16;
 } while (0);
 i16 = (HEAP32[10394] | 0) + -1 | 0;
 HEAP32[10394] = i16;
 if (!i16) i1 = 42e3; else return;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) break; else i1 = i1 + 8 | 0;
 }
 HEAP32[10394] = -1;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i18, i13, i20) {
 i18 = i18 | 0;
 i13 = i13 | 0;
 i20 = i20 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i19 = i21 + 64 | 0;
 i5 = i21 + 40 | 0;
 i16 = i21 + 16 | 0;
 i17 = i21;
 i15 = i18;
 L1 : do if ((i13 - i15 | 0) > 1 ? (HEAP8[i18 >> 0] | 0) == 84 : 0) {
  i12 = HEAP8[i18 + 1 >> 0] | 0;
  if (i12 << 24 >> 24 == 95) {
   i1 = HEAP32[i20 + 36 >> 2] | 0;
   if ((HEAP32[i20 + 32 >> 2] | 0) == (i1 | 0)) {
    i1 = i18;
    break;
   }
   i2 = HEAP32[i1 + -16 >> 2] | 0;
   if ((i2 | 0) != (HEAP32[i1 + -12 >> 2] | 0)) {
    i7 = HEAP32[i2 + 4 >> 2] | 0;
    i8 = i20 + 4 | 0;
    i9 = i20 + 8 | 0;
    i10 = i20 + 12 | 0;
    i11 = i19 + 8 | 0;
    i6 = HEAP32[i2 >> 2] | 0;
    while (1) {
     if ((i6 | 0) == (i7 | 0)) {
      i1 = 8;
      break;
     }
     i1 = HEAP32[i8 >> 2] | 0;
     i5 = HEAP32[i9 >> 2] | 0;
     i2 = i5;
     if ((i1 | 0) == (i5 | 0)) {
      i3 = HEAP32[i20 >> 2] | 0;
      i1 = i1 - i3 | 0;
      i5 = (i1 | 0) / 24 | 0;
      i4 = i5 + 1 | 0;
      if ((i1 | 0) < -24) {
       i1 = 12;
       break;
      }
      i1 = (i2 - i3 | 0) / 24 | 0;
      if (i1 >>> 0 < 1073741823) {
       i1 = i1 << 1;
       i1 = i1 >>> 0 < i4 >>> 0 ? i4 : i1;
      } else i1 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i19, i1, i5, i10);
      i5 = HEAP32[i11 >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i5, i6);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i5 + 12 | 0, i6 + 12 | 0);
      HEAP32[i11 >> 2] = i5 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i20, i19);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i19);
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1, i6);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1 + 12 | 0, i6 + 12 | 0);
      HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 24;
     }
     i6 = i6 + 24 | 0;
    }
    if ((i1 | 0) == 8) {
     i1 = i18 + 2 | 0;
     break;
    } else if ((i1 | 0) == 12) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i20);
   } else {
    HEAP8[i5 >> 0] = 4;
    i1 = i5 + 1 | 0;
    HEAP8[i1 >> 0] = 84;
    HEAP8[i1 + 1 >> 0] = 95;
    HEAP8[i5 + 3 >> 0] = 0;
    i1 = i5 + 12 | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i20 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i17 = HEAP32[i20 + 8 >> 2] | 0;
    i3 = i17;
    if (i2 >>> 0 < i17 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i5);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i20 >> 2] | 0;
     i17 = i2 - i1 | 0;
     i4 = (i17 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i17 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i20);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i19, i1, i4, i20 + 12 | 0);
     i17 = i19 + 8 | 0;
     i16 = HEAP32[i17 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i16, i5);
     HEAP32[i17 >> 2] = i16 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i20, i19);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i19);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    HEAP8[i20 + 62 >> 0] = 1;
    i1 = i18 + 2 | 0;
    break;
   }
  }
  i1 = (i12 << 24 >> 24) + -48 | 0;
  if (i1 >>> 0 < 10) {
   i4 = i18 + 2 | 0;
   while (1) {
    if ((i4 | 0) == (i13 | 0)) {
     i1 = i18;
     break L1;
    }
    i2 = HEAP8[i4 >> 0] | 0;
    i3 = (i2 << 24 >> 24) + -48 | 0;
    if (i3 >>> 0 >= 10) break;
    i1 = i3 + (i1 * 10 | 0) | 0;
    i4 = i4 + 1 | 0;
   }
   if (i2 << 24 >> 24 == 95 ? (i14 = HEAP32[i20 + 36 >> 2] | 0, (HEAP32[i20 + 32 >> 2] | 0) != (i14 | 0)) : 0) {
    i1 = i1 + 1 | 0;
    i13 = HEAP32[i14 + -16 >> 2] | 0;
    i2 = i13;
    if (i1 >>> 0 < (HEAP32[i14 + -12 >> 2] | 0) - i13 >> 4 >>> 0) {
     i8 = HEAP32[i2 + (i1 << 4) + 4 >> 2] | 0;
     i9 = i20 + 4 | 0;
     i10 = i20 + 8 | 0;
     i11 = i20 + 12 | 0;
     i12 = i19 + 8 | 0;
     i7 = HEAP32[i2 + (i1 << 4) >> 2] | 0;
     while (1) {
      if ((i7 | 0) == (i8 | 0)) {
       i1 = 38;
       break;
      }
      i1 = HEAP32[i9 >> 2] | 0;
      i14 = HEAP32[i10 >> 2] | 0;
      i2 = i14;
      if ((i1 | 0) == (i14 | 0)) {
       i3 = HEAP32[i20 >> 2] | 0;
       i14 = i1 - i3 | 0;
       i6 = (i14 | 0) / 24 | 0;
       i5 = i6 + 1 | 0;
       if ((i14 | 0) < -24) {
        i1 = 42;
        break;
       }
       i1 = (i2 - i3 | 0) / 24 | 0;
       if (i1 >>> 0 < 1073741823) {
        i1 = i1 << 1;
        i1 = i1 >>> 0 < i5 >>> 0 ? i5 : i1;
       } else i1 = 2147483647;
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i19, i1, i6, i11);
       i14 = HEAP32[i12 >> 2] | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i14, i7);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i14 + 12 | 0, i7 + 12 | 0);
       HEAP32[i12 >> 2] = i14 + 24;
       __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i20, i19);
       __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i19);
      } else {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1, i7);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1 + 12 | 0, i7 + 12 | 0);
       HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 24;
      }
      i7 = i7 + 24 | 0;
     }
     if ((i1 | 0) == 38) {
      i1 = i4 + 1 | 0;
      break;
     } else if ((i1 | 0) == 42) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i20);
    }
    i1 = i4 + 1 | 0;
    i4 = i1 - i15 | 0;
    if (i4 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i17);
    if (i4 >>> 0 < 11) {
     HEAP8[i17 >> 0] = i4 << 1;
     i5 = i17 + 1 | 0;
    } else {
     i15 = i4 + 16 & -16;
     i5 = _malloc(i15) | 0;
     HEAP32[i17 + 8 >> 2] = i5;
     HEAP32[i17 >> 2] = i15 | 1;
     HEAP32[i17 + 4 >> 2] = i4;
    }
    i2 = i18;
    i3 = i5;
    while (1) {
     if ((i2 | 0) == (i1 | 0)) break;
     HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
     i2 = i2 + 1 | 0;
     i3 = i3 + 1 | 0;
    }
    HEAP8[i5 + i4 >> 0] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i16, i17);
    i2 = i20 + 4 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    i18 = HEAP32[i20 + 8 >> 2] | 0;
    i4 = i18;
    if (i3 >>> 0 < i18 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i16);
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
    } else {
     i2 = HEAP32[i20 >> 2] | 0;
     i18 = i3 - i2 | 0;
     i5 = (i18 | 0) / 24 | 0;
     i3 = i5 + 1 | 0;
     if ((i18 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i20);
     i2 = (i4 - i2 | 0) / 24 | 0;
     if (i2 >>> 0 < 1073741823) {
      i2 = i2 << 1;
      i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
     } else i2 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i19, i2, i5, i20 + 12 | 0);
     i18 = i19 + 8 | 0;
     i15 = HEAP32[i18 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i15, i16);
     HEAP32[i18 >> 2] = i15 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i20, i19);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i19);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i17);
    HEAP8[i20 + 62 >> 0] = 1;
   } else i1 = i18;
  } else i1 = i18;
 } else i1 = i18; while (0);
 STACKTOP = i21;
 return i1 | 0;
}

function __ZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefE(i38, i2) {
 i38 = i38 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i39 = 0;
 i39 = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 i21 = i39 + 72 | 0;
 i20 = i39 + 272 | 0;
 i28 = i39 + 268 | 0;
 i24 = i39 + 264 | 0;
 i3 = i39 + 260 | 0;
 i32 = i39 + 256 | 0;
 i30 = i39 + 277 | 0;
 i31 = i39 + 276 | 0;
 i29 = i39 + 224 | 0;
 i35 = i39 + 216 | 0;
 i25 = i39 + 204 | 0;
 i26 = i39 + 188 | 0;
 i23 = i39 + 132 | 0;
 i27 = i39 + 112 | 0;
 i33 = i39 + 100 | 0;
 i8 = i39 + 252 | 0;
 i9 = i39 + 248 | 0;
 i10 = i39 + 244 | 0;
 i12 = i39 + 220 | 0;
 i34 = i39 + 48 | 0;
 i16 = i39 + 200 | 0;
 i17 = i39 + 184 | 0;
 i18 = i39 + 128 | 0;
 i19 = i39 + 104 | 0;
 i37 = i39 + 24 | 0;
 i36 = i39;
 i22 = i39 + 96 | 0;
 i1 = i38 + 44 | 0;
 if (HEAP32[i1 >> 2] | 0 ? (i14 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42128, 14169) | 0, i15 = __ZN6cashew3RefixEj(i2, 1) | 0, i15 = __ZN6cashew5Value10getIStringEv(HEAP32[i15 >> 2] | 0) | 0, __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i14, HEAP32[i15 >> 2] | 0) | 0, 10) | 0, (HEAP32[i1 >> 2] | 0) > 1) : 0) {
  __ZN6cashew5Value9stringifyERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEb(HEAP32[i2 >> 2] | 0, 42128, 0);
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(42128, 10) | 0;
 }
 i11 = __ZN10MixedArena5allocIN4wasm8FunctionEEEPT_v(HEAP32[i38 + 4 >> 2] | 0) | 0;
 HEAP32[i28 >> 2] = i11;
 i14 = __ZN6cashew3RefixEj(i2, 1) | 0;
 i14 = __ZN6cashew5Value10getIStringEv(HEAP32[i14 >> 2] | 0) | 0;
 HEAP32[i11 >> 2] = HEAP32[i14 >> 2];
 i11 = __ZN6cashew3RefixEj(i2, 2) | 0;
 i11 = HEAP32[i11 >> 2] | 0;
 i14 = __ZN6cashew3RefixEj(i2, 3) | 0;
 HEAP32[i24 >> 2] = HEAP32[i14 >> 2];
 HEAP32[i3 >> 2] = 0;
 HEAP32[i32 >> 2] = i3;
 HEAP32[i29 >> 2] = 0;
 HEAP32[i29 + 4 >> 2] = 0;
 HEAP32[i29 + 8 >> 2] = 0;
 HEAP32[i29 + 12 >> 2] = 0;
 HEAPF32[i29 + 16 >> 2] = 1.0;
 HEAP32[i35 >> 2] = 0;
 HEAP32[i25 >> 2] = 0;
 i14 = i25 + 4 | 0;
 HEAP32[i14 >> 2] = 0;
 HEAP32[i25 + 8 >> 2] = 0;
 HEAP32[i26 >> 2] = 0;
 i15 = i26 + 4 | 0;
 HEAP32[i15 >> 2] = 0;
 HEAP32[i26 + 8 >> 2] = 0;
 HEAP32[i23 >> 2] = 0;
 HEAP32[i23 + 4 >> 2] = 0;
 HEAP32[i23 + 8 >> 2] = 0;
 HEAP32[i23 + 12 >> 2] = 0;
 HEAPF32[i23 + 16 >> 2] = 1.0;
 i13 = i23 + 20 | 0;
 HEAP32[i23 + 48 >> 2] = 0;
 HEAP32[i13 >> 2] = 0;
 HEAP32[i13 + 4 >> 2] = 0;
 HEAP32[i13 + 8 >> 2] = 0;
 HEAP32[i13 + 12 >> 2] = 0;
 HEAP32[i13 + 16 >> 2] = 0;
 HEAP32[i13 + 20 >> 2] = 0;
 i13 = i38 + 80 | 0;
 i7 = 0;
 while (1) {
  if (i7 >>> 0 >= (__ZN6cashew5Value4sizeEv(i11) | 0) >>> 0) {
   i1 = 6;
   break;
  }
  i6 = __ZN6cashew3RefixEj(i24, i7) | 0;
  HEAP32[i27 >> 2] = HEAP32[i6 >> 2];
  if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i27, 0) | 0, 41048) | 0)) {
   i1 = 8;
   break;
  }
  i6 = __ZN6cashew3RefixEj(i27, 1) | 0;
  HEAP32[i27 >> 2] = HEAP32[i6 >> 2];
  if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i27, 0) | 0, 41052) | 0)) {
   i1 = 11;
   break;
  }
  if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i27, 2) | 0, 0) | 0, 41056) | 0)) {
   i1 = 11;
   break;
  }
  i1 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i27, 2) | 0, 1) | 0;
  i1 = __ZN6cashew5Value10getIStringEv(HEAP32[i1 >> 2] | 0) | 0;
  i1 = HEAP32[i1 >> 2] | 0;
  HEAP32[i33 >> 2] = i1;
  i2 = __ZN6cashew3RefixEj(i27, 3) | 0;
  HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i9 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i20 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i21 >> 2] = HEAP32[i9 >> 2];
  i2 = __Z10detectTypeN6cashew3RefEP7AsmDatabNS_7IStringE(i20, 0, 0, i21) | 0;
  i3 = HEAP32[i28 >> 2] | 0;
  i4 = __ZN4wasm13asmToWasmTypeE7AsmType(i2) | 0;
  HEAP32[i10 >> 2] = i4;
  i5 = i3 + 12 | 0;
  i6 = HEAP32[i5 >> 2] | 0;
  if (i6 >>> 0 < (HEAP32[i3 + 16 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i1;
   HEAP32[i6 + 4 >> 2] = i4;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 8;
  } else __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN6cashew7IStringENS1_8WasmTypeEEEEvDpOT_(i3 + 8 | 0, i33, i10);
  __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(i21, i29, i33);
  HEAP32[i12 >> 2] = i1;
  HEAP32[i21 >> 2] = HEAP32[i12 >> 2];
  __ZN7AsmData8addParamEN6cashew7IStringE7AsmType(i23, i21, i2);
  i7 = i7 + 1 | 0;
 }
 if ((i1 | 0) == 6) {
  i1 = __ZN6cashew5Value4sizeEv(i11) | 0;
  while (1) {
   if (i1 >>> 0 >= (__ZN6cashew5Value4sizeEv(HEAP32[i24 >> 2] | 0) | 0) >>> 0) break;
   if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i24, i1) | 0, 0) | 0, 41060) | 0)) break;
   i8 = __ZN6cashew3RefixEj(i24, i1) | 0;
   HEAP32[i27 >> 2] = HEAP32[i8 >> 2];
   i8 = 0;
   while (1) {
    i12 = __ZN6cashew3RefixEj(i27, 1) | 0;
    if (i8 >>> 0 >= (__ZN6cashew5Value4sizeEv(HEAP32[i12 >> 2] | 0) | 0) >>> 0) break;
    i6 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i27, 1) | 0, i8) | 0;
    HEAP32[i33 >> 2] = HEAP32[i6 >> 2];
    i6 = __ZN6cashew3RefixEj(i33, 0) | 0;
    i6 = __ZN6cashew5Value10getIStringEv(HEAP32[i6 >> 2] | 0) | 0;
    i6 = HEAP32[i6 >> 2] | 0;
    HEAP32[i34 >> 2] = i6;
    i7 = __ZN6cashew3RefixEj(i33, 1) | 0;
    HEAP32[i16 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i17 >> 2] = HEAP32[i13 >> 2];
    HEAP32[i20 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i21 >> 2] = HEAP32[i17 >> 2];
    i7 = __Z10detectTypeN6cashew3RefEP7AsmDatabNS_7IStringE(i20, 0, 1, i21) | 0;
    i2 = HEAP32[i28 >> 2] | 0;
    i3 = __ZN4wasm13asmToWasmTypeE7AsmType(i7) | 0;
    HEAP32[i18 >> 2] = i3;
    i4 = i2 + 24 | 0;
    i5 = HEAP32[i4 >> 2] | 0;
    if (i5 >>> 0 < (HEAP32[i2 + 28 >> 2] | 0) >>> 0) {
     HEAP32[i5 >> 2] = i6;
     HEAP32[i5 + 4 >> 2] = i3;
     HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 8;
    } else __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN6cashew7IStringENS1_8WasmTypeEEEEvDpOT_(i2 + 20 | 0, i34, i18);
    __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(i21, i29, i34);
    HEAP32[i19 >> 2] = i6;
    HEAP32[i21 >> 2] = HEAP32[i19 >> 2];
    __ZN7AsmData6addVarEN6cashew7IStringE7AsmType(i23, i21, i7);
    i8 = i8 + 1 | 0;
   }
   i1 = i1 + 1 | 0;
  }
  HEAP8[i20 >> 0] = 0;
  HEAP32[i27 >> 2] = i20;
  HEAP32[i27 + 4 >> 2] = i28;
  HEAP32[i27 + 8 >> 2] = i29;
  HEAP32[i27 + 12 >> 2] = i23;
  HEAP8[i33 >> 0] = 0;
  HEAP32[i34 + 16 >> 2] = 0;
  HEAP32[i37 + 16 >> 2] = 0;
  i20 = __Znwj(64) | 0;
  HEAP32[i20 >> 2] = 3428;
  HEAP32[i20 + 4 >> 2] = i38;
  HEAP32[i20 + 8 >> 2] = i36;
  HEAP32[i20 + 12 >> 2] = i29;
  HEAP32[i20 + 16 >> 2] = i37;
  HEAP32[i20 + 20 >> 2] = i23;
  HEAP32[i20 + 24 >> 2] = i27;
  HEAP32[i20 + 28 >> 2] = i33;
  HEAP32[i20 + 32 >> 2] = i28;
  HEAP32[i20 + 36 >> 2] = i35;
  HEAP32[i20 + 40 >> 2] = i30;
  HEAP32[i20 + 44 >> 2] = i25;
  HEAP32[i20 + 48 >> 2] = i34;
  HEAP32[i20 + 52 >> 2] = i26;
  HEAP32[i20 + 56 >> 2] = i31;
  HEAP32[i20 + 60 >> 2] = i32;
  HEAP32[i36 + 16 >> 2] = i20;
  i33 = i38;
  i38 = i36;
  HEAP32[i21 + 16 >> 2] = i21;
  HEAP32[i21 >> 2] = 3472;
  HEAP32[i21 + 4 >> 2] = i33;
  HEAP32[i21 + 8 >> 2] = i38;
  __ZNSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEE4swapERS7_(i21, i37);
  __ZNSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEED2Ev(i21);
  HEAP32[i21 + 16 >> 2] = i21;
  HEAP32[i21 >> 2] = 3516;
  HEAP32[i21 + 4 >> 2] = i33;
  HEAP32[i21 + 8 >> 2] = i38;
  __ZNSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEE4swapERS7_(i21, i34);
  __ZNSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEED2Ev(i21);
  HEAP32[i22 >> 2] = HEAP32[i24 >> 2];
  HEAP32[i21 >> 2] = HEAP32[i22 >> 2];
  i38 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEEclES5_j(i34, i21, i1) | 0;
  HEAP32[(HEAP32[i28 >> 2] | 0) + 36 >> 2] = i38;
  if ((HEAP32[i14 >> 2] | 0) == (HEAP32[i25 >> 2] | 0) ? (HEAP32[i15 >> 2] | 0) == (HEAP32[i26 >> 2] | 0) : 0) if (!(HEAP32[i35 >> 2] | 0)) {
   i38 = HEAP32[i28 >> 2] | 0;
   __ZNSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEED2Ev(i36);
   __ZNSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEED2Ev(i37);
   __ZNSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEED2Ev(i34);
   __ZN7AsmDataD2Ev(i23);
   __ZNSt3__113__vector_baseIN6cashew7IStringENS_9allocatorIS2_EEED2Ev(i26);
   __ZNSt3__113__vector_baseIN6cashew7IStringENS_9allocatorIS2_EEED2Ev(i25);
   __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i29);
   STACKTOP = i39;
   return i38 | 0;
  } else ___assert_fail(14301, 13478, 1470, 14193);
  ___assert_fail(14249, 13478, 1469, 14193);
 } else if ((i1 | 0) == 8) ___assert_fail(14177, 13478, 747, 14193); else if ((i1 | 0) == 11) ___assert_fail(14209, 13478, 749, 14193);
 return 0;
}

function _dispose_chunk(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i14 = i2 + i3 | 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 do if (!(i1 & 1)) {
  i5 = HEAP32[i2 >> 2] | 0;
  if (!(i1 & 3)) return;
  i11 = i2 + (0 - i5) | 0;
  i10 = i5 + i3 | 0;
  i8 = HEAP32[10390] | 0;
  if (i11 >>> 0 < i8 >>> 0) _abort();
  if ((i11 | 0) == (HEAP32[10391] | 0)) {
   i2 = i14 + 4 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 & 3 | 0) != 3) {
    i17 = i11;
    i6 = i10;
    break;
   }
   HEAP32[10388] = i10;
   HEAP32[i2 >> 2] = i1 & -2;
   HEAP32[i11 + 4 >> 2] = i10 | 1;
   HEAP32[i11 + i10 >> 2] = i10;
   return;
  }
  i4 = i5 >>> 3;
  if (i5 >>> 0 < 256) {
   i2 = HEAP32[i11 + 8 >> 2] | 0;
   i3 = HEAP32[i11 + 12 >> 2] | 0;
   i1 = 41584 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < i8 >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i11 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[10386] = HEAP32[10386] & ~(1 << i4);
    i17 = i11;
    i6 = i10;
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < i8 >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i11 | 0)) i7 = i1; else _abort();
   } else i7 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i7 >> 2] = i2;
   i17 = i11;
   i6 = i10;
   break;
  }
  i5 = HEAP32[i11 + 24 >> 2] | 0;
  i3 = HEAP32[i11 + 12 >> 2] | 0;
  do if ((i3 | 0) == (i11 | 0)) {
   i2 = i11 + 16 | 0;
   i3 = i2 + 4 | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i9 = 0;
     break;
    }
   } else i2 = i3;
   while (1) {
    i3 = i1 + 20 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (i4 | 0) {
     i1 = i4;
     i2 = i3;
     continue;
    }
    i3 = i1 + 16 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (!i4) break; else {
     i1 = i4;
     i2 = i3;
    }
   }
   if (i2 >>> 0 < i8 >>> 0) _abort(); else {
    HEAP32[i2 >> 2] = 0;
    i9 = i1;
    break;
   }
  } else {
   i4 = HEAP32[i11 + 8 >> 2] | 0;
   if (i4 >>> 0 < i8 >>> 0) _abort();
   i1 = i4 + 12 | 0;
   if ((HEAP32[i1 >> 2] | 0) != (i11 | 0)) _abort();
   i2 = i3 + 8 | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i11 | 0)) {
    HEAP32[i1 >> 2] = i3;
    HEAP32[i2 >> 2] = i4;
    i9 = i3;
    break;
   } else _abort();
  } while (0);
  if (i5) {
   i1 = HEAP32[i11 + 28 >> 2] | 0;
   i2 = 41848 + (i1 << 2) | 0;
   if ((i11 | 0) == (HEAP32[i2 >> 2] | 0)) {
    HEAP32[i2 >> 2] = i9;
    if (!i9) {
     HEAP32[10387] = HEAP32[10387] & ~(1 << i1);
     i17 = i11;
     i6 = i10;
     break;
    }
   } else {
    if (i5 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
    i1 = i5 + 16 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i11 | 0)) HEAP32[i1 >> 2] = i9; else HEAP32[i5 + 20 >> 2] = i9;
    if (!i9) {
     i17 = i11;
     i6 = i10;
     break;
    }
   }
   i3 = HEAP32[10390] | 0;
   if (i9 >>> 0 < i3 >>> 0) _abort();
   HEAP32[i9 + 24 >> 2] = i5;
   i1 = i11 + 16 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
    HEAP32[i9 + 16 >> 2] = i2;
    HEAP32[i2 + 24 >> 2] = i9;
    break;
   } while (0);
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   if (i1) if (i1 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
    HEAP32[i9 + 20 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i9;
    i17 = i11;
    i6 = i10;
    break;
   } else {
    i17 = i11;
    i6 = i10;
   }
  } else {
   i17 = i11;
   i6 = i10;
  }
 } else {
  i17 = i2;
  i6 = i3;
 } while (0);
 i7 = HEAP32[10390] | 0;
 if (i14 >>> 0 < i7 >>> 0) _abort();
 i1 = i14 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!(i2 & 2)) {
  if ((i14 | 0) == (HEAP32[10392] | 0)) {
   i16 = (HEAP32[10389] | 0) + i6 | 0;
   HEAP32[10389] = i16;
   HEAP32[10392] = i17;
   HEAP32[i17 + 4 >> 2] = i16 | 1;
   if ((i17 | 0) != (HEAP32[10391] | 0)) return;
   HEAP32[10391] = 0;
   HEAP32[10388] = 0;
   return;
  }
  if ((i14 | 0) == (HEAP32[10391] | 0)) {
   i16 = (HEAP32[10388] | 0) + i6 | 0;
   HEAP32[10388] = i16;
   HEAP32[10391] = i17;
   HEAP32[i17 + 4 >> 2] = i16 | 1;
   HEAP32[i17 + i16 >> 2] = i16;
   return;
  }
  i6 = (i2 & -8) + i6 | 0;
  i4 = i2 >>> 3;
  do if (i2 >>> 0 >= 256) {
   i5 = HEAP32[i14 + 24 >> 2] | 0;
   i3 = HEAP32[i14 + 12 >> 2] | 0;
   do if ((i3 | 0) == (i14 | 0)) {
    i2 = i14 + 16 | 0;
    i3 = i2 + 4 | 0;
    i1 = HEAP32[i3 >> 2] | 0;
    if (!i1) {
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i13 = 0;
      break;
     }
    } else i2 = i3;
    while (1) {
     i3 = i1 + 20 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (i4 | 0) {
      i1 = i4;
      i2 = i3;
      continue;
     }
     i3 = i1 + 16 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (!i4) break; else {
      i1 = i4;
      i2 = i3;
     }
    }
    if (i2 >>> 0 < i7 >>> 0) _abort(); else {
     HEAP32[i2 >> 2] = 0;
     i13 = i1;
     break;
    }
   } else {
    i4 = HEAP32[i14 + 8 >> 2] | 0;
    if (i4 >>> 0 < i7 >>> 0) _abort();
    i1 = i4 + 12 | 0;
    if ((HEAP32[i1 >> 2] | 0) != (i14 | 0)) _abort();
    i2 = i3 + 8 | 0;
    if ((HEAP32[i2 >> 2] | 0) == (i14 | 0)) {
     HEAP32[i1 >> 2] = i3;
     HEAP32[i2 >> 2] = i4;
     i13 = i3;
     break;
    } else _abort();
   } while (0);
   if (i5 | 0) {
    i1 = HEAP32[i14 + 28 >> 2] | 0;
    i2 = 41848 + (i1 << 2) | 0;
    if ((i14 | 0) == (HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = i13;
     if (!i13) {
      HEAP32[10387] = HEAP32[10387] & ~(1 << i1);
      break;
     }
    } else {
     if (i5 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
     i1 = i5 + 16 | 0;
     if ((HEAP32[i1 >> 2] | 0) == (i14 | 0)) HEAP32[i1 >> 2] = i13; else HEAP32[i5 + 20 >> 2] = i13;
     if (!i13) break;
    }
    i3 = HEAP32[10390] | 0;
    if (i13 >>> 0 < i3 >>> 0) _abort();
    HEAP32[i13 + 24 >> 2] = i5;
    i1 = i14 + 16 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
     HEAP32[i13 + 16 >> 2] = i2;
     HEAP32[i2 + 24 >> 2] = i13;
     break;
    } while (0);
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    if (i1 | 0) if (i1 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
     HEAP32[i13 + 20 >> 2] = i1;
     HEAP32[i1 + 24 >> 2] = i13;
     break;
    }
   }
  } else {
   i2 = HEAP32[i14 + 8 >> 2] | 0;
   i3 = HEAP32[i14 + 12 >> 2] | 0;
   i1 = 41584 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < i7 >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i14 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[10386] = HEAP32[10386] & ~(1 << i4);
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < i7 >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i14 | 0)) i12 = i1; else _abort();
   } else i12 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i12 >> 2] = i2;
  } while (0);
  HEAP32[i17 + 4 >> 2] = i6 | 1;
  HEAP32[i17 + i6 >> 2] = i6;
  if ((i17 | 0) == (HEAP32[10391] | 0)) {
   HEAP32[10388] = i6;
   return;
  }
 } else {
  HEAP32[i1 >> 2] = i2 & -2;
  HEAP32[i17 + 4 >> 2] = i6 | 1;
  HEAP32[i17 + i6 >> 2] = i6;
 }
 i1 = i6 >>> 3;
 if (i6 >>> 0 < 256) {
  i3 = 41584 + (i1 << 1 << 2) | 0;
  i2 = HEAP32[10386] | 0;
  i1 = 1 << i1;
  if (i2 & i1) {
   i1 = i3 + 8 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
    i15 = i1;
    i16 = i2;
   }
  } else {
   HEAP32[10386] = i2 | i1;
   i15 = i3 + 8 | 0;
   i16 = i3;
  }
  HEAP32[i15 >> 2] = i17;
  HEAP32[i16 + 12 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i16;
  HEAP32[i17 + 12 >> 2] = i3;
  return;
 }
 i1 = i6 >>> 8;
 if (i1) if (i6 >>> 0 > 16777215) i3 = 31; else {
  i15 = (i1 + 1048320 | 0) >>> 16 & 8;
  i16 = i1 << i15;
  i14 = (i16 + 520192 | 0) >>> 16 & 4;
  i16 = i16 << i14;
  i3 = (i16 + 245760 | 0) >>> 16 & 2;
  i3 = 14 - (i14 | i15 | i3) + (i16 << i3 >>> 15) | 0;
  i3 = i6 >>> (i3 + 7 | 0) & 1 | i3 << 1;
 } else i3 = 0;
 i4 = 41848 + (i3 << 2) | 0;
 HEAP32[i17 + 28 >> 2] = i3;
 HEAP32[i17 + 20 >> 2] = 0;
 HEAP32[i17 + 16 >> 2] = 0;
 i1 = HEAP32[10387] | 0;
 i2 = 1 << i3;
 if (!(i1 & i2)) {
  HEAP32[10387] = i1 | i2;
  HEAP32[i4 >> 2] = i17;
  HEAP32[i17 + 24 >> 2] = i4;
  HEAP32[i17 + 12 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i17;
  return;
 }
 i5 = i6 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
 i1 = HEAP32[i4 >> 2] | 0;
 while (1) {
  if ((HEAP32[i1 + 4 >> 2] & -8 | 0) == (i6 | 0)) {
   i3 = i1;
   i4 = 127;
   break;
  }
  i2 = i1 + 16 + (i5 >>> 31 << 2) | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if (!i3) {
   i4 = 124;
   break;
  } else {
   i5 = i5 << 1;
   i1 = i3;
  }
 }
 if ((i4 | 0) == 124) {
  if (i2 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
  HEAP32[i2 >> 2] = i17;
  HEAP32[i17 + 24 >> 2] = i1;
  HEAP32[i17 + 12 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i17;
  return;
 } else if ((i4 | 0) == 127) {
  i1 = i3 + 8 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  i16 = HEAP32[10390] | 0;
  if (!(i2 >>> 0 >= i16 >>> 0 & i3 >>> 0 >= i16 >>> 0)) _abort();
  HEAP32[i2 + 12 >> 2] = i17;
  HEAP32[i1 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i2;
  HEAP32[i17 + 12 >> 2] = i3;
  HEAP32[i17 + 24 >> 2] = 0;
  return;
 }
}

function __ZNSt3__112__next_primeEj(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0;
 L1 : do if (i5 >>> 0 < 212) {
  i1 = 8572;
  i2 = 48;
  L2 : while (1) {
   while (1) {
    if (!i2) break L2;
    i3 = (i2 | 0) / 2 | 0;
    i4 = i1 + (i3 << 2) | 0;
    if ((HEAP32[i4 >> 2] | 0) >>> 0 < i5 >>> 0) {
     i1 = i4;
     break;
    } else i2 = i3;
   }
   i1 = i1 + 4 | 0;
   i2 = i2 + -1 - i3 | 0;
  }
  i1 = HEAP32[i1 >> 2] | 0;
 } else {
  i6 = (i5 >>> 0) / 210 | 0;
  i7 = i6 * 210 | 0;
  i5 = i5 - i7 | 0;
  i1 = 8764;
  i2 = 48;
  L10 : while (1) {
   while (1) {
    if (!i2) break L10;
    i3 = (i2 | 0) / 2 | 0;
    i4 = i1 + (i3 << 2) | 0;
    if ((HEAP32[i4 >> 2] | 0) >>> 0 < i5 >>> 0) {
     i1 = i4;
     break;
    } else i2 = i3;
   }
   i1 = i1 + 4 | 0;
   i2 = i2 + -1 - i3 | 0;
  }
  i1 = i1 - 8764 >> 2;
  i5 = i1;
  i1 = (HEAP32[8764 + (i1 << 2) >> 2] | 0) + i7 | 0;
  while (1) {
   i4 = 5;
   while (1) {
    if (i4 >>> 0 >= 47) {
     i4 = 211;
     i8 = 17;
     break;
    }
    i2 = HEAP32[8572 + (i4 << 2) >> 2] | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break; else i4 = i4 + 1 | 0;
   }
   L23 : do if ((i8 | 0) == 17) while (1) {
    i8 = 0;
    i2 = (i1 >>> 0) / (i4 >>> 0) | 0;
    if (i2 >>> 0 < i4 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i2, i4) | 0)) break L23;
    i2 = i4 + 10 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 12 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 16 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 18 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 22 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 28 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 30 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 36 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 40 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 42 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 46 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 52 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 58 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 60 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 66 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 70 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 72 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 78 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 82 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 88 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 96 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 100 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 102 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 106 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 108 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 112 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 120 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 126 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 130 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 136 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 138 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 142 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 148 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 150 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 156 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 162 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 166 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 168 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 172 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 178 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 180 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 186 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 190 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 192 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 196 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 198 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break L23;
    i2 = i4 + 208 | 0;
    i3 = (i1 >>> 0) / (i2 >>> 0) | 0;
    if (i3 >>> 0 < i2 >>> 0) break L1;
    if ((i1 | 0) == (Math_imul(i3, i2) | 0)) break; else {
     i4 = i4 + 210 | 0;
     i8 = 17;
    }
   } while (0);
   i7 = i5 + 1 | 0;
   i4 = (i7 | 0) == 48;
   i1 = (i4 & 1) + i6 | 0;
   i7 = i4 ? 0 : i7;
   i5 = i7;
   i6 = i1;
   i1 = (HEAP32[8764 + (i7 << 2) >> 2] | 0) + (i1 * 210 | 0) | 0;
  }
 } while (0);
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i12) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i11 = i13 + 72 | 0;
 i10 = i13 + 56 | 0;
 i7 = i13 + 48 | 0;
 i8 = i13 + 32 | 0;
 i3 = i13 + 24 | 0;
 i9 = i13 + 8 | 0;
 i4 = i13;
 L1 : do if ((i6 | 0) == (i2 | 0)) i1 = i6; else switch (HEAP8[i6 >> 0] | 0) {
 case 84:
  {
   i5 = i12 + 4 | 0;
   i4 = ((HEAP32[i5 >> 2] | 0) - (HEAP32[i12 >> 2] | 0) | 0) / 24 | 0;
   i1 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i12) | 0;
   i2 = HEAP32[i5 >> 2] | 0;
   i3 = (i2 - (HEAP32[i12 >> 2] | 0) | 0) / 24 | 0;
   if (!((i1 | 0) != (i6 | 0) & (i3 | 0) == (i4 + 1 | 0))) {
    i1 = i2;
    while (1) {
     if ((i3 | 0) == (i4 | 0)) {
      i1 = i6;
      break L1;
     }
     i2 = i1 + -24 | 0;
     while (1) {
      if ((i1 | 0) == (i2 | 0)) break;
      i12 = i1 + -24 | 0;
      HEAP32[i5 >> 2] = i12;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i12);
      i1 = HEAP32[i5 >> 2] | 0;
     }
     i1 = i2;
     i3 = i3 + -1 | 0;
    }
   }
   i6 = i12 + 16 | 0;
   HEAP32[i7 >> 2] = HEAP32[i12 + 12 >> 2];
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i10, i2 + -24 | 0, i7);
   i2 = i12 + 20 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i9 = HEAP32[i12 + 24 >> 2] | 0;
   i4 = i9;
   if (i3 >>> 0 < i9 >>> 0) {
    HEAP32[i3 + 12 >> 2] = HEAP32[i10 + 12 >> 2];
    HEAP32[i3 >> 2] = HEAP32[i10 >> 2];
    i12 = i10 + 4 | 0;
    HEAP32[i3 + 4 >> 2] = HEAP32[i12 >> 2];
    i11 = i10 + 8 | 0;
    HEAP32[i3 + 8 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i11 >> 2] = 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i10 >> 2] = 0;
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
   } else {
    i2 = HEAP32[i6 >> 2] | 0;
    i9 = i3 - i2 | 0;
    i5 = i9 >> 4;
    i3 = i5 + 1 | 0;
    if ((i9 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
    i2 = i4 - i2 | 0;
    if (i2 >> 4 >>> 0 < 1073741823) {
     i2 = i2 >> 3;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i11, i2, i5, i12 + 28 | 0);
    i12 = i11 + 8 | 0;
    i9 = HEAP32[i12 >> 2] | 0;
    HEAP32[i9 + 12 >> 2] = HEAP32[i10 + 12 >> 2];
    HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
    i8 = i10 + 4 | 0;
    HEAP32[i9 + 4 >> 2] = HEAP32[i8 >> 2];
    i7 = i10 + 8 | 0;
    HEAP32[i9 + 8 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i7 >> 2] = 0;
    HEAP32[i8 >> 2] = 0;
    HEAP32[i10 >> 2] = 0;
    HEAP32[i12 >> 2] = i9 + 16;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i11);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i11);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i10);
   break L1;
  }
 case 68:
  {
   i1 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i12) | 0;
   if ((i1 | 0) == (i6 | 0)) {
    i1 = i6;
    break L1;
   }
   i2 = HEAP32[i12 + 4 >> 2] | 0;
   if ((HEAP32[i12 >> 2] | 0) == (i2 | 0)) {
    i1 = i6;
    break L1;
   }
   i6 = i12 + 16 | 0;
   HEAP32[i3 >> 2] = HEAP32[i12 + 12 >> 2];
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i8, i2 + -24 | 0, i3);
   i2 = i12 + 20 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i10 = HEAP32[i12 + 24 >> 2] | 0;
   i5 = i10;
   if (i3 >>> 0 < i10 >>> 0) {
    HEAP32[i3 + 12 >> 2] = HEAP32[i8 + 12 >> 2];
    HEAP32[i3 >> 2] = HEAP32[i8 >> 2];
    i12 = i8 + 4 | 0;
    HEAP32[i3 + 4 >> 2] = HEAP32[i12 >> 2];
    i11 = i8 + 8 | 0;
    HEAP32[i3 + 8 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i11 >> 2] = 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i8 >> 2] = 0;
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
   } else {
    i2 = HEAP32[i6 >> 2] | 0;
    i10 = i3 - i2 | 0;
    i4 = i10 >> 4;
    i3 = i4 + 1 | 0;
    if ((i10 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
    i2 = i5 - i2 | 0;
    if (i2 >> 4 >>> 0 < 1073741823) {
     i2 = i2 >> 3;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i11, i2, i4, i12 + 28 | 0);
    i12 = i11 + 8 | 0;
    i10 = HEAP32[i12 >> 2] | 0;
    HEAP32[i10 + 12 >> 2] = HEAP32[i8 + 12 >> 2];
    HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
    i9 = i8 + 4 | 0;
    HEAP32[i10 + 4 >> 2] = HEAP32[i9 >> 2];
    i7 = i8 + 8 | 0;
    HEAP32[i10 + 8 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i7 >> 2] = 0;
    HEAP32[i9 >> 2] = 0;
    HEAP32[i8 >> 2] = 0;
    HEAP32[i12 >> 2] = i10 + 16;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i11);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i11);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i8);
   break L1;
  }
 case 83:
  {
   i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_(i6, i2, i12) | 0;
   if ((i1 | 0) != (i6 | 0)) break L1;
   if ((i2 - i6 | 0) <= 2) {
    i1 = i6;
    break L1;
   }
   if ((HEAP8[i6 + 1 >> 0] | 0) != 116) {
    i1 = i6;
    break L1;
   }
   i10 = i6 + 2 | 0;
   i1 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_(i10, i2, i12) | 0;
   if ((i1 | 0) == (i10 | 0)) {
    i1 = i6;
    break L1;
   }
   i3 = i12 + 4 | 0;
   i2 = HEAP32[i3 >> 2] | 0;
   if ((HEAP32[i12 >> 2] | 0) == (i2 | 0)) {
    i1 = i6;
    break L1;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 39499) | 0;
   i6 = i12 + 16 | 0;
   i2 = (HEAP32[i3 >> 2] | 0) + -24 | 0;
   HEAP32[i4 >> 2] = HEAP32[i12 + 12 >> 2];
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i9, i2, i4);
   i2 = i12 + 20 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i10 = HEAP32[i12 + 24 >> 2] | 0;
   i4 = i10;
   if (i3 >>> 0 < i10 >>> 0) {
    HEAP32[i3 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
    HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
    i12 = i9 + 4 | 0;
    HEAP32[i3 + 4 >> 2] = HEAP32[i12 >> 2];
    i11 = i9 + 8 | 0;
    HEAP32[i3 + 8 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i11 >> 2] = 0;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i9 >> 2] = 0;
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 16;
   } else {
    i2 = HEAP32[i6 >> 2] | 0;
    i10 = i3 - i2 | 0;
    i5 = i10 >> 4;
    i3 = i5 + 1 | 0;
    if ((i10 | 0) < -16) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
    i2 = i4 - i2 | 0;
    if (i2 >> 4 >>> 0 < 1073741823) {
     i2 = i2 >> 3;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i11, i2, i5, i12 + 28 | 0);
    i12 = i11 + 8 | 0;
    i10 = HEAP32[i12 >> 2] | 0;
    HEAP32[i10 + 12 >> 2] = HEAP32[i9 + 12 >> 2];
    HEAP32[i10 >> 2] = HEAP32[i9 >> 2];
    i8 = i9 + 4 | 0;
    HEAP32[i10 + 4 >> 2] = HEAP32[i8 >> 2];
    i7 = i9 + 8 | 0;
    HEAP32[i10 + 8 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i7 >> 2] = 0;
    HEAP32[i8 >> 2] = 0;
    HEAP32[i9 >> 2] = 0;
    HEAP32[i12 >> 2] = i10 + 16;
    __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i11);
    __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i11);
   }
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i9);
   break L1;
  }
 default:
  {
   i1 = i6;
   break L1;
  }
 } while (0);
 STACKTOP = i13;
 return i1 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder13parseFunctionERNS_7ElementE(i33, i31) {
 i33 = i33 | 0;
 i31 = i31 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i32 = 0, i34 = 0, i35 = 0, i36 = 0;
 i36 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i34 = i36 + 24 | 0;
 i1 = i36 + 20 | 0;
 i30 = i36 + 16 | 0;
 i32 = i36 + 12 | 0;
 i24 = i36 + 8 | 0;
 i29 = i36;
 i25 = i36 + 4 | 0;
 i26 = i33 + 4 | 0;
 i27 = __ZN10MixedArena5allocIN4wasm8FunctionEEEPT_v(HEAP32[i26 >> 2] | 0) | 0;
 i35 = i33 + 68 | 0;
 HEAP32[i35 >> 2] = i27;
 i23 = __ZN4wasm7Element4listEv(i31) | 0;
 if (!(HEAP8[HEAP32[(HEAP32[i23 >> 2] | 0) + 4 >> 2] >> 0] | 0)) {
  i2 = __ZN4wasm7Element4listEv(i31) | 0;
  i2 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] | 0) | 0;
  HEAP32[i27 >> 2] = i2;
  i2 = 2;
 } else {
  i2 = __ZN4wasm4Name7fromIntEj(HEAP32[i33 + 44 >> 2] | 0) | 0;
  HEAP32[i27 >> 2] = i2;
  i2 = 1;
 }
 if (HEAP8[i33 + 64 >> 0] | 0) {
  i23 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17334) | 0;
  HEAP32[i1 >> 2] = HEAP32[i27 >> 2];
  HEAP32[i34 >> 2] = HEAP32[i1 >> 2];
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i23, i34) | 0, 10) | 0;
 }
 i9 = i33 + 44 | 0;
 HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 1;
 i9 = i27 + 36 | 0;
 HEAP32[i9 >> 2] = 0;
 i10 = i33 + 84 | 0;
 HEAP32[i10 >> 2] = 0;
 HEAP32[i33 + 88 >> 2] = 0;
 HEAP32[i34 >> 2] = 0;
 i11 = i34 + 4 | 0;
 HEAP32[i11 >> 2] = 0;
 HEAP32[i34 + 8 >> 2] = 0;
 i12 = i27 + 4 | 0;
 i13 = i27 + 32 | 0;
 i14 = i33 + 8 | 0;
 i15 = i34 + 8 | 0;
 i16 = i33 + 72 | 0;
 i17 = i27 + 8 | 0;
 i18 = i27 + 12 | 0;
 i19 = (i17 | 0) == (i34 | 0);
 i20 = i27 + 16 | 0;
 i21 = i27 + 24 | 0;
 i22 = i27 + 28 | 0;
 i23 = i27 + 20 | 0;
 i1 = 0;
 i8 = i2;
 while (1) {
  if (i8 >>> 0 >= (__ZN4wasm7Element4sizeEv(i31) | 0) >>> 0) break;
  i7 = __ZN4wasm7ElementixEj(i31, i8) | 0;
  i5 = __ZN4wasm7Element4listEv(i7) | 0;
  i5 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i5 >> 2] >> 2] | 0) | 0;
  L11 : do if ((i5 | 0) == (HEAP32[10212] | 0) | (i5 | 0) == (HEAP32[10219] | 0)) {
   i2 = 1;
   while (1) {
    if (i2 >>> 0 >= (__ZN4wasm7Element4sizeEv(i7) | 0) >>> 0) break L11;
    HEAP32[i30 >> 2] = 0;
    HEAP32[i32 >> 2] = 0;
    i6 = (__ZN4wasm7ElementixEj(i7, i2) | 0) + 20 | 0;
    if ((HEAP8[i6 >> 0] | 0) == 0 ? (i28 = __ZN4wasm22SExpressionWasmBuilder16stringToWasmTypeEPKcbb(i33, __ZN4wasm7Element3strEv(__ZN4wasm7ElementixEj(i7, i2) | 0) | 0, 1, 0) | 0, HEAP32[i32 >> 2] = i28, (i28 | 0) != 0) : 0) {
     i3 = __ZN4wasm4Name7fromIntEj(HEAP32[i10 >> 2] | 0) | 0;
     HEAP32[i30 >> 2] = i3;
     i6 = i28;
    } else {
     i3 = __ZN4wasm7Element3strEv(__ZN4wasm7ElementixEj(i7, i2) | 0) | 0;
     HEAP32[i30 >> 2] = i3;
     i2 = i2 + 1 | 0;
     i6 = __ZN4wasm22SExpressionWasmBuilder16stringToWasmTypeEPKcbb(i33, __ZN4wasm7Element3strEv(__ZN4wasm7ElementixEj(i7, i2) | 0) | 0, 0, 0) | 0;
     HEAP32[i32 >> 2] = i6;
    }
    i2 = i2 + 1 | 0;
    do if ((i5 | 0) == (HEAP32[10212] | 0)) {
     i4 = HEAP32[i18 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i20 >> 2] | 0) >>> 0) {
      HEAP32[i4 >> 2] = i3;
      HEAP32[i4 + 4 >> 2] = i6;
      HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + 8;
      break;
     } else {
      __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN6cashew7IStringERNS1_8WasmTypeEEEEvDpOT_(i17, i30, i32);
      break;
     }
    } else {
     i4 = HEAP32[i21 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i22 >> 2] | 0) >>> 0) {
      HEAP32[i4 >> 2] = i3;
      HEAP32[i4 + 4 >> 2] = i6;
      HEAP32[i21 >> 2] = (HEAP32[i21 >> 2] | 0) + 8;
      break;
     } else {
      __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN6cashew7IStringERNS1_8WasmTypeEEEEvDpOT_(i23, i30, i32);
      break;
     }
    } while (0);
    HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 1;
    HEAP32[i24 >> 2] = i3;
    i4 = __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixEOS2_(i16, i24) | 0;
    HEAP32[i4 >> 2] = i6;
   }
  } else {
   if ((i5 | 0) == (HEAP32[10213] | 0)) {
    i7 = __ZN4wasm7Element4listEv(i7) | 0;
    i7 = __ZN4wasm22SExpressionWasmBuilder16stringToWasmTypeEPKcbb(i33, __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i7 >> 2] | 0) + 4 >> 2] | 0) | 0, 0, 0) | 0;
    HEAP32[i12 >> 2] = i7;
    break;
   }
   if ((i5 | 0) == (HEAP32[10220] | 0)) {
    i2 = __ZN4wasm7Element4listEv(i7) | 0;
    i2 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] | 0) | 0;
    HEAP32[i30 >> 2] = i2;
    HEAP32[i13 >> 2] = i2;
    i2 = HEAP32[i33 >> 2] | 0;
    if ((__ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i2 + 48 | 0, i30) | 0) == (i2 + 52 | 0)) {
     __ZNKSt3__18functionIFvvEEclEv(i14);
     i2 = HEAP32[i33 >> 2] | 0;
    }
    i3 = __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i2 + 48 | 0, i30) | 0;
    i3 = HEAP32[i3 >> 2] | 0;
    HEAP32[i12 >> 2] = HEAP32[i3 + 4 >> 2];
    i2 = i3 + 8 | 0;
    i3 = i3 + 12 | 0;
    i7 = 0;
    while (1) {
     if (i7 >>> 0 >= (HEAP32[i3 >> 2] | 0) - (HEAP32[i2 >> 2] | 0) >> 2 >>> 0) break;
     i6 = __ZN4wasm4Name7fromIntEj(i7) | 0;
     HEAP32[i32 >> 2] = i6;
     i4 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i7 << 2) >> 2] | 0;
     HEAP32[i29 >> 2] = i4;
     i5 = HEAP32[i11 >> 2] | 0;
     if (i5 >>> 0 < (HEAP32[i15 >> 2] | 0) >>> 0) {
      HEAP32[i5 >> 2] = i6;
      HEAP32[i5 + 4 >> 2] = i4;
      HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 8;
     } else __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN6cashew7IStringERNS1_8WasmTypeEEEEvDpOT_(i34, i32, i29);
     HEAP32[i25 >> 2] = i6;
     i6 = __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixEOS2_(i16, i25) | 0;
     HEAP32[i6 >> 2] = i4;
     i7 = i7 + 1 | 0;
    }
    break;
   }
   i5 = HEAP32[i11 >> 2] | 0;
   i6 = HEAP32[i34 >> 2] | 0;
   i2 = i6;
   i3 = i5;
   if ((i5 | 0) != (i6 | 0) ? !(i19 | (HEAP32[i18 >> 2] | 0) != (HEAP32[i17 >> 2] | 0)) : 0) __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(i17, i2, i3);
   i2 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i33, i7) | 0;
   HEAP32[i30 >> 2] = i2;
   i4 = i2;
   do if (HEAP32[i9 >> 2] | 0) {
    if (!i1) {
     i1 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i26 >> 2] | 0) | 0;
     i2 = i1 + 16 | 0;
     i3 = HEAP32[i2 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i1 + 20 >> 2] | 0)) __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i1 + 12 | 0, i9); else {
      HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
      HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
     }
     HEAP32[i9 >> 2] = i1;
    }
    i2 = i1 + 16 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i1 + 20 >> 2] | 0)) {
     __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i1 + 12 | 0, i30);
     break;
    } else {
     HEAP32[i3 >> 2] = i4;
     HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
     break;
    }
   } else HEAP32[i9 >> 2] = i2; while (0);
  } while (0);
  i8 = i8 + 1 | 0;
 }
 if (!(HEAP32[i9 >> 2] | 0)) {
  i32 = __ZN10MixedArena5allocIN4wasm3NopEEEPT_v(HEAP32[i26 >> 2] | 0) | 0;
  HEAP32[i9 >> 2] = i32;
 }
 __ZN4wasm6Module11addFunctionEPNS_8FunctionE(HEAP32[i33 >> 2] | 0, i27);
 __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameENS2_8WasmTypeEEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE5clearEv(i33 + 72 | 0);
 i3 = HEAP32[i33 + 92 >> 2] | 0;
 i1 = i33 + 96 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i33 = i2 + -4 | 0;
  HEAP32[i1 >> 2] = i33;
  i2 = i33;
 }
 HEAP32[i35 >> 2] = 0;
 __ZNSt3__113__vector_baseIN4wasm8NameTypeENS_9allocatorIS2_EEED2Ev(i34);
 STACKTOP = i36;
 return;
}

function _strstr(i1, i17) {
 i1 = i1 | 0;
 i17 = i17 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 1056 | 0;
 i16 = i19 + 1024 | 0;
 i18 = i19;
 i6 = HEAP8[i17 >> 0] | 0;
 do if (i6 << 24 >> 24) {
  i15 = _strchr(i1, i6 << 24 >> 24) | 0;
  if (i15) {
   i5 = HEAP8[i17 + 1 >> 0] | 0;
   if (i5 << 24 >> 24) {
    i2 = i15 + 1 | 0;
    i8 = HEAP8[i2 >> 0] | 0;
    if (i8 << 24 >> 24) {
     i4 = HEAP8[i17 + 2 >> 0] | 0;
     if (!(i4 << 24 >> 24)) {
      i5 = i5 & 255 | (i6 & 255) << 8;
      i1 = i8;
      i3 = HEAPU8[i15 >> 0] << 8 | i8 & 255;
      while (1) {
       i3 = i3 & 65535;
       if ((i3 | 0) == (i5 | 0)) break;
       i2 = i2 + 1 | 0;
       i4 = HEAP8[i2 >> 0] | 0;
       if (!(i4 << 24 >> 24)) {
        i1 = 0;
        break;
       } else {
        i1 = i4;
        i3 = i4 & 255 | i3 << 8;
       }
      }
      i1 = i1 << 24 >> 24 ? i2 + -1 | 0 : 0;
      break;
     }
     i2 = i15 + 2 | 0;
     i1 = HEAP8[i2 >> 0] | 0;
     if (i1 << 24 >> 24) {
      i3 = HEAP8[i17 + 3 >> 0] | 0;
      if (!(i3 << 24 >> 24)) {
       i4 = (i5 & 255) << 16 | (i6 & 255) << 24 | (i4 & 255) << 8;
       i3 = (i1 & 255) << 8 | (i8 & 255) << 16 | HEAPU8[i15 >> 0] << 24;
       if ((i3 | 0) != (i4 | 0)) do {
        i2 = i2 + 1 | 0;
        i1 = HEAP8[i2 >> 0] | 0;
        i3 = (i1 & 255 | i3) << 8;
       } while (!(i1 << 24 >> 24 == 0 | (i3 | 0) == (i4 | 0)));
       i1 = i1 << 24 >> 24 ? i2 + -2 | 0 : 0;
       break;
      }
      i2 = i15 + 3 | 0;
      i7 = HEAP8[i2 >> 0] | 0;
      if (i7 << 24 >> 24) {
       if (!(HEAP8[i17 + 4 >> 0] | 0)) {
        i4 = (i5 & 255) << 16 | (i6 & 255) << 24 | (i4 & 255) << 8 | i3 & 255;
        i1 = (i1 & 255) << 8 | (i8 & 255) << 16 | i7 & 255 | HEAPU8[i15 >> 0] << 24;
        if ((i1 | 0) == (i4 | 0)) i1 = i7; else {
         i3 = i1;
         do {
          i2 = i2 + 1 | 0;
          i1 = HEAP8[i2 >> 0] | 0;
          i3 = i1 & 255 | i3 << 8;
         } while (!(i1 << 24 >> 24 == 0 | (i3 | 0) == (i4 | 0)));
        }
        i1 = i1 << 24 >> 24 ? i2 + -3 | 0 : 0;
        break;
       };
       HEAP32[i16 >> 2] = 0;
       HEAP32[i16 + 4 >> 2] = 0;
       HEAP32[i16 + 8 >> 2] = 0;
       HEAP32[i16 + 12 >> 2] = 0;
       HEAP32[i16 + 16 >> 2] = 0;
       HEAP32[i16 + 20 >> 2] = 0;
       HEAP32[i16 + 24 >> 2] = 0;
       HEAP32[i16 + 28 >> 2] = 0;
       i1 = i6;
       i3 = 0;
       while (1) {
        if (!(HEAP8[i15 + i3 >> 0] | 0)) {
         i1 = 0;
         break;
        }
        i2 = i16 + (((i1 & 255) >>> 5 & 255) << 2) | 0;
        HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1 << (i1 & 31);
        i2 = i3 + 1 | 0;
        HEAP32[i18 + ((i1 & 255) << 2) >> 2] = i2;
        i1 = HEAP8[i17 + i2 >> 0] | 0;
        if (!(i1 << 24 >> 24)) {
         i9 = 23;
         break;
        } else i3 = i2;
       }
       L32 : do if ((i9 | 0) == 23) {
        L34 : do if (i2 >>> 0 > 1) {
         i4 = 1;
         i9 = -1;
         i1 = 0;
         L35 : while (1) {
          i8 = 1;
          while (1) {
           L39 : while (1) {
            i5 = 1;
            while (1) {
             i6 = HEAP8[i17 + (i5 + i9) >> 0] | 0;
             i7 = HEAP8[i17 + i4 >> 0] | 0;
             if (i6 << 24 >> 24 != i7 << 24 >> 24) {
              i8 = i4;
              i5 = i6;
              i4 = i7;
              break L39;
             }
             if ((i5 | 0) == (i8 | 0)) break;
             i5 = i5 + 1 | 0;
             i4 = i5 + i1 | 0;
             if (i4 >>> 0 >= i2 >>> 0) {
              i1 = i9;
              i11 = i8;
              break L35;
             }
            }
            i1 = i1 + i8 | 0;
            i4 = i1 + 1 | 0;
            if (i4 >>> 0 >= i2 >>> 0) {
             i1 = i9;
             i11 = i8;
             break L35;
            }
           }
           i6 = i8 - i9 | 0;
           if ((i5 & 255) <= (i4 & 255)) break;
           i1 = i8 + 1 | 0;
           if (i1 >>> 0 < i2 >>> 0) {
            i4 = i1;
            i1 = i8;
            i8 = i6;
           } else {
            i1 = i9;
            i11 = i6;
            break L35;
           }
          }
          i4 = i1 + 2 | 0;
          if (i4 >>> 0 >= i2 >>> 0) {
           i11 = 1;
           break;
          } else {
           i9 = i1;
           i1 = i1 + 1 | 0;
          }
         }
         i5 = 1;
         i6 = -1;
         i4 = 0;
         while (1) {
          i7 = i4;
          i4 = 1;
          while (1) {
           i10 = i7;
           L54 : while (1) {
            i7 = 1;
            while (1) {
             i9 = HEAP8[i17 + (i7 + i6) >> 0] | 0;
             i8 = HEAP8[i17 + i5 >> 0] | 0;
             if (i9 << 24 >> 24 != i8 << 24 >> 24) {
              i7 = i5;
              i5 = i10;
              break L54;
             }
             if ((i7 | 0) == (i4 | 0)) break;
             i7 = i7 + 1 | 0;
             i5 = i7 + i10 | 0;
             if (i5 >>> 0 >= i2 >>> 0) {
              i5 = i11;
              break L34;
             }
            }
            i10 = i10 + i4 | 0;
            i5 = i10 + 1 | 0;
            if (i5 >>> 0 >= i2 >>> 0) {
             i5 = i11;
             break L34;
            }
           }
           i4 = i7 - i6 | 0;
           if ((i9 & 255) >= (i8 & 255)) {
            i4 = i5;
            break;
           }
           i5 = i7 + 1 | 0;
           if (i5 >>> 0 >= i2 >>> 0) {
            i5 = i11;
            break L34;
           }
          }
          i5 = i4 + 2 | 0;
          if (i5 >>> 0 >= i2 >>> 0) {
           i6 = i4;
           i5 = i11;
           i4 = 1;
           break;
          } else {
           i6 = i4;
           i4 = i4 + 1 | 0;
          }
         }
        } else {
         i1 = -1;
         i6 = -1;
         i5 = 1;
         i4 = 1;
        } while (0);
        i13 = (i6 + 1 | 0) >>> 0 > (i1 + 1 | 0) >>> 0;
        i4 = i13 ? i4 : i5;
        i13 = i13 ? i6 : i1;
        i12 = i13 + 1 | 0;
        if (!(_memcmp(i17, i17 + i4 | 0, i12) | 0)) i14 = i2 - i4 | 0; else {
         i4 = i2 - i13 + -1 | 0;
         i14 = 0;
         i4 = (i13 >>> 0 > i4 >>> 0 ? i13 : i4) + 1 | 0;
        }
        i9 = i2 | 63;
        i10 = (i14 | 0) != 0;
        i11 = i2 - i4 | 0;
        i1 = i15;
        i8 = 0;
        i7 = i15;
        L69 : while (1) {
         i5 = i1;
         do if ((i7 - i5 | 0) >>> 0 < i2 >>> 0) {
          i6 = _memchr(i7, 0, i9) | 0;
          if (i6) if ((i6 - i5 | 0) >>> 0 < i2 >>> 0) {
           i1 = 0;
           break L32;
          } else break; else {
           i6 = i7 + i9 | 0;
           break;
          }
         } else i6 = i7; while (0);
         i5 = HEAP8[i1 + i3 >> 0] | 0;
         if (!(1 << (i5 & 31) & HEAP32[i16 + (((i5 & 255) >>> 5 & 255) << 2) >> 2])) {
          i1 = i1 + i2 | 0;
          i8 = 0;
          i7 = i6;
          continue;
         }
         i15 = HEAP32[i18 + ((i5 & 255) << 2) >> 2] | 0;
         i5 = i2 - i15 | 0;
         if ((i2 | 0) != (i15 | 0)) {
          i1 = i1 + (i10 & (i8 | 0) != 0 & i5 >>> 0 < i4 >>> 0 ? i11 : i5) | 0;
          i8 = 0;
          i7 = i6;
          continue;
         }
         i5 = i12 >>> 0 > i8 >>> 0 ? i12 : i8;
         i7 = HEAP8[i17 + i5 >> 0] | 0;
         L83 : do if (!(i7 << 24 >> 24)) i5 = i12; else {
          while (1) {
           if (i7 << 24 >> 24 != (HEAP8[i1 + i5 >> 0] | 0)) break;
           i5 = i5 + 1 | 0;
           i7 = HEAP8[i17 + i5 >> 0] | 0;
           if (!(i7 << 24 >> 24)) {
            i5 = i12;
            break L83;
           }
          }
          i1 = i1 + (i5 - i13) | 0;
          i8 = 0;
          i7 = i6;
          continue L69;
         } while (0);
         do {
          if (i5 >>> 0 <= i8 >>> 0) break L32;
          i5 = i5 + -1 | 0;
         } while ((HEAP8[i17 + i5 >> 0] | 0) == (HEAP8[i1 + i5 >> 0] | 0));
         i1 = i1 + i4 | 0;
         i8 = i14;
         i7 = i6;
        }
       } while (0);
      } else i1 = 0;
     } else i1 = 0;
    } else i1 = 0;
   } else i1 = i15;
  } else i1 = 0;
 } while (0);
 STACKTOP = i19;
 return i1 | 0;
}

function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i1, i12, i2, i13, i19, i21, i20, i22, i14, i23) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 i2 = i2 | 0;
 i13 = i13 | 0;
 i19 = i19 | 0;
 i21 = i21 | 0;
 i20 = i20 | 0;
 i22 = i22 | 0;
 i14 = i14 | 0;
 i23 = i23 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i24 = 0;
 i24 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i4 = i24 + 108 | 0;
 i8 = i24 + 96 | 0;
 i5 = i24 + 92 | 0;
 i9 = i24 + 80 | 0;
 i16 = i24 + 68 | 0;
 i18 = i24 + 56 | 0;
 i6 = i24 + 52 | 0;
 i10 = i24 + 40 | 0;
 i7 = i24 + 36 | 0;
 i11 = i24 + 24 | 0;
 i15 = i24 + 12 | 0;
 i17 = i24;
 if (i1) {
  i3 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 44808) | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i12) {
   FUNCTION_TABLE_vii[HEAP32[i1 + 44 >> 2] & 127](i4, i3);
   i17 = HEAP32[i4 >> 2] | 0;
   HEAP8[i13 >> 0] = i17;
   HEAP8[i13 + 1 >> 0] = i17 >> 8;
   HEAP8[i13 + 2 >> 0] = i17 >> 16;
   HEAP8[i13 + 3 >> 0] = i17 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 32 >> 2] & 127](i8, i3);
   if (!(HEAP8[i14 >> 0] & 1)) {
    HEAP8[i14 + 1 >> 0] = 0;
    HEAP8[i14 >> 0] = 0;
   } else {
    HEAP8[HEAP32[i14 + 8 >> 2] >> 0] = 0;
    HEAP32[i14 + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i14, 0);
   HEAP32[i14 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i8 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
   i2 = i3;
  } else {
   FUNCTION_TABLE_vii[HEAP32[i1 + 40 >> 2] & 127](i5, i3);
   i17 = HEAP32[i5 >> 2] | 0;
   HEAP8[i13 >> 0] = i17;
   HEAP8[i13 + 1 >> 0] = i17 >> 8;
   HEAP8[i13 + 2 >> 0] = i17 >> 16;
   HEAP8[i13 + 3 >> 0] = i17 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i9, i3);
   if (!(HEAP8[i14 >> 0] & 1)) {
    HEAP8[i14 + 1 >> 0] = 0;
    HEAP8[i14 >> 0] = 0;
   } else {
    HEAP8[HEAP32[i14 + 8 >> 2] >> 0] = 0;
    HEAP32[i14 + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i14, 0);
   HEAP32[i14 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i9 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
   i2 = i3;
  }
  i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 127](i3) | 0;
  HEAP8[i19 >> 0] = i17;
  i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0;
  HEAP8[i21 >> 0] = i19;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i16, i3);
  if (!(HEAP8[i20 >> 0] & 1)) {
   HEAP8[i20 + 1 >> 0] = 0;
   HEAP8[i20 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i20 + 8 >> 2] >> 0] = 0;
   HEAP32[i20 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i20, 0);
  HEAP32[i20 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i20 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
  HEAP32[i20 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i16 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i16);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i18, i3);
  if (!(HEAP8[i22 >> 0] & 1)) {
   HEAP8[i22 + 1 >> 0] = 0;
   HEAP8[i22 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i22 + 8 >> 2] >> 0] = 0;
   HEAP32[i22 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i22, 0);
  HEAP32[i22 >> 2] = HEAP32[i18 >> 2];
  HEAP32[i22 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
  HEAP32[i22 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i18 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0;
 } else {
  i3 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 44800) | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i12) {
   FUNCTION_TABLE_vii[HEAP32[i1 + 44 >> 2] & 127](i6, i3);
   i18 = HEAP32[i6 >> 2] | 0;
   HEAP8[i13 >> 0] = i18;
   HEAP8[i13 + 1 >> 0] = i18 >> 8;
   HEAP8[i13 + 2 >> 0] = i18 >> 16;
   HEAP8[i13 + 3 >> 0] = i18 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 32 >> 2] & 127](i10, i3);
   if (!(HEAP8[i14 >> 0] & 1)) {
    HEAP8[i14 + 1 >> 0] = 0;
    HEAP8[i14 >> 0] = 0;
   } else {
    HEAP8[HEAP32[i14 + 8 >> 2] >> 0] = 0;
    HEAP32[i14 + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i14, 0);
   HEAP32[i14 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
   i2 = i3;
  } else {
   FUNCTION_TABLE_vii[HEAP32[i1 + 40 >> 2] & 127](i7, i3);
   i18 = HEAP32[i7 >> 2] | 0;
   HEAP8[i13 >> 0] = i18;
   HEAP8[i13 + 1 >> 0] = i18 >> 8;
   HEAP8[i13 + 2 >> 0] = i18 >> 16;
   HEAP8[i13 + 3 >> 0] = i18 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i11, i3);
   if (!(HEAP8[i14 >> 0] & 1)) {
    HEAP8[i14 + 1 >> 0] = 0;
    HEAP8[i14 >> 0] = 0;
   } else {
    HEAP8[HEAP32[i14 + 8 >> 2] >> 0] = 0;
    HEAP32[i14 + 4 >> 2] = 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i14, 0);
   HEAP32[i14 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
   i2 = i3;
  }
  i18 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 127](i3) | 0;
  HEAP8[i19 >> 0] = i18;
  i19 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 127](i3) | 0;
  HEAP8[i21 >> 0] = i19;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i15, i3);
  if (!(HEAP8[i20 >> 0] & 1)) {
   HEAP8[i20 + 1 >> 0] = 0;
   HEAP8[i20 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i20 + 8 >> 2] >> 0] = 0;
   HEAP32[i20 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i20, 0);
  HEAP32[i20 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i20 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
  HEAP32[i20 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i15 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i15);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i17, i3);
  if (!(HEAP8[i22 >> 0] & 1)) {
   HEAP8[i22 + 1 >> 0] = 0;
   HEAP8[i22 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i22 + 8 >> 2] >> 0] = 0;
   HEAP32[i22 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i22, 0);
  HEAP32[i22 >> 2] = HEAP32[i17 >> 2];
  HEAP32[i22 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
  HEAP32[i22 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i17 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0;
 }
 HEAP32[i23 >> 2] = i1;
 STACKTOP = i24;
 return;
}

function ___intscan(i13, i3, i6, i1, i2) {
 i13 = i13 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0;
 L1 : do if (i3 >>> 0 > 36) {
  i2 = ___errno_location() | 0;
  HEAP32[i2 >> 2] = 22;
  i2 = 0;
  i1 = 0;
 } else {
  i15 = i13 + 4 | 0;
  i14 = i13 + 100 | 0;
  do {
   i4 = HEAP32[i15 >> 2] | 0;
   if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i4 + 1;
    i4 = HEAPU8[i4 >> 0] | 0;
   } else i4 = ___shgetc(i13) | 0;
  } while ((_isspace(i4) | 0) != 0);
  L11 : do switch (i4 | 0) {
  case 43:
  case 45:
   {
    i5 = ((i4 | 0) == 45) << 31 >> 31;
    i4 = HEAP32[i15 >> 2] | 0;
    if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
     HEAP32[i15 >> 2] = i4 + 1;
     i4 = HEAPU8[i4 >> 0] | 0;
     i12 = i5;
     break L11;
    } else {
     i4 = ___shgetc(i13) | 0;
     i12 = i5;
     break L11;
    }
   }
  default:
   i12 = 0;
  } while (0);
  i5 = (i3 | 0) == 0;
  do if ((i3 | 16 | 0) == 16 & (i4 | 0) == 48) {
   i4 = HEAP32[i15 >> 2] | 0;
   if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i4 + 1;
    i4 = HEAPU8[i4 >> 0] | 0;
   } else i4 = ___shgetc(i13) | 0;
   if ((i4 | 32 | 0) != 120) if (i5) {
    i3 = 8;
    i10 = 46;
    break;
   } else {
    i10 = 32;
    break;
   }
   i3 = HEAP32[i15 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i3 + 1;
    i4 = HEAPU8[i3 >> 0] | 0;
   } else i4 = ___shgetc(i13) | 0;
   if ((HEAPU8[31653 + i4 >> 0] | 0) > 15) {
    i1 = (HEAP32[i14 >> 2] | 0) == 0;
    if (!i1) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    if (!i6) {
     ___shlim(i13, 0);
     i2 = 0;
     i1 = 0;
     break L1;
    }
    if (i1) {
     i2 = 0;
     i1 = 0;
     break L1;
    }
    HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    i2 = 0;
    i1 = 0;
    break L1;
   } else {
    i3 = 16;
    i10 = 46;
   }
  } else {
   i3 = i5 ? 10 : i3;
   if ((HEAPU8[31653 + i4 >> 0] | 0) >>> 0 < i3 >>> 0) i10 = 32; else {
    if (HEAP32[i14 >> 2] | 0) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    ___shlim(i13, 0);
    i2 = ___errno_location() | 0;
    HEAP32[i2 >> 2] = 22;
    i2 = 0;
    i1 = 0;
    break L1;
   }
  } while (0);
  if ((i10 | 0) == 32) if ((i3 | 0) == 10) {
   i3 = i4 + -48 | 0;
   if (i3 >>> 0 < 10) {
    i4 = 0;
    while (1) {
     i5 = (i4 * 10 | 0) + i3 | 0;
     i3 = HEAP32[i15 >> 2] | 0;
     if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i3 + 1;
      i4 = HEAPU8[i3 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i3 = i4 + -48 | 0;
     if (!(i3 >>> 0 < 10 & i5 >>> 0 < 429496729)) {
      i3 = i5;
      break;
     } else i4 = i5;
    }
    i5 = 0;
   } else {
    i3 = 0;
    i5 = 0;
   }
   i6 = i4 + -48 | 0;
   if (i6 >>> 0 < 10) {
    while (1) {
     i7 = ___muldi3(i3 | 0, i5 | 0, 10, 0) | 0;
     i8 = tempRet0;
     i9 = ((i6 | 0) < 0) << 31 >> 31;
     i11 = ~i9;
     if (i8 >>> 0 > i11 >>> 0 | (i8 | 0) == (i11 | 0) & i7 >>> 0 > ~i6 >>> 0) {
      i7 = i3;
      break;
     }
     i3 = _i64Add(i7 | 0, i8 | 0, i6 | 0, i9 | 0) | 0;
     i5 = tempRet0;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i6 = i4 + -48 | 0;
     if (!(i6 >>> 0 < 10 & (i5 >>> 0 < 429496729 | (i5 | 0) == 429496729 & i3 >>> 0 < 2576980378))) {
      i7 = i3;
      break;
     }
    }
    if (i6 >>> 0 > 9) {
     i4 = i7;
     i3 = i12;
    } else {
     i3 = 10;
     i10 = 72;
    }
   } else {
    i4 = i3;
    i3 = i12;
   }
  } else i10 = 46;
  L63 : do if ((i10 | 0) == 46) {
   if (!(i3 + -1 & i3)) {
    i10 = HEAP8[31909 + ((i3 * 23 | 0) >>> 5 & 7) >> 0] | 0;
    i5 = HEAP8[31653 + i4 >> 0] | 0;
    i6 = i5 & 255;
    if (i6 >>> 0 < i3 >>> 0) {
     i4 = 0;
     while (1) {
      i7 = i6 | i4 << i10;
      i4 = HEAP32[i15 >> 2] | 0;
      if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
       HEAP32[i15 >> 2] = i4 + 1;
       i4 = HEAPU8[i4 >> 0] | 0;
      } else i4 = ___shgetc(i13) | 0;
      i5 = HEAP8[31653 + i4 >> 0] | 0;
      i6 = i5 & 255;
      if (!(i7 >>> 0 < 134217728 & i6 >>> 0 < i3 >>> 0)) break; else i4 = i7;
     }
     i6 = 0;
    } else {
     i6 = 0;
     i7 = 0;
    }
    i8 = _bitshift64Lshr(-1, -1, i10 | 0) | 0;
    i9 = tempRet0;
    if ((i5 & 255) >>> 0 >= i3 >>> 0 | (i6 >>> 0 > i9 >>> 0 | (i6 | 0) == (i9 | 0) & i7 >>> 0 > i8 >>> 0)) {
     i5 = i6;
     i10 = 72;
     break;
    } else i4 = i6;
    while (1) {
     i7 = _bitshift64Shl(i7 | 0, i4 | 0, i10 | 0) | 0;
     i6 = tempRet0;
     i7 = i5 & 255 | i7;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i5 = HEAP8[31653 + i4 >> 0] | 0;
     if ((i5 & 255) >>> 0 >= i3 >>> 0 | (i6 >>> 0 > i9 >>> 0 | (i6 | 0) == (i9 | 0) & i7 >>> 0 > i8 >>> 0)) {
      i5 = i6;
      i10 = 72;
      break L63;
     } else i4 = i6;
    }
   }
   i5 = HEAP8[31653 + i4 >> 0] | 0;
   i6 = i5 & 255;
   if (i6 >>> 0 < i3 >>> 0) {
    i4 = 0;
    while (1) {
     i7 = i6 + (Math_imul(i4, i3) | 0) | 0;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i5 = HEAP8[31653 + i4 >> 0] | 0;
     i6 = i5 & 255;
     if (!(i7 >>> 0 < 119304647 & i6 >>> 0 < i3 >>> 0)) break; else i4 = i7;
    }
    i6 = 0;
   } else {
    i7 = 0;
    i6 = 0;
   }
   if ((i5 & 255) >>> 0 < i3 >>> 0) {
    i10 = ___udivdi3(-1, -1, i3 | 0, 0) | 0;
    i11 = tempRet0;
    i9 = i6;
    while (1) {
     if (i9 >>> 0 > i11 >>> 0 | (i9 | 0) == (i11 | 0) & i7 >>> 0 > i10 >>> 0) {
      i5 = i9;
      i10 = 72;
      break L63;
     }
     i6 = ___muldi3(i7 | 0, i9 | 0, i3 | 0, 0) | 0;
     i8 = tempRet0;
     i5 = i5 & 255;
     if (i8 >>> 0 > 4294967295 | (i8 | 0) == -1 & i6 >>> 0 > ~i5 >>> 0) {
      i5 = i9;
      i10 = 72;
      break L63;
     }
     i7 = _i64Add(i5 | 0, 0, i6 | 0, i8 | 0) | 0;
     i6 = tempRet0;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i5 = HEAP8[31653 + i4 >> 0] | 0;
     if ((i5 & 255) >>> 0 >= i3 >>> 0) {
      i5 = i6;
      i10 = 72;
      break;
     } else i9 = i6;
    }
   } else {
    i5 = i6;
    i10 = 72;
   }
  } while (0);
  if ((i10 | 0) == 72) if ((HEAPU8[31653 + i4 >> 0] | 0) >>> 0 < i3 >>> 0) {
   do {
    i4 = HEAP32[i15 >> 2] | 0;
    if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
     HEAP32[i15 >> 2] = i4 + 1;
     i4 = HEAPU8[i4 >> 0] | 0;
    } else i4 = ___shgetc(i13) | 0;
   } while ((HEAPU8[31653 + i4 >> 0] | 0) >>> 0 < i3 >>> 0);
   i5 = ___errno_location() | 0;
   HEAP32[i5 >> 2] = 34;
   i5 = i2;
   i4 = i1;
   i3 = (i1 & 1 | 0) == 0 & 0 == 0 ? i12 : 0;
  } else {
   i4 = i7;
   i3 = i12;
  }
  if (HEAP32[i14 >> 2] | 0) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
  if (!(i5 >>> 0 < i2 >>> 0 | (i5 | 0) == (i2 | 0) & i4 >>> 0 < i1 >>> 0)) {
   if (!((i1 & 1 | 0) != 0 | 0 != 0 | (i3 | 0) != 0)) {
    i15 = ___errno_location() | 0;
    HEAP32[i15 >> 2] = 34;
    i1 = _i64Add(i1 | 0, i2 | 0, -1, -1) | 0;
    i2 = tempRet0;
    break;
   }
   if (i5 >>> 0 > i2 >>> 0 | (i5 | 0) == (i2 | 0) & i4 >>> 0 > i1 >>> 0) {
    i15 = ___errno_location() | 0;
    HEAP32[i15 >> 2] = 34;
    break;
   }
  }
  i1 = ((i3 | 0) < 0) << 31 >> 31;
  i1 = _i64Subtract(i4 ^ i3 | 0, i5 ^ i1 | 0, i3 | 0, i1 | 0) | 0;
  i2 = tempRet0;
 } while (0);
 tempRet0 = i2;
 return i1 | 0;
}

function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i1, i11, i2, i12, i18, i20, i19, i21, i13, i22) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 i18 = i18 | 0;
 i20 = i20 | 0;
 i19 = i19 | 0;
 i21 = i21 | 0;
 i13 = i13 | 0;
 i22 = i22 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i23 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i3 = i23 + 108 | 0;
 i7 = i23 + 96 | 0;
 i4 = i23 + 92 | 0;
 i8 = i23 + 80 | 0;
 i15 = i23 + 68 | 0;
 i17 = i23 + 56 | 0;
 i5 = i23 + 52 | 0;
 i9 = i23 + 40 | 0;
 i6 = i23 + 36 | 0;
 i10 = i23 + 24 | 0;
 i14 = i23 + 12 | 0;
 i16 = i23;
 if (i1) {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 44824) | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i11) {
   FUNCTION_TABLE_vii[HEAP32[i1 + 44 >> 2] & 127](i3, i2);
   i16 = HEAP32[i3 >> 2] | 0;
   HEAP8[i12 >> 0] = i16;
   HEAP8[i12 + 1 >> 0] = i16 >> 8;
   HEAP8[i12 + 2 >> 0] = i16 >> 16;
   HEAP8[i12 + 3 >> 0] = i16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i7, i2);
   if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
   HEAP32[i13 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i13 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
   HEAP32[i13 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i7 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i7);
  } else {
   FUNCTION_TABLE_vii[HEAP32[i1 + 40 >> 2] & 127](i4, i2);
   i16 = HEAP32[i4 >> 2] | 0;
   HEAP8[i12 >> 0] = i16;
   HEAP8[i12 + 1 >> 0] = i16 >> 8;
   HEAP8[i12 + 2 >> 0] = i16 >> 16;
   HEAP8[i12 + 3 >> 0] = i16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i8, i2);
   if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
   HEAP32[i13 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i13 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
   HEAP32[i13 + 8 >> 2] = HEAP32[i8 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i8 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i8);
  }
  i16 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i18 >> 2] = i16;
  i18 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP32[i20 >> 2] = i18;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i15, i2);
  if (!(HEAP8[i19 >> 0] & 1)) {
   HEAP8[i19 + 1 >> 0] = 0;
   HEAP8[i19 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i19 + 8 >> 2] >> 0] = 0;
   HEAP32[i19 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i15 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i15);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i17, i2);
  if (!(HEAP8[i21 >> 0] & 1)) HEAP8[i21 >> 0] = 0; else HEAP32[HEAP32[i21 + 8 >> 2] >> 2] = 0;
  HEAP32[i21 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i21, 0);
  HEAP32[i21 >> 2] = HEAP32[i17 >> 2];
  HEAP32[i21 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
  HEAP32[i21 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i17 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i17);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 44816) | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i11) {
   FUNCTION_TABLE_vii[HEAP32[i1 + 44 >> 2] & 127](i5, i2);
   i17 = HEAP32[i5 >> 2] | 0;
   HEAP8[i12 >> 0] = i17;
   HEAP8[i12 + 1 >> 0] = i17 >> 8;
   HEAP8[i12 + 2 >> 0] = i17 >> 16;
   HEAP8[i12 + 3 >> 0] = i17 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i9, i2);
   if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
   HEAP32[i13 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i13 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
   HEAP32[i13 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i9 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
  } else {
   FUNCTION_TABLE_vii[HEAP32[i1 + 40 >> 2] & 127](i6, i2);
   i17 = HEAP32[i6 >> 2] | 0;
   HEAP8[i12 >> 0] = i17;
   HEAP8[i12 + 1 >> 0] = i17 >> 8;
   HEAP8[i12 + 2 >> 0] = i17 >> 16;
   HEAP8[i12 + 3 >> 0] = i17 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i10, i2);
   if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
   HEAP32[i13 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i13 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i13 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  }
  i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i18 >> 2] = i17;
  i18 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP32[i20 >> 2] = i18;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i14, i2);
  if (!(HEAP8[i19 >> 0] & 1)) {
   HEAP8[i19 + 1 >> 0] = 0;
   HEAP8[i19 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i19 + 8 >> 2] >> 0] = 0;
   HEAP32[i19 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i14 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i16, i2);
  if (!(HEAP8[i21 >> 0] & 1)) HEAP8[i21 >> 0] = 0; else HEAP32[HEAP32[i21 + 8 >> 2] >> 2] = 0;
  HEAP32[i21 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i21, 0);
  HEAP32[i21 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i21 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
  HEAP32[i21 + 8 >> 2] = HEAP32[i16 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i16 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i16);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i22 >> 2] = i1;
 STACKTOP = i23;
 return;
}

function __ZN4wasm16PrintSExpression11visitModuleEPNS_6ModuleE(i17, i14) {
 i17 = i17 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i11 = i18 + 4 | 0;
 i12 = i18;
 i15 = i17 + 4 | 0;
 __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i15 >> 2] | 0, 25616, 1) | 0;
 __ZN4wasm16PrintSExpression9incIndentEv(i17);
 i16 = i17 + 8 | 0;
 __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i15 >> 2] | 0, HEAP32[i16 >> 2] | 0) | 0;
 i1 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i15 >> 2] | 0, 25648, 0) | 0, 39558) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(i1, HEAP32[i14 + 108 >> 2] | 0) | 0;
 i1 = i14 + 112 | 0;
 switch (HEAP32[i1 >> 2] | 0) {
 case -1:
 case 0:
  break;
 default:
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, 39558) | 0, HEAP32[i1 >> 2] | 0) | 0;
 }
 i1 = i14 + 116 | 0;
 i2 = i14 + 120 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i13 = i17 + 20 | 0;
 i4 = i17 + 12 | 0;
 i9 = HEAP32[i1 >> 2] | 0;
 while (1) {
  if ((i9 | 0) == (i3 | 0)) break;
  i10 = HEAP32[i9 >> 2] | 0;
  i5 = HEAP32[i9 + 4 >> 2] | 0;
  i6 = HEAP32[i9 + 8 >> 2] | 0;
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, HEAP32[i13 >> 2] | 0) | 0;
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, HEAP8[i4 >> 0] | 0 ? 49108 : 25655) | 0, 25660) | 0, i10) | 0, 25670) | 0;
  i10 = 0;
  while (1) {
   if ((i10 | 0) == (i6 | 0)) break;
   i7 = HEAP8[i5 + i10 >> 0] | 0;
   L10 : do switch (i7 & 255 | 0) {
   case 10:
    {
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, 25676) | 0;
     break;
    }
   case 13:
    {
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, 25679) | 0;
     break;
    }
   case 9:
    {
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, 25683) | 0;
     break;
    }
   case 12:
    {
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, 25686) | 0;
     break;
    }
   case 8:
    {
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, 25690) | 0;
     break;
    }
   case 92:
    {
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, 25694) | 0;
     break;
    }
   case 34:
    {
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, 25697) | 0;
     break;
    }
   case 39:
    {
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, 25700) | 0;
     break;
    }
   default:
    {
     i8 = HEAP32[i15 >> 2] | 0;
     if ((i7 + -32 & 255) < 95) {
      __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_h(i8, i7) | 0;
      break L10;
     } else {
      i19 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0;
      HEAP32[i19 >> 2] = HEAP32[i19 >> 2] & -75 | 8;
      i8 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i8, 92) | 0, (i7 & 255) >>> 4 & 255) | 0, i7 & 15) | 0;
      i8 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0;
      HEAP32[i8 >> 2] = HEAP32[i8 >> 2] & -75 | 2;
      break L10;
     }
    }
   } while (0);
   i10 = i10 + 1 | 0;
  }
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, 25673) | 0;
  i9 = i9 + 12 | 0;
 }
 if ((HEAP32[i2 >> 2] | 0) == (HEAP32[i1 >> 2] | 0)) i1 = 49108; else i1 = HEAP8[i4 >> 0] | 0 ? 49108 : 25703;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, i1) | 0, 38469) | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, HEAP32[i13 >> 2] | 0) | 0;
 i1 = i14 + 128 | 0;
 if (HEAP32[i1 >> 2] | 0) {
  __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i15 >> 2] | 0, HEAP32[i16 >> 2] | 0) | 0;
  i19 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i15 >> 2] | 0, 25707, 0) | 0, 39558) | 0;
  HEAP32[i12 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i19, i11) | 0, 38469) | 0;
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, HEAP32[i13 >> 2] | 0) | 0;
 }
 i1 = HEAP32[i14 + 4 >> 2] | 0;
 i2 = HEAP32[i14 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i15 >> 2] | 0, HEAP32[i16 >> 2] | 0) | 0;
  __ZN4wasm16PrintSExpression17visitFunctionTypeEPNS_12FunctionTypeEb(i17, HEAP32[i2 >> 2] | 0, 1);
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, HEAP32[i13 >> 2] | 0) | 0;
  i2 = i2 + 4 | 0;
 }
 i1 = HEAP32[i14 + 16 >> 2] | 0;
 i2 = HEAP32[i14 + 12 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i15 >> 2] | 0, HEAP32[i16 >> 2] | 0) | 0;
  __ZN4wasm16PrintSExpression11visitImportEPNS_6ImportE(i17, HEAP32[i2 >> 2] | 0);
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, HEAP32[i13 >> 2] | 0) | 0;
  i2 = i2 + 4 | 0;
 }
 i1 = HEAP32[i14 + 28 >> 2] | 0;
 i2 = HEAP32[i14 + 24 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i15 >> 2] | 0, HEAP32[i16 >> 2] | 0) | 0;
  __ZN4wasm16PrintSExpression11visitExportEPNS_6ExportE(i17, HEAP32[i2 >> 2] | 0);
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, HEAP32[i13 >> 2] | 0) | 0;
  i2 = i2 + 4 | 0;
 }
 i1 = i14 + 96 | 0;
 if ((HEAP32[i14 + 100 >> 2] | 0) != (HEAP32[i1 >> 2] | 0)) {
  __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i15 >> 2] | 0, HEAP32[i16 >> 2] | 0) | 0;
  __ZN4wasm16PrintSExpression10visitTableEPNS_5TableE(i17, i1);
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, HEAP32[i13 >> 2] | 0) | 0;
 }
 i2 = HEAP32[i14 + 40 >> 2] | 0;
 i1 = HEAP32[i14 + 36 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i15 >> 2] | 0, HEAP32[i16 >> 2] | 0) | 0;
  __ZN4wasm16PrintSExpression13visitFunctionEPNS_8FunctionE(i17, HEAP32[i1 >> 2] | 0);
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, HEAP32[i13 >> 2] | 0) | 0;
  i1 = i1 + 4 | 0;
 }
 __ZN4wasm16PrintSExpression9decIndentEv(i17);
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i15 >> 2] | 0, HEAP32[i13 >> 2] | 0) | 0;
 STACKTOP = i18;
 return;
}

function __ZN6cashew4InitC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 368 | 0;
 i1 = i16 + 336 | 0;
 i3 = i16 + 308 | 0;
 i4 = i16 + 280 | 0;
 i5 = i16 + 252 | 0;
 i6 = i16 + 224 | 0;
 i7 = i16 + 196 | 0;
 i8 = i16 + 168 | 0;
 i9 = i16 + 140 | 0;
 i10 = i16 + 112 | 0;
 i11 = i16 + 84 | 0;
 i12 = i16 + 56 | 0;
 i13 = i16 + 28 | 0;
 i14 = i16;
 i15 = i16 + 364 | 0;
 __ZN6cashew10IStringSetC2EPKc(i1, 39508);
 HEAP8[i1 + 20 >> 0] = 0;
 HEAP32[i1 + 24 >> 2] = 0;
 i2 = HEAP32[10348] | 0;
 if (i2 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i2, i1);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i1);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i1);
 __ZN6cashew10IStringSetC2EPKc(i3, 31086);
 HEAP8[i3 + 20 >> 0] = 1;
 HEAP32[i3 + 24 >> 2] = 1;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i3);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i3);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i3);
 __ZN6cashew10IStringSetC2EPKc(i4, 31094);
 HEAP8[i4 + 20 >> 0] = 0;
 HEAP32[i4 + 24 >> 2] = 0;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i4);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i4);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i4);
 __ZN6cashew10IStringSetC2EPKc(i5, 31100);
 HEAP8[i5 + 20 >> 0] = 0;
 HEAP32[i5 + 24 >> 2] = 0;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i5);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i5);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i5);
 __ZN6cashew10IStringSetC2EPKc(i6, 31104);
 HEAP8[i6 + 20 >> 0] = 0;
 HEAP32[i6 + 24 >> 2] = 0;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i6);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i6);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i6);
 __ZN6cashew10IStringSetC2EPKc(i7, 31114);
 HEAP8[i7 + 20 >> 0] = 0;
 HEAP32[i7 + 24 >> 2] = 0;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i7);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i7);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i7);
 __ZN6cashew10IStringSetC2EPKc(i8, 31124);
 HEAP8[i8 + 20 >> 0] = 0;
 HEAP32[i8 + 24 >> 2] = 0;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i8);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i8);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i8);
 __ZN6cashew10IStringSetC2EPKc(i9, 38522);
 HEAP8[i9 + 20 >> 0] = 0;
 HEAP32[i9 + 24 >> 2] = 0;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i9);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i9);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i9);
 __ZN6cashew10IStringSetC2EPKc(i10, 39515);
 HEAP8[i10 + 20 >> 0] = 0;
 HEAP32[i10 + 24 >> 2] = 0;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i10);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i10);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i10);
 __ZN6cashew10IStringSetC2EPKc(i11, 39579);
 HEAP8[i11 + 20 >> 0] = 0;
 HEAP32[i11 + 24 >> 2] = 0;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i11);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i11);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i11);
 __ZN6cashew10IStringSetC2EPKc(i12, 31130);
 HEAP8[i12 + 20 >> 0] = 1;
 HEAP32[i12 + 24 >> 2] = 3;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i12);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i12);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i12);
 __ZN6cashew10IStringSetC2EPKc(i13, 38527);
 HEAP8[i13 + 20 >> 0] = 1;
 HEAP32[i13 + 24 >> 2] = 0;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i13);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i13);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i13);
 __ZN6cashew10IStringSetC2EPKc(i14, 38554);
 HEAP8[i14 + 20 >> 0] = 1;
 HEAP32[i14 + 24 >> 2] = 0;
 i1 = HEAP32[10348] | 0;
 if (i1 >>> 0 < (HEAP32[10349] | 0) >>> 0) {
  __ZN6cashew13OperatorClassC2EOS0_(i1, i14);
  HEAP32[10348] = (HEAP32[10348] | 0) + 28;
 } else __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(41388, i14);
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i14);
 __ZNSt3__16vectorINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEENS8_ISD_EEE6resizeEj(41400, 4);
 i2 = 0;
 while (1) {
  i1 = HEAP32[10347] | 0;
  if (i2 >>> 0 >= (((HEAP32[10348] | 0) - i1 | 0) / 28 | 0) >>> 0) break;
  i1 = i1 + (i2 * 28 | 0) + 8 | 0;
  while (1) {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) break;
   HEAP32[i15 >> 2] = HEAP32[i1 + 8 >> 2];
   i14 = __ZNSt3__113unordered_mapIN6cashew7IStringEiNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorINS_4pairIKS2_iEEEEEixERS9_((HEAP32[10350] | 0) + ((HEAP32[(HEAP32[10347] | 0) + (i2 * 28 | 0) + 24 >> 2] | 0) * 20 | 0) | 0, i15) | 0;
   HEAP32[i14 >> 2] = i2;
  }
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i16;
 return;
}

function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri(i1, i2, i8, i16, i18, i17, i19, i13, i7, i20) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i16 = i16 | 0;
 i18 = i18 | 0;
 i17 = i17 | 0;
 i19 = i19 | 0;
 i13 = i13 | 0;
 i7 = i7 | 0;
 i20 = i20 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i3 = i21 + 100 | 0;
 i5 = i21 + 88 | 0;
 i9 = i21 + 76 | 0;
 i11 = i21 + 64 | 0;
 i14 = i21 + 52 | 0;
 i4 = i21 + 48 | 0;
 i6 = i21 + 36 | 0;
 i10 = i21 + 24 | 0;
 i12 = i21 + 12 | 0;
 i15 = i21;
 if (i1) {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 44808) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 127](i3, i2);
  i15 = HEAP32[i3 >> 2] | 0;
  HEAP8[i8 >> 0] = i15;
  HEAP8[i8 + 1 >> 0] = i15 >> 8;
  HEAP8[i8 + 2 >> 0] = i15 >> 16;
  HEAP8[i8 + 3 >> 0] = i15 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i5, i2);
  if (!(HEAP8[i7 >> 0] & 1)) {
   HEAP8[i7 + 1 >> 0] = 0;
   HEAP8[i7 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i7 + 8 >> 2] >> 0] = 0;
   HEAP32[i7 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i7, 0);
  HEAP32[i7 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i5 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i9, i2);
  if (!(HEAP8[i13 >> 0] & 1)) {
   HEAP8[i13 + 1 >> 0] = 0;
   HEAP8[i13 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i13 + 8 >> 2] >> 0] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i13, 0);
  HEAP32[i13 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i9 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
  i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP8[i16 >> 0] = i15;
  i16 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP8[i18 >> 0] = i16;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i11, i2);
  if (!(HEAP8[i17 >> 0] & 1)) {
   HEAP8[i17 + 1 >> 0] = 0;
   HEAP8[i17 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i17 + 8 >> 2] >> 0] = 0;
   HEAP32[i17 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i17, 0);
  HEAP32[i17 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i17 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i14, i2);
  if (!(HEAP8[i19 >> 0] & 1)) {
   HEAP8[i19 + 1 >> 0] = 0;
   HEAP8[i19 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i19 + 8 >> 2] >> 0] = 0;
   HEAP32[i19 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i14 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 44800) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 127](i4, i2);
  i14 = HEAP32[i4 >> 2] | 0;
  HEAP8[i8 >> 0] = i14;
  HEAP8[i8 + 1 >> 0] = i14 >> 8;
  HEAP8[i8 + 2 >> 0] = i14 >> 16;
  HEAP8[i8 + 3 >> 0] = i14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i6, i2);
  if (!(HEAP8[i7 >> 0] & 1)) {
   HEAP8[i7 + 1 >> 0] = 0;
   HEAP8[i7 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i7 + 8 >> 2] >> 0] = 0;
   HEAP32[i7 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i7, 0);
  HEAP32[i7 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i6 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i10, i2);
  if (!(HEAP8[i13 >> 0] & 1)) {
   HEAP8[i13 + 1 >> 0] = 0;
   HEAP8[i13 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i13 + 8 >> 2] >> 0] = 0;
   HEAP32[i13 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i13, 0);
  HEAP32[i13 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP8[i16 >> 0] = i14;
  i16 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP8[i18 >> 0] = i16;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i12, i2);
  if (!(HEAP8[i17 >> 0] & 1)) {
   HEAP8[i17 + 1 >> 0] = 0;
   HEAP8[i17 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i17 + 8 >> 2] >> 0] = 0;
   HEAP32[i17 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i17, 0);
  HEAP32[i17 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i17 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i15, i2);
  if (!(HEAP8[i19 >> 0] & 1)) {
   HEAP8[i19 + 1 >> 0] = 0;
   HEAP8[i19 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i19 + 8 >> 2] >> 0] = 0;
   HEAP32[i19 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i15 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i15);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i20 >> 2] = i1;
 STACKTOP = i21;
 return;
}

function __ZN6cashew5Value9stringifyERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEb(i1, i8, i7) {
 i1 = i1 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i9;
 L1 : do switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   i1 = i1 + 8 | 0;
   if (!(HEAP32[i1 >> 2] | 0)) {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, 15781) | 0;
    break L1;
   } else {
    i8 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i8, 34) | 0;
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, HEAP32[i1 >> 2] | 0) | 0, 34) | 0;
    break L1;
   }
  }
 case 1:
  {
   HEAP32[i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) + 8 >> 2] = 17;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(i8, +HEAPF64[i1 + 8 >> 3]) | 0;
   break;
  }
 case 2:
  {
   i1 = i1 + 8 | 0;
   i5 = HEAP32[i1 >> 2] | 0;
   if ((HEAP32[i5 + 4 >> 2] | 0) == (HEAP32[i5 >> 2] | 0)) {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, 15790) | 0;
    break L1;
   }
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i8, 91) | 0;
   if (i7) {
    i5 = __ZNKSt3__18ios_base6getlocEv(i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
    HEAP32[i6 >> 2] = i5;
    i5 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43088) | 0;
    i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 31](i5, 10) | 0;
    __ZNSt3__16localeD2Ev(i6);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i5) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
    HEAP32[10257] = (HEAP32[10257] | 0) + 1;
   }
   i2 = 0;
   while (1) {
    i5 = HEAP32[i1 >> 2] | 0;
    if (i2 >>> 0 >= (HEAP32[i5 + 4 >> 2] | 0) - (HEAP32[i5 >> 2] | 0) >> 2 >>> 0) break;
    do if (i2) if (i7) {
     i3 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, 38554) | 0;
     i5 = __ZNKSt3__18ios_base6getlocEv(i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
     HEAP32[i6 >> 2] = i5;
     i5 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43088) | 0;
     i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 31](i5, 10) | 0;
     __ZNSt3__16localeD2Ev(i6);
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i3, i5) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) | 0;
     i3 = 0;
     break;
    } else {
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, 39101) | 0;
     i3 = 0;
     break;
    } else i3 = 0; while (0);
    while (1) {
     if ((i3 | 0) >= (HEAP32[10257] | 0)) break;
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, 25645) | 0;
     i3 = i3 + 1 | 0;
    }
    __ZN6cashew5Value9stringifyERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEb(HEAP32[(HEAP32[HEAP32[i1 >> 2] >> 2] | 0) + (i2 << 2) >> 2] | 0, i8, i7);
    i2 = i2 + 1 | 0;
   }
   if (i7) {
    i1 = __ZNKSt3__18ios_base6getlocEv(i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
    HEAP32[i6 >> 2] = i1;
    i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43088) | 0;
    i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 10) | 0;
    __ZNSt3__16localeD2Ev(i6);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i1) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
    HEAP32[10257] = (HEAP32[10257] | 0) + -1;
    i1 = 0;
   } else i1 = 0;
   while (1) {
    if ((i1 | 0) >= (HEAP32[10257] | 0)) break;
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, 25645) | 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i8, 93) | 0;
   break;
  }
 case 3:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, 15793) | 0;
   break;
  }
 case 4:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, HEAP8[i1 + 8 >> 0] | 0 ? 38477 : 38471) | 0;
   break;
  }
 case 5:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i8, 123) | 0;
   if (i7) {
    i5 = __ZNKSt3__18ios_base6getlocEv(i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
    HEAP32[i6 >> 2] = i5;
    i5 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43088) | 0;
    i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 28 >> 2] & 31](i5, 10) | 0;
    __ZNSt3__16localeD2Ev(i6);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i5) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
    HEAP32[10257] = (HEAP32[10257] | 0) + 1;
    i5 = i8;
   } else i5 = i8;
   i1 = (HEAP32[i1 + 8 >> 2] | 0) + 8 | 0;
   i2 = 1;
   while (1) {
    i1 = HEAP32[i1 >> 2] | 0;
    if (!i1) break;
    i4 = i1;
    i3 = HEAP32[i4 + 8 >> 2] | 0;
    i4 = HEAP32[i4 + 12 >> 2] | 0;
    if (!i2 ? (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, 39101) | 0, i7) : 0) {
     i2 = __ZNKSt3__18ios_base6getlocEv(i5 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
     HEAP32[i6 >> 2] = i2;
     i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43088) | 0;
     i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 31](i2, 10) | 0;
     __ZNSt3__16localeD2Ev(i6);
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i2) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
     i2 = 0;
    } else i2 = 0;
    while (1) {
     if ((i2 | 0) >= (HEAP32[10257] | 0)) break;
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, 25645) | 0;
     i2 = i2 + 1 | 0;
    }
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i8, 34) | 0, i3) | 0, 15798) | 0;
    __ZN6cashew5Value9stringifyERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEb(i4, i8, i7);
    i2 = 0;
   }
   if (i7) {
    i1 = __ZNKSt3__18ios_base6getlocEv(i5 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
    HEAP32[i6 >> 2] = i1;
    i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43088) | 0;
    i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 10) | 0;
    __ZNSt3__16localeD2Ev(i6);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i8, i1) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i8) | 0;
    HEAP32[10257] = (HEAP32[10257] | 0) + -1;
    i1 = 0;
   } else i1 = 0;
   while (1) {
    if ((i1 | 0) >= (HEAP32[10257] | 0)) break;
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i8, 25645) | 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i8, 125) | 0;
   break;
  }
 default:
  {}
 } while (0);
 STACKTOP = i9;
 return;
}

function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri(i1, i2, i8, i16, i18, i17, i19, i13, i7, i20) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i16 = i16 | 0;
 i18 = i18 | 0;
 i17 = i17 | 0;
 i19 = i19 | 0;
 i13 = i13 | 0;
 i7 = i7 | 0;
 i20 = i20 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i3 = i21 + 100 | 0;
 i5 = i21 + 88 | 0;
 i9 = i21 + 76 | 0;
 i11 = i21 + 64 | 0;
 i14 = i21 + 52 | 0;
 i4 = i21 + 48 | 0;
 i6 = i21 + 36 | 0;
 i10 = i21 + 24 | 0;
 i12 = i21 + 12 | 0;
 i15 = i21;
 if (i1) {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 44824) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 127](i3, i2);
  i15 = HEAP32[i3 >> 2] | 0;
  HEAP8[i8 >> 0] = i15;
  HEAP8[i8 + 1 >> 0] = i15 >> 8;
  HEAP8[i8 + 2 >> 0] = i15 >> 16;
  HEAP8[i8 + 3 >> 0] = i15 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i5, i2);
  if (!(HEAP8[i7 >> 0] & 1)) HEAP8[i7 >> 0] = 0; else HEAP32[HEAP32[i7 + 8 >> 2] >> 2] = 0;
  HEAP32[i7 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i7, 0);
  HEAP32[i7 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i5 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i5);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i9, i2);
  if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
  HEAP32[i13 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
  HEAP32[i13 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i9 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
  i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i16 >> 2] = i15;
  i16 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP32[i18 >> 2] = i16;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i11, i2);
  if (!(HEAP8[i17 >> 0] & 1)) {
   HEAP8[i17 + 1 >> 0] = 0;
   HEAP8[i17 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i17 + 8 >> 2] >> 0] = 0;
   HEAP32[i17 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i17, 0);
  HEAP32[i17 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i17 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i14, i2);
  if (!(HEAP8[i19 >> 0] & 1)) HEAP8[i19 >> 0] = 0; else HEAP32[HEAP32[i19 + 8 >> 2] >> 2] = 0;
  HEAP32[i19 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i14 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i14);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 44816) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 127](i4, i2);
  i14 = HEAP32[i4 >> 2] | 0;
  HEAP8[i8 >> 0] = i14;
  HEAP8[i8 + 1 >> 0] = i14 >> 8;
  HEAP8[i8 + 2 >> 0] = i14 >> 16;
  HEAP8[i8 + 3 >> 0] = i14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i6, i2);
  if (!(HEAP8[i7 >> 0] & 1)) HEAP8[i7 >> 0] = 0; else HEAP32[HEAP32[i7 + 8 >> 2] >> 2] = 0;
  HEAP32[i7 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i7, 0);
  HEAP32[i7 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i6 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i10, i2);
  if (!(HEAP8[i13 >> 0] & 1)) HEAP8[i13 >> 0] = 0; else HEAP32[HEAP32[i13 + 8 >> 2] >> 2] = 0;
  HEAP32[i13 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i13, 0);
  HEAP32[i13 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i16 >> 2] = i14;
  i16 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  HEAP32[i18 >> 2] = i16;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i12, i2);
  if (!(HEAP8[i17 >> 0] & 1)) {
   HEAP8[i17 + 1 >> 0] = 0;
   HEAP8[i17 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i17 + 8 >> 2] >> 0] = 0;
   HEAP32[i17 + 4 >> 2] = 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i17, 0);
  HEAP32[i17 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i17 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i12 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i15, i2);
  if (!(HEAP8[i19 >> 0] & 1)) HEAP8[i19 >> 0] = 0; else HEAP32[HEAP32[i19 + 8 >> 2] >> 2] = 0;
  HEAP32[i19 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i19, 0);
  HEAP32[i19 >> 2] = HEAP32[i15 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i15 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i15);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i20 >> 2] = i1;
 STACKTOP = i21;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i17, i18, i19, i15, i20, i16, i1, i14) {
 i17 = i17 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i15 = i15 | 0;
 i20 = i20 | 0;
 i16 = i16 | 0;
 i1 = i1 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i21 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i10 = i22 + 16 | 0;
 i9 = i22 + 12 | 0;
 i13 = i22 + 8 | 0;
 i11 = i22 + 4 | 0;
 i12 = i22;
 i2 = __ZNKSt3__18ios_base6getlocEv(i15) | 0;
 HEAP32[i13 >> 2] = i2;
 i13 = __ZNKSt3__16locale9use_facetERNS0_2idE(i13, 43120) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 HEAP32[i20 >> 2] = 0;
 i2 = i1;
 i1 = 0;
 L1 : while (1) {
  i8 = (i2 | 0) != (i14 | 0);
  i3 = i1;
  while (1) {
   i1 = HEAP32[i18 >> 2] | 0;
   if (!(i8 & (i3 | 0) == 0)) break L1;
   i4 = i1;
   if (i1) {
    i3 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i3 = HEAP32[i3 >> 2] | 0;
    if ((i3 | 0) == -1) {
     HEAP32[i18 >> 2] = 0;
     i1 = 0;
     i4 = 0;
     i7 = 1;
    } else i7 = 0;
   } else {
    i1 = 0;
    i7 = 1;
   }
   i6 = HEAP32[i19 >> 2] | 0;
   i3 = i6;
   do if (i6) {
    i5 = HEAP32[i6 + 12 >> 2] | 0;
    if ((i5 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i5 = HEAP32[i5 >> 2] | 0;
    if ((i5 | 0) != -1) if (i7) {
     i5 = i6;
     break;
    } else {
     i21 = 18;
     break L1;
    } else {
     HEAP32[i19 >> 2] = 0;
     i3 = 0;
     i21 = 16;
     break;
    }
   } else i21 = 16; while (0);
   if ((i21 | 0) == 16) {
    i21 = 0;
    if (i7) {
     i21 = 18;
     break L1;
    } else i5 = 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 52 >> 2] & 31](i13, HEAP32[i2 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
    i7 = i3;
    i21 = 20;
    break;
   }
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] & 31](i13, 8192, HEAP32[i2 >> 2] | 0) | 0) {
    i4 = i5;
    i21 = 28;
    break;
   }
   i5 = i1 + 12 | 0;
   i4 = HEAP32[i5 >> 2] | 0;
   i3 = i1 + 16 | 0;
   if ((i4 | 0) == (HEAP32[i3 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i4 = HEAP32[i4 >> 2] | 0;
   i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 31](i13, i4) | 0;
   if ((i7 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] & 31](i13, HEAP32[i2 >> 2] | 0) | 0)) {
    i21 = 57;
    break;
   }
   HEAP32[i20 >> 2] = 4;
   i3 = 4;
  }
  L33 : do if ((i21 | 0) == 20) {
   i21 = 0;
   i3 = i2 + 4 | 0;
   if ((i3 | 0) == (i14 | 0)) {
    i21 = 21;
    break L1;
   }
   i6 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 52 >> 2] & 31](i13, HEAP32[i3 >> 2] | 0, 0) | 0;
   switch (i6 << 24 >> 24) {
   case 48:
   case 69:
    {
     i5 = i2 + 8 | 0;
     if ((i5 | 0) == (i14 | 0)) {
      i21 = 26;
      break L1;
     }
     i2 = i3;
     i3 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 52 >> 2] & 31](i13, HEAP32[i5 >> 2] | 0, 0) | 0;
     i1 = i6;
     break;
    }
   default:
    {
     i3 = i6;
     i1 = 0;
    }
   }
   i8 = HEAP32[(HEAP32[i17 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[i11 >> 2] = i4;
   HEAP32[i12 >> 2] = i7;
   HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
   i1 = FUNCTION_TABLE_iiiiiiiii[i8 & 15](i17, i9, i10, i15, i20, i16, i3, i1) | 0;
   HEAP32[i18 >> 2] = i1;
   i1 = i2 + 8 | 0;
  } else if ((i21 | 0) == 28) {
   i21 = 0;
   do {
    i2 = i2 + 4 | 0;
    if ((i2 | 0) == (i14 | 0)) {
     i2 = i14;
     break;
    }
   } while (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] & 31](i13, 8192, HEAP32[i2 >> 2] | 0) | 0);
   i3 = i4;
   i6 = i4;
   while (1) {
    if (i1) {
     i4 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i4 = HEAP32[i4 >> 2] | 0;
     if ((i4 | 0) == -1) {
      HEAP32[i18 >> 2] = 0;
      i1 = 0;
      i5 = 1;
     } else i5 = 0;
    } else {
     i1 = 0;
     i5 = 1;
    }
    do if (i6) {
     i4 = HEAP32[i6 + 12 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i4 = HEAP32[i4 >> 2] | 0;
     if ((i4 | 0) != -1) if (i5 ^ (i3 | 0) == 0) {
      i7 = i3;
      i6 = i3;
      break;
     } else {
      i1 = i2;
      break L33;
     } else {
      HEAP32[i19 >> 2] = 0;
      i3 = 0;
      i21 = 44;
      break;
     }
    } else i21 = 44; while (0);
    if ((i21 | 0) == 44) {
     i21 = 0;
     if (i5) {
      i1 = i2;
      break L33;
     } else {
      i7 = i3;
      i6 = 0;
     }
    }
    i5 = i1 + 12 | 0;
    i3 = HEAP32[i5 >> 2] | 0;
    i4 = i1 + 16 | 0;
    if ((i3 | 0) == (HEAP32[i4 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i3 = HEAP32[i3 >> 2] | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] & 31](i13, 8192, i3) | 0)) {
     i1 = i2;
     break L33;
    }
    i3 = HEAP32[i5 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i4 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
     i3 = i7;
     continue;
    } else {
     HEAP32[i5 >> 2] = i3 + 4;
     i3 = i7;
     continue;
    }
   }
  } else if ((i21 | 0) == 57) {
   i21 = 0;
   i4 = HEAP32[i5 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i3 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i5 >> 2] = i4 + 4;
   i1 = i2 + 4 | 0;
  } while (0);
  i2 = i1;
  i1 = HEAP32[i20 >> 2] | 0;
 }
 if ((i21 | 0) == 18) HEAP32[i20 >> 2] = 4; else if ((i21 | 0) == 21) HEAP32[i20 >> 2] = 4; else if ((i21 | 0) == 26) HEAP32[i20 >> 2] = 4;
 if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAP32[i2 >> 2] | 0;
  if ((i2 | 0) == -1) {
   HEAP32[i18 >> 2] = 0;
   i1 = 0;
   i4 = 1;
  } else i4 = 0;
 } else {
  i1 = 0;
  i4 = 1;
 }
 i2 = HEAP32[i19 >> 2] | 0;
 do if (i2) {
  i3 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
  if ((i2 | 0) != -1) if (i4) break; else {
   i21 = 77;
   break;
  } else {
   HEAP32[i19 >> 2] = 0;
   i21 = 75;
   break;
  }
 } else i21 = 75; while (0);
 if ((i21 | 0) == 75 ? i4 : 0) i21 = 77;
 if ((i21 | 0) == 77) HEAP32[i20 >> 2] = HEAP32[i20 >> 2] | 2;
 STACKTOP = i22;
 return i1 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i18, i19, i20, i16, i21, i17, i1, i15) {
 i18 = i18 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 i16 = i16 | 0;
 i21 = i21 | 0;
 i17 = i17 | 0;
 i1 = i1 | 0;
 i15 = i15 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i22 = 0, i23 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i9 = i23 + 16 | 0;
 i8 = i23 + 12 | 0;
 i12 = i23 + 8 | 0;
 i10 = i23 + 4 | 0;
 i11 = i23;
 i13 = __ZNKSt3__18ios_base6getlocEv(i16) | 0;
 HEAP32[i12 >> 2] = i13;
 i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i12, 43088) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i13) | 0;
 HEAP32[i21 >> 2] = 0;
 i13 = i12 + 8 | 0;
 i2 = i1;
 i1 = 0;
 L1 : while (1) {
  i7 = (i2 | 0) != (i15 | 0);
  i3 = i1;
  while (1) {
   i1 = HEAP32[i19 >> 2] | 0;
   if (!(i7 & (i3 | 0) == 0)) break L1;
   i3 = i1;
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
     HEAP32[i19 >> 2] = 0;
     i3 = 0;
     i1 = 0;
    }
   } else i1 = 0;
   i6 = (i1 | 0) == 0;
   i5 = HEAP32[i20 >> 2] | 0;
   i4 = i5;
   do if (i5) {
    if ((HEAP32[i5 + 12 >> 2] | 0) == (HEAP32[i5 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0) == -1 : 0) {
     HEAP32[i20 >> 2] = 0;
     i4 = 0;
     i22 = 13;
     break;
    }
    if (!i6) {
     i22 = 14;
     break L1;
    }
   } else i22 = 13; while (0);
   if ((i22 | 0) == 13) {
    i22 = 0;
    if (i6) {
     i22 = 14;
     break L1;
    } else i5 = 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] & 31](i12, HEAP8[i2 >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
    i7 = i4;
    i22 = 16;
    break;
   }
   i3 = HEAP8[i2 >> 0] | 0;
   if (i3 << 24 >> 24 > -1 ? (i14 = HEAP32[i13 >> 2] | 0, HEAP16[i14 + (i3 << 24 >> 24 << 1) >> 1] & 8192) : 0) {
    i4 = i14;
    i22 = 25;
    break;
   }
   i5 = i1 + 12 | 0;
   i4 = HEAP32[i5 >> 2] | 0;
   i3 = i1 + 16 | 0;
   if ((i4 | 0) == (HEAP32[i3 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i4 = HEAPU8[i4 >> 0] | 0;
   i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] & 31](i12, i4 & 255) | 0;
   if (i6 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] & 31](i12, HEAP8[i2 >> 0] | 0) | 0) << 24 >> 24) {
    i22 = 53;
    break;
   }
   HEAP32[i21 >> 2] = 4;
   i3 = 4;
  }
  L29 : do if ((i22 | 0) == 16) {
   i22 = 0;
   i4 = i2 + 1 | 0;
   if ((i4 | 0) == (i15 | 0)) {
    i22 = 17;
    break L1;
   }
   i6 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] & 31](i12, HEAP8[i4 >> 0] | 0, 0) | 0;
   switch (i6 << 24 >> 24) {
   case 48:
   case 69:
    {
     i5 = i2 + 2 | 0;
     if ((i5 | 0) == (i15 | 0)) {
      i22 = 22;
      break L1;
     }
     i2 = i4;
     i4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] & 31](i12, HEAP8[i5 >> 0] | 0, 0) | 0;
     i1 = i6;
     break;
    }
   default:
    {
     i4 = i6;
     i1 = 0;
    }
   }
   i6 = HEAP32[(HEAP32[i18 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[i10 >> 2] = i3;
   HEAP32[i11 >> 2] = i7;
   HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
   i1 = FUNCTION_TABLE_iiiiiiiii[i6 & 15](i18, i8, i9, i16, i21, i17, i4, i1) | 0;
   HEAP32[i19 >> 2] = i1;
   i1 = i2 + 2 | 0;
  } else if ((i22 | 0) == 25) {
   i22 = 0;
   do {
    i2 = i2 + 1 | 0;
    if ((i2 | 0) == (i15 | 0)) {
     i2 = i15;
     break;
    }
    i3 = HEAP8[i2 >> 0] | 0;
    if (i3 << 24 >> 24 <= -1) break;
   } while ((HEAP16[i4 + (i3 << 24 >> 24 << 1) >> 1] & 8192) != 0);
   i3 = i5;
   while (1) {
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
      HEAP32[i19 >> 2] = 0;
      i1 = 0;
     }
    } else i1 = 0;
    i4 = (i1 | 0) == 0;
    do if (i5) {
     if ((HEAP32[i5 + 12 >> 2] | 0) != (HEAP32[i5 + 16 >> 2] | 0)) if (i4) {
      i7 = i3;
      break;
     } else {
      i1 = i2;
      break L29;
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0) != -1) if (i4 ^ (i3 | 0) == 0) {
      i7 = i3;
      i5 = i3;
      break;
     } else {
      i1 = i2;
      break L29;
     } else {
      HEAP32[i20 >> 2] = 0;
      i3 = 0;
      i22 = 39;
      break;
     }
    } else i22 = 39; while (0);
    if ((i22 | 0) == 39) {
     i22 = 0;
     if (i4) {
      i1 = i2;
      break L29;
     } else {
      i7 = i3;
      i5 = 0;
     }
    }
    i4 = i1 + 12 | 0;
    i3 = HEAP32[i4 >> 2] | 0;
    i6 = i1 + 16 | 0;
    if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i3 = HEAPU8[i3 >> 0] | 0;
    if ((i3 & 255) << 24 >> 24 <= -1) {
     i1 = i2;
     break L29;
    }
    if (!(HEAP16[(HEAP32[i13 >> 2] | 0) + (i3 << 24 >> 24 << 1) >> 1] & 8192)) {
     i1 = i2;
     break L29;
    }
    i3 = HEAP32[i4 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
     i3 = i7;
     continue;
    } else {
     HEAP32[i4 >> 2] = i3 + 1;
     i3 = i7;
     continue;
    }
   }
  } else if ((i22 | 0) == 53) {
   i22 = 0;
   i4 = HEAP32[i5 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i3 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i5 >> 2] = i4 + 1;
   i1 = i2 + 1 | 0;
  } while (0);
  i2 = i1;
  i1 = HEAP32[i21 >> 2] | 0;
 }
 if ((i22 | 0) == 14) HEAP32[i21 >> 2] = 4; else if ((i22 | 0) == 17) HEAP32[i21 >> 2] = 4; else if ((i22 | 0) == 22) HEAP32[i21 >> 2] = 4;
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i19 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i2 = (i1 | 0) == 0;
 i3 = HEAP32[i20 >> 2] | 0;
 do if (i3) {
  if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) == -1 : 0) {
   HEAP32[i20 >> 2] = 0;
   i22 = 68;
   break;
  }
  if (!i2) i22 = 69;
 } else i22 = 68; while (0);
 if ((i22 | 0) == 68 ? i2 : 0) i22 = 69;
 if ((i22 | 0) == 69) HEAP32[i21 >> 2] = HEAP32[i21 >> 2] | 2;
 STACKTOP = i23;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i14) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i13 = i15 + 104 | 0;
 i3 = i15 + 72 | 0;
 i10 = i15 + 80 | 0;
 i11 = i15 + 60 | 0;
 i12 = i15 + 48 | 0;
 i6 = i15 + 24 | 0;
 i7 = i15 + 12 | 0;
 i8 = i15;
 L1 : do if ((i4 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == 102 : 0) {
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 112:
   {
    i2 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i1 + 2 | 0, i4, i3) | 0;
    i5 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i2, i4) | 0;
    if ((i5 | 0) != (i4 | 0) ? (HEAP8[i5 >> 0] | 0) == 95 : 0) {
     i3 = i5 - i2 | 0;
     if (i3 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i12);
     if (i3 >>> 0 < 11) {
      HEAP8[i12 >> 0] = i3 << 1;
      i4 = i12 + 1 | 0;
     } else {
      i9 = i3 + 16 & -16;
      i4 = _malloc(i9) | 0;
      HEAP32[i12 + 8 >> 2] = i4;
      HEAP32[i12 >> 2] = i9 | 1;
      HEAP32[i12 + 4 >> 2] = i3;
     }
     i1 = i2;
     i2 = i4;
     while (1) {
      if ((i1 | 0) == (i5 | 0)) break;
      HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
      i1 = i1 + 1 | 0;
      i2 = i2 + 1 | 0;
     }
     HEAP8[i4 + i3 >> 0] = 0;
     i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i12, 0, 38508) | 0;
     HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
     HEAP32[i11 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
     HEAP32[i11 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
     i2 = 0;
     while (1) {
      if ((i2 | 0) == 3) break;
      HEAP32[i1 + (i2 << 2) >> 2] = 0;
      i2 = i2 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i10, i11);
     i1 = i14 + 4 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     i9 = HEAP32[i14 + 8 >> 2] | 0;
     i3 = i9;
     if (i2 >>> 0 < i9 >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i10);
      HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
     } else {
      i1 = HEAP32[i14 >> 2] | 0;
      i9 = i2 - i1 | 0;
      i4 = (i9 | 0) / 24 | 0;
      i2 = i4 + 1 | 0;
      if ((i9 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i14);
      i1 = (i3 - i1 | 0) / 24 | 0;
      if (i1 >>> 0 < 1073741823) {
       i1 = i1 << 1;
       i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
      } else i1 = 2147483647;
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i13, i1, i4, i14 + 12 | 0);
      i9 = i13 + 8 | 0;
      i8 = HEAP32[i9 >> 2] | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i8, i10);
      HEAP32[i9 >> 2] = i8 + 24;
      __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i14, i13);
      __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i13);
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i10);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
     i1 = i5 + 1 | 0;
    }
    break L1;
   }
  case 76:
   break;
  default:
   break L1;
  }
  i2 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i1 + 2 | 0, i4) | 0;
  if ((((i2 | 0) != (i4 | 0) ? (HEAP8[i2 >> 0] | 0) == 112 : 0) ? (i5 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i2 + 1 | 0, i4, i3) | 0, i9 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i5, i4) | 0, (i9 | 0) != (i4 | 0)) : 0) ? (HEAP8[i9 >> 0] | 0) == 95 : 0) {
   i3 = i9 - i5 | 0;
   if (i3 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i8);
   if (i3 >>> 0 < 11) {
    HEAP8[i8 >> 0] = i3 << 1;
    i4 = i8 + 1 | 0;
   } else {
    i12 = i3 + 16 & -16;
    i4 = _malloc(i12) | 0;
    HEAP32[i8 + 8 >> 2] = i4;
    HEAP32[i8 >> 2] = i12 | 1;
    HEAP32[i8 + 4 >> 2] = i3;
   }
   i1 = i5;
   i2 = i4;
   while (1) {
    if ((i1 | 0) == (i9 | 0)) break;
    HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
    i1 = i1 + 1 | 0;
    i2 = i2 + 1 | 0;
   }
   HEAP8[i4 + i3 >> 0] = 0;
   i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i8, 0, 38508) | 0;
   HEAP32[i7 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i7 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
   HEAP32[i7 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i1 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i7);
   i1 = i14 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   i12 = HEAP32[i14 + 8 >> 2] | 0;
   i3 = i12;
   if (i2 >>> 0 < i12 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i6);
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
   } else {
    i1 = HEAP32[i14 >> 2] | 0;
    i12 = i2 - i1 | 0;
    i4 = (i12 | 0) / 24 | 0;
    i2 = i4 + 1 | 0;
    if ((i12 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i14);
    i1 = (i3 - i1 | 0) / 24 | 0;
    if (i1 >>> 0 < 1073741823) {
     i1 = i1 << 1;
     i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
    } else i1 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i13, i1, i4, i14 + 12 | 0);
    i12 = i13 + 8 | 0;
    i11 = HEAP32[i12 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i11, i6);
    HEAP32[i12 >> 2] = i11 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i14, i13);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i13);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   i1 = i9 + 1 | 0;
  }
 } while (0);
 STACKTOP = i15;
 return i1 | 0;
}

function __Z10detectTypeN6cashew3RefEP7AsmDatabNS_7IStringE(i15, i13, i14, i17) {
 i15 = i15 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i17 = i17 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i2 = i19 + 40 | 0;
 i1 = i19 + 36 | 0;
 i3 = i19 + 32 | 0;
 i4 = i19 + 28 | 0;
 i5 = i19 + 24 | 0;
 i7 = i19 + 20 | 0;
 i8 = i19 + 16 | 0;
 i9 = i19 + 12 | 0;
 i10 = i19 + 8 | 0;
 i11 = i19 + 4 | 0;
 i12 = i19;
 i20 = __ZN6cashew3RefixEj(i15, 0) | 0;
 i20 = __ZN6cashew5Value10getCStringEv(HEAP32[i20 >> 2] | 0) | 0;
 L1 : do switch (HEAP8[i20 >> 0] | 0) {
 case 110:
  {
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i15, 0) | 0, 41112) | 0) {
    i16 = __ZN6cashew3RefixEj(i15, 1) | 0;
    i16 = __ZN6cashew5Value9getNumberEv(HEAP32[i16 >> 2] | 0) | 0;
    i16 = (__ZN4wasm9isIntegerEd(+HEAPF64[i16 >> 3]) | 0) & 1 ^ 1;
    break L1;
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i15, 0) | 0, 41056) | 0) {
    if (i13 | 0 ? (i6 = __ZN6cashew3RefixEj(i15, 1) | 0, __ZN6cashew7IStringC2EPKcb(i3, __ZN6cashew5Value10getCStringEv(HEAP32[i6 >> 2] | 0) | 0, 1), i6 = __ZN7AsmData7getTypeERKN6cashew7IStringE(i13, i3) | 0, (i6 | 0) != 8) : 0) {
     i16 = i6;
     break L1;
    }
    if (!i14) {
     if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i15, 1) | 0, 41136) | 0) {
      i16 = 1;
      break L1;
     }
     if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i15, 1) | 0, 41140) | 0) {
      i16 = 1;
      break L1;
     }
     i16 = __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i15, 1) | 0, 41144) | 0;
     i16 = i16 ? 0 : 8;
     break L1;
    }
    i20 = (HEAP32[10366] | 0) == 0;
    i1 = __ZN6cashew3RefixEj(i15, 1) | 0;
    if (i20) {
     i16 = __ZN6cashew5Value10getIStringEv(HEAP32[i1 >> 2] | 0) | 0;
     HEAP32[10366] = HEAP32[i16 >> 2];
     i16 = 2;
     break L1;
    }
    if (__ZN6cashew3RefeqERKNS_7IStringE(i1, 41464) | 0) i16 = 2; else ___assert_fail(31370, 31396, 73, 31442);
   } else i18 = 40;
   break;
  }
 case 117:
  {
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i15, 0) | 0, 41148) | 0) {
    i20 = __ZN6cashew3RefixEj(i15, 1) | 0;
    i20 = __ZN6cashew5Value10getCStringEv(HEAP32[i20 >> 2] | 0) | 0;
    switch (HEAP8[i20 >> 0] | 0) {
    case 43:
     {
      i16 = 1;
      break L1;
     }
    case 45:
     {
      i16 = __ZN6cashew3RefixEj(i15, 2) | 0;
      HEAP32[i4 >> 2] = HEAP32[i16 >> 2];
      HEAP32[i5 >> 2] = HEAP32[i17 >> 2];
      HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
      HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
      i16 = __Z10detectTypeN6cashew3RefEP7AsmDatabNS_7IStringE(i1, i13, i14, i2) | 0;
      break L1;
     }
    case 126:
    case 33:
     {
      i16 = 0;
      break L1;
     }
    default:
     {
      i18 = 40;
      break L1;
     }
    }
   } else i18 = 40;
   break;
  }
 case 99:
  {
   if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i15, 0) | 0, 41108) | 0)) {
    if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i15, 0) | 0, 41068) | 0)) {
     i18 = 40;
     break L1;
    }
    i16 = __ZN6cashew3RefixEj(i15, 2) | 0;
    HEAP32[i7 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i8 >> 2] = HEAP32[i17 >> 2];
    HEAP32[i1 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
    i16 = __Z10detectTypeN6cashew3RefEP7AsmDatabNS_7IStringE(i1, i13, i14, i2) | 0;
    break L1;
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i15, 1) | 0, 0) | 0, 41056) | 0) {
    i1 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i15, 1) | 0, 1) | 0;
    i1 = __ZN6cashew5Value10getIStringEv(HEAP32[i1 >> 2] | 0) | 0;
    i1 = HEAP32[i1 >> 2] | 0;
    if ((i1 | 0) == (HEAP32[10289] | 0)) {
     i16 = 2;
     break L1;
    }
    if ((i1 | 0) == (HEAP32[i17 >> 2] | 0)) {
     i16 = 2;
     break L1;
    }
    if ((i1 | 0) == (HEAP32[10290] | 0) | (i1 | 0) == (HEAP32[10370] | 0)) {
     i16 = 3;
     break L1;
    }
    if ((i1 | 0) == (HEAP32[10291] | 0) | (i1 | 0) == (HEAP32[10371] | 0)) {
     i16 = 4;
     break L1;
    }
    if ((i1 | 0) == (HEAP32[10292] | 0) | (i1 | 0) == (HEAP32[10367] | 0)) {
     i16 = 5;
     break L1;
    }
    if ((i1 | 0) == (HEAP32[10293] | 0) | (i1 | 0) == (HEAP32[10368] | 0)) {
     i16 = 6;
     break L1;
    }
    if ((i1 | 0) == (HEAP32[10294] | 0) | (i1 | 0) == (HEAP32[10369] | 0)) {
     i16 = 7;
     break L1;
    }
   }
   i16 = 8;
   break;
  }
 case 98:
  {
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i15, 0) | 0, 41072) | 0) {
    i20 = __ZN6cashew3RefixEj(i15, 1) | 0;
    i20 = __ZN6cashew5Value10getCStringEv(HEAP32[i20 >> 2] | 0) | 0;
    switch (HEAP8[i20 >> 0] | 0) {
    case 33:
    case 61:
    case 62:
    case 60:
    case 94:
    case 38:
    case 124:
     {
      i16 = 0;
      break L1;
     }
    case 37:
    case 47:
    case 42:
    case 45:
    case 43:
     break;
    default:
     {
      i18 = 40;
      break L1;
     }
    }
    i16 = __ZN6cashew3RefixEj(i15, 2) | 0;
    HEAP32[i9 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i10 >> 2] = HEAP32[i17 >> 2];
    HEAP32[i1 >> 2] = HEAP32[i9 >> 2];
    HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
    i16 = __Z10detectTypeN6cashew3RefEP7AsmDatabNS_7IStringE(i1, i13, i14, i2) | 0;
   } else i18 = 40;
   break;
  }
 case 115:
  {
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i15, 0) | 0, 41100) | 0) {
    i16 = __ZN6cashew3RefixEj(i15, 2) | 0;
    HEAP32[i11 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i12 >> 2] = HEAP32[i17 >> 2];
    HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i2 >> 2] = HEAP32[i12 >> 2];
    i16 = __Z10detectTypeN6cashew3RefEP7AsmDatabNS_7IStringE(i1, i13, i14, i2) | 0;
    break L1;
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i15, 0) | 0, 41104) | 0) if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i15, 1) | 0, 0) | 0, 41056) | 0) {
    i16 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i15, 1) | 0, 1) | 0;
    __Z9parseHeapPKc(i2, __ZN6cashew5Value10getCStringEv(HEAP32[i16 >> 2] | 0) | 0);
    i16 = HEAP32[i2 >> 2] | 0;
    i16 = (i16 & 255) << 24 >> 24 == 0 ? i16 >>> 16 & 255 : 8;
    break L1;
   } else ___assert_fail(31453, 31396, 123, 31442); else i18 = 40;
   break;
  }
 default:
  i18 = 40;
 } while (0);
 if ((i18 | 0) == 40) i16 = 8;
 STACKTOP = i19;
 return i16 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i10, i9) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i11;
 HEAP32[i7 >> 2] = i9;
 L1 : do if (!(__ZN6cashew11isIdentInitEc(HEAP8[i9 >> 0] | 0) | 0)) {
  i6 = HEAP8[i9 >> 0] | 0;
  L10 : do if ((i6 + -48 & 255) < 10) if (i6 << 24 >> 24 == 48) {
   switch (HEAP8[i9 + 1 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     i8 = 20;
     break L10;
    }
   }
   i1 = i9 + 2 | 0;
   HEAP32[i7 >> 2] = i1;
   HEAPF64[i10 >> 3] = 0.0;
   d3 = 0.0;
   while (1) {
    i2 = HEAP8[i1 >> 0] | 0;
    do if ((i2 + -48 & 255) < 10) {
     d3 = d3 * 16.0;
     HEAPF64[i10 >> 3] = d3;
     d3 = d3 + +((HEAP8[i1 >> 0] | 0) + -48 | 0);
     HEAPF64[i10 >> 3] = d3;
    } else {
     if ((i2 + -97 & 255) < 6) {
      d3 = d3 * 16.0;
      HEAPF64[i10 >> 3] = d3;
      d3 = d3 + +((HEAP8[i1 >> 0] | 0) + -87 | 0);
      HEAPF64[i10 >> 3] = d3;
      break;
     }
     if ((i2 + -65 & 255) >= 6) break L10;
     d3 = d3 * 16.0;
     HEAPF64[i10 >> 3] = d3;
     d3 = d3 + +((HEAP8[i1 >> 0] | 0) + -60 | 0);
     HEAPF64[i10 >> 3] = d3;
    } while (0);
    i6 = i1 + 1 | 0;
    HEAP32[i7 >> 2] = i6;
    i1 = i6;
   }
  } else i8 = 20; else {
   if (i6 << 24 >> 24 == 46 ? ((HEAP8[i9 + 1 >> 0] | 0) + -48 & 255) < 10 : 0) {
    i8 = 20;
    break;
   }
   i2 = HEAP32[1131] | 0;
   while (1) {
    i4 = HEAP8[i2 >> 0] | 0;
    if (!(i4 << 24 >> 24)) {
     i8 = 56;
     break;
    }
    if (i4 << 24 >> 24 == i6 << 24 >> 24) break; else i2 = i2 + 1 | 0;
   }
   if ((i8 | 0) == 56) {
    i2 = HEAP32[1132] | 0;
    while (1) {
     i4 = HEAP8[i2 >> 0] | 0;
     if (!(i4 << 24 >> 24)) break;
     if (i4 << 24 >> 24 == i6 << 24 >> 24) {
      i8 = 59;
      break;
     } else i2 = i2 + 1 | 0;
    }
    if ((i8 | 0) == 59) {
     HEAP32[i10 + 12 >> 2] = 6;
     i1 = i9 + 1 | 0;
     i6 = HEAP8[i1 >> 0] | 0;
     HEAP8[i1 >> 0] = 0;
     __ZN6cashew7IString3setEPKcb(i10, i9, 0);
     HEAP8[i1 >> 0] = i6;
     HEAP32[i7 >> 2] = i1;
     i8 = 63;
     break L1;
    }
    switch (i6 << 24 >> 24) {
    case 39:
    case 34:
     {
      i8 = i9 + 1 | 0;
      i1 = _strchr(i8, i6 << 24 >> 24) | 0;
      HEAP8[i1 >> 0] = 0;
      __ZN6cashew7IString3setEPKcb(i10, i8, 1);
      i1 = i1 + 1 | 0;
      HEAP32[i7 >> 2] = i1;
      HEAP32[i10 + 12 >> 2] = 3;
      i8 = 63;
      break L1;
     }
    default:
     {
      __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4dumpEPKcPc(23493, i9);
      _abort();
     }
    }
   }
   do switch (i6 << 24 >> 24 | 0) {
   case 33:
    {
     i5 = (HEAP8[i9 + 1 >> 0] | 0) == 61 ? HEAP32[10307] | 0 : HEAP32[10300] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 37:
    {
     i5 = HEAP32[10309] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 38:
    {
     i5 = HEAP32[10298] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 42:
    {
     i5 = HEAP32[10310] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 43:
    {
     i5 = HEAP32[10295] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 44:
    {
     i5 = HEAP32[10330] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 45:
    {
     i5 = HEAP32[10296] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 46:
    {
     i5 = HEAP32[10336] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 47:
    {
     i5 = HEAP32[10308] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 58:
    {
     i5 = HEAP32[10332] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 60:
    {
     i5 = HEAP8[i9 + 1 >> 0] | 0;
     i5 = HEAP32[(i5 << 24 >> 24 == 60 ? 41248 : i5 << 24 >> 24 == 61 ? 41216 : 41208) >> 2] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 61:
    {
     i5 = (HEAP8[i9 + 1 >> 0] | 0) == 61 ? HEAP32[10306] | 0 : HEAP32[10341] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 62:
    {
     i2 = HEAP8[i9 + 1 >> 0] | 0;
     if (i2 << 24 >> 24 == 62) i2 = (HEAP8[i9 + 2 >> 0] | 0) == 62 ? 41252 : 41244; else i2 = i2 << 24 >> 24 == 61 ? 41212 : 41220;
     i5 = HEAP32[i2 >> 2] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 63:
    {
     i5 = HEAP32[10331] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 94:
    {
     i5 = HEAP32[10299] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 124:
    {
     i5 = HEAP32[10297] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   case 126:
    {
     i5 = HEAP32[10301] | 0;
     HEAP32[i10 >> 2] = i5;
     break;
    }
   default:
    _abort();
   } while (0);
   i7 = _strlen(i5) | 0;
   i2 = i10 + 8 | 0;
   HEAP32[i2 >> 2] = i7;
   i7 = i9 + i7 | 0;
   i4 = HEAP8[i7 >> 0] | 0;
   HEAP8[i7 >> 0] = 0;
   if (!(_strcmp(HEAP32[i10 >> 2] | 0, i9) | 0)) {
    HEAP8[i9 + (HEAP32[i2 >> 2] | 0) >> 0] = i4;
    HEAP32[i10 + 12 >> 2] = 1;
    break L1;
   } else ___assert_fail(23465, 23426, 279, 23460);
  } while (0);
  if ((i8 | 0) == 20) {
   d3 = +_strtod(i9, i7);
   HEAPF64[i10 >> 3] = d3;
   i1 = HEAP32[i7 >> 2] | 0;
  }
  i2 = i9;
  while (1) {
   if ((i2 | 0) == (i1 | 0)) {
    i8 = 24;
    break;
   }
   if ((HEAP8[i2 >> 0] | 0) == 46) {
    i2 = 5;
    break;
   } else i2 = i2 + 1 | 0;
  }
  if ((i8 | 0) == 24) if (__ZN4wasm12isSInteger32Ed(d3) | 0) i2 = 4; else {
   i2 = __ZN4wasm12isUInteger32Ed(+HEAPF64[i10 >> 3]) | 0;
   i2 = i2 ? 4 : 5;
  }
  HEAP32[i10 + 12 >> 2] = i2;
  if (i1 >>> 0 > i9 >>> 0) i8 = 63; else ___assert_fail(23414, 23426, 253, 23460);
 } else {
  i1 = i9;
  do {
   i1 = i1 + 1 | 0;
   HEAP32[i7 >> 2] = i1;
  } while (__ZN6cashew11isIdentPartEc(HEAP8[i1 >> 0] | 0) | 0);
  i2 = HEAP8[i1 >> 0] | 0;
  if (!(i2 << 24 >> 24)) {
   __ZN6cashew7IString3setEPKcb(i10, i9, 1);
   i2 = i10;
  } else {
   HEAP8[i1 >> 0] = 0;
   __ZN6cashew7IString3setEPKcb(i10, i9, 0);
   i1 = HEAP32[i7 >> 2] | 0;
   HEAP8[i1 >> 0] = i2;
   i2 = i10;
  }
  i8 = (__ZNKSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(41368, i2) | 0) != 0;
  HEAP32[i10 + 12 >> 2] = i8 ? 0 : 2;
  i8 = 63;
 } while (0);
 if ((i8 | 0) == 63) HEAP32[i10 + 8 >> 2] = i1 - i9;
 STACKTOP = i11;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i4, i1, i14, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i14 = i14 | 0;
 i3 = i3 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i16 = i17 + 84 | 0;
 i15 = i17 + 72 | 0;
 i8 = i17 + 60 | 0;
 i9 = i17 + 48 | 0;
 i10 = i17 + 36 | 0;
 i11 = i17 + 24 | 0;
 i12 = i17 + 12 | 0;
 i13 = i17;
 i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i4, i1, i3) | 0;
 L1 : do if ((i2 | 0) != (i4 | 0)) {
  i1 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i2, i1, i3) | 0;
  i5 = i3 + 4 | 0;
  if ((i1 | 0) == (i2 | 0)) {
   i2 = HEAP32[i5 >> 2] | 0;
   i1 = i2 + -24 | 0;
   while (1) {
    if ((i2 | 0) == (i1 | 0)) {
     i1 = i4;
     break L1;
    }
    i16 = i2 + -24 | 0;
    HEAP32[i5 >> 2] = i16;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i16);
    i2 = HEAP32[i5 >> 2] | 0;
   }
  }
  i2 = HEAP32[i5 >> 2] | 0;
  if (((i2 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 >= 2) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i16, i2 + -24 | 0);
   i2 = HEAP32[i5 >> 2] | 0;
   i3 = i2 + -24 | 0;
   i4 = i2;
   while (1) {
    if ((i4 | 0) == (i3 | 0)) break;
    i7 = i4 + -24 | 0;
    HEAP32[i5 >> 2] = i7;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
    i4 = HEAP32[i5 >> 2] | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i15, i2 + -48 | 0);
   i2 = HEAP32[i5 >> 2] | 0;
   i7 = i2 + -24 | 0;
   if (!(HEAP8[i7 >> 0] & 1)) {
    HEAP8[i7 + 1 >> 0] = 0;
    HEAP8[i7 >> 0] = 0;
   } else {
    HEAP8[HEAP32[i2 + -16 >> 2] >> 0] = 0;
    HEAP32[i2 + -20 >> 2] = 0;
   }
   i18 = HEAP8[i14 >> 0] | 0;
   i3 = (i18 & 1) == 0;
   i4 = i14 + 4 | 0;
   i18 = i3 ? (i18 & 255) >>> 1 : HEAP32[i4 >> 2] | 0;
   i5 = i14 + 8 | 0;
   i6 = i14 + 1 | 0;
   i2 = i18 >>> 0 > 1;
   i3 = _memcmp(i3 ? i6 : HEAP32[i5 >> 2] | 0, 38514, i2 ? 1 : i18) | 0;
   if (!(((i3 | 0) == 0 ? ((i18 | 0) == 0 ? -1 : i2 & 1) : i3) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i7, 40);
   __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i13, 38467, i15);
   i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 38516) | 0;
   HEAP32[i12 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i12 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i12 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i2 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   i2 = HEAP8[i14 >> 0] | 0;
   i3 = (i2 & 1) == 0;
   i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i12, i3 ? i6 : HEAP32[i5 >> 2] | 0, i3 ? (i2 & 255) >>> 1 : HEAP32[i4 >> 2] | 0) | 0;
   HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i11 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i11 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i2 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i11, 38519) | 0;
   HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i10 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i10 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i2 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   i2 = HEAP8[i16 >> 0] | 0;
   i3 = (i2 & 1) == 0;
   i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i10, i3 ? i16 + 1 | 0 : HEAP32[i16 + 8 >> 2] | 0, i3 ? (i2 & 255) >>> 1 : HEAP32[i16 + 4 >> 2] | 0) | 0;
   HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i9 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i9 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i2 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i9, 38469) | 0;
   HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i2 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   i18 = HEAP8[i8 >> 0] | 0;
   i3 = (i18 & 1) == 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i7, i3 ? i8 + 1 | 0 : HEAP32[i8 + 8 >> 2] | 0, i3 ? (i18 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i10);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i11);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
   i13 = HEAP8[i14 >> 0] | 0;
   i18 = (i13 & 1) == 0;
   i13 = i18 ? (i13 & 255) >>> 1 : HEAP32[i4 >> 2] | 0;
   i14 = i13 >>> 0 > 1;
   i18 = _memcmp(i18 ? i6 : HEAP32[i5 >> 2] | 0, 38514, i14 ? 1 : i13) | 0;
   if (!(((i18 | 0) == 0 ? ((i13 | 0) == 0 ? -1 : i14 & 1) : i18) | 0)) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i7, 41);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i16);
  } else i1 = i4;
 } else i1 = i4; while (0);
 STACKTOP = i17;
 return i1 | 0;
}

function __ZN4wasm10WasmWalkerIZNS_15Asm2WasmBuilder8optimizeEvE19BlockBreakOptimizervE4walkERPNS_10ExpressionE(i12, i13) {
 i12 = i12 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i14 = 0, i15 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i10 = i14 + 8 | 0;
 i11 = i14;
 i1 = HEAP32[i13 >> 2] | 0;
 if (i1 | 0) {
  L3 : do switch (HEAP32[i1 >> 2] | 0) {
  case 0:
   {
    _abort();
    break;
   }
  case 1:
   {
    i4 = i1 + 12 | 0;
    i1 = i1 + 16 | 0;
    i3 = 0;
    while (1) {
     i2 = HEAP32[i4 >> 2] | 0;
     if (i3 >>> 0 >= (HEAP32[i1 >> 2] | 0) - i2 >> 2 >>> 0) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i2 + (i3 << 2) | 0);
     i3 = i3 + 1 | 0;
    }
   }
  case 2:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 8 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 12 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 16 | 0);
    break;
   }
  case 3:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 16 | 0);
    break;
   }
  case 4:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 16 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 12 | 0);
    break;
   }
  case 5:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 12 | 0);
    i2 = HEAP32[i1 + 36 >> 2] | 0;
    i1 = HEAP32[i1 + 32 >> 2] | 0;
    while (1) {
     if ((i1 | 0) == (i2 | 0)) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 4 | 0);
     i1 = i1 + 8 | 0;
    }
   }
  case 6:
   {
    i4 = i1 + 12 | 0;
    i1 = i1 + 8 | 0;
    i3 = 0;
    while (1) {
     i2 = HEAP32[i1 >> 2] | 0;
     if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i2 + (i3 << 2) | 0);
     i3 = i3 + 1 | 0;
    }
   }
  case 7:
   {
    i4 = i1 + 12 | 0;
    i1 = i1 + 8 | 0;
    i3 = 0;
    while (1) {
     i2 = HEAP32[i1 >> 2] | 0;
     if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i2 + (i3 << 2) | 0);
     i3 = i3 + 1 | 0;
    }
   }
  case 8:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 24 | 0);
    i4 = i1 + 12 | 0;
    i1 = i1 + 8 | 0;
    i3 = 0;
    while (1) {
     i2 = HEAP32[i1 >> 2] | 0;
     if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i2 + (i3 << 2) | 0);
     i3 = i3 + 1 | 0;
    }
   }
  case 20:
  case 19:
  case 13:
  case 9:
   break;
  case 10:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 12 | 0);
    break;
   }
  case 11:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 24 | 0);
    break;
   }
  case 12:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 20 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 24 | 0);
    break;
   }
  case 14:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 12 | 0);
    break;
   }
  case 15:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 12 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 16 | 0);
    break;
   }
  case 16:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 8 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 12 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 16 | 0);
    break;
   }
  case 17:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i1 + 8 | 0);
    break;
   }
  case 18:
   {
    i4 = i1 + 20 | 0;
    i1 = i1 + 16 | 0;
    i3 = 0;
    while (1) {
     i2 = HEAP32[i1 >> 2] | 0;
     if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 8 >> 2] & 127](i12, i2 + (i3 << 2) | 0);
     i3 = i3 + 1 | 0;
    }
   }
  default:
   {}
  } while (0);
  i8 = HEAP32[i13 >> 2] | 0;
  if (!i8) ___assert_fail(30470, 30223, 1222, 30475);
  L44 : do switch (HEAP32[i8 >> 2] | 0) {
  case 0:
   {
    _abort();
    break;
   }
  case 1:
   {
    i4 = i8 + 12 | 0;
    i7 = i8 + 16 | 0;
    i1 = HEAP32[i7 >> 2] | 0;
    i3 = HEAP32[i4 >> 2] | 0;
    i5 = i3 + ((i1 - i3 >> 2) + -1 << 2) | 0;
    i6 = HEAP32[i5 >> 2] | 0;
    i2 = i3;
    if ((!((i6 | 0) == 0 | (HEAP32[i6 >> 2] | 0) != 4) ? (i15 = HEAP32[i6 + 12 >> 2] | 0, i9 = i15, (i15 | 0) != 0) : 0) ? (HEAP32[i6 + 8 >> 2] | 0) == (HEAP32[i8 + 8 >> 2] | 0) : 0) {
     HEAP32[i5 >> 2] = i9;
     i2 = HEAP32[i4 >> 2] | 0;
     i3 = i2;
     i1 = HEAP32[i7 >> 2] | 0;
    }
    if (i1 - i3 >> 2 >>> 0 <= 1) {
     i1 = HEAP32[i8 + 8 >> 2] | 0;
     if (!i1) {
      HEAP32[i12 + 4 >> 2] = HEAP32[i2 >> 2];
      break L44;
     }
     HEAP32[i10 + 4 >> 2] = 0;
     HEAP32[i10 >> 2] = 2924;
     HEAP32[i10 + 8 >> 2] = i1;
     i15 = i10 + 12 | 0;
     HEAP32[i15 >> 2] = 0;
     HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
     __ZN4wasm10WasmWalkerIZZNS_15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizer10visitBlockEPNS_5BlockEE11BreakSeekervE4walkERPNS_10ExpressionE(i10, i11);
     if (!(HEAP32[i15 >> 2] | 0)) HEAP32[i12 + 4 >> 2] = HEAP32[i11 >> 2];
    }
    break;
   }
  case 20:
  case 19:
  case 18:
  case 17:
  case 16:
  case 15:
  case 14:
  case 13:
  case 12:
  case 11:
  case 10:
  case 9:
  case 8:
  case 7:
  case 6:
  case 5:
  case 4:
  case 3:
  case 2:
   break;
  default:
   {}
  } while (0);
  i1 = i12 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 | 0) {
   HEAP32[i13 >> 2] = i2;
   HEAP32[i1 >> 2] = 0;
  }
 }
 STACKTOP = i14;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i1, i2, i13, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i13 = i13 | 0;
 i10 = i10 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i9 = i14 + 48 | 0;
 i6 = i14 + 24 | 0;
 i7 = i14 + 12 | 0;
 i8 = i14;
 i12 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i1, i2) | 0;
 if (!((i12 | 0) == (i1 | 0) | (i12 | 0) == (i2 | 0)) ? (HEAP8[i12 >> 0] | 0) == 69 : 0) {
  i5 = HEAP8[i13 >> 0] | 0;
  i11 = i13 + 4 | 0;
  do if (((i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0) >>> 0 > 3) {
   __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i8, 38467, i13);
   i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 38469) | 0;
   HEAP32[i7 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i7 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i7 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i2 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i6, i7);
   i2 = i10 + 4 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   i5 = HEAP32[i10 + 8 >> 2] | 0;
   i4 = i5;
   if (i3 >>> 0 < i5 >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i6);
    HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 24;
   } else {
    i2 = HEAP32[i10 >> 2] | 0;
    i15 = i3 - i2 | 0;
    i5 = (i15 | 0) / 24 | 0;
    i3 = i5 + 1 | 0;
    if ((i15 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i10);
    i2 = (i4 - i2 | 0) / 24 | 0;
    if (i2 >>> 0 < 1073741823) {
     i2 = i2 << 1;
     i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
    } else i2 = 2147483647;
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i9, i2, i5, i10 + 12 | 0);
    i15 = i9 + 8 | 0;
    i5 = HEAP32[i15 >> 2] | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i5, i6);
    HEAP32[i15 >> 2] = i5 + 24;
    __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i10, i9);
    __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i9);
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
  } else {
   i4 = i10 + 4 | 0;
   i3 = HEAP32[i4 >> 2] | 0;
   i15 = HEAP32[i10 + 8 >> 2] | 0;
   i5 = i15;
   if (i3 >>> 0 < i15 >>> 0) {
    HEAP32[i3 >> 2] = 0;
    HEAP32[i3 + 4 >> 2] = 0;
    HEAP32[i3 + 8 >> 2] = 0;
    HEAP32[i3 + 12 >> 2] = 0;
    HEAP32[i3 + 16 >> 2] = 0;
    HEAP32[i3 + 20 >> 2] = 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i3 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i2 = i3 + 12 | 0;
    i3 = 0;
    while (1) {
     if ((i3 | 0) == 3) break;
     HEAP32[i2 + (i3 << 2) >> 2] = 0;
     i3 = i3 + 1 | 0;
    }
    HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 24;
    break;
   }
   i2 = HEAP32[i10 >> 2] | 0;
   i15 = i3 - i2 | 0;
   i4 = (i15 | 0) / 24 | 0;
   i3 = i4 + 1 | 0;
   if ((i15 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i10);
   i2 = (i5 - i2 | 0) / 24 | 0;
   if (i2 >>> 0 < 1073741823) {
    i2 = i2 << 1;
    i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
   } else i2 = 2147483647;
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i9, i2, i4, i10 + 12 | 0);
   i4 = i9 + 8 | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   HEAP32[i5 + 12 >> 2] = 0;
   HEAP32[i5 + 16 >> 2] = 0;
   HEAP32[i5 + 20 >> 2] = 0;
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i5 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   i2 = i5 + 12 | 0;
   i3 = 0;
   while (1) {
    if ((i3 | 0) == 3) break;
    HEAP32[i2 + (i3 << 2) >> 2] = 0;
    i3 = i3 + 1 | 0;
   }
   HEAP32[i4 >> 2] = i5 + 24;
   __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i10, i9);
   __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i9);
  } while (0);
  i3 = i10 + 4 | 0;
  if ((HEAP8[i1 >> 0] | 0) == 110) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[i3 >> 2] | 0) + -24 | 0, 45);
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_((HEAP32[i3 >> 2] | 0) + -24 | 0, i1, i12);
  i1 = HEAP8[i13 >> 0] | 0;
  i2 = (i1 & 1) == 0;
  i1 = i2 ? (i1 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if (i1 >>> 0 < 4) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[i3 >> 2] | 0) + -24 | 0, i2 ? i13 + 1 | 0 : HEAP32[i13 + 8 >> 2] | 0, i1) | 0;
  i1 = i12 + 1 | 0;
 }
 STACKTOP = i14;
 return i1 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE11parseSwitchERPcPKc(i24, i27, i1) {
 i24 = i24 | 0;
 i27 = i27 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i25 = 0, i26 = 0;
 i26 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i10 = i26 + 92 | 0;
 i9 = i26 + 88 | 0;
 i23 = i26 + 84 | 0;
 i20 = i26 + 32 | 0;
 i21 = i26 + 16 | 0;
 i22 = i26;
 i11 = i26 + 80 | 0;
 i12 = i26 + 76 | 0;
 i13 = i26 + 72 | 0;
 i14 = i26 + 68 | 0;
 i15 = i26 + 64 | 0;
 i16 = i26 + 60 | 0;
 i17 = i26 + 56 | 0;
 i18 = i26 + 52 | 0;
 i19 = i26 + 48 | 0;
 i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseParennedERPc(i24, i27) | 0;
 HEAP32[i23 >> 2] = i1;
 HEAP32[i10 >> 2] = HEAP32[i23 >> 2];
 i23 = __ZN6cashew12ValueBuilder10makeSwitchENS_3RefE(i10) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i27);
 i1 = HEAP32[i27 >> 2] | 0;
 if ((HEAP8[i1 >> 0] | 0) != 123) ___assert_fail(23656, 23426, 533, 23868);
 HEAP32[i27 >> 2] = i1 + 1;
 i3 = i20 + 12 | 0;
 i4 = i20 + 8 | 0;
 i5 = i21 + 12 | 0;
 i6 = i21 + 8 | 0;
 i7 = i22 + 12 | 0;
 i8 = i22 + 8 | 0;
 L4 : while (1) {
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i27);
  i1 = HEAP32[i27 >> 2] | 0;
  if ((HEAP8[i1 >> 0] | 0) == 125) {
   i25 = 28;
   break;
  }
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i20, i1);
  do if (!(HEAP32[i3 >> 2] | 0)) {
   i1 = HEAP32[i20 >> 2] | 0;
   if ((i1 | 0) != (HEAP32[10333] | 0)) {
    if ((i1 | 0) != (HEAP32[10334] | 0)) {
     i25 = 23;
     break;
    }
    HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + (HEAP32[i4 >> 2] | 0);
    HEAP32[i15 >> 2] = i23;
    HEAP32[i10 >> 2] = HEAP32[i15 >> 2];
    __ZN6cashew12ValueBuilder21appendDefaultToSwitchENS_3RefE(i10);
    __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i27);
    i1 = HEAP32[i27 >> 2] | 0;
    if ((HEAP8[i1 >> 0] | 0) != 58) {
     i25 = 21;
     break L4;
    }
    HEAP32[i27 >> 2] = i1 + 1;
    break;
   }
   HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + (HEAP32[i4 >> 2] | 0);
   __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i27);
   __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i21, HEAP32[i27 >> 2] | 0);
   i1 = HEAP32[i5 >> 2] | 0;
   if ((i1 | 1 | 0) == 5) {
    i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9parseFragERNS3_4FragE(i24, i21) | 0;
    HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + (HEAP32[i6 >> 2] | 0);
   } else {
    if ((i1 | 0) != 1) {
     i25 = 10;
     break L4;
    }
    if ((HEAP32[i21 >> 2] | 0) != (HEAP32[10296] | 0)) {
     i25 = 12;
     break L4;
    }
    HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + (HEAP32[i6 >> 2] | 0);
    __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i27);
    __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i22, HEAP32[i27 >> 2] | 0);
    if ((HEAP32[i7 >> 2] | 1 | 0) != 5) {
     i25 = 14;
     break L4;
    }
    HEAP32[i11 >> 2] = HEAP32[10296];
    i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9parseFragERNS3_4FragE(i24, i22) | 0;
    HEAP32[i12 >> 2] = i1;
    HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
    i1 = __ZN6cashew12ValueBuilder10makePrefixENS_7IStringENS_3RefE(i9, i10) | 0;
    HEAP32[i27 >> 2] = (HEAP32[i27 >> 2] | 0) + (HEAP32[i8 >> 2] | 0);
   }
   HEAP32[i13 >> 2] = i23;
   HEAP32[i14 >> 2] = i1;
   HEAP32[i9 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i14 >> 2];
   __ZN6cashew12ValueBuilder18appendCaseToSwitchENS_3RefES1_(i9, i10);
   __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i27);
   i1 = HEAP32[i27 >> 2] | 0;
   if ((HEAP8[i1 >> 0] | 0) != 58) {
    i25 = 17;
    break L4;
   }
   HEAP32[i27 >> 2] = i1 + 1;
  } else i25 = 23; while (0);
  if ((i25 | 0) == 23) {
   i25 = 0;
   __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i27);
   i1 = (HEAP8[HEAP32[i27 >> 2] >> 0] | 0) == 123;
   if (i1) i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE19parseBracketedBlockERPc(i24, i27) | 0; else {
    HEAP32[i16 >> 2] = HEAP32[10333];
    HEAP32[i17 >> 2] = HEAP32[10334];
    HEAP32[i9 >> 2] = HEAP32[i16 >> 2];
    HEAP32[i10 >> 2] = HEAP32[i17 >> 2];
    i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE10parseBlockERPcPKcNS_7IStringES8_(i24, i27, 23688, i9, i10) | 0;
   }
   HEAP32[i18 >> 2] = i23;
   HEAP32[i19 >> 2] = i2;
   HEAP32[i9 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i19 >> 2];
   __ZN6cashew12ValueBuilder18appendCodeToSwitchENS_3RefES1_b(i9, i10, i1);
  }
 }
 if ((i25 | 0) == 10) ___assert_fail(23880, 23426, 550, 23868); else if ((i25 | 0) == 12) ___assert_fail(23903, 23426, 551, 23868); else if ((i25 | 0) == 14) ___assert_fail(23922, 23426, 555, 23868); else if ((i25 | 0) == 17) ___assert_fail(23940, 23426, 561, 23868); else if ((i25 | 0) == 21) ___assert_fail(23940, 23426, 568, 23868); else if ((i25 | 0) == 28) {
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i27);
  i1 = HEAP32[i27 >> 2] | 0;
  if ((HEAP8[i1 >> 0] | 0) == 125) {
   HEAP32[i27 >> 2] = i1 + 1;
   STACKTOP = i26;
   return i23 | 0;
  } else ___assert_fail(23691, 23426, 581, 23868);
 }
 return 0;
}

function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i31, i33, i32, i30, i1, i19, i18, i23, i24, i20, i27, i22, i26, i25, i21) {
 i31 = i31 | 0;
 i33 = i33 | 0;
 i32 = i32 | 0;
 i30 = i30 | 0;
 i1 = i1 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i20 = i20 | 0;
 i27 = i27 | 0;
 i22 = i22 | 0;
 i26 = i26 | 0;
 i25 = i25 | 0;
 i21 = i21 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i28 = 0, i29 = 0, i34 = 0;
 HEAP32[i32 >> 2] = i31;
 i28 = i25 + 4 | 0;
 i29 = i25 + 8 | 0;
 i11 = i26 + 4 | 0;
 i12 = (i30 & 512 | 0) == 0;
 i13 = i26 + 8 | 0;
 i14 = (i21 | 0) > 0;
 i15 = i22 + 4 | 0;
 i16 = i22 + 8 | 0;
 i17 = i22 + 1 | 0;
 i10 = 0;
 while (1) {
  if ((i10 | 0) == 4) break;
  L4 : do switch (HEAP8[i24 + i10 >> 0] | 0) {
  case 0:
   {
    HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
    break;
   }
  case 1:
   {
    HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
    i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 44 >> 2] & 31](i18, 32) | 0;
    i9 = HEAP32[i32 >> 2] | 0;
    HEAP32[i32 >> 2] = i9 + 4;
    HEAP32[i9 >> 2] = i8;
    break;
   }
  case 3:
   {
    i9 = HEAP8[i25 >> 0] | 0;
    i2 = (i9 & 1) == 0;
    if ((i2 ? (i9 & 255) >>> 1 : HEAP32[i28 >> 2] | 0) | 0) {
     i8 = HEAP32[(i2 ? i28 : HEAP32[i29 >> 2] | 0) >> 2] | 0;
     i9 = HEAP32[i32 >> 2] | 0;
     HEAP32[i32 >> 2] = i9 + 4;
     HEAP32[i9 >> 2] = i8;
    }
    break;
   }
  case 2:
   {
    i6 = HEAP8[i26 >> 0] | 0;
    i2 = (i6 & 1) == 0;
    i6 = i2 ? (i6 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
    if (!(i12 | (i6 | 0) == 0)) {
     i5 = i2 ? i11 : HEAP32[i13 >> 2] | 0;
     i3 = i5 + (i6 << 2) | 0;
     i4 = HEAP32[i32 >> 2] | 0;
     i2 = i4;
     while (1) {
      if ((i5 | 0) == (i3 | 0)) break;
      HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
      i2 = i2 + 4 | 0;
      i5 = i5 + 4 | 0;
     }
     HEAP32[i32 >> 2] = i4 + (i6 << 2);
    }
    break;
   }
  case 4:
   {
    i3 = HEAP32[i32 >> 2] | 0;
    i1 = i23 ? i1 + 4 | 0 : i1;
    i2 = i1;
    while (1) {
     if (i2 >>> 0 >= i19 >>> 0) break;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 12 >> 2] & 31](i18, 2048, HEAP32[i2 >> 2] | 0) | 0)) break;
     i2 = i2 + 4 | 0;
    }
    if (i14) {
     i6 = i21;
     while (1) {
      i4 = (i6 | 0) > 0;
      if (!(i2 >>> 0 > i1 >>> 0 & i4)) break;
      i9 = i2 + -4 | 0;
      i7 = HEAP32[i9 >> 2] | 0;
      i8 = HEAP32[i32 >> 2] | 0;
      HEAP32[i32 >> 2] = i8 + 4;
      HEAP32[i8 >> 2] = i7;
      i2 = i9;
      i6 = i6 + -1 | 0;
     }
     if (i4) i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 44 >> 2] & 31](i18, 48) | 0; else i7 = 0;
     i5 = HEAP32[i32 >> 2] | 0;
     while (1) {
      i4 = i5 + 4 | 0;
      if ((i6 | 0) <= 0) break;
      HEAP32[i5 >> 2] = i7;
      i5 = i4;
      i6 = i6 + -1 | 0;
     }
     HEAP32[i32 >> 2] = i4;
     HEAP32[i5 >> 2] = i20;
    }
    if ((i2 | 0) == (i1 | 0)) {
     i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i18 >> 2] | 0) + 44 >> 2] & 31](i18, 48) | 0;
     i9 = HEAP32[i32 >> 2] | 0;
     i2 = i9 + 4 | 0;
     HEAP32[i32 >> 2] = i2;
     HEAP32[i9 >> 2] = i8;
    } else {
     i8 = HEAP8[i22 >> 0] | 0;
     i4 = (i8 & 1) == 0;
     i9 = HEAP32[i15 >> 2] | 0;
     if (!((i4 ? (i8 & 255) >>> 1 : i9) | 0)) {
      i7 = -1;
      i6 = 0;
      i8 = 0;
     } else {
      i7 = HEAP8[(i4 ? i17 : HEAP32[i16 >> 2] | 0) >> 0] | 0;
      i6 = 0;
      i8 = 0;
     }
     while (1) {
      if ((i2 | 0) == (i1 | 0)) break;
      i4 = HEAP32[i32 >> 2] | 0;
      if ((i8 | 0) == (i7 | 0)) {
       i5 = i4 + 4 | 0;
       HEAP32[i32 >> 2] = i5;
       HEAP32[i4 >> 2] = i27;
       i6 = i6 + 1 | 0;
       i7 = HEAP8[i22 >> 0] | 0;
       i4 = (i7 & 1) == 0;
       if (i6 >>> 0 < (i4 ? (i7 & 255) >>> 1 : i9) >>> 0) {
        i7 = HEAP8[(i4 ? i17 : HEAP32[i16 >> 2] | 0) + i6 >> 0] | 0;
        i4 = i5;
        i7 = i7 << 24 >> 24 == 127 ? -1 : i7 << 24 >> 24;
        i5 = 0;
       } else {
        i4 = i5;
        i7 = i8;
        i5 = 0;
       }
      } else i5 = i8;
      i8 = i2 + -4 | 0;
      i34 = HEAP32[i8 >> 2] | 0;
      HEAP32[i32 >> 2] = i4 + 4;
      HEAP32[i4 >> 2] = i34;
      i2 = i8;
      i8 = i5 + 1 | 0;
     }
     i2 = HEAP32[i32 >> 2] | 0;
    }
    if ((i3 | 0) != (i2 | 0)) while (1) {
     i2 = i2 + -4 | 0;
     if (i3 >>> 0 >= i2 >>> 0) break L4;
     i34 = HEAP32[i3 >> 2] | 0;
     HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
     HEAP32[i2 >> 2] = i34;
     i3 = i3 + 4 | 0;
    }
    break;
   }
  default:
   {}
  } while (0);
  i10 = i10 + 1 | 0;
 }
 i2 = HEAP8[i25 >> 0] | 0;
 i1 = (i2 & 1) == 0;
 i2 = i1 ? (i2 & 255) >>> 1 : HEAP32[i28 >> 2] | 0;
 if (i2 >>> 0 > 1) {
  i3 = i1 ? i28 : HEAP32[i29 >> 2] | 0;
  i5 = i3 + 4 | 0;
  i2 = i3 + (i2 << 2) | 0;
  i3 = HEAP32[i32 >> 2] | 0;
  i4 = i2 - i5 | 0;
  i1 = i3;
  while (1) {
   if ((i5 | 0) == (i2 | 0)) break;
   HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
   i1 = i1 + 4 | 0;
   i5 = i5 + 4 | 0;
  }
  HEAP32[i32 >> 2] = i3 + (i4 >>> 2 << 2);
 }
 switch (i30 & 176 | 0) {
 case 32:
  {
   HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[i33 >> 2] = i31;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i1, i6, i13) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i13 = i13 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i12 = i15 + 88 | 0;
 i14 = i15 + 64 | 0;
 i5 = i15 + 76 | 0;
 i9 = i15 + 40 | 0;
 i7 = i15 + 16 | 0;
 i8 = i15;
 L1 : do if (((i1 | 0) != (i6 | 0) ? (i3 = (HEAP8[i1 >> 0] | 0) + -48 | 0, i3 >>> 0 < 10) : 0) ? (i2 = i1 + 1 | 0, (i2 | 0) != (i6 | 0)) : 0) {
  while (1) {
   i4 = (HEAP8[i2 >> 0] | 0) + -48 | 0;
   if (i4 >>> 0 >= 10) {
    i11 = i2;
    i10 = i3;
    break;
   }
   i2 = i2 + 1 | 0;
   if ((i2 | 0) == (i6 | 0)) break L1;
   i3 = i4 + (i3 * 10 | 0) | 0;
  }
  if ((i6 - i11 | 0) >>> 0 >= i10 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i14, i11, i10);
   i3 = HEAP8[i14 >> 0] | 0;
   i6 = (i3 & 1) == 0;
   i3 = i6 ? (i3 & 255) >>> 1 : HEAP32[i14 + 4 >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i5, i6 ? i14 + 1 | 0 : HEAP32[i14 + 8 >> 2] | 0, i3 >>> 0 < 10 ? i3 : 10);
   i3 = HEAP8[i5 >> 0] | 0;
   i6 = (i3 & 1) == 0;
   i3 = i6 ? (i3 & 255) >>> 1 : HEAP32[i5 + 4 >> 2] | 0;
   i4 = i3 >>> 0 > 10;
   i6 = _memcmp(i6 ? i5 + 1 | 0 : HEAP32[i5 + 8 >> 2] | 0, 38346, i4 ? 10 : i3) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i5);
   if (!(((i6 | 0) == 0 ? (i3 >>> 0 < 10 ? -1 : i4 & 1) : i6) | 0)) {
    i1 = _malloc(32) | 0;
    HEAP32[i9 + 8 >> 2] = i1;
    HEAP32[i9 >> 2] = 33;
    HEAP32[i9 + 4 >> 2] = 21;
    i2 = i1;
    i3 = 38357;
    i4 = i2 + 21 | 0;
    do {
     HEAP8[i2 >> 0] = HEAP8[i3 >> 0] | 0;
     i2 = i2 + 1 | 0;
     i3 = i3 + 1 | 0;
    } while ((i2 | 0) < (i4 | 0));
    HEAP8[i1 + 21 >> 0] = 0;
    i1 = i9 + 12 | 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i13 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i8 = HEAP32[i13 + 8 >> 2] | 0;
    i3 = i8;
    if (i2 >>> 0 < i8 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i9);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i13 >> 2] | 0;
     i8 = i2 - i1 | 0;
     i4 = (i8 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i8 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i13);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i12, i1, i4, i13 + 12 | 0);
     i8 = i12 + 8 | 0;
     i7 = HEAP32[i8 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i7, i9);
     HEAP32[i8 >> 2] = i7 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i13, i12);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i12);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i9);
   } else {
    HEAP32[i8 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i8 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
    HEAP32[i8 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i14 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i7, i8);
    i1 = i13 + 4 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    i9 = HEAP32[i13 + 8 >> 2] | 0;
    i3 = i9;
    if (i2 >>> 0 < i9 >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i2, i7);
     HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 24;
    } else {
     i1 = HEAP32[i13 >> 2] | 0;
     i9 = i2 - i1 | 0;
     i4 = (i9 | 0) / 24 | 0;
     i2 = i4 + 1 | 0;
     if ((i9 | 0) < -24) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i13);
     i1 = (i3 - i1 | 0) / 24 | 0;
     if (i1 >>> 0 < 1073741823) {
      i1 = i1 << 1;
      i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
     } else i1 = 2147483647;
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i12, i1, i4, i13 + 12 | 0);
     i9 = i12 + 8 | 0;
     i6 = HEAP32[i9 >> 2] | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i6, i7);
     HEAP32[i9 >> 2] = i6 + 24;
     __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i13, i12);
     __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i12);
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i7);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
   i1 = i11 + i10 | 0;
  }
 } while (0);
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i31, i33, i32, i30, i1, i18, i17, i22, i23, i19, i26, i21, i25, i24, i20) {
 i31 = i31 | 0;
 i33 = i33 | 0;
 i32 = i32 | 0;
 i30 = i30 | 0;
 i1 = i1 | 0;
 i18 = i18 | 0;
 i17 = i17 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 i19 = i19 | 0;
 i26 = i26 | 0;
 i21 = i21 | 0;
 i25 = i25 | 0;
 i24 = i24 | 0;
 i20 = i20 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i27 = 0, i28 = 0, i29 = 0, i34 = 0, i35 = 0, i36 = 0;
 HEAP32[i32 >> 2] = i31;
 i27 = i24 + 4 | 0;
 i28 = i24 + 8 | 0;
 i29 = i24 + 1 | 0;
 i11 = i25 + 4 | 0;
 i12 = (i30 & 512 | 0) == 0;
 i13 = i25 + 8 | 0;
 i14 = i25 + 1 | 0;
 i15 = i17 + 8 | 0;
 i16 = (i20 | 0) > 0;
 i8 = i21 + 4 | 0;
 i9 = i21 + 8 | 0;
 i10 = i21 + 1 | 0;
 i7 = 0;
 while (1) {
  if ((i7 | 0) == 4) break;
  L4 : do switch (HEAP8[i23 + i7 >> 0] | 0) {
  case 0:
   {
    HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
    break;
   }
  case 1:
   {
    HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
    i5 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 31](i17, 32) | 0;
    i6 = HEAP32[i32 >> 2] | 0;
    HEAP32[i32 >> 2] = i6 + 1;
    HEAP8[i6 >> 0] = i5;
    break;
   }
  case 3:
   {
    i6 = HEAP8[i24 >> 0] | 0;
    i2 = (i6 & 1) == 0;
    if ((i2 ? (i6 & 255) >>> 1 : HEAP32[i27 >> 2] | 0) | 0) {
     i5 = HEAP8[(i2 ? i29 : HEAP32[i28 >> 2] | 0) >> 0] | 0;
     i6 = HEAP32[i32 >> 2] | 0;
     HEAP32[i32 >> 2] = i6 + 1;
     HEAP8[i6 >> 0] = i5;
    }
    break;
   }
  case 2:
   {
    i3 = HEAP8[i25 >> 0] | 0;
    i2 = (i3 & 1) == 0;
    i3 = i2 ? (i3 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
    if (!(i12 | (i3 | 0) == 0)) {
     i6 = i2 ? i14 : HEAP32[i13 >> 2] | 0;
     i4 = i6 + i3 | 0;
     i2 = HEAP32[i32 >> 2] | 0;
     i3 = i6;
     while (1) {
      if ((i3 | 0) == (i4 | 0)) break;
      HEAP8[i2 >> 0] = HEAP8[i3 >> 0] | 0;
      i2 = i2 + 1 | 0;
      i3 = i3 + 1 | 0;
     }
     HEAP32[i32 >> 2] = i2;
    }
    break;
   }
  case 4:
   {
    i3 = HEAP32[i32 >> 2] | 0;
    i1 = i22 ? i1 + 1 | 0 : i1;
    i2 = i1;
    while (1) {
     if (i2 >>> 0 >= i18 >>> 0) break;
     i4 = HEAP8[i2 >> 0] | 0;
     if (i4 << 24 >> 24 <= -1) break;
     if (!(HEAP16[(HEAP32[i15 >> 2] | 0) + (i4 << 24 >> 24 << 1) >> 1] & 2048)) break;
     i2 = i2 + 1 | 0;
    }
    if (i16) {
     i5 = i20;
     while (1) {
      i4 = (i5 | 0) > 0;
      if (!(i2 >>> 0 > i1 >>> 0 & i4)) break;
      i6 = i2 + -1 | 0;
      i34 = HEAP8[i6 >> 0] | 0;
      i4 = HEAP32[i32 >> 2] | 0;
      HEAP32[i32 >> 2] = i4 + 1;
      HEAP8[i4 >> 0] = i34;
      i2 = i6;
      i5 = i5 + -1 | 0;
     }
     if (i4) i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 31](i17, 48) | 0; else i6 = 0;
     while (1) {
      i4 = HEAP32[i32 >> 2] | 0;
      HEAP32[i32 >> 2] = i4 + 1;
      if ((i5 | 0) <= 0) break;
      HEAP8[i4 >> 0] = i6;
      i5 = i5 + -1 | 0;
     }
     HEAP8[i4 >> 0] = i19;
    }
    L35 : do if ((i2 | 0) == (i1 | 0)) {
     i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i17 >> 2] | 0) + 28 >> 2] & 31](i17, 48) | 0;
     i34 = HEAP32[i32 >> 2] | 0;
     HEAP32[i32 >> 2] = i34 + 1;
     HEAP8[i34 >> 0] = i6;
    } else {
     i34 = HEAP8[i21 >> 0] | 0;
     i4 = (i34 & 1) == 0;
     if (!((i4 ? (i34 & 255) >>> 1 : HEAP32[i8 >> 2] | 0) | 0)) {
      i4 = -1;
      i5 = 0;
      i6 = 0;
     } else {
      i4 = HEAP8[(i4 ? i10 : HEAP32[i9 >> 2] | 0) >> 0] | 0;
      i5 = 0;
      i6 = 0;
     }
     while (1) {
      if ((i2 | 0) == (i1 | 0)) break L35;
      if ((i6 | 0) == (i4 | 0)) {
       i34 = HEAP32[i32 >> 2] | 0;
       HEAP32[i32 >> 2] = i34 + 1;
       HEAP8[i34 >> 0] = i26;
       i5 = i5 + 1 | 0;
       i34 = HEAP8[i21 >> 0] | 0;
       i4 = (i34 & 1) == 0;
       if (i5 >>> 0 < (i4 ? (i34 & 255) >>> 1 : HEAP32[i8 >> 2] | 0) >>> 0) {
        i4 = HEAP8[(i4 ? i10 : HEAP32[i9 >> 2] | 0) + i5 >> 0] | 0;
        i4 = i4 << 24 >> 24 == 127 ? -1 : i4 << 24 >> 24;
        i6 = 0;
       } else {
        i4 = i6;
        i6 = 0;
       }
      }
      i34 = i2 + -1 | 0;
      i36 = HEAP8[i34 >> 0] | 0;
      i35 = HEAP32[i32 >> 2] | 0;
      HEAP32[i32 >> 2] = i35 + 1;
      HEAP8[i35 >> 0] = i36;
      i2 = i34;
      i6 = i6 + 1 | 0;
     }
    } while (0);
    i2 = HEAP32[i32 >> 2] | 0;
    if ((i3 | 0) != (i2 | 0)) while (1) {
     i2 = i2 + -1 | 0;
     if (i3 >>> 0 >= i2 >>> 0) break L4;
     i36 = HEAP8[i3 >> 0] | 0;
     HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
     HEAP8[i2 >> 0] = i36;
     i3 = i3 + 1 | 0;
    }
    break;
   }
  default:
   {}
  } while (0);
  i7 = i7 + 1 | 0;
 }
 i1 = HEAP8[i24 >> 0] | 0;
 i2 = (i1 & 1) == 0;
 i1 = i2 ? (i1 & 255) >>> 1 : HEAP32[i27 >> 2] | 0;
 if (i1 >>> 0 > 1) {
  i2 = i2 ? i29 : HEAP32[i28 >> 2] | 0;
  i3 = i2 + i1 | 0;
  i1 = HEAP32[i32 >> 2] | 0;
  while (1) {
   i2 = i2 + 1 | 0;
   if ((i2 | 0) == (i3 | 0)) break;
   HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
   i1 = i1 + 1 | 0;
  }
  HEAP32[i32 >> 2] = i1;
 }
 switch (i30 & 176 | 0) {
 case 32:
  {
   HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[i33 >> 2] = i31;
 }
 return;
}

function __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(i1, i11) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0;
 i2 = HEAP32[i11 >> 2] | 0;
 do if (i2) if (HEAP32[i11 + 4 >> 2] | 0) {
  i3 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(i11) | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  if (!i2) {
   i4 = i3;
   i6 = 6;
   break;
  } else {
   i5 = i3;
   i4 = i3;
   i6 = 8;
   break;
  }
 } else {
  i5 = i11;
  i4 = i11;
  i6 = 8;
  break;
 } else {
  i4 = i11;
  i3 = i11;
  i6 = 6;
 } while (0);
 if ((i6 | 0) == 6) {
  i2 = HEAP32[i3 + 4 >> 2] | 0;
  if (!i2) {
   i9 = i3 + 8 | 0;
   i10 = 0;
   i2 = 0;
   i8 = i4;
  } else {
   i5 = i3;
   i6 = 8;
  }
 }
 if ((i6 | 0) == 8) {
  i9 = i5 + 8 | 0;
  HEAP32[i2 + 8 >> 2] = HEAP32[i9 >> 2];
  i10 = 1;
  i3 = i5;
  i8 = i4;
 }
 i4 = HEAP32[i9 >> 2] | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 if ((i5 | 0) == (i3 | 0)) {
  HEAP32[i4 >> 2] = i2;
  if ((i3 | 0) == (i1 | 0)) {
   i1 = i2;
   i5 = 0;
  } else i5 = HEAP32[i4 + 4 >> 2] | 0;
 } else HEAP32[i4 + 4 >> 2] = i2;
 i6 = i3 + 12 | 0;
 i7 = (HEAP8[i6 >> 0] | 0) != 0;
 if ((i3 | 0) != (i11 | 0)) {
  i12 = i11 + 8 | 0;
  i4 = HEAP32[i12 >> 2] | 0;
  HEAP32[i9 >> 2] = i4;
  if ((HEAP32[HEAP32[i12 >> 2] >> 2] | 0) == (i11 | 0)) HEAP32[i4 >> 2] = i3; else HEAP32[i4 + 4 >> 2] = i3;
  i4 = HEAP32[i11 >> 2] | 0;
  HEAP32[i8 >> 2] = i4;
  HEAP32[i4 + 8 >> 2] = i3;
  i4 = HEAP32[i11 + 4 >> 2] | 0;
  HEAP32[i3 + 4 >> 2] = i4;
  if (i4 | 0) HEAP32[i4 + 8 >> 2] = i3;
  HEAP8[i6 >> 0] = HEAP8[i11 + 12 >> 0] | 0;
  i1 = (i1 | 0) == (i11 | 0) ? i3 : i1;
 }
 do if (i7 & (i1 | 0) != 0) {
  if (i10) {
   HEAP8[i2 + 12 >> 0] = 1;
   break;
  }
  while (1) {
   i2 = HEAP32[i5 + 8 >> 2] | 0;
   i3 = i5 + 12 | 0;
   i4 = (HEAP8[i3 >> 0] | 0) != 0;
   if ((HEAP32[i2 >> 2] | 0) == (i5 | 0)) {
    if (i4) {
     i4 = i1;
     i1 = i5;
    } else {
     HEAP8[i3 >> 0] = 1;
     HEAP8[i2 + 12 >> 0] = 0;
     __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i2);
     i12 = HEAP32[i5 + 4 >> 2] | 0;
     i4 = (i1 | 0) == (i12 | 0) ? i5 : i1;
     i1 = HEAP32[i12 >> 2] | 0;
    }
    i2 = HEAP32[i1 >> 2] | 0;
    i3 = (i2 | 0) == 0;
    if (!i3 ? (HEAP8[i2 + 12 >> 0] | 0) == 0 : 0) {
     i6 = 49;
     break;
    }
    i12 = HEAP32[i1 + 4 >> 2] | 0;
    if (i12 | 0 ? (HEAP8[i12 + 12 >> 0] | 0) == 0 : 0) {
     i6 = 48;
     break;
    }
    HEAP8[i1 + 12 >> 0] = 0;
    i2 = HEAP32[i1 + 8 >> 2] | 0;
    i1 = i2 + 12 | 0;
    if ((i2 | 0) == (i4 | 0) | (HEAP8[i1 >> 0] | 0) == 0) {
     i6 = 45;
     break;
    }
    i12 = HEAP32[i2 + 8 >> 2] | 0;
    i1 = i4;
    i2 = (HEAP32[i12 >> 2] | 0) == (i2 | 0) ? i12 + 4 | 0 : i12;
   } else {
    if (!i4) {
     HEAP8[i3 >> 0] = 1;
     HEAP8[i2 + 12 >> 0] = 0;
     __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i2);
     i12 = HEAP32[i5 >> 2] | 0;
     i1 = (i1 | 0) == (i12 | 0) ? i5 : i1;
     i5 = HEAP32[i12 + 4 >> 2] | 0;
    }
    i3 = HEAP32[i5 >> 2] | 0;
    if (i3 | 0 ? (HEAP8[i3 + 12 >> 0] | 0) == 0 : 0) {
     i1 = i5;
     i6 = 34;
     break;
    }
    i2 = HEAP32[i5 + 4 >> 2] | 0;
    if (i2 | 0 ? (HEAP8[i2 + 12 >> 0] | 0) == 0 : 0) {
     i1 = i5;
     i6 = 35;
     break;
    }
    HEAP8[i5 + 12 >> 0] = 0;
    i2 = HEAP32[i5 + 8 >> 2] | 0;
    if ((i2 | 0) == (i1 | 0)) {
     i6 = 32;
     break;
    }
    if (!(HEAP8[i2 + 12 >> 0] | 0)) {
     i1 = i2;
     i6 = 32;
     break;
    }
    i12 = HEAP32[i2 + 8 >> 2] | 0;
    i2 = (HEAP32[i12 >> 2] | 0) == (i2 | 0) ? i12 + 4 | 0 : i12;
   }
   i5 = HEAP32[i2 >> 2] | 0;
  }
  if ((i6 | 0) == 32) {
   HEAP8[i1 + 12 >> 0] = 1;
   break;
  } else if ((i6 | 0) == 34) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if (!i2) i6 = 36; else i6 = 35;
  } else if ((i6 | 0) == 45) {
   HEAP8[i1 >> 0] = 1;
   break;
  } else if ((i6 | 0) == 48) if (i3) i6 = 50; else i6 = 49;
  if ((i6 | 0) == 35) if (!(HEAP8[i2 + 12 >> 0] | 0)) i6 = 37; else i6 = 36; else if ((i6 | 0) == 49) if (!(HEAP8[i2 + 12 >> 0] | 0)) i6 = 51; else i6 = 50;
  if ((i6 | 0) == 36) {
   HEAP8[i3 + 12 >> 0] = 1;
   HEAP8[i1 + 12 >> 0] = 0;
   __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i1);
   i1 = HEAP32[i1 + 8 >> 2] | 0;
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   i6 = 37;
  } else if ((i6 | 0) == 50) {
   HEAP8[(HEAP32[i1 + 4 >> 2] | 0) + 12 >> 0] = 1;
   HEAP8[i1 + 12 >> 0] = 0;
   __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i1);
   i1 = HEAP32[i1 + 8 >> 2] | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   i6 = 51;
  }
  if ((i6 | 0) == 37) {
   i12 = HEAP32[i1 + 8 >> 2] | 0;
   i11 = i12 + 12 | 0;
   HEAP8[i1 + 12 >> 0] = HEAP8[i11 >> 0] | 0;
   HEAP8[i11 >> 0] = 1;
   HEAP8[i2 + 12 >> 0] = 1;
   __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i12);
   break;
  } else if ((i6 | 0) == 51) {
   i12 = HEAP32[i1 + 8 >> 2] | 0;
   i11 = i12 + 12 | 0;
   HEAP8[i1 + 12 >> 0] = HEAP8[i11 >> 0] | 0;
   HEAP8[i11 >> 0] = 1;
   HEAP8[i2 + 12 >> 0] = 1;
   __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i12);
   break;
  }
 } while (0);
 return;
}

function __ZN4wasm16PrintSExpression11visitBinaryEPNS_6BinaryE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i2 = i6 + 4 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i2 >> 2] | 0, 40) | 0;
 i3 = __Z12prepareColorRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEE(HEAP32[i2 >> 2] | 0) | 0;
 i4 = i5 + 8 | 0;
 if ((HEAP32[i4 >> 2] | 0) > 16) i1 = (HEAP32[i5 + 12 >> 2] | 0) + 4 | 0; else i1 = i5 + 4 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i3, __ZN4wasm13printWasmTypeENS_8WasmTypeE(HEAP32[i1 >> 2] | 0) | 0) | 0, 46) | 0;
 do switch (HEAP32[i4 >> 2] | 0) {
 case 0:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26243) | 0;
   break;
  }
 case 1:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 30662) | 0;
   break;
  }
 case 2:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26247) | 0;
   break;
  }
 case 3:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26251) | 0;
   break;
  }
 case 4:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26257) | 0;
   break;
  }
 case 5:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26263) | 0;
   break;
  }
 case 6:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26269) | 0;
   break;
  }
 case 7:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26275) | 0;
   break;
  }
 case 8:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26279) | 0;
   break;
  }
 case 9:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26282) | 0;
   break;
  }
 case 10:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26286) | 0;
   break;
  }
 case 11:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26290) | 0;
   break;
  }
 case 12:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26296) | 0;
   break;
  }
 case 13:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26302) | 0;
   break;
  }
 case 14:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26306) | 0;
   break;
  }
 case 15:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26315) | 0;
   break;
  }
 case 16:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26319) | 0;
   break;
  }
 case 17:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26323) | 0;
   break;
  }
 case 18:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26326) | 0;
   break;
  }
 case 19:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26329) | 0;
   break;
  }
 case 20:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26334) | 0;
   break;
  }
 case 21:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26339) | 0;
   break;
  }
 case 22:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26344) | 0;
   break;
  }
 case 23:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26349) | 0;
   break;
  }
 case 24:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26354) | 0;
   break;
  }
 case 25:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26359) | 0;
   break;
  }
 case 26:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26364) | 0;
   break;
  }
 case 27:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26369) | 0;
   break;
  }
 case 28:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26372) | 0;
   break;
  }
 case 29:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26375) | 0;
   break;
  }
 case 30:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 26378) | 0;
   break;
  }
 default:
  _abort();
 } while (0);
 __ZN4wasm16PrintSExpression9incIndentEv(i6);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i6, HEAP32[i5 + 12 >> 2] | 0);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i6, HEAP32[i5 + 16 >> 2] | 0);
 __ZN4wasm16PrintSExpression9decIndentEv(i6);
 return;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i16, i17, i1, i19, i15, i18, i14) {
 i16 = i16 | 0;
 i17 = i17 | 0;
 i1 = i1 | 0;
 i19 = i19 | 0;
 i15 = i15 | 0;
 i18 = i18 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i20 = 0, i21 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i3 = i22;
 i4 = (i19 - i1 | 0) / 12 | 0;
 if (i4 >>> 0 > 100) {
  i3 = _malloc(i4) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i20 = i3;
   i2 = i3;
  }
 } else {
  i20 = 0;
  i2 = i3;
 }
 i7 = i1;
 i3 = 0;
 i6 = i2;
 while (1) {
  if ((i7 | 0) == (i19 | 0)) break;
  i5 = HEAP8[i7 >> 0] | 0;
  if (!(i5 & 1)) i5 = (i5 & 255) >>> 1; else i5 = HEAP32[i7 + 4 >> 2] | 0;
  if (!i5) {
   HEAP8[i6 >> 0] = 2;
   i3 = i3 + 1 | 0;
   i4 = i4 + -1 | 0;
  } else HEAP8[i6 >> 0] = 1;
  i7 = i7 + 12 | 0;
  i6 = i6 + 1 | 0;
 }
 i13 = 0;
 i10 = i3;
 i8 = i4;
 L17 : while (1) {
  i3 = HEAP32[i16 >> 2] | 0;
  do if (i3) {
   i4 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i3 = HEAP32[i4 >> 2] | 0;
   if ((i3 | 0) == -1) {
    HEAP32[i16 >> 2] = 0;
    i6 = 1;
    break;
   } else {
    i6 = (HEAP32[i16 >> 2] | 0) == 0;
    break;
   }
  } else i6 = 1; while (0);
  i5 = HEAP32[i17 >> 2] | 0;
  if (i5) {
   i3 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i3 = HEAP32[i3 >> 2] | 0;
   if ((i3 | 0) == -1) {
    HEAP32[i17 >> 2] = 0;
    i5 = 0;
    i3 = 1;
   } else i3 = 0;
  } else {
   i5 = 0;
   i3 = 1;
  }
  i4 = HEAP32[i16 >> 2] | 0;
  if (!((i8 | 0) != 0 & (i6 ^ i3))) break;
  i3 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i3 = HEAP32[i3 >> 2] | 0;
  if (!i14) i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 31](i15, i3) | 0;
  i12 = i13 + 1 | 0;
  i7 = 0;
  i9 = i1;
  i11 = i8;
  i8 = i2;
  while (1) {
   if ((i9 | 0) == (i19 | 0)) break;
   do if ((HEAP8[i8 >> 0] | 0) == 1) {
    if (!(HEAP8[i9 >> 0] & 1)) i4 = i9 + 4 | 0; else i4 = HEAP32[i9 + 8 >> 2] | 0;
    i4 = HEAP32[i4 + (i13 << 2) >> 2] | 0;
    if (!i14) i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 28 >> 2] & 31](i15, i4) | 0;
    if ((i3 | 0) != (i4 | 0)) {
     HEAP8[i8 >> 0] = 0;
     i4 = i7;
     i5 = i10;
     i6 = i11 + -1 | 0;
     break;
    }
    i4 = HEAP8[i9 >> 0] | 0;
    if (!(i4 & 1)) i4 = (i4 & 255) >>> 1; else i4 = HEAP32[i9 + 4 >> 2] | 0;
    if ((i4 | 0) == (i12 | 0)) {
     HEAP8[i8 >> 0] = 2;
     i4 = 1;
     i5 = i10 + 1 | 0;
     i6 = i11 + -1 | 0;
    } else {
     i4 = 1;
     i5 = i10;
     i6 = i11;
    }
   } else {
    i4 = i7;
    i5 = i10;
    i6 = i11;
   } while (0);
   i7 = i4;
   i9 = i9 + 12 | 0;
   i10 = i5;
   i11 = i6;
   i8 = i8 + 1 | 0;
  }
  if (!i7) {
   i13 = i12;
   i8 = i11;
   continue;
  }
  i3 = HEAP32[i16 >> 2] | 0;
  i4 = i3 + 12 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0; else HEAP32[i4 >> 2] = i5 + 4;
  if ((i10 + i11 | 0) >>> 0 > 1) {
   i6 = i1;
   i3 = i10;
   i5 = i2;
  } else {
   i13 = i12;
   i8 = i11;
   continue;
  }
  while (1) {
   if ((i6 | 0) == (i19 | 0)) {
    i13 = i12;
    i10 = i3;
    i8 = i11;
    continue L17;
   }
   if ((HEAP8[i5 >> 0] | 0) == 2) {
    i4 = HEAP8[i6 >> 0] | 0;
    if (!(i4 & 1)) i4 = (i4 & 255) >>> 1; else i4 = HEAP32[i6 + 4 >> 2] | 0;
    if ((i4 | 0) != (i12 | 0)) {
     HEAP8[i5 >> 0] = 0;
     i3 = i3 + -1 | 0;
    }
   }
   i6 = i6 + 12 | 0;
   i5 = i5 + 1 | 0;
  }
 }
 do if (i4) {
  i3 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i3 = HEAP32[i3 >> 2] | 0;
  if ((i3 | 0) == -1) {
   HEAP32[i16 >> 2] = 0;
   i4 = 1;
   break;
  } else {
   i4 = (HEAP32[i16 >> 2] | 0) == 0;
   break;
  }
 } else i4 = 1; while (0);
 do if (i5) {
  i3 = HEAP32[i5 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i3 = HEAP32[i3 >> 2] | 0;
  if ((i3 | 0) != -1) if (i4) break; else {
   i21 = 77;
   break;
  } else {
   HEAP32[i17 >> 2] = 0;
   i21 = 41;
   break;
  }
 } else i21 = 41; while (0);
 if ((i21 | 0) == 41) if (i4) i21 = 77;
 if ((i21 | 0) == 77) HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 2;
 while (1) {
  if ((i1 | 0) == (i19 | 0)) {
   i21 = 81;
   break;
  }
  if ((HEAP8[i2 >> 0] | 0) == 2) break;
  i1 = i1 + 12 | 0;
  i2 = i2 + 1 | 0;
 }
 if ((i21 | 0) == 81) {
  HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 4;
  i1 = i19;
 }
 _free(i20);
 STACKTOP = i22;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri(i1, i10, i9, i11) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i9 = i9 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i6 = i12 + 24 | 0;
 i7 = i12 + 12 | 0;
 i8 = i12;
 L1 : do if (i1 >>> 0 < i10 >>> 0) {
  L3 : do if ((HEAP8[i1 >> 0] | 0) != 95) {
   if ((__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i10, i9) | 0) != (i10 | 0)) {
    HEAP32[i11 >> 2] = -2;
    break L1;
   }
  } else {
   i3 = i10;
   if ((i3 - i1 | 0) <= 3) {
    HEAP32[i11 >> 2] = -2;
    break L1;
   }
   switch (HEAP8[i1 + 1 >> 0] | 0) {
   case 90:
    {
     i5 = i1 + 2 | 0;
     i1 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i5, i10, i9) | 0;
     if (!((i1 | 0) == (i5 | 0) | (i1 | 0) == (i10 | 0)) ? (HEAP8[i1 >> 0] | 0) == 46 : 0) {
      i2 = HEAP32[i9 + 4 >> 2] | 0;
      if ((HEAP32[i9 >> 2] | 0) != (i2 | 0)) {
       i5 = i2 + -24 | 0;
       i3 = i3 - i1 | 0;
       if (i3 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i8);
       if (i3 >>> 0 < 11) {
        HEAP8[i8 >> 0] = i3 << 1;
        i4 = i8 + 1 | 0;
       } else {
        i2 = i3 + 16 & -16;
        i4 = _malloc(i2) | 0;
        HEAP32[i8 + 8 >> 2] = i4;
        HEAP32[i8 >> 2] = i2 | 1;
        HEAP32[i8 + 4 >> 2] = i3;
       }
       i2 = i4;
       while (1) {
        if ((i1 | 0) == (i10 | 0)) break;
        HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
        i1 = i1 + 1 | 0;
        i2 = i2 + 1 | 0;
       }
       HEAP8[i4 + i3 >> 0] = 0;
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i8, 0, 38519) | 0;
       HEAP32[i7 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i7 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i7 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i7, 38469) | 0;
       HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i6 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
       HEAP32[i6 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
       i2 = 0;
       while (1) {
        if ((i2 | 0) == 3) break;
        HEAP32[i1 + (i2 << 2) >> 2] = 0;
        i2 = i2 + 1 | 0;
       }
       i1 = HEAP8[i6 >> 0] | 0;
       i4 = (i1 & 1) == 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i5, i4 ? i6 + 1 | 0 : HEAP32[i6 + 8 >> 2] | 0, i4 ? (i1 & 255) >>> 1 : HEAP32[i6 + 4 >> 2] | 0) | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
       i1 = i10;
      }
     }
     if ((i1 | 0) == (i10 | 0)) break L3;
     HEAP32[i11 >> 2] = -2;
     break L1;
    }
   case 95:
    {
     if ((HEAP8[i1 + 2 >> 0] | 0) == 95 ? (HEAP8[i1 + 3 >> 0] | 0) == 90 : 0) {
      i8 = i1 + 4 | 0;
      i1 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i8, i10, i9) | 0;
      if ((i1 | 0) == (i8 | 0) | (i1 | 0) == (i10 | 0)) {
       HEAP32[i11 >> 2] = -2;
       break L1;
      }
      L43 : do if ((i3 - i1 | 0) > 12) {
       i3 = 0;
       i2 = i1;
       while (1) {
        if ((i3 | 0) >= 13) break;
        if ((HEAP8[i2 >> 0] | 0) != (HEAP8[39996 + i3 >> 0] | 0)) break L43;
        i3 = i3 + 1 | 0;
        i2 = i2 + 1 | 0;
       }
       L49 : do if ((i2 | 0) == (i10 | 0)) i2 = i10; else {
        if ((HEAP8[i2 >> 0] | 0) == 95) {
         i3 = i2 + 1 | 0;
         if ((i3 | 0) == (i10 | 0)) break L43;
         if (((HEAP8[i3 >> 0] | 0) + -48 | 0) >>> 0 >= 10) break L43;
         i2 = i2 + 2 | 0;
        }
        while (1) {
         if ((i2 | 0) == (i10 | 0)) {
          i2 = i10;
          break L49;
         }
         if (((HEAP8[i2 >> 0] | 0) + -48 | 0) >>> 0 >= 10) break L49;
         i2 = i2 + 1 | 0;
        }
       } while (0);
       i3 = HEAP32[i9 + 4 >> 2] | 0;
       if ((HEAP32[i9 >> 2] | 0) != (i3 | 0)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i3 + -24 | 0, 0, 40010) | 0;
        i1 = i2;
       }
      } while (0);
      if ((i1 | 0) == (i10 | 0)) break L3;
      HEAP32[i11 >> 2] = -2;
      break L1;
     }
     break;
    }
   default:
    {}
   }
   HEAP32[i11 >> 2] = -2;
   break L1;
  } while (0);
  if ((HEAP32[i11 >> 2] | 0) == 0 ? (HEAP32[i9 >> 2] | 0) == (HEAP32[i9 + 4 >> 2] | 0) : 0) HEAP32[i11 >> 2] = -2;
 } else HEAP32[i11 >> 2] = -2; while (0);
 STACKTOP = i12;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 i15 = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 HEAP32[i17 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 i15 = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 HEAP32[i17 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZN4wasm10WasmWalkerIZZNS_15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizer10visitBlockEPNS_5BlockEE11BreakSeekervE4walkERPNS_10ExpressionE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i1 = HEAP32[i6 >> 2] | 0;
 if (i1 | 0) {
  L3 : do switch (HEAP32[i1 >> 2] | 0) {
  case 0:
   {
    _abort();
    break;
   }
  case 1:
   {
    i4 = i1 + 12 | 0;
    i1 = i1 + 16 | 0;
    i3 = 0;
    while (1) {
     i2 = HEAP32[i4 >> 2] | 0;
     if (i3 >>> 0 >= (HEAP32[i1 >> 2] | 0) - i2 >> 2 >>> 0) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i2 + (i3 << 2) | 0);
     i3 = i3 + 1 | 0;
    }
   }
  case 2:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 8 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 12 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 16 | 0);
    break;
   }
  case 3:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 16 | 0);
    break;
   }
  case 4:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 16 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 12 | 0);
    break;
   }
  case 5:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 12 | 0);
    i2 = HEAP32[i1 + 36 >> 2] | 0;
    i1 = HEAP32[i1 + 32 >> 2] | 0;
    while (1) {
     if ((i1 | 0) == (i2 | 0)) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 4 | 0);
     i1 = i1 + 8 | 0;
    }
   }
  case 6:
   {
    i4 = i1 + 12 | 0;
    i1 = i1 + 8 | 0;
    i3 = 0;
    while (1) {
     i2 = HEAP32[i1 >> 2] | 0;
     if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i2 + (i3 << 2) | 0);
     i3 = i3 + 1 | 0;
    }
   }
  case 7:
   {
    i4 = i1 + 12 | 0;
    i1 = i1 + 8 | 0;
    i3 = 0;
    while (1) {
     i2 = HEAP32[i1 >> 2] | 0;
     if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i2 + (i3 << 2) | 0);
     i3 = i3 + 1 | 0;
    }
   }
  case 8:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 24 | 0);
    i4 = i1 + 12 | 0;
    i1 = i1 + 8 | 0;
    i3 = 0;
    while (1) {
     i2 = HEAP32[i1 >> 2] | 0;
     if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i2 + (i3 << 2) | 0);
     i3 = i3 + 1 | 0;
    }
   }
  case 20:
  case 19:
  case 13:
  case 9:
   break;
  case 10:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 12 | 0);
    break;
   }
  case 11:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 24 | 0);
    break;
   }
  case 12:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 20 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 24 | 0);
    break;
   }
  case 14:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 12 | 0);
    break;
   }
  case 15:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 12 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 16 | 0);
    break;
   }
  case 16:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 8 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 12 | 0);
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 16 | 0);
    break;
   }
  case 17:
   {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i1 + 8 | 0);
    break;
   }
  case 18:
   {
    i4 = i1 + 20 | 0;
    i1 = i1 + 16 | 0;
    i3 = 0;
    while (1) {
     i2 = HEAP32[i1 >> 2] | 0;
     if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break L3;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i2 + (i3 << 2) | 0);
     i3 = i3 + 1 | 0;
    }
   }
  default:
   {}
  } while (0);
  i1 = HEAP32[i6 >> 2] | 0;
  if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
  switch (HEAP32[i1 >> 2] | 0) {
  case 0:
   {
    _abort();
    break;
   }
  case 20:
  case 19:
  case 18:
  case 17:
  case 16:
  case 15:
  case 14:
  case 13:
  case 12:
  case 11:
  case 10:
  case 9:
  case 8:
  case 7:
  case 6:
  case 5:
  case 3:
  case 2:
  case 1:
   break;
  case 4:
   {
    if ((HEAP32[i1 + 8 >> 2] | 0) == (HEAP32[i5 + 8 >> 2] | 0)) {
     i4 = i5 + 12 | 0;
     HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
    }
    break;
   }
  default:
   {}
  }
  i1 = i5 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 | 0) {
   HEAP32[i6 >> 2] = i2;
   HEAP32[i1 >> 2] = 0;
  }
 }
 return;
}

function _try_realloc_chunk(i14, i13) {
 i14 = i14 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = i14 + 4 | 0;
 i12 = HEAP32[i11 >> 2] | 0;
 i1 = i12 & -8;
 i8 = i14 + i1 | 0;
 i6 = HEAP32[10390] | 0;
 i2 = i12 & 3;
 if (!((i2 | 0) != 1 & i14 >>> 0 >= i6 >>> 0 & i14 >>> 0 < i8 >>> 0)) _abort();
 i3 = HEAP32[i8 + 4 >> 2] | 0;
 if (!(i3 & 1)) _abort();
 if (!i2) {
  if (i13 >>> 0 < 256) {
   i14 = 0;
   return i14 | 0;
  }
  if (i1 >>> 0 >= (i13 + 4 | 0) >>> 0 ? (i1 - i13 | 0) >>> 0 <= HEAP32[10506] << 1 >>> 0 : 0) return i14 | 0;
  i14 = 0;
  return i14 | 0;
 }
 if (i1 >>> 0 >= i13 >>> 0) {
  i1 = i1 - i13 | 0;
  if (i1 >>> 0 <= 15) return i14 | 0;
  i10 = i14 + i13 | 0;
  HEAP32[i11 >> 2] = i12 & 1 | i13 | 2;
  HEAP32[i10 + 4 >> 2] = i1 | 3;
  i13 = i10 + i1 + 4 | 0;
  HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 1;
  _dispose_chunk(i10, i1);
  return i14 | 0;
 }
 if ((i8 | 0) == (HEAP32[10392] | 0)) {
  i1 = (HEAP32[10389] | 0) + i1 | 0;
  if (i1 >>> 0 <= i13 >>> 0) {
   i14 = 0;
   return i14 | 0;
  }
  i10 = i1 - i13 | 0;
  i9 = i14 + i13 | 0;
  HEAP32[i11 >> 2] = i12 & 1 | i13 | 2;
  HEAP32[i9 + 4 >> 2] = i10 | 1;
  HEAP32[10392] = i9;
  HEAP32[10389] = i10;
  return i14 | 0;
 }
 if ((i8 | 0) == (HEAP32[10391] | 0)) {
  i2 = (HEAP32[10388] | 0) + i1 | 0;
  if (i2 >>> 0 < i13 >>> 0) {
   i14 = 0;
   return i14 | 0;
  }
  i1 = i2 - i13 | 0;
  if (i1 >>> 0 > 15) {
   i2 = i14 + i13 | 0;
   i10 = i2 + i1 | 0;
   HEAP32[i11 >> 2] = i12 & 1 | i13 | 2;
   HEAP32[i2 + 4 >> 2] = i1 | 1;
   HEAP32[i10 >> 2] = i1;
   i13 = i10 + 4 | 0;
   HEAP32[i13 >> 2] = HEAP32[i13 >> 2] & -2;
  } else {
   HEAP32[i11 >> 2] = i12 & 1 | i2 | 2;
   i2 = i14 + i2 + 4 | 0;
   HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1;
   i2 = 0;
   i1 = 0;
  }
  HEAP32[10388] = i1;
  HEAP32[10391] = i2;
  return i14 | 0;
 }
 if (i3 & 2 | 0) {
  i14 = 0;
  return i14 | 0;
 }
 i9 = (i3 & -8) + i1 | 0;
 if (i9 >>> 0 < i13 >>> 0) {
  i14 = 0;
  return i14 | 0;
 }
 i10 = i9 - i13 | 0;
 i4 = i3 >>> 3;
 do if (i3 >>> 0 >= 256) {
  i5 = HEAP32[i8 + 24 >> 2] | 0;
  i3 = HEAP32[i8 + 12 >> 2] | 0;
  do if ((i3 | 0) == (i8 | 0)) {
   i2 = i8 + 16 | 0;
   i3 = i2 + 4 | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i7 = 0;
     break;
    }
   } else i2 = i3;
   while (1) {
    i3 = i1 + 20 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (i4 | 0) {
     i1 = i4;
     i2 = i3;
     continue;
    }
    i3 = i1 + 16 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (!i4) break; else {
     i1 = i4;
     i2 = i3;
    }
   }
   if (i2 >>> 0 < i6 >>> 0) _abort(); else {
    HEAP32[i2 >> 2] = 0;
    i7 = i1;
    break;
   }
  } else {
   i4 = HEAP32[i8 + 8 >> 2] | 0;
   if (i4 >>> 0 < i6 >>> 0) _abort();
   i1 = i4 + 12 | 0;
   if ((HEAP32[i1 >> 2] | 0) != (i8 | 0)) _abort();
   i2 = i3 + 8 | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i8 | 0)) {
    HEAP32[i1 >> 2] = i3;
    HEAP32[i2 >> 2] = i4;
    i7 = i3;
    break;
   } else _abort();
  } while (0);
  if (i5 | 0) {
   i1 = HEAP32[i8 + 28 >> 2] | 0;
   i2 = 41848 + (i1 << 2) | 0;
   if ((i8 | 0) == (HEAP32[i2 >> 2] | 0)) {
    HEAP32[i2 >> 2] = i7;
    if (!i7) {
     HEAP32[10387] = HEAP32[10387] & ~(1 << i1);
     break;
    }
   } else {
    if (i5 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort();
    i1 = i5 + 16 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i8 | 0)) HEAP32[i1 >> 2] = i7; else HEAP32[i5 + 20 >> 2] = i7;
    if (!i7) break;
   }
   i3 = HEAP32[10390] | 0;
   if (i7 >>> 0 < i3 >>> 0) _abort();
   HEAP32[i7 + 24 >> 2] = i5;
   i1 = i8 + 16 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
    HEAP32[i7 + 16 >> 2] = i2;
    HEAP32[i2 + 24 >> 2] = i7;
    break;
   } while (0);
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   if (i1 | 0) if (i1 >>> 0 < (HEAP32[10390] | 0) >>> 0) _abort(); else {
    HEAP32[i7 + 20 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i7;
    break;
   }
  }
 } else {
  i2 = HEAP32[i8 + 8 >> 2] | 0;
  i3 = HEAP32[i8 + 12 >> 2] | 0;
  i1 = 41584 + (i4 << 1 << 2) | 0;
  if ((i2 | 0) != (i1 | 0)) {
   if (i2 >>> 0 < i6 >>> 0) _abort();
   if ((HEAP32[i2 + 12 >> 2] | 0) != (i8 | 0)) _abort();
  }
  if ((i3 | 0) == (i2 | 0)) {
   HEAP32[10386] = HEAP32[10386] & ~(1 << i4);
   break;
  }
  if ((i3 | 0) != (i1 | 0)) {
   if (i3 >>> 0 < i6 >>> 0) _abort();
   i1 = i3 + 8 | 0;
   if ((HEAP32[i1 >> 2] | 0) == (i8 | 0)) i5 = i1; else _abort();
  } else i5 = i3 + 8 | 0;
  HEAP32[i2 + 12 >> 2] = i3;
  HEAP32[i5 >> 2] = i2;
 } while (0);
 if (i10 >>> 0 < 16) {
  HEAP32[i11 >> 2] = i9 | i12 & 1 | 2;
  i13 = i14 + i9 + 4 | 0;
  HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 1;
  return i14 | 0;
 } else {
  i9 = i14 + i13 | 0;
  HEAP32[i11 >> 2] = i12 & 1 | i13 | 2;
  HEAP32[i9 + 4 >> 2] = i10 | 3;
  i13 = i9 + i10 + 4 | 0;
  HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 1;
  _dispose_chunk(i9, i10);
  return i14 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 i15 = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP16[i17 >> 1] = i15;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 i15 = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 i15 = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i11 = i20 + 200 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i2;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP32[i3 >> 2] | 0;
 i3 = HEAP32[i21 >> 2] | 0;
 L13 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i21 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) {
    i6 = i4;
    break;
   } else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 23;
    break;
   }
  } else i24 = 23; while (0);
  if ((i24 | 0) == 23) {
   i24 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i6 = 0;
  }
  i4 = HEAP8[i18 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i4 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
   i2 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i2 + i4;
  }
  i4 = i3 + 12 | 0;
  i1 = HEAP32[i4 >> 2] | 0;
  i5 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i1, i14, i2, i15, i12, i7, i19, i16, i13, i11) | 0) {
   i4 = i6;
   break;
  }
  i1 = HEAP32[i4 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i5 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i4 >> 2] = i1 + 4;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i1 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i1 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i1 >> 2] = i11;
  i1 = i12;
 }
 i15 = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji(i2, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i1, i23);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i21 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i24 = 53;
   break;
  } else {
   HEAP32[i22 >> 2] = 0;
   i24 = 51;
   break;
  }
 } else i24 = 51; while (0);
 if ((i24 | 0) == 51 ? i2 : 0) i24 = 53;
 if ((i24 | 0) == 53) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0, d27 = 0.0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 i12 = i22 + 208 | 0;
 i3 = i22 + 200 | 0;
 i4 = i22 + 196 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 337 | 0;
 i13 = i22 + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i2;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP32[i3 >> 2] | 0;
 i7 = HEAP32[i4 >> 2] | 0;
 i3 = HEAP32[i23 >> 2] | 0;
 L8 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i23 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 19;
    break;
   }
  } else i26 = 19; while (0);
  if ((i26 | 0) == 19) {
   i26 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i2 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
   i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i2 + i5;
  }
  i5 = i3 + 12 | 0;
  i1 = HEAP32[i5 >> 2] | 0;
  i6 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i1, i16, i13, i2, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i1 = HEAP32[i5 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i1 + 4;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i1 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i1 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i1 >> 2] = i14;
  i1 = i16;
 }
 d27 = +__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj(i2, HEAP32[i17 >> 2] | 0, i25);
 HEAPF32[i19 >> 2] = d27;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i1, i25);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i23 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i26 = 49;
   break;
  } else {
   HEAP32[i24 >> 2] = 0;
   i26 = 47;
   break;
  }
 } else i26 = 47; while (0);
 if ((i26 | 0) == 47 ? i2 : 0) i26 = 49;
 if ((i26 | 0) == 49) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0, d27 = 0.0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 i12 = i22 + 208 | 0;
 i3 = i22 + 200 | 0;
 i4 = i22 + 196 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 337 | 0;
 i13 = i22 + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i2;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP32[i3 >> 2] | 0;
 i7 = HEAP32[i4 >> 2] | 0;
 i3 = HEAP32[i23 >> 2] | 0;
 L8 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i23 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 19;
    break;
   }
  } else i26 = 19; while (0);
  if ((i26 | 0) == 19) {
   i26 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i2 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
   i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i2 + i5;
  }
  i5 = i3 + 12 | 0;
  i1 = HEAP32[i5 >> 2] | 0;
  i6 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i1, i16, i13, i2, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i1 = HEAP32[i5 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i1 + 4;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i1 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i1 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i1 >> 2] = i14;
  i1 = i16;
 }
 d27 = +__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj(i2, HEAP32[i17 >> 2] | 0, i25);
 HEAPF64[i19 >> 3] = d27;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i1, i25);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i23 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i26 = 49;
   break;
  } else {
   HEAP32[i24 >> 2] = 0;
   i26 = 47;
   break;
  }
 } else i26 = 47; while (0);
 if ((i26 | 0) == 47 ? i2 : 0) i26 = 49;
 if ((i26 | 0) == 49) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0, d27 = 0.0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 i12 = i22 + 208 | 0;
 i3 = i22 + 200 | 0;
 i4 = i22 + 196 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 337 | 0;
 i13 = i22 + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i2;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP32[i3 >> 2] | 0;
 i7 = HEAP32[i4 >> 2] | 0;
 i3 = HEAP32[i23 >> 2] | 0;
 L8 : while (1) {
  if (i3) {
   i1 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i23 >> 2] = 0;
    i3 = 0;
    i5 = 1;
   } else i5 = 0;
  } else {
   i3 = 0;
   i5 = 1;
  }
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   i1 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i5) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 19;
    break;
   }
  } else i26 = 19; while (0);
  if ((i26 | 0) == 19) {
   i26 = 0;
   if (i5) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i2 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
   i2 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i2 + i5;
  }
  i5 = i3 + 12 | 0;
  i1 = HEAP32[i5 >> 2] | 0;
  i6 = i3 + 16 | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i1, i16, i13, i2, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i1 = HEAP32[i5 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i1 + 4;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i1 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i1 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i1 >> 2] = i14;
  i1 = i16;
 }
 d27 = +__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj(i2, HEAP32[i17 >> 2] | 0, i25);
 HEAPF64[i19 >> 3] = d27;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i1, i25);
 if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i23 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i4) {
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i26 = 49;
   break;
  } else {
   HEAP32[i24 >> 2] = 0;
   i26 = 47;
   break;
  }
 } else i26 = 47; while (0);
 if ((i26 | 0) == 47 ? i2 : 0) i26 = 49;
 if ((i26 | 0) == 49) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function _call_from_js(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i19 = i21 + 64 | 0;
 i1 = i21 + 100 | 0;
 i3 = i21 + 104 | 0;
 i4 = i21 + 84 | 0;
 i17 = i21 + 88 | 0;
 i13 = i21 + 32 | 0;
 i14 = i21 + 16 | 0;
 i15 = i21;
 i18 = i21 + 48 | 0;
 i16 = i21 + 80 | 0;
 if (HEAP8[45016] | 0) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42128, 15116) | 0, i2) | 0, 10) | 0;
 __ZN6cashew7IStringC2EPKcb(i1, i2, 1);
 i11 = (HEAP32[HEAP32[10254] >> 2] | 0) + 72 | 0;
 i12 = HEAP32[i1 >> 2] | 0;
 HEAP32[i3 >> 2] = i12;
 i11 = __ZNSt3__13mapIN4wasm4NameEPNS1_6ExportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixEOS2_(i11, i3) | 0;
 i1 = (HEAP32[HEAP32[10254] >> 2] | 0) + 84 | 0;
 HEAP32[i4 >> 2] = HEAP32[(HEAP32[i11 >> 2] | 0) + 4 >> 2];
 i1 = __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixEOS2_(i1, i4) | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 if (!i1) ___assert_fail(30907, 15130, 361, 15146);
 i10 = _emscripten_asm_const_i(8) | 0;
 i11 = i1 + 8 | 0;
 i2 = (HEAP32[i1 + 12 >> 2] | 0) - (HEAP32[i11 >> 2] | 0) >> 3;
 HEAP32[i17 >> 2] = 0;
 i3 = i17 + 4 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i17 + 8 >> 2] = 0;
 i4 = i13 + 8 | 0;
 i6 = i17 + 8 | 0;
 i7 = i14 + 8 | 0;
 i8 = i15 + 8 | 0;
 i9 = 0;
 L7 : while (1) {
  if (i9 >>> 0 >= i2 >>> 0) break;
  L10 : do switch (HEAP32[(HEAP32[i11 >> 2] | 0) + (i9 << 3) + 4 >> 2] | 0) {
  case 1:
   {
    if (i9 >>> 0 < i10 >>> 0) i1 = _emscripten_asm_const_ii(9, i9 | 0) | 0; else i1 = 0;
    HEAP32[i13 >> 2] = 1;
    HEAP32[i4 >> 2] = i1;
    i1 = HEAP32[i3 >> 2] | 0;
    if (i1 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) {
     HEAP32[i1 >> 2] = HEAP32[i13 >> 2];
     HEAP32[i1 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
     HEAP32[i1 + 8 >> 2] = HEAP32[i13 + 8 >> 2];
     HEAP32[i1 + 12 >> 2] = HEAP32[i13 + 12 >> 2];
     HEAP32[i3 >> 2] = i1 + 16;
     break L10;
    } else {
     __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i17, i13);
     break L10;
    }
   }
  case 3:
   {
    if (i9 >>> 0 < i10 >>> 0) d5 = +_emscripten_asm_const_di(9, i9 | 0); else d5 = 0.0;
    HEAP32[i14 >> 2] = 3;
    HEAPF32[i7 >> 2] = d5;
    i1 = HEAP32[i3 >> 2] | 0;
    if (i1 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) {
     HEAP32[i1 >> 2] = HEAP32[i14 >> 2];
     HEAP32[i1 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
     HEAP32[i1 + 8 >> 2] = HEAP32[i14 + 8 >> 2];
     HEAP32[i1 + 12 >> 2] = HEAP32[i14 + 12 >> 2];
     HEAP32[i3 >> 2] = i1 + 16;
     break L10;
    } else {
     __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i17, i14);
     break L10;
    }
   }
  case 4:
   {
    if (i9 >>> 0 < i10 >>> 0) d5 = +_emscripten_asm_const_di(9, i9 | 0); else d5 = 0.0;
    HEAP32[i15 >> 2] = 4;
    HEAPF64[i8 >> 3] = d5;
    i1 = HEAP32[i3 >> 2] | 0;
    if (i1 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) {
     HEAP32[i1 >> 2] = HEAP32[i15 >> 2];
     HEAP32[i1 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
     HEAP32[i1 + 8 >> 2] = HEAP32[i15 + 8 >> 2];
     HEAP32[i1 + 12 >> 2] = HEAP32[i15 + 12 >> 2];
     HEAP32[i3 >> 2] = i1 + 16;
     break L10;
    } else {
     __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i17, i15);
     break L10;
    }
   }
  default:
   {
    i20 = 24;
    break L7;
   }
  } while (0);
  i9 = i9 + 1 | 0;
 }
 if ((i20 | 0) == 24) _abort();
 i20 = HEAP32[10254] | 0;
 HEAP32[i16 >> 2] = i12;
 HEAP32[i19 >> 2] = HEAP32[i16 >> 2];
 __ZN4wasm14ModuleInstance10callExportEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEE(i18, i20, i19, i17);
 if (HEAP8[45016] | 0) {
  i20 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42128, 15240) | 0;
  HEAP32[i19 >> 2] = HEAP32[i18 >> 2];
  HEAP32[i19 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
  HEAP32[i19 + 8 >> 2] = HEAP32[i18 + 8 >> 2];
  HEAP32[i19 + 12 >> 2] = HEAP32[i18 + 12 >> 2];
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_7LiteralE(i20, i19) | 0, 10) | 0;
 }
 switch (HEAP32[i18 >> 2] | 0) {
 case 0:
  {
   _emscripten_asm_const_v(10);
   break;
  }
 case 1:
  {
   _emscripten_asm_const_ii(11, __ZNK4wasm7Literal6geti32Ev(i18) | 0) | 0;
   break;
  }
 case 3:
  {
   _emscripten_asm_const_id(11, +(+__ZNK4wasm7Literal6getf32Ev(i18))) | 0;
   break;
  }
 case 4:
  {
   _emscripten_asm_const_id(11, +(+__ZNK4wasm7Literal6getf64Ev(i18))) | 0;
   break;
  }
 default:
  _abort();
 }
 __ZNSt3__113__vector_baseIN4wasm7LiteralENS_9allocatorIS2_EEED2Ev(i17);
 STACKTOP = i21;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(i1, i20, i21, i3, i22, i16) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i3 = i3 | 0;
 i22 = i22 | 0;
 i16 = i16 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0, i18 = 0, i19 = 0, i23 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 i15 = i19;
 i10 = i19 + 208 | 0;
 i18 = i19 + 196 | 0;
 i1 = i19 + 180 | 0;
 i17 = i19 + 184 | 0;
 i14 = i19 + 176 | 0;
 i12 = i19 + 16 | 0;
 i13 = i19 + 8 | 0;
 i11 = i19 + 4 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i18 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i9 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 HEAP32[i1 >> 2] = i9;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43120) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 7](i1, 35270, 35296, i10) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i17 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i17 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i17 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i1, 0);
 i8 = i17 + 8 | 0;
 i9 = i17 + 1 | 0;
 i1 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i14 >> 2] = i1;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i11 >> 2] = 0;
 i7 = i17 + 4 | 0;
 i3 = HEAP32[i20 >> 2] | 0;
 L12 : while (1) {
  if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = HEAP32[i2 >> 2] | 0;
   if ((i2 | 0) == -1) {
    HEAP32[i20 >> 2] = 0;
    i2 = 0;
    i5 = 1;
   } else {
    i2 = i3;
    i5 = 0;
   }
  } else {
   i2 = 0;
   i5 = 1;
  }
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   i4 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i4 = HEAP32[i4 >> 2] | 0;
   if ((i4 | 0) != -1) if (i5) break; else break L12; else {
    HEAP32[i21 >> 2] = 0;
    i23 = 22;
    break;
   }
  } else i23 = 22; while (0);
  if ((i23 | 0) == 22) {
   i23 = 0;
   if (i5) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i4 = HEAP8[i17 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i7 >> 2] | 0;
  if ((HEAP32[i14 >> 2] | 0) == (i1 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i4 << 1, 0);
   if (!(HEAP8[i17 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i17 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i1, 0);
   i1 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + i4;
  }
  i5 = i2 + 12 | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  i6 = i2 + 16 | 0;
  if ((i4 | 0) == (HEAP32[i6 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i4 = HEAP32[i4 >> 2] | 0;
  if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i4, 16, i1, i14, i11, 0, i18, i12, i13, i10) | 0) break;
  i3 = HEAP32[i5 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
   i3 = i2;
   continue;
  } else {
   HEAP32[i5 >> 2] = i3 + 4;
   i3 = i2;
   continue;
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, (HEAP32[i14 >> 2] | 0) - i1 | 0, 0);
 i13 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 i14 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i15 >> 2] = i16;
 if ((__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z(i13, i14, 35305, i15) | 0) != 1) HEAP32[i22 >> 2] = 4;
 if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i20 >> 2] = 0;
   i2 = 1;
  } else i2 = 0;
 } else i2 = 1;
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i23 = 51;
   break;
  } else {
   HEAP32[i21 >> 2] = 0;
   i23 = 49;
   break;
  }
 } else i23 = 49; while (0);
 if ((i23 | 0) == 49 ? i2 : 0) i23 = 51;
 if ((i23 | 0) == 51) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i23 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 STACKTOP = i19;
 return i23 | 0;
}

function __ZZN4wasm15Asm2WasmBuilder10processAsmEN6cashew3RefEENK3__0clENS1_7IStringES2_NS_8WasmTypeE(i2, i6, i7, i1) {
 i2 = i2 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i11 = i15 + 28 | 0;
 i10 = i15 + 24 | 0;
 i9 = i15 + 20 | 0;
 i4 = i15 + 16 | 0;
 i3 = i15 + 12 | 0;
 i12 = i15 + 8 | 0;
 i13 = i15 + 4 | 0;
 i14 = i15;
 i8 = HEAP32[i2 >> 2] | 0;
 if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i7, 0) | 0, 41340) | 0)) ___assert_fail(15510, 13478, 435, 38640);
 i2 = __ZN6cashew3RefixEj(i7, 1) | 0;
 HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
 do if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i4, 0) | 0, 41340) | 0)) if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i4, 0) | 0, 41056) | 0) {
  i2 = __ZN6cashew3RefixEj(i4, 1) | 0;
  i2 = __ZN6cashew5Value10getIStringEv(HEAP32[i2 >> 2] | 0) | 0;
  i2 = HEAP32[i2 >> 2] | 0;
  i5 = 39;
  break;
 } else ___assert_fail(15686, 13478, 477, 38640); else {
  if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 1) | 0, 0) | 0, 41056) | 0)) ___assert_fail(15529, 13478, 440, 38640);
  if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i4, 2) | 0, 40772) | 0) {
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i7, 2) | 0, 40776) | 0) {
    i2 = i8 + 72 | 0;
    if (!(HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
     break;
    } else ___assert_fail(15550, 13478, 443, 38640);
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i7, 2) | 0, 40780) | 0) {
    i2 = i8 + 76 | 0;
    if (!(HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
     break;
    } else ___assert_fail(15569, 13478, 447, 38640);
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i7, 2) | 0, 40784) | 0) {
    i2 = i8 + 80 | 0;
    if (!(HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
     break;
    } else ___assert_fail(15589, 13478, 451, 38640);
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i7, 2) | 0, 40804) | 0) {
    i2 = i8 + 84 | 0;
    if (!(HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
     break;
    } else ___assert_fail(15610, 13478, 455, 38640);
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i7, 2) | 0, 40808) | 0) {
    i2 = i8 + 88 | 0;
    if (!(HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
     break;
    } else ___assert_fail(15628, 13478, 459, 38640);
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i7, 2) | 0, 40812) | 0) {
    i2 = i8 + 92 | 0;
    if (!(HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
     break;
    } else ___assert_fail(15648, 13478, 463, 38640);
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i7, 2) | 0, 40816) | 0) {
    i2 = i8 + 96 | 0;
    if (!(HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
     break;
    } else ___assert_fail(15667, 13478, 467, 38640);
   }
  }
  i2 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 1) | 0, 1) | 0;
  i2 = __ZN6cashew5Value10getCStringEv(HEAP32[i2 >> 2] | 0) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i11, i2, _strlen(i2) | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i11, 46);
  i2 = __ZN6cashew3RefixEj(i4, 2) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(i11, __ZN6cashew5Value10getCStringEv(HEAP32[i2 >> 2] | 0) | 0) | 0;
  __ZN6cashew7IStringC2EPKcb(i3, (HEAP8[i11 >> 0] & 1) == 0 ? i11 + 1 | 0 : HEAP32[i11 + 8 >> 2] | 0, 0);
  i2 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  i5 = 39;
 } while (0);
 do if ((i5 | 0) == 39) {
  i4 = __ZN10MixedArena5allocIN4wasm6ImportEEEPT_v(HEAP32[i8 + 4 >> 2] | 0) | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  HEAP32[i4 >> 2] = i5;
  i6 = i4 + 4 | 0;
  HEAP32[i6 >> 2] = i2;
  i2 = __ZN6cashew3RefixEj(i7, 2) | 0;
  i2 = __ZN6cashew5Value10getIStringEv(HEAP32[i2 >> 2] | 0) | 0;
  i2 = HEAP32[i2 >> 2] | 0;
  HEAP32[i4 + 8 >> 2] = i2;
  i6 = HEAP32[i6 >> 2] | 0;
  i7 = i2;
  i3 = i6;
  if ((i6 | 0) == (HEAP32[10178] | 0) ? (i7 | 0) == (HEAP32[10179] | 0) | (i7 | 0) == (HEAP32[10180] | 0) : 0) i1 = 4; else if (!i1) {
   __ZN4wasm6Module9addImportEPNS_6ImportE(HEAP32[i8 >> 2] | 0, i4);
   break;
  }
  HEAP32[i12 >> 2] = i5;
  HEAP32[i13 >> 2] = i3;
  HEAP32[i14 >> 2] = i2;
  HEAP32[i9 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i10 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i11 >> 2] = HEAP32[i14 >> 2];
  __ZN4wasm15Asm2WasmBuilder14allocateGlobalEN6cashew7IStringENS_8WasmTypeEbS2_S2_(i8, i9, i1, 1, i10, i11);
 } while (0);
 STACKTOP = i15;
 return;
}

function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i14, i16, i15, i17, i19, i18, i1) {
 i14 = i14 | 0;
 i16 = i16 | 0;
 i15 = i15 | 0;
 i17 = i17 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i13 = i21;
 i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43120) | 0;
 i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43128) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 20 >> 2] & 127](i13, i10);
 HEAP32[i18 >> 2] = i17;
 i1 = HEAP8[i14 >> 0] | 0;
 switch (i1 << 24 >> 24) {
 case 43:
 case 45:
  {
   i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 44 >> 2] & 31](i12, i1) | 0;
   i2 = HEAP32[i18 >> 2] | 0;
   HEAP32[i18 >> 2] = i2 + 4;
   HEAP32[i2 >> 2] = i11;
   i2 = i14 + 1 | 0;
   break;
  }
 default:
  i2 = i14;
 }
 i11 = i15;
 L4 : do if ((i11 - i2 | 0) > 1 ? (HEAP8[i2 >> 0] | 0) == 48 : 0) {
  i1 = i2 + 1 | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    i1 = i2;
    i20 = 10;
    break L4;
   }
  }
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 44 >> 2] & 31](i12, 48) | 0;
  i9 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i9 + 4;
  HEAP32[i9 >> 2] = i8;
  i2 = i2 + 2 | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 44 >> 2] & 31](i12, HEAP8[i1 >> 0] | 0) | 0;
  i1 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i1 + 4;
  HEAP32[i1 >> 2] = i9;
  i1 = i2;
  while (1) {
   if (i1 >>> 0 >= i15 >>> 0) break L4;
   i9 = HEAP8[i1 >> 0] | 0;
   if (!(_isxdigit_l(i9, __ZNSt3__16__clocEv() | 0) | 0)) break L4;
   i1 = i1 + 1 | 0;
  }
 } else {
  i1 = i2;
  i20 = 10;
 } while (0);
 L12 : do if ((i20 | 0) == 10) while (1) {
  i20 = 0;
  if (i1 >>> 0 >= i15 >>> 0) break L12;
  i9 = HEAP8[i1 >> 0] | 0;
  if (!(_isdigit_l(i9, __ZNSt3__16__clocEv() | 0) | 0)) break L12;
  i1 = i1 + 1 | 0;
  i20 = 10;
 } while (0);
 i8 = HEAP8[i13 >> 0] | 0;
 i9 = i13 + 4 | 0;
 L18 : do if (((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) | 0) {
  L21 : do if ((i2 | 0) != (i1 | 0)) {
   i3 = i1;
   i4 = i2;
   while (1) {
    i3 = i3 + -1 | 0;
    if (i4 >>> 0 >= i3 >>> 0) break L21;
    i8 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = i8;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] & 127](i10) | 0;
  i6 = i13 + 8 | 0;
  i7 = i13 + 1 | 0;
  i3 = 0;
  i4 = 0;
  i8 = i2;
  while (1) {
   if (i8 >>> 0 >= i1 >>> 0) break;
   i22 = HEAP8[((HEAP8[i13 >> 0] & 1) == 0 ? i7 : HEAP32[i6 >> 2] | 0) + i4 >> 0] | 0;
   if (i22 << 24 >> 24 > 0 & (i3 | 0) == (i22 << 24 >> 24 | 0)) {
    i22 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = i22 + 4;
    HEAP32[i22 >> 2] = i5;
    i22 = HEAP8[i13 >> 0] | 0;
    i3 = 0;
    i4 = (i4 >>> 0 < (((i22 & 1) == 0 ? (i22 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) + -1 | 0) >>> 0 & 1) + i4 | 0;
   }
   i23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 44 >> 2] & 31](i12, HEAP8[i8 >> 0] | 0) | 0;
   i22 = HEAP32[i18 >> 2] | 0;
   HEAP32[i18 >> 2] = i22 + 4;
   HEAP32[i22 >> 2] = i23;
   i3 = i3 + 1 | 0;
   i8 = i8 + 1 | 0;
  }
  i2 = i17 + (i2 - i14 << 2) | 0;
  i4 = HEAP32[i18 >> 2] | 0;
  if ((i2 | 0) == (i4 | 0)) i3 = i12; else {
   i3 = i4;
   while (1) {
    i3 = i3 + -4 | 0;
    if (i2 >>> 0 >= i3 >>> 0) {
     i3 = i12;
     i2 = i4;
     break L18;
    }
    i23 = HEAP32[i2 >> 2] | 0;
    HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
    HEAP32[i3 >> 2] = i23;
    i2 = i2 + 4 | 0;
   }
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 48 >> 2] & 7](i12, i2, i1, HEAP32[i18 >> 2] | 0) | 0;
  i2 = (HEAP32[i18 >> 2] | 0) + (i1 - i2 << 2) | 0;
  HEAP32[i18 >> 2] = i2;
  i3 = i12;
 } while (0);
 while (1) {
  if (i1 >>> 0 >= i15 >>> 0) break;
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 == 46) {
   i20 = 29;
   break;
  }
  i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 44 >> 2] & 31](i12, i2) | 0;
  i23 = HEAP32[i18 >> 2] | 0;
  i2 = i23 + 4 | 0;
  HEAP32[i18 >> 2] = i2;
  HEAP32[i23 >> 2] = i22;
  i1 = i1 + 1 | 0;
 }
 if ((i20 | 0) == 29) {
  i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 127](i10) | 0;
  i23 = HEAP32[i18 >> 2] | 0;
  i2 = i23 + 4 | 0;
  HEAP32[i18 >> 2] = i2;
  HEAP32[i23 >> 2] = i22;
  i1 = i1 + 1 | 0;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 48 >> 2] & 7](i12, i1, i15, i2) | 0;
 i23 = (HEAP32[i18 >> 2] | 0) + (i11 - i1 << 2) | 0;
 HEAP32[i18 >> 2] = i23;
 HEAP32[i19 >> 2] = (i16 | 0) == (i15 | 0) ? i23 : i17 + (i16 - i14 << 2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
 STACKTOP = i21;
 return;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i16, i17, i1, i19, i15, i18, i14) {
 i16 = i16 | 0;
 i17 = i17 | 0;
 i1 = i1 | 0;
 i19 = i19 | 0;
 i15 = i15 | 0;
 i18 = i18 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i20 = 0, i21 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i3 = i22;
 i4 = (i19 - i1 | 0) / 12 | 0;
 if (i4 >>> 0 > 100) {
  i3 = _malloc(i4) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i20 = i3;
   i2 = i3;
  }
 } else {
  i20 = 0;
  i2 = i3;
 }
 i7 = i1;
 i3 = 0;
 i6 = i2;
 while (1) {
  if ((i7 | 0) == (i19 | 0)) break;
  i5 = HEAP8[i7 >> 0] | 0;
  if (!(i5 & 1)) i5 = (i5 & 255) >>> 1; else i5 = HEAP32[i7 + 4 >> 2] | 0;
  if (!i5) {
   HEAP8[i6 >> 0] = 2;
   i3 = i3 + 1 | 0;
   i4 = i4 + -1 | 0;
  } else HEAP8[i6 >> 0] = 1;
  i7 = i7 + 12 | 0;
  i6 = i6 + 1 | 0;
 }
 i13 = 0;
 i10 = i3;
 i8 = i4;
 L17 : while (1) {
  i3 = HEAP32[i16 >> 2] | 0;
  do if (i3) {
   if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) == -1) {
    HEAP32[i16 >> 2] = 0;
    i3 = 0;
    break;
   } else {
    i3 = HEAP32[i16 >> 2] | 0;
    break;
   }
  } else i3 = 0; while (0);
  i6 = (i3 | 0) == 0;
  i4 = HEAP32[i17 >> 2] | 0;
  if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
    HEAP32[i17 >> 2] = 0;
    i4 = 0;
   }
  } else i4 = 0;
  i5 = (i4 | 0) == 0;
  i3 = HEAP32[i16 >> 2] | 0;
  if (!((i8 | 0) != 0 & (i6 ^ i5))) break;
  i4 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i4 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i3 = HEAPU8[i4 >> 0] | 0;
  i3 = i3 & 255;
  if (!i14) i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 12 >> 2] & 31](i15, i3) | 0;
  i12 = i13 + 1 | 0;
  i7 = 0;
  i9 = i1;
  i11 = i8;
  i8 = i2;
  while (1) {
   if ((i9 | 0) == (i19 | 0)) break;
   do if ((HEAP8[i8 >> 0] | 0) == 1) {
    if (!(HEAP8[i9 >> 0] & 1)) i4 = i9 + 1 | 0; else i4 = HEAP32[i9 + 8 >> 2] | 0;
    i4 = HEAP8[i4 + i13 >> 0] | 0;
    if (!i14) i4 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i15 >> 2] | 0) + 12 >> 2] & 31](i15, i4) | 0;
    if (i3 << 24 >> 24 != i4 << 24 >> 24) {
     HEAP8[i8 >> 0] = 0;
     i4 = i7;
     i5 = i10;
     i6 = i11 + -1 | 0;
     break;
    }
    i4 = HEAP8[i9 >> 0] | 0;
    if (!(i4 & 1)) i4 = (i4 & 255) >>> 1; else i4 = HEAP32[i9 + 4 >> 2] | 0;
    if ((i4 | 0) == (i12 | 0)) {
     HEAP8[i8 >> 0] = 2;
     i4 = 1;
     i5 = i10 + 1 | 0;
     i6 = i11 + -1 | 0;
    } else {
     i4 = 1;
     i5 = i10;
     i6 = i11;
    }
   } else {
    i4 = i7;
    i5 = i10;
    i6 = i11;
   } while (0);
   i7 = i4;
   i9 = i9 + 12 | 0;
   i10 = i5;
   i11 = i6;
   i8 = i8 + 1 | 0;
  }
  if (!i7) {
   i13 = i12;
   i8 = i11;
   continue;
  }
  i3 = HEAP32[i16 >> 2] | 0;
  i4 = i3 + 12 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0; else HEAP32[i4 >> 2] = i5 + 1;
  if ((i10 + i11 | 0) >>> 0 > 1) {
   i6 = i1;
   i3 = i10;
   i5 = i2;
  } else {
   i13 = i12;
   i8 = i11;
   continue;
  }
  while (1) {
   if ((i6 | 0) == (i19 | 0)) {
    i13 = i12;
    i10 = i3;
    i8 = i11;
    continue L17;
   }
   if ((HEAP8[i5 >> 0] | 0) == 2) {
    i4 = HEAP8[i6 >> 0] | 0;
    if (!(i4 & 1)) i4 = (i4 & 255) >>> 1; else i4 = HEAP32[i6 + 4 >> 2] | 0;
    if ((i4 | 0) != (i12 | 0)) {
     HEAP8[i5 >> 0] = 0;
     i3 = i3 + -1 | 0;
    }
   }
   i6 = i6 + 12 | 0;
   i5 = i5 + 1 | 0;
  }
 }
 do if (i3) {
  if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) == -1) {
   HEAP32[i16 >> 2] = 0;
   i3 = 0;
   break;
  } else {
   i3 = HEAP32[i16 >> 2] | 0;
   break;
  }
 } else i3 = 0; while (0);
 i3 = (i3 | 0) == 0;
 do if (!i5) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i17 >> 2] = 0;
   i21 = 34;
   break;
  }
  if (!i3) i21 = 69;
 } else i21 = 34; while (0);
 if ((i21 | 0) == 34) if (i3) i21 = 69;
 if ((i21 | 0) == 69) HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 2;
 while (1) {
  if ((i1 | 0) == (i19 | 0)) {
   i21 = 73;
   break;
  }
  if ((HEAP8[i2 >> 0] | 0) == 2) break;
  i1 = i1 + 12 | 0;
  i2 = i2 + 1 | 0;
 }
 if ((i21 | 0) == 73) {
  HEAP32[i18 >> 2] = HEAP32[i18 >> 2] | 4;
  i1 = i19;
 }
 _free(i20);
 STACKTOP = i22;
 return i1 | 0;
}

function __ZNSt3__17__sort3IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_T_(i10, i11, i12, i9) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i14 = i15 + 88 | 0;
 i13 = i15 + 80 | 0;
 i17 = i15 + 72 | 0;
 i16 = i15 + 64 | 0;
 i1 = i15 + 56 | 0;
 i2 = i15 + 48 | 0;
 i3 = i15 + 40 | 0;
 i4 = i15 + 32 | 0;
 i5 = i15 + 24 | 0;
 i6 = i15 + 16 | 0;
 i7 = i15 + 8 | 0;
 i8 = i15;
 i18 = i11;
 i19 = HEAP32[i18 + 4 >> 2] | 0;
 i20 = i17;
 HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
 HEAP32[i20 + 4 >> 2] = i19;
 i20 = i10;
 i19 = HEAP32[i20 + 4 >> 2] | 0;
 i18 = i16;
 HEAP32[i18 >> 2] = HEAP32[i20 >> 2];
 HEAP32[i18 + 4 >> 2] = i19;
 HEAP32[i13 >> 2] = HEAP32[i17 >> 2];
 HEAP32[i13 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
 HEAP32[i14 >> 2] = HEAP32[i16 >> 2];
 HEAP32[i14 + 4 >> 2] = HEAP32[i16 + 4 >> 2];
 do if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i9, i13, i14) | 0) {
  i20 = i12;
  i2 = HEAP32[i20 + 4 >> 2] | 0;
  i1 = i5;
  HEAP32[i1 >> 2] = HEAP32[i20 >> 2];
  HEAP32[i1 + 4 >> 2] = i2;
  i1 = i11;
  i2 = HEAP32[i1 + 4 >> 2] | 0;
  i20 = i6;
  HEAP32[i20 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i20 + 4 >> 2] = i2;
  HEAP32[i13 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i14 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i14 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
  i20 = __ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i9, i13, i14) | 0;
  i2 = i10;
  i1 = HEAP32[i2 >> 2] | 0;
  i2 = HEAP32[i2 + 4 >> 2] | 0;
  if (i20) {
   i18 = i12;
   i19 = HEAP32[i18 + 4 >> 2] | 0;
   i20 = i10;
   HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i20 + 4 >> 2] = i19;
   i20 = i12;
   HEAP32[i20 >> 2] = i1;
   HEAP32[i20 + 4 >> 2] = i2;
   i1 = 1;
   break;
  }
  i20 = i11;
  i19 = HEAP32[i20 + 4 >> 2] | 0;
  i18 = i10;
  HEAP32[i18 >> 2] = HEAP32[i20 >> 2];
  HEAP32[i18 + 4 >> 2] = i19;
  i18 = i11;
  HEAP32[i18 >> 2] = i1;
  HEAP32[i18 + 4 >> 2] = i2;
  i18 = i12;
  i19 = HEAP32[i18 + 4 >> 2] | 0;
  i20 = i7;
  HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
  HEAP32[i20 + 4 >> 2] = i19;
  i20 = i8;
  HEAP32[i20 >> 2] = i1;
  HEAP32[i20 + 4 >> 2] = i2;
  HEAP32[i13 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i14 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i14 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i9, i13, i14) | 0) {
   i20 = i11;
   i19 = HEAP32[i20 >> 2] | 0;
   i20 = HEAP32[i20 + 4 >> 2] | 0;
   i17 = i12;
   i18 = HEAP32[i17 + 4 >> 2] | 0;
   i1 = i11;
   HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i1 + 4 >> 2] = i18;
   i1 = i12;
   HEAP32[i1 >> 2] = i19;
   HEAP32[i1 + 4 >> 2] = i20;
   i1 = 2;
  } else i1 = 1;
 } else {
  i20 = i12;
  i19 = HEAP32[i20 + 4 >> 2] | 0;
  i18 = i1;
  HEAP32[i18 >> 2] = HEAP32[i20 >> 2];
  HEAP32[i18 + 4 >> 2] = i19;
  i18 = i11;
  i19 = HEAP32[i18 + 4 >> 2] | 0;
  i20 = i2;
  HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
  HEAP32[i20 + 4 >> 2] = i19;
  HEAP32[i13 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
  HEAP32[i14 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i14 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i9, i13, i14) | 0) {
   i19 = i11;
   i18 = HEAP32[i19 >> 2] | 0;
   i19 = HEAP32[i19 + 4 >> 2] | 0;
   i16 = i12;
   i17 = HEAP32[i16 + 4 >> 2] | 0;
   i20 = i11;
   HEAP32[i20 >> 2] = HEAP32[i16 >> 2];
   HEAP32[i20 + 4 >> 2] = i17;
   i20 = i12;
   HEAP32[i20 >> 2] = i18;
   HEAP32[i20 + 4 >> 2] = i19;
   i20 = i11;
   i19 = HEAP32[i20 + 4 >> 2] | 0;
   i18 = i3;
   HEAP32[i18 >> 2] = HEAP32[i20 >> 2];
   HEAP32[i18 + 4 >> 2] = i19;
   i18 = i10;
   i19 = HEAP32[i18 + 4 >> 2] | 0;
   i20 = i4;
   HEAP32[i20 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i20 + 4 >> 2] = i19;
   HEAP32[i13 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i13 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
   HEAP32[i14 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
   if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i9, i13, i14) | 0) {
    i20 = i10;
    i19 = HEAP32[i20 >> 2] | 0;
    i20 = HEAP32[i20 + 4 >> 2] | 0;
    i17 = i11;
    i18 = HEAP32[i17 + 4 >> 2] | 0;
    i1 = i10;
    HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
    HEAP32[i1 + 4 >> 2] = i18;
    i1 = i11;
    HEAP32[i1 >> 2] = i19;
    HEAP32[i1 + 4 >> 2] = i20;
    i1 = 2;
   } else i1 = 1;
  } else i1 = 0;
 } while (0);
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i12, i13, i14, i10, i6) {
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0;
 i1 = HEAP32[i12 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i12 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i12 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i2 = HEAP32[i13 >> 2] | 0;
 do if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i3) {
   i11 = 17;
   break;
  } else {
   i11 = 16;
   break;
  } else {
   HEAP32[i13 >> 2] = 0;
   i11 = 14;
   break;
  }
 } else i11 = 14; while (0);
 if ((i11 | 0) == 14) if (i3) i11 = 16; else {
  i2 = 0;
  i11 = 17;
 }
 L22 : do if ((i11 | 0) == 16) {
  HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 6;
  i1 = 0;
 } else if ((i11 | 0) == 17) {
  i1 = HEAP32[i12 >> 2] | 0;
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i3 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 31](i10, 2048, i1) | 0)) {
   HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 4;
   i1 = 0;
   break;
  }
  i1 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 52 >> 2] & 31](i10, i1, 0) | 0) << 24 >> 24;
  i3 = HEAP32[i12 >> 2] | 0;
  i4 = i3 + 12 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   i8 = i6;
   i7 = i2;
   i4 = i2;
  } else {
   HEAP32[i4 >> 2] = i5 + 4;
   i8 = i6;
   i7 = i2;
   i4 = i2;
  }
  while (1) {
   i1 = i1 + -48 | 0;
   i9 = i8 + -1 | 0;
   i2 = HEAP32[i12 >> 2] | 0;
   do if (i2) {
    i3 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i12 >> 2] = 0;
     i5 = 1;
     break;
    } else {
     i5 = (HEAP32[i12 >> 2] | 0) == 0;
     break;
    }
   } else i5 = 1; while (0);
   do if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i13 >> 2] = 0;
     i4 = 0;
     i6 = 0;
     i2 = 1;
     break;
    } else {
     i4 = i7;
     i6 = i7;
     i2 = (i7 | 0) == 0;
     break;
    }
   } else {
    i4 = i7;
    i6 = 0;
    i2 = 1;
   } while (0);
   i3 = HEAP32[i12 >> 2] | 0;
   if (!((i8 | 0) > 1 & (i5 ^ i2))) break;
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = HEAP32[i2 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 31](i10, 2048, i2) | 0)) break L22;
   i1 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 52 >> 2] & 31](i10, i2, 0) | 0) << 24 >> 24) + (i1 * 10 | 0) | 0;
   i2 = HEAP32[i12 >> 2] | 0;
   i3 = i2 + 12 | 0;
   i5 = HEAP32[i3 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
    i8 = i9;
    i7 = i4;
    i4 = i6;
    continue;
   } else {
    HEAP32[i3 >> 2] = i5 + 4;
    i8 = i9;
    i7 = i4;
    i4 = i6;
    continue;
   }
  }
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = HEAP32[i2 >> 2] | 0;
   if ((i2 | 0) == -1) {
    HEAP32[i12 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i12 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  do if (i4) {
   i2 = HEAP32[i4 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = HEAP32[i2 >> 2] | 0;
   if ((i2 | 0) != -1) if (i3) break L22; else break; else {
    HEAP32[i13 >> 2] = 0;
    i11 = 60;
    break;
   }
  } else i11 = 60; while (0);
  if ((i11 | 0) == 60 ? !i3 : 0) break;
  HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 2;
 } while (0);
 return i1 | 0;
}

function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i14, i16, i15, i17, i19, i18, i1) {
 i14 = i14 | 0;
 i16 = i16 | 0;
 i15 = i15 | 0;
 i17 = i17 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i13 = i21;
 i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43088) | 0;
 i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43100) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 20 >> 2] & 127](i13, i10);
 HEAP32[i18 >> 2] = i17;
 i1 = HEAP8[i14 >> 0] | 0;
 switch (i1 << 24 >> 24) {
 case 43:
 case 45:
  {
   i11 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 31](i12, i1) | 0;
   i2 = HEAP32[i18 >> 2] | 0;
   HEAP32[i18 >> 2] = i2 + 1;
   HEAP8[i2 >> 0] = i11;
   i2 = i14 + 1 | 0;
   break;
  }
 default:
  i2 = i14;
 }
 i11 = i15;
 L4 : do if ((i11 - i2 | 0) > 1 ? (HEAP8[i2 >> 0] | 0) == 48 : 0) {
  i1 = i2 + 1 | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    i1 = i2;
    i20 = 10;
    break L4;
   }
  }
  i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 31](i12, 48) | 0;
  i9 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i9 + 1;
  HEAP8[i9 >> 0] = i8;
  i2 = i2 + 2 | 0;
  i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 31](i12, HEAP8[i1 >> 0] | 0) | 0;
  i1 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i1 + 1;
  HEAP8[i1 >> 0] = i9;
  i1 = i2;
  while (1) {
   if (i1 >>> 0 >= i15 >>> 0) break L4;
   i9 = HEAP8[i1 >> 0] | 0;
   if (!(_isxdigit_l(i9, __ZNSt3__16__clocEv() | 0) | 0)) break L4;
   i1 = i1 + 1 | 0;
  }
 } else {
  i1 = i2;
  i20 = 10;
 } while (0);
 L12 : do if ((i20 | 0) == 10) while (1) {
  i20 = 0;
  if (i1 >>> 0 >= i15 >>> 0) break L12;
  i9 = HEAP8[i1 >> 0] | 0;
  if (!(_isdigit_l(i9, __ZNSt3__16__clocEv() | 0) | 0)) break L12;
  i1 = i1 + 1 | 0;
  i20 = 10;
 } while (0);
 i8 = HEAP8[i13 >> 0] | 0;
 i9 = i13 + 4 | 0;
 L18 : do if (((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) | 0) {
  L21 : do if ((i2 | 0) != (i1 | 0)) {
   i3 = i1;
   i4 = i2;
   while (1) {
    i3 = i3 + -1 | 0;
    if (i4 >>> 0 >= i3 >>> 0) break L21;
    i8 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = i8;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] & 127](i10) | 0;
  i6 = i13 + 8 | 0;
  i7 = i13 + 1 | 0;
  i3 = 0;
  i4 = 0;
  i8 = i2;
  while (1) {
   if (i8 >>> 0 >= i1 >>> 0) break;
   i22 = HEAP8[((HEAP8[i13 >> 0] & 1) == 0 ? i7 : HEAP32[i6 >> 2] | 0) + i4 >> 0] | 0;
   if (i22 << 24 >> 24 > 0 & (i3 | 0) == (i22 << 24 >> 24 | 0)) {
    i22 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = i22 + 1;
    HEAP8[i22 >> 0] = i5;
    i22 = HEAP8[i13 >> 0] | 0;
    i3 = 0;
    i4 = (i4 >>> 0 < (((i22 & 1) == 0 ? (i22 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) + -1 | 0) >>> 0 & 1) + i4 | 0;
   }
   i23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 31](i12, HEAP8[i8 >> 0] | 0) | 0;
   i22 = HEAP32[i18 >> 2] | 0;
   HEAP32[i18 >> 2] = i22 + 1;
   HEAP8[i22 >> 0] = i23;
   i3 = i3 + 1 | 0;
   i8 = i8 + 1 | 0;
  }
  i3 = i17 + (i2 - i14) | 0;
  i2 = HEAP32[i18 >> 2] | 0;
  if ((i3 | 0) == (i2 | 0)) i3 = i12; else while (1) {
   i2 = i2 + -1 | 0;
   if (i3 >>> 0 >= i2 >>> 0) {
    i3 = i12;
    break L18;
   }
   i23 = HEAP8[i3 >> 0] | 0;
   HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
   HEAP8[i2 >> 0] = i23;
   i3 = i3 + 1 | 0;
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 32 >> 2] & 7](i12, i2, i1, HEAP32[i18 >> 2] | 0) | 0;
  HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + (i1 - i2);
  i3 = i12;
 } while (0);
 while (1) {
  if (i1 >>> 0 >= i15 >>> 0) break;
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 == 46) {
   i20 = 29;
   break;
  }
  i22 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 31](i12, i2) | 0;
  i23 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i23 + 1;
  HEAP8[i23 >> 0] = i22;
  i1 = i1 + 1 | 0;
 }
 if ((i20 | 0) == 29) {
  i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 127](i10) | 0;
  i23 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = i23 + 1;
  HEAP8[i23 >> 0] = i22;
  i1 = i1 + 1 | 0;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 32 >> 2] & 7](i12, i1, i15, HEAP32[i18 >> 2] | 0) | 0;
 i23 = (HEAP32[i18 >> 2] | 0) + (i11 - i1) | 0;
 HEAP32[i18 >> 2] = i23;
 HEAP32[i19 >> 2] = (i16 | 0) == (i15 | 0) ? i23 : i17 + (i16 - i14) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
 STACKTOP = i21;
 return;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 i15 = __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 HEAP32[i17 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 i15 = __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 HEAP32[i17 + 4 >> 2] = tempRet0;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0, d27 = 0.0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i12 = i22 + 200 | 0;
 i3 = i22 + 199 | 0;
 i4 = i22 + 198 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 197 | 0;
 i13 = i22 + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i6 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i6;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP8[i3 >> 0] | 0;
 i7 = HEAP8[i4 >> 0] | 0;
 i1 = HEAP32[i23 >> 2] | 0;
 i3 = i6;
 L8 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i23 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L8;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 16;
    break;
   }
  } else i26 = 16; while (0);
  if ((i26 | 0) == 16) {
   i26 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i2, 0);
   i3 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i2 & 255, i16, i13, i3, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i2 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i2 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i2 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i2 >> 2] = i14;
  i2 = i16;
 }
 d27 = +__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj(i3, HEAP32[i17 >> 2] | 0, i25);
 HEAPF32[i19 >> 2] = d27;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i2, i25);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i23 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i24 >> 2] = 0;
   i26 = 41;
   break;
  }
  if (!i1) i26 = 42;
 } else i26 = 41; while (0);
 if ((i26 | 0) == 41 ? i1 : 0) i26 = 42;
 if ((i26 | 0) == 42) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0, d27 = 0.0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i12 = i22 + 200 | 0;
 i3 = i22 + 199 | 0;
 i4 = i22 + 198 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 197 | 0;
 i13 = i22 + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i6 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i6;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP8[i3 >> 0] | 0;
 i7 = HEAP8[i4 >> 0] | 0;
 i1 = HEAP32[i23 >> 2] | 0;
 i3 = i6;
 L8 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i23 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L8;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 16;
    break;
   }
  } else i26 = 16; while (0);
  if ((i26 | 0) == 16) {
   i26 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i2, 0);
   i3 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i2 & 255, i16, i13, i3, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i2 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i2 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i2 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i2 >> 2] = i14;
  i2 = i16;
 }
 d27 = +__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj(i3, HEAP32[i17 >> 2] | 0, i25);
 HEAPF64[i19 >> 3] = d27;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i2, i25);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i23 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i24 >> 2] = 0;
   i26 = 41;
   break;
  }
  if (!i1) i26 = 42;
 } else i26 = 41; while (0);
 if ((i26 | 0) == 41 ? i1 : 0) i26 = 42;
 if ((i26 | 0) == 42) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i19) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i19 = i19 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i21 = 0, i22 = 0, i26 = 0, d27 = 0.0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i12 = i22 + 200 | 0;
 i3 = i22 + 199 | 0;
 i4 = i22 + 198 | 0;
 i21 = i22 + 184 | 0;
 i20 = i22 + 172 | 0;
 i17 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i15 = i22 + 4 | 0;
 i14 = i22;
 i16 = i22 + 197 | 0;
 i13 = i22 + 196 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i21, i2, i12, i3, i4);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i20 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i20 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i1, 0);
 i9 = i20 + 8 | 0;
 i10 = i20 + 1 | 0;
 i6 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
 HEAP32[i17 >> 2] = i6;
 HEAP32[i15 >> 2] = i18;
 HEAP32[i14 >> 2] = 0;
 HEAP8[i16 >> 0] = 1;
 HEAP8[i13 >> 0] = 69;
 i11 = i20 + 4 | 0;
 i8 = HEAP8[i3 >> 0] | 0;
 i7 = HEAP8[i4 >> 0] | 0;
 i1 = HEAP32[i23 >> 2] | 0;
 i3 = i6;
 L8 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i23 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i24 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L8;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L8; else {
    HEAP32[i24 >> 2] = 0;
    i26 = 16;
    break;
   }
  } else i26 = 16; while (0);
  if ((i26 | 0) == 16) {
   i26 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i20 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i11 >> 2] | 0;
  if ((HEAP32[i17 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i5 << 1, 0);
   if (!(HEAP8[i20 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i20 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i20, i2, 0);
   i3 = (HEAP8[i20 >> 0] & 1) == 0 ? i10 : HEAP32[i9 >> 2] | 0;
   HEAP32[i17 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i2 & 255, i16, i13, i3, i17, i8, i7, i21, i18, i15, i14, i12) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i13 = HEAP8[i21 >> 0] | 0;
 i2 = HEAP32[i15 >> 2] | 0;
 if (!((HEAP8[i16 >> 0] | 0) == 0 ? 1 : (((i13 & 1) == 0 ? (i13 & 255) >>> 1 : HEAP32[i21 + 4 >> 2] | 0) | 0) == 0) ? (i2 - i18 | 0) < 160 : 0) {
  i14 = HEAP32[i14 >> 2] | 0;
  i16 = i2 + 4 | 0;
  HEAP32[i15 >> 2] = i16;
  HEAP32[i2 >> 2] = i14;
  i2 = i16;
 }
 d27 = +__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj(i3, HEAP32[i17 >> 2] | 0, i25);
 HEAPF64[i19 >> 3] = d27;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i21, i18, i2, i25);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i23 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i24 >> 2] = 0;
   i26 = 41;
   break;
  }
  if (!i1) i26 = 42;
 } else i26 = 41; while (0);
 if ((i26 | 0) == 41 ? i1 : 0) i26 = 42;
 if ((i26 | 0) == 42) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
 i26 = HEAP32[i23 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i20);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 STACKTOP = i22;
 return i26 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 i15 = __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP16[i17 >> 1] = i15;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 i15 = __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 i15 = __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i21, i22, i2, i23, i17) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i2 = i2 | 0;
 i23 = i23 | 0;
 i17 = i17 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i18 = 0, i19 = 0, i20 = 0, i24 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i11 = i20 + 198 | 0;
 i3 = i20 + 196 | 0;
 i19 = i20 + 184 | 0;
 i18 = i20 + 172 | 0;
 i15 = i20 + 168 | 0;
 i16 = i20 + 8 | 0;
 i13 = i20 + 4 | 0;
 i12 = i20;
 switch (HEAP32[i2 + 4 >> 2] & 74 | 0) {
 case 64:
  {
   i14 = 8;
   break;
  }
 case 8:
  {
   i14 = 16;
   break;
  }
 case 0:
  {
   i14 = 0;
   break;
  }
 default:
  i14 = 10;
 }
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i19, i2, i11, i3);
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i18 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i18 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i1, 0);
 i8 = i18 + 8 | 0;
 i9 = i18 + 1 | 0;
 i6 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i15 >> 2] = i6;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i12 >> 2] = 0;
 i10 = i18 + 4 | 0;
 i7 = HEAP8[i3 >> 0] | 0;
 i1 = HEAP32[i21 >> 2] | 0;
 i3 = i6;
 L13 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i21 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i2 = (i1 | 0) == 0;
  i4 = HEAP32[i22 >> 2] | 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) break; else break L13;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) != -1) if (i2) break; else break L13; else {
    HEAP32[i22 >> 2] = 0;
    i24 = 20;
    break;
   }
  } else i24 = 20; while (0);
  if ((i24 | 0) == 20) {
   i24 = 0;
   if (i2) {
    i4 = 0;
    break;
   } else i4 = 0;
  }
  i5 = HEAP8[i18 >> 0] | 0;
  i5 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : HEAP32[i10 >> 2] | 0;
  if ((HEAP32[i15 >> 2] | 0) == (i3 + i5 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i5 << 1, 0);
   if (!(HEAP8[i18 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i18 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i18, i2, 0);
   i3 = (HEAP8[i18 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i15 >> 2] = i3 + i5;
  }
  i5 = i1 + 12 | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i2 = HEAPU8[i2 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i2 & 255, i14, i3, i15, i12, i7, i19, i16, i13, i11) | 0) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i2 + 1;
   continue;
  }
 }
 i11 = HEAP8[i19 >> 0] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 if ((((i11 & 1) == 0 ? (i11 & 255) >>> 1 : HEAP32[i19 + 4 >> 2] | 0) | 0) != 0 ? (i2 - i16 | 0) < 160 : 0) {
  i11 = HEAP32[i12 >> 2] | 0;
  i12 = i2 + 4 | 0;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i2 >> 2] = i11;
  i2 = i12;
 }
 i15 = __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji(i3, HEAP32[i15 >> 2] | 0, i23, i14) | 0;
 HEAP32[i17 >> 2] = i15;
 __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i19, i16, i2, i23);
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i4) {
  if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
   HEAP32[i22 >> 2] = 0;
   i24 = 45;
   break;
  }
  if (!i1) i24 = 46;
 } else i24 = 45; while (0);
 if ((i24 | 0) == 45 ? i1 : 0) i24 = 46;
 if ((i24 | 0) == 46) HEAP32[i23 >> 2] = HEAP32[i23 >> 2] | 2;
 i24 = HEAP32[i21 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
 STACKTOP = i20;
 return i24 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder11parseImportERNS_7ElementE(i14, i10) {
 i14 = i14 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i15 = i16 + 24 | 0;
 i8 = i16 + 20 | 0;
 i3 = i16 + 16 | 0;
 i4 = i16 + 12 | 0;
 i11 = i16;
 i12 = i14 + 4 | 0;
 i13 = __ZN10MixedArena5allocIN4wasm6ImportEEEPT_v(HEAP32[i12 >> 2] | 0) | 0;
 if ((__ZN4wasm7Element4sizeEv(i10) | 0) >>> 0 > 3 ? (i9 = __ZN4wasm7Element4listEv(i10) | 0, (HEAP8[HEAP32[(HEAP32[i9 >> 2] | 0) + 12 >> 2] >> 0] | 0) == 0) : 0) {
  i1 = __ZN4wasm7Element4listEv(i10) | 0;
  i1 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0) | 0;
  HEAP32[i13 >> 2] = i1;
  i1 = i14 + 48 | 0;
  i9 = 2;
 } else {
  i1 = i14 + 48 | 0;
  i9 = __ZN4wasm4Name7fromIntEj(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i13 >> 2] = i9;
  i9 = 1;
 }
 HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
 i1 = i9 + 1 | 0;
 i7 = __ZN4wasm7Element3strEv(__ZN4wasm7ElementixEj(i10, i9) | 0) | 0;
 HEAP32[i13 + 4 >> 2] = i7;
 i7 = __ZN4wasm7ElementixEj(i10, i1) | 0;
 if (HEAP8[i7 >> 0] | 0) __ZNKSt3__18functionIFvvEEclEv(i14 + 8 | 0);
 i2 = i9 + 2 | 0;
 i7 = __ZN4wasm7Element3strEv(__ZN4wasm7ElementixEj(i10, i1) | 0) | 0;
 HEAP32[i13 + 8 >> 2] = i7;
 HEAP32[i15 >> 2] = 0;
 HEAP32[i15 + 4 >> 2] = 0;
 HEAP32[i15 + 8 >> 2] = 0;
 HEAP32[i15 + 12 >> 2] = 0;
 HEAP32[i15 + 16 >> 2] = 0;
 do if ((__ZN4wasm7Element4sizeEv(i10) | 0) >>> 0 > i2 >>> 0) {
  i7 = __ZN4wasm7ElementixEj(i10, i2) | 0;
  i1 = __ZN4wasm7Element4listEv(i7) | 0;
  i1 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i1 >> 2] >> 2] | 0) | 0;
  L12 : do if ((i1 | 0) == (HEAP32[10212] | 0)) {
   i1 = i15 + 8 | 0;
   i2 = i15 + 12 | 0;
   i3 = i15 + 16 | 0;
   i6 = 1;
   while (1) {
    if (i6 >>> 0 >= (__ZN4wasm7Element4sizeEv(i7) | 0) >>> 0) break L12;
    i4 = __ZN4wasm22SExpressionWasmBuilder16stringToWasmTypeEPKcbb(i14, __ZN4wasm7Element3strEv(__ZN4wasm7ElementixEj(i7, i6) | 0) | 0, 0, 0) | 0;
    HEAP32[i8 >> 2] = i4;
    i5 = HEAP32[i2 >> 2] | 0;
    if (i5 >>> 0 < (HEAP32[i3 >> 2] | 0) >>> 0) {
     HEAP32[i5 >> 2] = i4;
     HEAP32[i2 >> 2] = i5 + 4;
    } else __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i1, i8);
    i6 = i6 + 1 | 0;
   }
  } else {
   if ((i1 | 0) == (HEAP32[10213] | 0)) {
    i8 = __ZN4wasm7Element4listEv(i7) | 0;
    i8 = __ZN4wasm22SExpressionWasmBuilder16stringToWasmTypeEPKcbb(i14, __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i8 >> 2] | 0) + 4 >> 2] | 0) | 0, 0, 0) | 0;
    HEAP32[i15 + 4 >> 2] = i8;
    break;
   }
   if ((i1 | 0) != (HEAP32[10220] | 0)) {
    __ZNKSt3__18functionIFvvEEclEv(i14 + 8 | 0);
    break;
   }
   i2 = __ZN4wasm7Element4listEv(i7) | 0;
   i2 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] | 0) | 0;
   i1 = HEAP32[i14 >> 2] | 0;
   HEAP32[i3 >> 2] = i2;
   if ((__ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i1 + 48 | 0, i3) | 0) == (i1 + 52 | 0)) {
    __ZNKSt3__18functionIFvvEEclEv(i14 + 8 | 0);
    i1 = HEAP32[i14 >> 2] | 0;
   }
   HEAP32[i4 >> 2] = i2;
   i8 = __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixEOS2_(i1 + 48 | 0, i4) | 0;
   __ZN4wasm12FunctionTypeaSERKS0_(i15, HEAP32[i8 >> 2] | 0) | 0;
  } while (0);
  i1 = i9 + 3 | 0;
  if ((__ZN4wasm7Element4sizeEv(i10) | 0) >>> 0 > i1 >>> 0) {
   i1 = __ZN4wasm7ElementixEj(i10, i1) | 0;
   i10 = __ZN4wasm7Element4listEv(i1) | 0;
   i10 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i10 >> 2] >> 2] | 0) | 0;
   if ((i10 | 0) == (HEAP32[10213] | 0)) {
    i10 = __ZN4wasm7Element4listEv(i1) | 0;
    i10 = __ZN4wasm22SExpressionWasmBuilder16stringToWasmTypeEPKcbb(i14, __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i10 >> 2] | 0) + 4 >> 2] | 0) | 0, 0, 0) | 0;
    HEAP32[i15 + 4 >> 2] = i10;
    break;
   } else ___assert_fail(17275, 17087, 1031, 17302);
  }
 } while (0);
 __ZN4wasm6getSigEPNS_12FunctionTypeE(i11, i15);
 i12 = __ZN4wasm18ensureFunctionTypeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_6ModuleER10MixedArena(i11, HEAP32[i14 >> 2] | 0, HEAP32[i12 >> 2] | 0) | 0;
 HEAP32[i13 + 12 >> 2] = i12;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
 __ZN4wasm6Module9addImportEPNS_6ImportE(HEAP32[i14 >> 2] | 0, i13);
 __ZNSt3__113__vector_baseIN4wasm8WasmTypeENS_9allocatorIS2_EEED2Ev(i15 + 8 | 0);
 STACKTOP = i16;
 return;
}

function __ZN6cashew9JSPrinter11numToStringEdb(d2, i1) {
 d2 = +d2;
 i1 = i1 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i25 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i19 = i25 + 80 | 0;
 i18 = i25 + 72 | 0;
 i17 = i25 + 64 | 0;
 i21 = i25 + 56 | 0;
 i20 = i25 + 48 | 0;
 i16 = i25 + 40 | 0;
 i15 = i25 + 32 | 0;
 i23 = i25 + 24 | 0;
 i12 = i25 + 16 | 0;
 i13 = i25 + 8 | 0;
 i14 = i25;
 i24 = d2 < 0.0;
 d2 = i24 ? -d2 : d2;
 i10 = +_fmod(d2, 1.0) == 0.0;
 HEAPF64[i23 >> 3] = nan;
 HEAPF64[i12 >> 3] = nan;
 i11 = !(d2 >= 0.0);
 i8 = i1 ^ 1;
 i9 = 0;
 L1 : while (1) {
  if ((i9 | 0) >= 2) {
   i22 = 3;
   break;
  }
  i5 = (i9 | 0) != 0;
  i7 = i5 ? HEAP32[854] | 0 : HEAP32[853] | 0;
  L4 : do if (i10) {
   if (i11) {
    i22 = 12;
    break L1;
   }
   if (!(__ZN4wasm12isUInteger64Ed(d2) | 0)) {
    HEAPF64[i18 >> 3] = d2;
    _snprintf(i7, 999, i5 ? 21721 : 21724, i18) | 0;
    HEAP32[i19 >> 2] = i13;
    _sscanf(i7, 21681, i19) | 0;
    break;
   }
   i1 = __ZN4wasm12toUInteger64Ed(d2) | 0;
   i6 = i5 & i8;
   i4 = i20;
   HEAP32[i4 >> 2] = i1;
   HEAP32[i4 + 4 >> 2] = tempRet0;
   _snprintf(i7, 999, i6 ? 21704 : 21711, i20) | 0;
   if (i6) {
    HEAP32[i21 >> 2] = i14;
    _sscanf(i7, 21716, i21) | 0;
    i6 = i14;
    HEAPF64[i13 >> 3] = +((HEAP32[i6 >> 2] | 0) >>> 0) + 4294967296.0 * +((HEAP32[i6 + 4 >> 2] | 0) >>> 0);
    break;
   } else {
    HEAP32[i17 >> 2] = i13;
    _sscanf(i7, 21681, i17) | 0;
    break;
   }
  } else {
   i1 = i5 ? 101 : 102;
   i4 = 0;
   while (1) {
    if ((i4 | 0) >= 19) break L4;
    HEAP8[47017] = 37;
    HEAP8[47018] = 46;
    if ((i4 | 0) < 10) {
     HEAP8[47019] = i4 + 48;
     HEAP8[47020] = i1;
     HEAP8[47021] = 0;
    } else {
     HEAP8[47019] = 49;
     HEAP8[47020] = i4 + 38;
     HEAP8[47021] = i1;
     HEAP8[47022] = 0;
    }
    HEAPF64[i15 >> 3] = d2;
    _snprintf(i7, 999, 47017, i15) | 0;
    HEAP32[i16 >> 2] = i13;
    _sscanf(i7, 21681, i16) | 0;
    if (+HEAPF64[i13 >> 3] == d2) break; else i4 = i4 + 1 | 0;
   }
  } while (0);
  d3 = +Math_abs(+(+HEAPF64[i13 >> 3] - d2));
  HEAPF64[(i5 ? i12 : i23) >> 3] = d3;
  i1 = _strchr(i7, 46) | 0;
  L22 : do if (!i1) {
   if (!(i10 & i5)) {
    i6 = i7 + (_strlen(i7) | 0) + -1 | 0;
    i4 = i7;
    i1 = i6;
    while (1) {
     if ((HEAP8[i1 >> 0] | 0) == 48) {
      if (i1 >>> 0 <= i7 >>> 0) {
       i22 = 30;
       break;
      }
     } else {
      i5 = i1;
      if (!(i1 >>> 0 > i7 >>> 0 & (i5 - i4 | 0) > 24)) {
       i4 = i1;
       break;
      }
     }
     i1 = i1 + -1 | 0;
    }
    if ((i22 | 0) == 30) {
     i22 = 0;
     i5 = i1;
     i4 = i1;
    }
    i1 = i6 - i5 | 0;
    if ((i1 | 0) > 2) {
     HEAP8[i4 + 1 >> 0] = 101;
     if ((i1 | 0) < 10) {
      HEAP8[i4 + 2 >> 0] = i1 + 48;
      HEAP8[i4 + 3 >> 0] = 0;
      break;
     }
     if ((i1 | 0) < 100) {
      HEAP8[i4 + 2 >> 0] = ((i1 | 0) / 10 | 0) + 48;
      HEAP8[i4 + 3 >> 0] = ((i1 | 0) % 10 | 0) + 48;
      HEAP8[i4 + 4 >> 0] = 0;
      break;
     }
     if ((i1 | 0) >= 1e3) {
      i22 = 38;
      break L1;
     }
     HEAP8[i4 + 2 >> 0] = ((i1 | 0) / 100 | 0) + 48;
     HEAP8[i4 + 3 >> 0] = (((i1 | 0) % 100 | 0 | 0) / 10 | 0) + 48;
     HEAP8[i4 + 4 >> 0] = ((i1 | 0) % 10 | 0) + 48;
     HEAP8[i4 + 5 >> 0] = 0;
    }
   }
  } else {
   while (1) {
    i4 = i1 + 1 | 0;
    if (((HEAP8[i4 >> 0] | 0) + -48 & 255) < 10) i1 = i4; else break;
   }
   while (1) {
    if ((HEAP8[i1 >> 0] | 0) == 48) i4 = i1; else break;
    do {
     i5 = i4;
     i4 = i4 + 1 | 0;
     i6 = HEAP8[i4 >> 0] | 0;
     HEAP8[i5 >> 0] = i6;
    } while (i6 << 24 >> 24 != 0);
    i1 = i1 + -1 | 0;
   }
   L49 : while (1) {
    if ((HEAP8[i7 >> 0] | 0) == 48) i4 = i7; else break L22;
    while (1) {
     i1 = i4 + 1 | 0;
     i6 = HEAP8[i1 >> 0] | 0;
     HEAP8[i4 >> 0] = i6;
     if (!(i6 << 24 >> 24)) continue L49; else i4 = i1;
    }
   }
  } while (0);
  i9 = i9 + 1 | 0;
 }
 if ((i22 | 0) == 3) {
  d3 = +HEAPF64[i12 >> 3];
  d2 = +HEAPF64[i23 >> 3];
  if (d3 == d2) {
   i23 = HEAP32[854] | 0;
   i22 = _strlen(i23) | 0;
   i1 = HEAP32[853] | 0;
   i22 = i22 >>> 0 < (_strlen(i1) | 0) >>> 0;
   i1 = i22 ? i23 : i1;
  } else i1 = d3 < d2 ? HEAP32[854] | 0 : HEAP32[853] | 0;
  if (i24) {
   i1 = i1 + -1 | 0;
   HEAP8[i1 >> 0] = 45;
  }
  STACKTOP = i25;
  return i1 | 0;
 } else if ((i22 | 0) == 12) ___assert_fail(21685, 31233, 871, 21692); else if ((i22 | 0) == 38) ___assert_fail(21729, 31233, 934, 21692);
 return 0;
}

function __ZNSt3__16locale5__impC2Ej(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 HEAP32[i4 + 4 >> 2] = i1 + -1;
 HEAP32[i4 >> 2] = 11604;
 i1 = i4 + 8 | 0;
 __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej(i1, 28);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i4 + 144 | 0, 35303, 1);
 i1 = HEAP32[i1 >> 2] | 0;
 i2 = i4 + 12 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 HEAP32[10057] = 0;
 HEAP32[10056] = 9268;
 __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_(i4, 40224);
 HEAP32[10059] = 0;
 HEAP32[10058] = 9300;
 __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_(i4, 40232);
 __ZNSt3__15ctypeIcEC2EPKtbj(40240, 0, 0, 1);
 __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_(i4, 40240);
 HEAP32[10065] = 0;
 HEAP32[10064] = 11820;
 __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_(i4, 40256);
 HEAP32[10067] = 0;
 HEAP32[10066] = 11888;
 __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_(i4, 40264);
 HEAP32[10069] = 0;
 HEAP32[10068] = 11556;
 i5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[10070] = i5;
 __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_(i4, 40272);
 HEAP32[10073] = 0;
 HEAP32[10072] = 11936;
 __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_(i4, 40288);
 HEAP32[10075] = 0;
 HEAP32[10074] = 11984;
 __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_(i4, 40296);
 __ZNSt3__18numpunctIcEC2Ej(40304, 1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_(i4, 40304);
 __ZNSt3__18numpunctIwEC2Ej(40328, 1);
 __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_(i4, 40328);
 HEAP32[10091] = 0;
 HEAP32[10090] = 9332;
 __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 40360);
 HEAP32[10093] = 0;
 HEAP32[10092] = 9396;
 __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 40368);
 HEAP32[10095] = 0;
 HEAP32[10094] = 9460;
 __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 40376);
 HEAP32[10097] = 0;
 HEAP32[10096] = 9512;
 __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 40384);
 HEAP32[10099] = 0;
 HEAP32[10098] = 11060;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_(i4, 40392);
 HEAP32[10101] = 0;
 HEAP32[10100] = 11116;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_(i4, 40400);
 HEAP32[10103] = 0;
 HEAP32[10102] = 11172;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_(i4, 40408);
 HEAP32[10105] = 0;
 HEAP32[10104] = 11228;
 __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_(i4, 40416);
 HEAP32[10107] = 0;
 HEAP32[10106] = 11284;
 __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 40424);
 HEAP32[10109] = 0;
 HEAP32[10108] = 11312;
 __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 40432);
 HEAP32[10111] = 0;
 HEAP32[10110] = 11340;
 __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 40440);
 HEAP32[10113] = 0;
 HEAP32[10112] = 11368;
 __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 40448);
 HEAP32[10115] = 0;
 HEAP32[10114] = 9564;
 HEAP32[10116] = 9612;
 __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 40456);
 HEAP32[10119] = 0;
 HEAP32[10118] = 9648;
 HEAP32[10120] = 9696;
 __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 40472);
 HEAP32[10123] = 0;
 HEAP32[10122] = 11800;
 i5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[10124] = i5;
 HEAP32[10122] = 11012;
 __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i4, 40488);
 HEAP32[10127] = 0;
 HEAP32[10126] = 11800;
 i5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[10128] = i5;
 HEAP32[10126] = 11036;
 __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i4, 40504);
 HEAP32[10131] = 0;
 HEAP32[10130] = 11396;
 __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_(i4, 40520);
 HEAP32[10133] = 0;
 HEAP32[10132] = 11428;
 __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_(i4, 40528);
 return;
}

function ___cxa_demangle(i10, i1, i16, i18) {
 i10 = i10 | 0;
 i1 = i1 | 0;
 i16 = i16 | 0;
 i18 = i18 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0, i19 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 4208 | 0;
 i15 = i19 + 4176 | 0;
 i3 = i19;
 i17 = i19 + 4112 | 0;
 if ((i10 | 0) != 0 ? (i2 = (i1 | 0) != 0, i14 = (i16 | 0) == 0, !(i2 & i14)) : 0) {
  if (i2) i12 = HEAP32[i16 >> 2] | 0; else i12 = 0;
  HEAP32[i3 + 4096 >> 2] = i3;
  i2 = i3;
  HEAP32[i17 >> 2] = 0;
  i13 = i17 + 4 | 0;
  HEAP32[i13 >> 2] = 0;
  HEAP32[i17 + 8 >> 2] = 0;
  HEAP32[i17 + 12 >> 2] = i2;
  i6 = i17 + 16 | 0;
  HEAP32[i6 >> 2] = 0;
  i7 = i17 + 20 | 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i17 + 24 >> 2] = 0;
  HEAP32[i17 + 28 >> 2] = i2;
  HEAP32[i17 + 32 >> 2] = 0;
  i3 = i17 + 36 | 0;
  HEAP32[i3 >> 2] = 0;
  HEAP32[i17 + 40 >> 2] = 0;
  i8 = i17 + 44 | 0;
  HEAP32[i8 >> 2] = i2;
  i5 = i17 + 48 | 0;
  i4 = i17 + 61 | 0;
  HEAP32[i5 >> 2] = 0;
  HEAP32[i5 + 4 >> 2] = 0;
  HEAP32[i5 + 8 >> 2] = 0;
  HEAP8[i5 + 12 >> 0] = 0;
  HEAP8[i4 >> 0] = 1;
  i5 = i17 + 32 | 0;
  __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_(i15, 1, 0, i8);
  i8 = i15 + 8 | 0;
  i9 = HEAP32[i8 >> 2] | 0;
  HEAP32[i9 >> 2] = 0;
  HEAP32[i9 + 4 >> 2] = 0;
  HEAP32[i9 + 8 >> 2] = 0;
  HEAP32[i9 + 12 >> 2] = i2;
  HEAP32[i8 >> 2] = i9 + 16;
  __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(i5, i15);
  __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev(i15);
  i8 = i17 + 62 | 0;
  HEAP8[i8 >> 0] = 0;
  HEAP8[i17 + 63 >> 0] = 1;
  HEAP32[i15 >> 2] = 0;
  i9 = i10 + (_strlen(i10) | 0) | 0;
  __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri(i10, i9, i17, i15);
  i2 = HEAP32[i15 >> 2] | 0;
  do if (!((i2 | 0) != 0 | (HEAP8[i8 >> 0] | 0) == 0)) {
   i5 = HEAP32[i5 >> 2] | 0;
   if ((i5 | 0) != (HEAP32[i3 >> 2] | 0) ? (HEAP32[i5 >> 2] | 0) != (HEAP32[i5 + 4 >> 2] | 0) : 0) {
    HEAP8[i8 >> 0] = 0;
    HEAP8[i4 >> 0] = 0;
    i2 = HEAP32[i17 >> 2] | 0;
    while (1) {
     i3 = HEAP32[i13 >> 2] | 0;
     if ((i3 | 0) == (i2 | 0)) break;
     i5 = i3 + -24 | 0;
     HEAP32[i13 >> 2] = i5;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
    }
    i2 = HEAP32[i6 >> 2] | 0;
    while (1) {
     i3 = HEAP32[i7 >> 2] | 0;
     if ((i3 | 0) == (i2 | 0)) break;
     i6 = i3 + -16 | 0;
     HEAP32[i7 >> 2] = i6;
     __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i6);
    }
    __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri(i10, i9, i17, i15);
    if (!(HEAP8[i8 >> 0] | 0)) {
     i2 = HEAP32[i15 >> 2] | 0;
     i11 = 19;
     break;
    } else {
     HEAP32[i15 >> 2] = -2;
     i1 = 0;
     i2 = -2;
     break;
    }
   } else i11 = 20;
  } else i11 = 19; while (0);
  if ((i11 | 0) == 19) if (!i2) i11 = 20; else i1 = 0;
  do if ((i11 | 0) == 20) {
   i3 = HEAP32[i13 >> 2] | 0;
   i2 = HEAP8[i3 + -24 >> 0] | 0;
   if (!(i2 & 1)) i4 = (i2 & 255) >>> 1; else i4 = HEAP32[i3 + -20 >> 2] | 0;
   i2 = HEAP8[i3 + -12 >> 0] | 0;
   if (!(i2 & 1)) i2 = (i2 & 255) >>> 1; else i2 = HEAP32[i3 + -8 >> 2] | 0;
   i4 = i2 + i4 | 0;
   i2 = i4 + 1 | 0;
   if (i2 >>> 0 > i12 >>> 0) {
    i1 = _realloc(i1, i2) | 0;
    if (!i1) {
     HEAP32[i15 >> 2] = -1;
     i1 = 0;
     i2 = -1;
     break;
    }
    if (!i14) HEAP32[i16 >> 2] = i2;
   } else if (!i1) {
    i1 = 0;
    i2 = 0;
    break;
   }
   i2 = HEAP32[i13 >> 2] | 0;
   i15 = i2 + -12 | 0;
   i3 = HEAP8[i15 >> 0] | 0;
   i16 = (i3 & 1) == 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i2 + -24 | 0, i16 ? i15 + 1 | 0 : HEAP32[i2 + -4 >> 2] | 0, i16 ? (i3 & 255) >>> 1 : HEAP32[i2 + -8 >> 2] | 0) | 0;
   i2 = HEAP32[i13 >> 2] | 0;
   i3 = i2 + -24 | 0;
   if (!(HEAP8[i3 >> 0] & 1)) i2 = i3 + 1 | 0; else i2 = HEAP32[i2 + -16 >> 2] | 0;
   _memcpy(i1 | 0, i2 | 0, i4 | 0) | 0;
   HEAP8[i1 + i4 >> 0] = 0;
   i2 = 0;
  } while (0);
  if (i18 | 0) HEAP32[i18 >> 2] = i2;
  __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev(i17);
 } else if (!i18) i1 = 0; else {
  HEAP32[i18 >> 2] = -3;
  i1 = 0;
 }
 STACKTOP = i19;
 return i1 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(i1, i20, i21, i3, i22, i16) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i3 = i3 | 0;
 i22 = i22 | 0;
 i16 = i16 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0, i18 = 0, i19 = 0, i23 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i15 = i19;
 i10 = i19 + 208 | 0;
 i18 = i19 + 196 | 0;
 i1 = i19 + 180 | 0;
 i17 = i19 + 184 | 0;
 i14 = i19 + 176 | 0;
 i12 = i19 + 16 | 0;
 i13 = i19 + 8 | 0;
 i11 = i19 + 4 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i18 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i9 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 HEAP32[i1 >> 2] = i9;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43088) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 7](i1, 35270, 35296, i10) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i17 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i17 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i17 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i1, 0);
 i8 = i17 + 8 | 0;
 i9 = i17 + 1 | 0;
 i2 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 HEAP32[i14 >> 2] = i2;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i11 >> 2] = 0;
 i7 = i17 + 4 | 0;
 i1 = HEAP32[i20 >> 2] | 0;
 L12 : while (1) {
  if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
    HEAP32[i20 >> 2] = 0;
    i1 = 0;
   }
  } else i1 = 0;
  i4 = (i1 | 0) == 0;
  i3 = HEAP32[i21 >> 2] | 0;
  do if (i3) {
   if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i4) break; else break L12;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) != -1) if (i4) break; else break L12; else {
    HEAP32[i21 >> 2] = 0;
    i23 = 19;
    break;
   }
  } else i23 = 19; while (0);
  if ((i23 | 0) == 19) {
   i23 = 0;
   if (i4) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i4 = HEAP8[i17 >> 0] | 0;
  i4 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : HEAP32[i7 >> 2] | 0;
  if ((HEAP32[i14 >> 2] | 0) == (i2 + i4 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i4 << 1, 0);
   if (!(HEAP8[i17 >> 0] & 1)) i2 = 10; else i2 = (HEAP32[i17 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, i2, 0);
   i2 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
   HEAP32[i14 >> 2] = i2 + i4;
  }
  i5 = i1 + 12 | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  i6 = i1 + 16 | 0;
  if ((i4 | 0) == (HEAP32[i6 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i4 = HEAPU8[i4 >> 0] | 0;
  if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i4 & 255, 16, i2, i14, i11, 0, i18, i12, i13, i10) | 0) break;
  i3 = HEAP32[i5 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i5 >> 2] = i3 + 1;
   continue;
  }
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i17, (HEAP32[i14 >> 2] | 0) - i2 | 0, 0);
 i13 = (HEAP8[i17 >> 0] & 1) == 0 ? i9 : HEAP32[i8 >> 2] | 0;
 i14 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i15 >> 2] = i16;
 if ((__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z(i13, i14, 35305, i15) | 0) != 1) HEAP32[i22 >> 2] = 4;
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i20 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i1 = (i1 | 0) == 0;
 do if (i3) {
  if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) == -1 : 0) {
   HEAP32[i21 >> 2] = 0;
   i23 = 43;
   break;
  }
  if (!i1) i23 = 44;
 } else i23 = 43; while (0);
 if ((i23 | 0) == 43 ? i1 : 0) i23 = 44;
 if ((i23 | 0) == 44) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
 i23 = HEAP32[i20 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i17);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
 STACKTOP = i19;
 return i23 | 0;
}

function __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 if (!i2) ___assert_fail(30470, 30223, 1222, 30475);
 do switch (HEAP32[i2 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner10visitBlockEPNS_5BlockE(i1, i3, i2);
   break;
  }
 case 2:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner7visitIfEPNS_2IfE(i1, i3, i2);
   break;
  }
 case 3:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner9visitLoopEPNS_4LoopE(i1, i3, i2);
   break;
  }
 case 4:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner10visitBreakEPNS_5BreakE(i1, i3, i2);
   break;
  }
 case 5:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11visitSwitchEPNS_6SwitchE(i1, i3, i2);
   break;
  }
 case 6:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner9visitCallEPNS_4CallE(i1, i3, i2);
   break;
  }
 case 7:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner15visitCallImportEPNS_10CallImportE(i1, i3, i2);
   break;
  }
 case 8:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner17visitCallIndirectEPNS_12CallIndirectE(i1, i3, i2);
   break;
  }
 case 9:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner13visitGetLocalEPNS_8GetLocalE(i1, i3, i2);
   break;
  }
 case 10:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner13visitSetLocalEPNS_8SetLocalE(i1, i3, i2);
   break;
  }
 case 11:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner9visitLoadEPNS_4LoadE(i1, i3, i2);
   break;
  }
 case 12:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner10visitStoreEPNS_5StoreE(i1, i3, i2);
   break;
  }
 case 13:
  {
   i3 = i2 + 8 | 0;
   HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
   HEAP32[i1 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
   HEAP32[i1 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
   HEAP32[i1 + 16 >> 2] = 0;
   break;
  }
 case 14:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner10visitUnaryEPNS_5UnaryE(i1, i3, i2);
   break;
  }
 case 15:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11visitBinaryEPNS_6BinaryE(i1, i3, i2);
   break;
  }
 case 16:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11visitSelectEPNS_6SelectE(i1, i3, i2);
   break;
  }
 case 17:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11visitReturnEPNS_6ReturnE(i1, i3, i2);
   break;
  }
 case 18:
  {
   __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner9visitHostEPNS_4HostE(i1, i3, i2);
   break;
  }
 case 19:
  {
   HEAP32[i1 >> 2] = 0;
   i3 = i1 + 8 | 0;
   HEAP32[i3 >> 2] = 0;
   HEAP32[i3 + 4 >> 2] = 0;
   HEAP32[i1 + 16 >> 2] = 0;
   break;
  }
 case 20:
  {
   i3 = HEAP32[(HEAP32[i3 + 4 >> 2] | 0) + 12 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 20 >> 2] & 127](i3, 26437);
   HEAP32[i1 >> 2] = 0;
   i3 = i1 + 8 | 0;
   HEAP32[i3 >> 2] = 0;
   HEAP32[i3 + 4 >> 2] = 0;
   HEAP32[i1 + 16 >> 2] = 0;
   break;
  }
 default:
  {}
 } while (0);
 return;
}

function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i12, i14, i15, i11, i6) {
 i12 = i12 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i11 = i11 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i13 = 0;
 i1 = HEAP32[i12 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i12 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i12 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i2 = (i1 | 0) == 0;
 i1 = HEAP32[i14 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i14 >> 2] = 0;
   i13 = 11;
   break;
  }
  if (i2) i13 = 13; else i13 = 12;
 } else i13 = 11; while (0);
 if ((i13 | 0) == 11) if (i2) i13 = 12; else {
  i1 = 0;
  i13 = 13;
 }
 L16 : do if ((i13 | 0) == 12) {
  HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 6;
  i1 = 0;
 } else if ((i13 | 0) == 13) {
  i2 = HEAP32[i12 >> 2] | 0;
  i3 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAPU8[i3 >> 0] | 0;
  i3 = i2 & 255;
  if (i3 << 24 >> 24 > -1 ? (i10 = i11 + 8 | 0, HEAP16[(HEAP32[i10 >> 2] | 0) + (i2 << 24 >> 24 << 1) >> 1] & 2048) : 0) {
   i5 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 31](i11, i3, 0) | 0) << 24 >> 24;
   i2 = HEAP32[i12 >> 2] | 0;
   i3 = i2 + 12 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
    i8 = i6;
    i7 = i1;
    i6 = i1;
    i1 = i5;
   } else {
    HEAP32[i3 >> 2] = i4 + 1;
    i8 = i6;
    i7 = i1;
    i6 = i1;
    i1 = i5;
   }
   while (1) {
    i1 = i1 + -48 | 0;
    i9 = i8 + -1 | 0;
    i2 = HEAP32[i12 >> 2] | 0;
    do if (i2) {
     if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
      HEAP32[i12 >> 2] = 0;
      i2 = 0;
      break;
     } else {
      i2 = HEAP32[i12 >> 2] | 0;
      break;
     }
    } else i2 = 0; while (0);
    i4 = (i2 | 0) == 0;
    if (i6) if ((HEAP32[i6 + 12 >> 2] | 0) == (HEAP32[i6 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0) == -1) {
     HEAP32[i14 >> 2] = 0;
     i3 = 0;
     i6 = 0;
    } else {
     i3 = i7;
     i6 = i7;
    } else i3 = i7; else {
     i3 = i7;
     i6 = 0;
    }
    i2 = HEAP32[i12 >> 2] | 0;
    if (!((i8 | 0) > 1 & (i4 ^ (i6 | 0) == 0))) break;
    i4 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAPU8[i4 >> 0] | 0;
    i4 = i2 & 255;
    if (i4 << 24 >> 24 <= -1) break L16;
    if (!(HEAP16[(HEAP32[i10 >> 2] | 0) + (i2 << 24 >> 24 << 1) >> 1] & 2048)) break L16;
    i1 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 31](i11, i4, 0) | 0) << 24 >> 24) + (i1 * 10 | 0) | 0;
    i2 = HEAP32[i12 >> 2] | 0;
    i4 = i2 + 12 | 0;
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
     i8 = i9;
     i7 = i3;
     continue;
    } else {
     HEAP32[i4 >> 2] = i5 + 1;
     i8 = i9;
     i7 = i3;
     continue;
    }
   }
   do if (i2) {
    if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
     HEAP32[i12 >> 2] = 0;
     i2 = 0;
     break;
    } else {
     i2 = HEAP32[i12 >> 2] | 0;
     break;
    }
   } else i2 = 0; while (0);
   i2 = (i2 | 0) == 0;
   do if (i3) {
    if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) == -1 : 0) {
     HEAP32[i14 >> 2] = 0;
     i13 = 50;
     break;
    }
    if (i2) break L16;
   } else i13 = 50; while (0);
   if ((i13 | 0) == 50 ? !i2 : 0) break;
   HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 2;
   break;
  }
  HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 4;
  i1 = 0;
 } while (0);
 return i1 | 0;
}

function _mbsrtowcs(i5, i10, i1, i3) {
 i5 = i5 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = HEAP32[i10 >> 2] | 0;
 if ((i3 | 0) != 0 ? (i4 = HEAP32[i3 >> 2] | 0, (i4 | 0) != 0) : 0) if (!i5) {
  i3 = i1;
  i6 = i2;
  i9 = 16;
 } else {
  HEAP32[i3 >> 2] = 0;
  i8 = i5;
  i3 = i1;
  i7 = i4;
  i9 = 37;
 } else if (!i5) {
  i3 = i1;
  i9 = 7;
 } else {
  i4 = i5;
  i3 = i1;
  i9 = 6;
 }
 L7 : while (1) if ((i9 | 0) == 6) {
  if (!i3) {
   i9 = 26;
   break;
  } else i5 = i4;
  while (1) {
   i4 = HEAP8[i2 >> 0] | 0;
   do if (((i4 & 255) + -1 | 0) >>> 0 < 127 ? i3 >>> 0 > 4 & (i2 & 3 | 0) == 0 : 0) {
    i6 = i2;
    while (1) {
     i2 = HEAP32[i6 >> 2] | 0;
     if ((i2 + -16843009 | i2) & -2139062144 | 0) {
      i4 = i2;
      i2 = i6;
      i9 = 32;
      break;
     }
     HEAP32[i5 >> 2] = i2 & 255;
     HEAP32[i5 + 4 >> 2] = HEAPU8[i6 + 1 >> 0];
     HEAP32[i5 + 8 >> 2] = HEAPU8[i6 + 2 >> 0];
     i2 = i6 + 4 | 0;
     i4 = i5 + 16 | 0;
     HEAP32[i5 + 12 >> 2] = HEAPU8[i6 + 3 >> 0];
     i3 = i3 + -4 | 0;
     if (i3 >>> 0 > 4) {
      i5 = i4;
      i6 = i2;
     } else {
      i9 = 31;
      break;
     }
    }
    if ((i9 | 0) == 31) {
     i5 = i4;
     i4 = HEAP8[i2 >> 0] | 0;
     break;
    } else if ((i9 | 0) == 32) {
     i4 = i4 & 255;
     break;
    }
   } while (0);
   i4 = i4 & 255;
   if ((i4 + -1 | 0) >>> 0 >= 127) break;
   i2 = i2 + 1 | 0;
   HEAP32[i5 >> 2] = i4;
   i3 = i3 + -1 | 0;
   if (!i3) {
    i9 = 26;
    break L7;
   } else i5 = i5 + 4 | 0;
  }
  i4 = i4 + -194 | 0;
  if (i4 >>> 0 > 50) {
   i9 = 48;
   break;
  }
  i8 = i5;
  i7 = HEAP32[4884 + (i4 << 2) >> 2] | 0;
  i2 = i2 + 1 | 0;
  i9 = 37;
  continue;
 } else if ((i9 | 0) == 7) {
  i4 = HEAP8[i2 >> 0] | 0;
  if (((i4 & 255) + -1 | 0) >>> 0 < 127 ? (i2 & 3 | 0) == 0 : 0) {
   i9 = HEAP32[i2 >> 2] | 0;
   i4 = i9 & 255;
   if (!((i9 + -16843009 | i9) & -2139062144)) {
    do {
     i2 = i2 + 4 | 0;
     i3 = i3 + -4 | 0;
     i4 = HEAP32[i2 >> 2] | 0;
    } while (((i4 + -16843009 | i4) & -2139062144 | 0) == 0);
    i4 = i4 & 255;
   }
  }
  i4 = i4 & 255;
  if ((i4 + -1 | 0) >>> 0 < 127) {
   i3 = i3 + -1 | 0;
   i2 = i2 + 1 | 0;
   i9 = 7;
   continue;
  }
  i4 = i4 + -194 | 0;
  if (i4 >>> 0 > 50) {
   i9 = 48;
   break;
  }
  i4 = HEAP32[4884 + (i4 << 2) >> 2] | 0;
  i6 = i2 + 1 | 0;
  i9 = 16;
  continue;
 } else if ((i9 | 0) == 16) {
  i9 = (HEAPU8[i6 >> 0] | 0) >>> 3;
  if ((i9 + -16 | i9 + (i4 >> 26)) >>> 0 > 7) {
   i9 = 17;
   break;
  }
  i2 = i6 + 1 | 0;
  if (i4 & 33554432) {
   if ((HEAP8[i2 >> 0] & -64) << 24 >> 24 != -128) {
    i9 = 20;
    break;
   }
   i2 = i6 + 2 | 0;
   if (i4 & 524288) {
    if ((HEAP8[i2 >> 0] & -64) << 24 >> 24 != -128) {
     i9 = 23;
     break;
    }
    i2 = i6 + 3 | 0;
   }
  }
  i3 = i3 + -1 | 0;
  i9 = 7;
  continue;
 } else if ((i9 | 0) == 37) {
  i4 = HEAPU8[i2 >> 0] | 0;
  i9 = i4 >>> 3;
  if ((i9 + -16 | i9 + (i7 >> 26)) >>> 0 > 7) {
   i9 = 38;
   break;
  }
  i6 = i2 + 1 | 0;
  i5 = i4 + -128 | i7 << 6;
  if ((i5 | 0) < 0) {
   i4 = HEAPU8[i6 >> 0] | 0;
   if ((i4 & 192 | 0) != 128) {
    i9 = 41;
    break;
   }
   i6 = i2 + 2 | 0;
   i5 = i4 + -128 | i5 << 6;
   if ((i5 | 0) < 0) {
    i4 = HEAPU8[i6 >> 0] | 0;
    if ((i4 & 192 | 0) != 128) {
     i9 = 44;
     break;
    }
    i5 = i4 + -128 | i5 << 6;
    i2 = i2 + 3 | 0;
   } else i2 = i6;
  } else i2 = i6;
  HEAP32[i8 >> 2] = i5;
  i4 = i8 + 4 | 0;
  i3 = i3 + -1 | 0;
  i9 = 6;
  continue;
 }
 if ((i9 | 0) == 17) {
  i2 = i6 + -1 | 0;
  i9 = 47;
 } else if ((i9 | 0) == 20) {
  i2 = i6 + -1 | 0;
  i9 = 47;
 } else if ((i9 | 0) == 23) {
  i2 = i6 + -1 | 0;
  i9 = 47;
 } else if ((i9 | 0) == 26) HEAP32[i10 >> 2] = i2; else if ((i9 | 0) == 38) {
  i5 = i8;
  i4 = i7;
  i2 = i2 + -1 | 0;
  i9 = 47;
 } else if ((i9 | 0) == 41) {
  i3 = i8;
  i1 = i2 + -1 | 0;
  i9 = 52;
 } else if ((i9 | 0) == 44) {
  i3 = i8;
  i1 = i2 + -1 | 0;
  i9 = 52;
 }
 if ((i9 | 0) == 47) if (!i4) i9 = 48; else {
  i3 = i5;
  i1 = i2;
  i9 = 52;
 }
 if ((i9 | 0) == 48) if (!(HEAP8[i2 >> 0] | 0)) {
  if (i5 | 0) {
   HEAP32[i5 >> 2] = 0;
   HEAP32[i10 >> 2] = 0;
  }
  i1 = i1 - i3 | 0;
 } else {
  i3 = i5;
  i1 = i2;
  i9 = 52;
 }
 if ((i9 | 0) == 52) {
  i9 = ___errno_location() | 0;
  HEAP32[i9 >> 2] = 84;
  if (!i3) i1 = -1; else {
   HEAP32[i10 >> 2] = i1;
   i1 = -1;
  }
 }
 return i1 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN13FunctionScopeC2EPNS_8FunctionES9_(i12, i11, i9) {
 i12 = i12 | 0;
 i11 = i11 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i13 = 0, i14 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i13 + 8 | 0;
 i1 = i13 + 4 | 0;
 i7 = i13;
 HEAP32[i12 + 4 >> 2] = 0;
 HEAP32[i12 + 8 >> 2] = 0;
 HEAP32[i12 >> 2] = i12 + 4;
 HEAP32[i12 + 12 >> 2] = i11;
 i8 = i11 + 8 | 0;
 i4 = i11 + 12 | 0;
 i5 = i9 + 4 | 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i3 = HEAP32[i9 >> 2] | 0;
 if (((HEAP32[i4 >> 2] | 0) - (HEAP32[i8 >> 2] | 0) >> 3 | 0) != (i2 - i3 >> 4 | 0)) {
  i14 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 20326) | 0;
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
  i1 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i14, i6) | 0, 20337) | 0;
  i4 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(i1, (HEAP32[i4 >> 2] | 0) - (HEAP32[i8 >> 2] | 0) >> 3) | 0, 20348) | 0;
  i4 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(i4, (HEAP32[i5 >> 2] | 0) - (HEAP32[i9 >> 2] | 0) >> 4) | 0, 20366) | 0;
  i1 = __ZNKSt3__18ios_base6getlocEv(i4 + (HEAP32[(HEAP32[i4 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  HEAP32[i6 >> 2] = i1;
  i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43088) | 0;
  i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 10) | 0;
  __ZNSt3__16localeD2Ev(i6);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i4, i1) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i4) | 0;
  _abort();
 }
 i1 = 0;
 while (1) {
  if (i1 >>> 0 >= i2 - i3 >> 4 >>> 0) break;
  i2 = HEAP32[i8 >> 2] | 0;
  if ((HEAP32[i2 + (i1 << 3) + 4 >> 2] | 0) != (HEAP32[i3 + (i1 << 4) >> 2] | 0)) {
   i10 = 7;
   break;
  }
  i3 = __ZNSt3__13mapIN6cashew7IStringEN4wasm7LiteralENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i12, i2 + (i1 << 3) | 0) | 0;
  i2 = (HEAP32[i9 >> 2] | 0) + (i1 << 4) | 0;
  HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i3 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i3 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
  HEAP32[i3 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
  i3 = HEAP32[i9 >> 2] | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  i1 = i1 + 1 | 0;
 }
 if ((i10 | 0) == 7) {
  i14 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 20326) | 0;
  HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
  i14 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i14, i6) | 0, 20378) | 0;
  i14 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i14, __ZN4wasm13printWasmTypeENS_8WasmTypeE(HEAP32[(HEAP32[i8 >> 2] | 0) + (i1 << 3) + 4 >> 2] | 0) | 0) | 0, 20394) | 0, i1) | 0, 20410) | 0;
  i14 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i14, __ZN4wasm13printWasmTypeENS_8WasmTypeE(HEAP32[(HEAP32[i9 >> 2] | 0) + (i1 << 4) >> 2] | 0) | 0) | 0, 39508) | 0;
  i10 = __ZNKSt3__18ios_base6getlocEv(i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  HEAP32[i6 >> 2] = i10;
  i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43088) | 0;
  i10 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 31](i10, 10) | 0;
  __ZNSt3__16localeD2Ev(i6);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i14, i10) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i14) | 0;
  _abort();
 }
 i2 = HEAP32[i11 + 24 >> 2] | 0;
 i1 = HEAP32[i11 + 20 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  i11 = HEAP32[i1 + 4 >> 2] | 0;
  i14 = __ZNSt3__13mapIN6cashew7IStringEN4wasm7LiteralENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i12, i1) | 0;
  HEAP32[i14 >> 2] = i11;
  i1 = i1 + 8 | 0;
 }
 STACKTOP = i13;
 return;
}

function __GLOBAL__sub_I_parser_cpp() {
 __ZN6cashew7IString3setEPKcb(41036, 30563, 1);
 __ZN6cashew7IString3setEPKcb(41040, 30572, 1);
 __ZN6cashew7IString3setEPKcb(41044, 30578, 1);
 __ZN6cashew7IString3setEPKcb(41048, 30584, 1);
 __ZN6cashew7IString3setEPKcb(41052, 30589, 1);
 __ZN6cashew7IString3setEPKcb(41056, 30596, 1);
 __ZN6cashew7IString3setEPKcb(41060, 30601, 1);
 __ZN6cashew7IString3setEPKcb(41064, 30605, 1);
 __ZN6cashew7IString3setEPKcb(41068, 30611, 1);
 __ZN6cashew7IString3setEPKcb(41072, 30623, 1);
 __ZN6cashew7IString3setEPKcb(41076, 30630, 1);
 __ZN6cashew7IString3setEPKcb(41080, 30637, 1);
 __ZN6cashew7IString3setEPKcb(41084, 30640, 1);
 __ZN6cashew7IString3setEPKcb(41088, 30645, 1);
 __ZN6cashew7IString3setEPKcb(41092, 30651, 1);
 __ZN6cashew7IString3setEPKcb(41096, 30654, 1);
 __ZN6cashew7IString3setEPKcb(41100, 30658, 1);
 __ZN6cashew7IString3setEPKcb(41104, 30662, 1);
 __ZN6cashew7IString3setEPKcb(41108, 30666, 1);
 __ZN6cashew7IString3setEPKcb(41112, 30671, 1);
 __ZN6cashew7IString3setEPKcb(41116, 30675, 1);
 __ZN6cashew7IString3setEPKcb(41120, 30681, 1);
 __ZN6cashew7IString3setEPKcb(41124, 30687, 1);
 __ZN6cashew7IString3setEPKcb(41128, 30696, 1);
 __ZN6cashew7IString3setEPKcb(41132, 30703, 1);
 __ZN6cashew7IString3setEPKcb(41136, 34335, 1);
 __ZN6cashew7IString3setEPKcb(41140, 34343, 1);
 __ZN6cashew7IString3setEPKcb(41144, 30710, 1);
 __ZN6cashew7IString3setEPKcb(41148, 30719, 1);
 __ZN6cashew7IString3setEPKcb(41152, 30732, 1);
 __ZN6cashew7IString3setEPKcb(41156, 30746, 1);
 __ZN6cashew7IString3setEPKcb(41160, 30758, 1);
 __ZN6cashew7IString3setEPKcb(41164, 30773, 1);
 __ZN6cashew7IString3setEPKcb(41168, 30788, 1);
 __ZN6cashew7IString3setEPKcb(41172, 30801, 1);
 __ZN6cashew7IString3setEPKcb(41176, 30814, 1);
 __ZN6cashew7IString3setEPKcb(41180, 39588, 1);
 __ZN6cashew7IString3setEPKcb(41184, 39539, 1);
 __ZN6cashew7IString3setEPKcb(41188, 39579, 1);
 __ZN6cashew7IString3setEPKcb(41192, 38522, 1);
 __ZN6cashew7IString3setEPKcb(41196, 39515, 1);
 __ZN6cashew7IString3setEPKcb(41200, 39563, 1);
 __ZN6cashew7IString3setEPKcb(41204, 38556, 1);
 __ZN6cashew7IString3setEPKcb(41208, 39099, 1);
 __ZN6cashew7IString3setEPKcb(41212, 39523, 1);
 __ZN6cashew7IString3setEPKcb(41216, 39529, 1);
 __ZN6cashew7IString3setEPKcb(41220, 38514, 1);
 __ZN6cashew7IString3setEPKcb(41224, 39520, 1);
 __ZN6cashew7IString3setEPKcb(41228, 39560, 1);
 __ZN6cashew7IString3setEPKcb(41232, 39510, 1);
 __ZN6cashew7IString3setEPKcb(41236, 39633, 1);
 __ZN6cashew7IString3setEPKcb(41240, 38588, 1);
 __ZN6cashew7IString3setEPKcb(41244, 39638, 1);
 __ZN6cashew7IString3setEPKcb(41248, 39532, 1);
 __ZN6cashew7IString3setEPKcb(41252, 30827, 1);
 __ZN6cashew7IString3setEPKcb(41256, 30831, 1);
 __ZN6cashew7IString3setEPKcb(41260, 30845, 1);
 __ZN6cashew7IString3setEPKcb(41264, 30851, 1);
 __ZN6cashew7IString3setEPKcb(41268, 30858, 1);
 __ZN6cashew7IString3setEPKcb(41272, 30865, 1);
 __ZN6cashew7IString3setEPKcb(41276, 30873, 1);
 __ZN6cashew7IString3setEPKcb(41280, 30880, 1);
 __ZN6cashew7IString3setEPKcb(41284, 30888, 1);
 __ZN6cashew7IString3setEPKcb(41288, 30896, 1);
 __ZN6cashew7IString3setEPKcb(41292, 30904, 1);
 __ZN6cashew7IString3setEPKcb(41296, 49108, 1);
 __ZN6cashew7IString3setEPKcb(41300, 30907, 1);
 __ZN6cashew7IString3setEPKcb(41304, 38467, 1);
 __ZN6cashew7IString3setEPKcb(41308, 30916, 1);
 __ZN6cashew7IString3setEPKcb(41312, 30918, 1);
 __ZN6cashew7IString3setEPKcb(41316, 30920, 1);
 __ZN6cashew7IString3setEPKcb(41320, 38554, 1);
 __ZN6cashew7IString3setEPKcb(41324, 30922, 1);
 __ZN6cashew7IString3setEPKcb(41328, 30924, 1);
 __ZN6cashew7IString3setEPKcb(41332, 30926, 1);
 __ZN6cashew7IString3setEPKcb(41336, 30931, 1);
 __ZN6cashew7IString3setEPKcb(41340, 30939, 1);
 __ZN6cashew7IString3setEPKcb(41344, 39508, 1);
 __ZN6cashew7IString3setEPKcb(41348, 30943, 1);
 __ZN6cashew7IString3setEPKcb(41352, 30947, 1);
 __ZN6cashew7IString3setEPKcb(41356, 30953, 1);
 __ZN6cashew7IString3setEPKcb(41360, 39686, 1);
 __ZN6cashew7IString3setEPKcb(41364, 38527, 1);
 __ZN6cashew10IStringSetC2EPKc(41368, 30960);
 ___cxa_atexit(203, 41368, ___dso_handle | 0) | 0;
 HEAP32[10347] = 0;
 HEAP32[10348] = 0;
 HEAP32[10349] = 0;
 ___cxa_atexit(204, 41388, ___dso_handle | 0) | 0;
 HEAP32[10350] = 0;
 HEAP32[10351] = 0;
 HEAP32[10352] = 0;
 ___cxa_atexit(205, 41400, ___dso_handle | 0) | 0;
 __ZN6cashew4InitC2Ev(47034);
 return;
}

function __ZN4wasm16PrintSExpression10visitUnaryEPNS_5UnaryE(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i1 = i4 + 4 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i1 >> 2] | 0, 40) | 0;
 i5 = __Z12prepareColorRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEE(HEAP32[i1 >> 2] | 0) | 0;
 i2 = i3 + 4 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i5, __ZN4wasm13printWasmTypeENS_8WasmTypeE(HEAP32[i2 >> 2] | 0) | 0) | 0, 46) | 0;
 do switch (HEAP32[i3 + 8 >> 2] | 0) {
 case 0:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 25999) | 0;
   break;
  }
 case 1:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26003) | 0;
   break;
  }
 case 2:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26007) | 0;
   break;
  }
 case 3:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26014) | 0;
   break;
  }
 case 4:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26018) | 0;
   break;
  }
 case 5:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26022) | 0;
   break;
  }
 case 6:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26027) | 0;
   break;
  }
 case 7:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26033) | 0;
   break;
  }
 case 8:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26039) | 0;
   break;
  }
 case 9:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26047) | 0;
   break;
  }
 case 10:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26052) | 0;
   break;
  }
 case 11:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26065) | 0;
   break;
  }
 case 12:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26078) | 0;
   break;
  }
 case 13:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26087) | 0;
   break;
  }
 case 14:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26099) | 0;
   break;
  }
 case 15:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26111) | 0;
   break;
  }
 case 16:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26123) | 0;
   break;
  }
 case 17:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26135) | 0, (HEAP32[i2 >> 2] | 0) == 2 ? 26148 : 26152) | 0;
   break;
  }
 case 19:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26156) | 0;
   break;
  }
 case 18:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26170) | 0;
   break;
  }
 case 21:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26184) | 0;
   break;
  }
 case 20:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26198) | 0;
   break;
  }
 case 22:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26212) | 0;
   break;
  }
 case 23:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26224) | 0;
   break;
  }
 case 24:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, 26135) | 0, (HEAP32[i2 >> 2] | 0) == 4 ? 26235 : 26239) | 0;
   break;
  }
 default:
  _abort();
 } while (0);
 __ZN4wasm16PrintSExpression9incIndentEv(i4);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i4, HEAP32[i3 + 12 >> 2] | 0);
 __ZN4wasm16PrintSExpression9decIndentEv(i4);
 return;
}

function __ZN4wasm16PrintSExpression13visitFunctionEPNS_8FunctionE(i9, i8) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i11 + 16 | 0;
 i3 = i11 + 12 | 0;
 i1 = i11 + 8 | 0;
 i4 = i11 + 4 | 0;
 i6 = i11;
 i7 = i9 + 4 | 0;
 i2 = __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i7 >> 2] | 0, 25776, 1) | 0;
 HEAP32[i3 >> 2] = HEAP32[i8 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
 __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i2, i5) | 0;
 i2 = i8 + 32 | 0;
 if (HEAP32[i2 >> 2] | 0) {
  i3 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i7 >> 2] | 0, HEAP32[i9 + 16 >> 2] | 0) | 0, 25782) | 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i3, i5) | 0, 41) | 0;
 }
 i3 = HEAP32[i8 + 12 >> 2] | 0;
 i1 = HEAP32[i8 + 8 >> 2] | 0;
 i2 = i3;
 L4 : do if ((i3 | 0) != (i1 | 0)) {
  i3 = i9 + 16 | 0;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) break L4;
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i7 >> 2] | 0, HEAP32[i3 >> 2] | 0) | 0;
   i12 = __Z17printMinorOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(HEAP32[i7 >> 2] | 0, 25789) | 0;
   HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
   i12 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i12, i5) | 0, 32) | 0;
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i12, __ZN4wasm13printWasmTypeENS_8WasmTypeE(HEAP32[i1 + 4 >> 2] | 0) | 0) | 0, 38469) | 0;
   i1 = i1 + 8 | 0;
  }
 } while (0);
 i1 = i8 + 4 | 0;
 if (HEAP32[i1 >> 2] | 0) {
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i7 >> 2] | 0, HEAP32[i9 + 16 >> 2] | 0) | 0;
  i12 = __Z17printMinorOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(HEAP32[i7 >> 2] | 0, 25737) | 0;
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i12, __ZN4wasm13printWasmTypeENS_8WasmTypeE(HEAP32[i1 >> 2] | 0) | 0) | 0, 38469) | 0;
 }
 __ZN4wasm16PrintSExpression9incIndentEv(i9);
 i1 = HEAP32[i8 + 24 >> 2] | 0;
 i2 = i9 + 8 | 0;
 i3 = i9 + 20 | 0;
 i4 = HEAP32[i8 + 20 >> 2] | 0;
 while (1) {
  if ((i4 | 0) == (i1 | 0)) break;
  __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i7 >> 2] | 0, HEAP32[i2 >> 2] | 0) | 0;
  i12 = __Z17printMinorOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(HEAP32[i7 >> 2] | 0, 25796) | 0;
  HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  i12 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i12, i5) | 0, 32) | 0;
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i12, __ZN4wasm13printWasmTypeENS_8WasmTypeE(HEAP32[i4 + 4 >> 2] | 0) | 0) | 0, 38469) | 0;
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i7 >> 2] | 0, HEAP32[i3 >> 2] | 0) | 0;
  i4 = i4 + 8 | 0;
 }
 i1 = i8 + 36 | 0;
 L17 : do if (__ZN4wasm10Expression2isINS_5BlockEEEbv(HEAP32[i1 >> 2] | 0) | 0 ? (i12 = (__ZN4wasm10Expression4castINS_5BlockEEEPT_v(HEAP32[i1 >> 2] | 0) | 0) + 8 | 0, (HEAP32[i12 >> 2] | 0) == 0) : 0) {
  i2 = __ZN4wasm10Expression4castINS_5BlockEEEPT_v(HEAP32[i1 >> 2] | 0) | 0;
  i1 = HEAP32[i2 + 16 >> 2] | 0;
  i2 = HEAP32[i2 + 12 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i1 | 0)) break L17;
   __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i9, HEAP32[i2 >> 2] | 0);
   i2 = i2 + 4 | 0;
  }
 } else i10 = 17; while (0);
 if ((i10 | 0) == 17) __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i9, HEAP32[i1 >> 2] | 0);
 __ZN4wasm16PrintSExpression9decIndentEv(i9);
 STACKTOP = i11;
 return;
}

function __ZN4wasm16PrintSExpression11visitSwitchEPNS_6SwitchE(i16, i6) {
 i16 = i16 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i12 = i17 + 32 | 0;
 i1 = i17 + 24 | 0;
 i15 = i17;
 i7 = i17 + 20 | 0;
 i9 = i17 + 16 | 0;
 i13 = i17 + 12 | 0;
 i14 = i16 + 4 | 0;
 __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i14 >> 2] | 0, 25872, 0) | 0;
 i2 = HEAP32[i6 + 8 >> 2] | 0;
 if (i2 | 0) {
  i11 = HEAP32[i14 >> 2] | 0;
  HEAP32[i1 >> 2] = i2;
  HEAP32[i12 >> 2] = HEAP32[i1 >> 2];
  __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i11, i12) | 0;
 }
 __ZN4wasm16PrintSExpression9incIndentEv(i16);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i16, HEAP32[i6 + 12 >> 2] | 0);
 i11 = i16 + 8 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i14 >> 2] | 0, HEAP32[i11 >> 2] | 0) | 0, 25885) | 0;
 HEAP32[i15 + 4 >> 2] = 0;
 HEAP32[i15 + 8 >> 2] = 0;
 HEAP32[i15 >> 2] = i15 + 4;
 i10 = i6 + 32 | 0;
 i8 = i6 + 36 | 0;
 i1 = HEAP32[i8 >> 2] | 0;
 i2 = HEAP32[i10 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(i12, i15, i2);
  i2 = i2 + 8 | 0;
 }
 i3 = HEAP32[i6 + 20 >> 2] | 0;
 i4 = i16 + 16 | 0;
 i5 = i6 + 28 | 0;
 i2 = HEAP32[i6 + 16 >> 2] | 0;
 while (1) {
  i1 = HEAP32[i14 >> 2] | 0;
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i1, HEAP32[i4 >> 2] | 0) | 0, 38467) | 0;
  i6 = (__ZNKSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE14__count_uniqueIS2_EEjRKT_(i15, i2) | 0) == 0;
  i6 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i1, i6 ? 25892 : 30926) | 0, 39558) | 0;
  HEAP32[i7 >> 2] = HEAP32[(HEAP32[i2 >> 2] | 0 ? i2 : i5) >> 2];
  HEAP32[i12 >> 2] = HEAP32[i7 >> 2];
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i6, i12) | 0, 38469) | 0;
  i2 = i2 + 4 | 0;
 }
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i1, 38469) | 0;
 if (HEAP32[i5 >> 2] | 0) {
  i6 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i14 >> 2] | 0, 38519) | 0;
  i7 = (__ZNKSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE14__count_uniqueIS2_EEjRKT_(i15, i5) | 0) == 0;
  i7 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i6, i7 ? 25892 : 30926) | 0, 39558) | 0;
  HEAP32[i9 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i12 >> 2] = HEAP32[i9 >> 2];
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i7, i12) | 0, 38469) | 0;
 }
 i3 = i16 + 20 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i14 >> 2] | 0, HEAP32[i3 >> 2] | 0) | 0;
 i2 = HEAP32[i8 >> 2] | 0;
 i1 = HEAP32[i10 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i14 >> 2] | 0, HEAP32[i11 >> 2] | 0) | 0;
  i10 = __Z17printMinorOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(HEAP32[i14 >> 2] | 0, 25895) | 0;
  HEAP32[i13 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
  __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i10, i12) | 0;
  __ZN4wasm16PrintSExpression9incIndentEv(i16);
  __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i16, HEAP32[i1 + 4 >> 2] | 0);
  __ZN4wasm16PrintSExpression9decIndentEv(i16);
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i14 >> 2] | 0, HEAP32[i3 >> 2] | 0) | 0;
  i1 = i1 + 8 | 0;
 }
 __ZN4wasm16PrintSExpression9decIndentEv(i16);
 __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev(i15);
 STACKTOP = i17;
 return;
}

function __ZNSt3__17__sort5IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_S9_S9_T_(i11, i12, i13, i4, i1, i10) {
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i15 = i16 + 72 | 0;
 i14 = i16 + 64 | 0;
 i18 = i16 + 56 | 0;
 i17 = i16 + 48 | 0;
 i2 = i16 + 40 | 0;
 i3 = i16 + 32 | 0;
 i5 = i16 + 24 | 0;
 i6 = i16 + 16 | 0;
 i7 = i16 + 8 | 0;
 i8 = i16;
 i9 = __ZNSt3__17__sort4IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_S9_T_(i11, i12, i13, i4, i10) | 0;
 i19 = i1;
 i20 = HEAP32[i19 + 4 >> 2] | 0;
 i21 = i18;
 HEAP32[i21 >> 2] = HEAP32[i19 >> 2];
 HEAP32[i21 + 4 >> 2] = i20;
 i21 = i4;
 i20 = HEAP32[i21 + 4 >> 2] | 0;
 i19 = i17;
 HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
 HEAP32[i19 + 4 >> 2] = i20;
 HEAP32[i14 >> 2] = HEAP32[i18 >> 2];
 HEAP32[i14 + 4 >> 2] = HEAP32[i18 + 4 >> 2];
 HEAP32[i15 >> 2] = HEAP32[i17 >> 2];
 HEAP32[i15 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
 if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i10, i14, i15) | 0) {
  i21 = i4;
  i20 = HEAP32[i21 >> 2] | 0;
  i21 = HEAP32[i21 + 4 >> 2] | 0;
  i17 = i1;
  i18 = HEAP32[i17 + 4 >> 2] | 0;
  i19 = i4;
  HEAP32[i19 >> 2] = HEAP32[i17 >> 2];
  HEAP32[i19 + 4 >> 2] = i18;
  HEAP32[i1 >> 2] = i20;
  HEAP32[i1 + 4 >> 2] = i21;
  i1 = i9 + 1 | 0;
  i21 = i4;
  i20 = HEAP32[i21 + 4 >> 2] | 0;
  i19 = i2;
  HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
  HEAP32[i19 + 4 >> 2] = i20;
  i19 = i13;
  i20 = HEAP32[i19 + 4 >> 2] | 0;
  i21 = i3;
  HEAP32[i21 >> 2] = HEAP32[i19 >> 2];
  HEAP32[i21 + 4 >> 2] = i20;
  HEAP32[i14 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i14 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i15 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i15 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i10, i14, i15) | 0) {
   i21 = i13;
   i20 = HEAP32[i21 >> 2] | 0;
   i21 = HEAP32[i21 + 4 >> 2] | 0;
   i18 = i4;
   i19 = HEAP32[i18 + 4 >> 2] | 0;
   i1 = i13;
   HEAP32[i1 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i1 + 4 >> 2] = i19;
   i1 = i4;
   HEAP32[i1 >> 2] = i20;
   HEAP32[i1 + 4 >> 2] = i21;
   i1 = i9 + 2 | 0;
   i21 = i13;
   i20 = HEAP32[i21 + 4 >> 2] | 0;
   i19 = i5;
   HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
   HEAP32[i19 + 4 >> 2] = i20;
   i19 = i12;
   i20 = HEAP32[i19 + 4 >> 2] | 0;
   i21 = i6;
   HEAP32[i21 >> 2] = HEAP32[i19 >> 2];
   HEAP32[i21 + 4 >> 2] = i20;
   HEAP32[i14 >> 2] = HEAP32[i5 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
   HEAP32[i15 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i15 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i10, i14, i15) | 0) {
    i20 = i12;
    i19 = HEAP32[i20 >> 2] | 0;
    i20 = HEAP32[i20 + 4 >> 2] | 0;
    i17 = i13;
    i18 = HEAP32[i17 + 4 >> 2] | 0;
    i21 = i12;
    HEAP32[i21 >> 2] = HEAP32[i17 >> 2];
    HEAP32[i21 + 4 >> 2] = i18;
    i21 = i13;
    HEAP32[i21 >> 2] = i19;
    HEAP32[i21 + 4 >> 2] = i20;
    i21 = i12;
    i20 = HEAP32[i21 + 4 >> 2] | 0;
    i19 = i7;
    HEAP32[i19 >> 2] = HEAP32[i21 >> 2];
    HEAP32[i19 + 4 >> 2] = i20;
    i19 = i11;
    i20 = HEAP32[i19 + 4 >> 2] | 0;
    i21 = i8;
    HEAP32[i21 >> 2] = HEAP32[i19 >> 2];
    HEAP32[i21 + 4 >> 2] = i20;
    HEAP32[i14 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i14 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    HEAP32[i15 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i15 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
    if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i10, i14, i15) | 0) {
     i21 = i11;
     i20 = HEAP32[i21 >> 2] | 0;
     i21 = HEAP32[i21 + 4 >> 2] | 0;
     i18 = i12;
     i19 = HEAP32[i18 + 4 >> 2] | 0;
     i1 = i11;
     HEAP32[i1 >> 2] = HEAP32[i18 >> 2];
     HEAP32[i1 + 4 >> 2] = i19;
     i1 = i12;
     HEAP32[i1 >> 2] = i20;
     HEAP32[i1 + 4 >> 2] = i21;
     i1 = i9 + 4 | 0;
    } else i1 = i9 + 3 | 0;
   }
  }
 } else i1 = i9;
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNSt3__127__insertion_sort_incompleteIRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEbT0_S9_T_(i12, i13, i11) {
 i12 = i12 | 0;
 i13 = i13 | 0;
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i15 = i16 + 56 | 0;
 i14 = i16 + 48 | 0;
 i2 = i16 + 40 | 0;
 i3 = i16 + 32 | 0;
 i7 = i16 + 24 | 0;
 i8 = i16 + 16 | 0;
 i9 = i16 + 8 | 0;
 i10 = i16;
 switch (i13 - i12 >> 3 | 0) {
 case 1:
 case 0:
  {
   i1 = 1;
   break;
  }
 case 2:
  {
   i1 = i13 + -8 | 0;
   i13 = i1;
   i10 = HEAP32[i13 + 4 >> 2] | 0;
   i9 = i2;
   HEAP32[i9 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i9 + 4 >> 2] = i10;
   i9 = i12;
   i10 = HEAP32[i9 + 4 >> 2] | 0;
   i13 = i3;
   HEAP32[i13 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i13 + 4 >> 2] = i10;
   HEAP32[i14 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i15 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i15 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
   if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i11, i14, i15) | 0) {
    i15 = i12;
    i14 = HEAP32[i15 >> 2] | 0;
    i15 = HEAP32[i15 + 4 >> 2] | 0;
    i10 = i1;
    i11 = HEAP32[i10 + 4 >> 2] | 0;
    i13 = i12;
    HEAP32[i13 >> 2] = HEAP32[i10 >> 2];
    HEAP32[i13 + 4 >> 2] = i11;
    HEAP32[i1 >> 2] = i14;
    HEAP32[i1 + 4 >> 2] = i15;
    i1 = 1;
   } else i1 = 1;
   break;
  }
 case 3:
  {
   __ZNSt3__17__sort3IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_T_(i12, i12 + 8 | 0, i13 + -8 | 0, i11) | 0;
   i1 = 1;
   break;
  }
 case 4:
  {
   __ZNSt3__17__sort4IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_S9_T_(i12, i12 + 8 | 0, i12 + 16 | 0, i13 + -8 | 0, i11) | 0;
   i1 = 1;
   break;
  }
 case 5:
  {
   __ZNSt3__17__sort5IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_S9_S9_T_(i12, i12 + 8 | 0, i12 + 16 | 0, i12 + 24 | 0, i13 + -8 | 0, i11) | 0;
   i1 = 1;
   break;
  }
 default:
  {
   i2 = i12 + 16 | 0;
   __ZNSt3__17__sort3IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_T_(i12, i12 + 8 | 0, i2, i11) | 0;
   i1 = 0;
   i6 = i12 + 24 | 0;
   while (1) {
    if ((i6 | 0) == (i13 | 0)) {
     i2 = 1;
     i1 = 0;
     break;
    }
    i5 = i6;
    i4 = HEAP32[i5 + 4 >> 2] | 0;
    i3 = i7;
    HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
    HEAP32[i3 + 4 >> 2] = i4;
    i3 = i2;
    i4 = HEAP32[i3 + 4 >> 2] | 0;
    i5 = i8;
    HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
    HEAP32[i5 + 4 >> 2] = i4;
    HEAP32[i14 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i14 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    HEAP32[i15 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i15 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
    if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i11, i14, i15) | 0) {
     i5 = i6;
     i4 = HEAP32[i5 >> 2] | 0;
     i5 = HEAP32[i5 + 4 >> 2] | 0;
     i3 = i6;
     while (1) {
      i18 = i2;
      i17 = HEAP32[i18 + 4 >> 2] | 0;
      HEAP32[i3 >> 2] = HEAP32[i18 >> 2];
      HEAP32[i3 + 4 >> 2] = i17;
      if ((i2 | 0) == (i12 | 0)) break;
      i3 = i9;
      HEAP32[i3 >> 2] = i4;
      HEAP32[i3 + 4 >> 2] = i5;
      i3 = i2 + -8 | 0;
      i19 = i3;
      i17 = HEAP32[i19 + 4 >> 2] | 0;
      i18 = i10;
      HEAP32[i18 >> 2] = HEAP32[i19 >> 2];
      HEAP32[i18 + 4 >> 2] = i17;
      HEAP32[i14 >> 2] = HEAP32[i9 >> 2];
      HEAP32[i14 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
      HEAP32[i15 >> 2] = HEAP32[i10 >> 2];
      HEAP32[i15 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
      if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i11, i14, i15) | 0) {
       i19 = i2;
       i2 = i3;
       i3 = i19;
      } else break;
     }
     i19 = i2;
     HEAP32[i19 >> 2] = i4;
     HEAP32[i19 + 4 >> 2] = i5;
     i1 = i1 + 1 | 0;
     if ((i1 | 0) == 8) {
      i2 = 0;
      i1 = (i6 + 8 | 0) == (i13 | 0);
      break;
     }
    }
    i2 = i6;
    i6 = i6 + 8 | 0;
   }
   i1 = i1 | i2;
  }
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZN4wasm15Asm2WasmBuilder24noteImportedFunctionCallEN6cashew3RefENS_8WasmTypeEP7AsmData(i14, i6, i7, i12) {
 i14 = i14 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i8 = i19 + 64 | 0;
 i13 = i19 + 60 | 0;
 i18 = i19 + 40 | 0;
 i1 = i19 + 32 | 0;
 i2 = i19 + 20 | 0;
 i4 = i19 + 8 | 0;
 i11 = i19 + 36 | 0;
 i9 = i19 + 4 | 0;
 i10 = i19;
 if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i6, 0) | 0, 40884) | 0 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i6, 1) | 0, 0) | 0, 41056) | 0 : 0) {
  i3 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i6, 1) | 0, 1) | 0;
  i3 = __ZN6cashew5Value10getIStringEv(HEAP32[i3 >> 2] | 0) | 0;
  i3 = HEAP32[i3 >> 2] | 0;
  HEAP32[i13 >> 2] = i3;
  HEAP32[i18 >> 2] = 0;
  HEAP32[i18 + 4 >> 2] = 0;
  HEAP32[i18 + 8 >> 2] = 0;
  HEAP32[i18 + 12 >> 2] = 0;
  HEAP32[i18 + 16 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i4, 22758, 5);
  i3 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(i4, i3) | 0;
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
  i5 = 0;
  while (1) {
   if ((i5 | 0) == 3) break;
   HEAP32[i3 + (i5 << 2) >> 2] = 0;
   i5 = i5 + 1 | 0;
  }
  __ZN6cashew7IStringC2EPKcb(i1, (HEAP8[i2 >> 0] & 1) == 0 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0, 0);
  HEAP32[i18 >> 2] = HEAP32[i1 >> 2];
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
  i17 = i18 + 4 | 0;
  HEAP32[i17 >> 2] = i7;
  i1 = __ZN6cashew3RefixEj(i6, 2) | 0;
  i1 = HEAP32[i1 >> 2] | 0;
  HEAP32[i11 >> 2] = i1;
  i15 = i18 + 8 | 0;
  i16 = i18 + 12 | 0;
  i3 = i18 + 16 | 0;
  i4 = 0;
  while (1) {
   if (i4 >>> 0 >= (__ZN6cashew5Value4sizeEv(i1) | 0) >>> 0) break;
   i1 = __ZN6cashew3RefixEj(i11, i4) | 0;
   HEAP32[i10 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
   i1 = __ZN4wasm15Asm2WasmBuilder14detectWasmTypeEN6cashew3RefEP7AsmData(i14, i8, i12) | 0;
   HEAP32[i9 >> 2] = i1;
   i2 = HEAP32[i16 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i3 >> 2] | 0) >>> 0) {
    HEAP32[i2 >> 2] = i1;
    HEAP32[i16 >> 2] = i2 + 4;
   } else __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i15, i9);
   i1 = HEAP32[i11 >> 2] | 0;
   i4 = i4 + 1 | 0;
  }
  i4 = i14 + 100 | 0;
  i14 = (__ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i4, i13) | 0) == (i14 + 104 | 0);
  i4 = __ZNSt3__13mapIN6cashew7IStringEN4wasm12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i4, i13) | 0;
  if (!i14) {
   if (!(__ZN4wasm12FunctionTypeeqERS0_(i18, i4) | 0)) {
    i5 = i4 + 8 | 0;
    i6 = i4 + 12 | 0;
    i7 = i4 + 16 | 0;
    i8 = 0;
    while (1) {
     i14 = HEAP32[i15 >> 2] | 0;
     i2 = i14;
     if (i8 >>> 0 >= (HEAP32[i16 >> 2] | 0) - i14 >> 2 >>> 0) break;
     i14 = HEAP32[i6 >> 2] | 0;
     i1 = HEAP32[i5 >> 2] | 0;
     i3 = i14;
     do if (i14 - i1 >> 2 >>> 0 > i8 >>> 0) {
      i1 = i1 + (i8 << 2) | 0;
      if (!(HEAP32[i1 >> 2] | 0)) HEAP32[i1 >> 2] = HEAP32[i2 + (i8 << 2) >> 2];
     } else {
      i1 = i2 + (i8 << 2) | 0;
      if ((i3 | 0) == (HEAP32[i7 >> 2] | 0)) {
       __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i5, i1);
       break;
      } else {
       HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
       HEAP32[i6 >> 2] = i3 + 4;
       break;
      }
     } while (0);
     i8 = i8 + 1 | 0;
    }
    i1 = i4 + 4 | 0;
    if (!(HEAP32[i1 >> 2] | 0)) HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
   }
  } else __ZN4wasm12FunctionTypeaSERKS0_(i4, i18) | 0;
  __ZNSt3__113__vector_baseIN4wasm8WasmTypeENS_9allocatorIS2_EEED2Ev(i18 + 8 | 0);
  STACKTOP = i19;
  return;
 }
 ___assert_fail(22697, 13478, 209, 22733);
}

function ___udivmoddi4(i5, i6, i8, i11, i13) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 i11 = i11 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0, i14 = 0, i15 = 0;
 i9 = i5;
 i4 = i6;
 i7 = i4;
 i2 = i8;
 i12 = i11;
 i3 = i12;
 if (!i7) {
  i1 = (i13 | 0) != 0;
  if (!i3) {
   if (i1) {
    HEAP32[i13 >> 2] = (i9 >>> 0) % (i2 >>> 0);
    HEAP32[i13 + 4 >> 2] = 0;
   }
   i12 = 0;
   i13 = (i9 >>> 0) / (i2 >>> 0) >>> 0;
   return (tempRet0 = i12, i13) | 0;
  } else {
   if (!i1) {
    i12 = 0;
    i13 = 0;
    return (tempRet0 = i12, i13) | 0;
   }
   HEAP32[i13 >> 2] = i5 | 0;
   HEAP32[i13 + 4 >> 2] = i6 & 0;
   i12 = 0;
   i13 = 0;
   return (tempRet0 = i12, i13) | 0;
  }
 }
 i1 = (i3 | 0) == 0;
 do if (i2) {
  if (!i1) {
   i1 = (Math_clz32(i3 | 0) | 0) - (Math_clz32(i7 | 0) | 0) | 0;
   if (i1 >>> 0 <= 31) {
    i10 = i1 + 1 | 0;
    i3 = 31 - i1 | 0;
    i6 = i1 - 31 >> 31;
    i2 = i10;
    i5 = i9 >>> (i10 >>> 0) & i6 | i7 << i3;
    i6 = i7 >>> (i10 >>> 0) & i6;
    i1 = 0;
    i3 = i9 << i3;
    break;
   }
   if (!i13) {
    i12 = 0;
    i13 = 0;
    return (tempRet0 = i12, i13) | 0;
   }
   HEAP32[i13 >> 2] = i5 | 0;
   HEAP32[i13 + 4 >> 2] = i4 | i6 & 0;
   i12 = 0;
   i13 = 0;
   return (tempRet0 = i12, i13) | 0;
  }
  i1 = i2 - 1 | 0;
  if (i1 & i2 | 0) {
   i3 = (Math_clz32(i2 | 0) | 0) + 33 - (Math_clz32(i7 | 0) | 0) | 0;
   i15 = 64 - i3 | 0;
   i10 = 32 - i3 | 0;
   i4 = i10 >> 31;
   i14 = i3 - 32 | 0;
   i6 = i14 >> 31;
   i2 = i3;
   i5 = i10 - 1 >> 31 & i7 >>> (i14 >>> 0) | (i7 << i10 | i9 >>> (i3 >>> 0)) & i6;
   i6 = i6 & i7 >>> (i3 >>> 0);
   i1 = i9 << i15 & i4;
   i3 = (i7 << i15 | i9 >>> (i14 >>> 0)) & i4 | i9 << i10 & i3 - 33 >> 31;
   break;
  }
  if (i13 | 0) {
   HEAP32[i13 >> 2] = i1 & i9;
   HEAP32[i13 + 4 >> 2] = 0;
  }
  if ((i2 | 0) == 1) {
   i14 = i4 | i6 & 0;
   i15 = i5 | 0 | 0;
   return (tempRet0 = i14, i15) | 0;
  } else {
   i15 = _llvm_cttz_i32(i2 | 0) | 0;
   i14 = i7 >>> (i15 >>> 0) | 0;
   i15 = i7 << 32 - i15 | i9 >>> (i15 >>> 0) | 0;
   return (tempRet0 = i14, i15) | 0;
  }
 } else {
  if (i1) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = (i7 >>> 0) % (i2 >>> 0);
    HEAP32[i13 + 4 >> 2] = 0;
   }
   i14 = 0;
   i15 = (i7 >>> 0) / (i2 >>> 0) >>> 0;
   return (tempRet0 = i14, i15) | 0;
  }
  if (!i9) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = 0;
    HEAP32[i13 + 4 >> 2] = (i7 >>> 0) % (i3 >>> 0);
   }
   i14 = 0;
   i15 = (i7 >>> 0) / (i3 >>> 0) >>> 0;
   return (tempRet0 = i14, i15) | 0;
  }
  i1 = i3 - 1 | 0;
  if (!(i1 & i3)) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = i5 | 0;
    HEAP32[i13 + 4 >> 2] = i1 & i7 | i6 & 0;
   }
   i14 = 0;
   i15 = i7 >>> ((_llvm_cttz_i32(i3 | 0) | 0) >>> 0);
   return (tempRet0 = i14, i15) | 0;
  }
  i1 = (Math_clz32(i3 | 0) | 0) - (Math_clz32(i7 | 0) | 0) | 0;
  if (i1 >>> 0 <= 30) {
   i6 = i1 + 1 | 0;
   i3 = 31 - i1 | 0;
   i2 = i6;
   i5 = i7 << i3 | i9 >>> (i6 >>> 0);
   i6 = i7 >>> (i6 >>> 0);
   i1 = 0;
   i3 = i9 << i3;
   break;
  }
  if (!i13) {
   i14 = 0;
   i15 = 0;
   return (tempRet0 = i14, i15) | 0;
  }
  HEAP32[i13 >> 2] = i5 | 0;
  HEAP32[i13 + 4 >> 2] = i4 | i6 & 0;
  i14 = 0;
  i15 = 0;
  return (tempRet0 = i14, i15) | 0;
 } while (0);
 if (!i2) {
  i7 = i3;
  i4 = 0;
  i3 = 0;
 } else {
  i10 = i8 | 0 | 0;
  i9 = i12 | i11 & 0;
  i7 = _i64Add(i10 | 0, i9 | 0, -1, -1) | 0;
  i8 = tempRet0;
  i4 = i3;
  i3 = 0;
  do {
   i11 = i4;
   i4 = i1 >>> 31 | i4 << 1;
   i1 = i3 | i1 << 1;
   i11 = i5 << 1 | i11 >>> 31 | 0;
   i12 = i5 >>> 31 | i6 << 1 | 0;
   _i64Subtract(i7 | 0, i8 | 0, i11 | 0, i12 | 0) | 0;
   i15 = tempRet0;
   i14 = i15 >> 31 | ((i15 | 0) < 0 ? -1 : 0) << 1;
   i3 = i14 & 1;
   i5 = _i64Subtract(i11 | 0, i12 | 0, i14 & i10 | 0, (((i15 | 0) < 0 ? -1 : 0) >> 31 | ((i15 | 0) < 0 ? -1 : 0) << 1) & i9 | 0) | 0;
   i6 = tempRet0;
   i2 = i2 - 1 | 0;
  } while ((i2 | 0) != 0);
  i7 = i4;
  i4 = 0;
 }
 i2 = 0;
 if (i13 | 0) {
  HEAP32[i13 >> 2] = i5;
  HEAP32[i13 + 4 >> 2] = i6;
 }
 i14 = (i1 | 0) >>> 31 | (i7 | i2) << 1 | (i2 << 1 | i1 >>> 31) & 0 | i4;
 i15 = (i1 << 1 | 0 >>> 31) & -2 | i3;
 return (tempRet0 = i14, i15) | 0;
}

function __ZN4wasm22SExpressionWasmBuilder10makeSwitchERNS_7ElementE(i13, i12) {
 i13 = i13 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i17 + 12 | 0;
 i8 = i17 + 8 | 0;
 i10 = i17 + 4 | 0;
 i11 = i17;
 i16 = __ZN10MixedArena5allocIN4wasm6SwitchEEEPT_v(HEAP32[i13 + 4 >> 2] | 0) | 0;
 i15 = __ZN4wasm7Element4listEv(i12) | 0;
 i2 = i16 + 8 | 0;
 if (!(HEAP8[HEAP32[(HEAP32[i15 >> 2] | 0) + 4 >> 2] >> 0] | 0)) {
  i9 = __ZN4wasm7Element4listEv(i12) | 0;
  i9 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i9 >> 2] | 0) + 4 >> 2] | 0) | 0;
  HEAP32[i2 >> 2] = i9;
  i9 = 2;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 30696, 6);
  i9 = __ZN4wasm22SExpressionWasmBuilder15getPrefixedNameENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i13, i1) | 0;
  HEAP32[i16 + 8 >> 2] = i9;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
  i9 = 1;
 }
 i15 = i13 + 96 | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 if ((i1 | 0) == (HEAP32[i13 + 100 >> 2] | 0)) __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i13 + 92 | 0, i2); else {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + 4;
 }
 i1 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i13, __ZN4wasm7ElementixEj(i12, i9) | 0) | 0;
 HEAP32[i16 + 12 >> 2] = i1;
 i1 = __ZN4wasm7ElementixEj(i12, i9 + 1 | 0) | 0;
 i2 = i16 + 20 | 0;
 i3 = i16 + 24 | 0;
 i4 = i16 + 16 | 0;
 i7 = 1;
 while (1) {
  if (i7 >>> 0 >= (__ZN4wasm7Element4sizeEv(i1) | 0) >>> 0) break;
  i5 = __ZN4wasm7Element4listEv(__ZN4wasm7ElementixEj(i1, i7) | 0) | 0;
  i5 = __ZN4wasm22SExpressionWasmBuilder8getLabelERNS_7ElementE(i13, HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] | 0) | 0;
  HEAP32[i8 >> 2] = i5;
  i6 = HEAP32[i2 >> 2] | 0;
  if (i6 >>> 0 < (HEAP32[i3 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i5;
   HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
  } else __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i4, i8);
  i7 = i7 + 1 | 0;
 }
 i5 = __ZN4wasm7Element4listEv(__ZN4wasm7ElementixEj(i12, i9 + 2 | 0) | 0) | 0;
 i5 = __ZN4wasm22SExpressionWasmBuilder8getLabelERNS_7ElementE(i13, HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i16 + 28 >> 2] = i5;
 i5 = i13 + 8 | 0;
 i8 = i16 + 36 | 0;
 i6 = i16 + 40 | 0;
 i7 = i16 + 32 | 0;
 i4 = i9 + 3 | 0;
 while (1) {
  if (i4 >>> 0 >= (__ZN4wasm7Element4sizeEv(i12) | 0) >>> 0) break;
  i1 = __ZN4wasm7ElementixEj(i12, i4) | 0;
  i9 = __ZN4wasm7Element4listEv(i1) | 0;
  i9 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i9 >> 2] >> 2] | 0) | 0;
  if ((i9 | 0) != (HEAP32[10227] | 0)) {
   i14 = 16;
   break;
  }
  if ((__ZN4wasm7Element4sizeEv(i1) | 0) >>> 0 < 2) __ZNKSt3__18functionIFvvEEclEv(i5);
  i3 = __ZN4wasm7Element4listEv(i1) | 0;
  i3 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i3 >> 2] | 0) + 4 >> 2] | 0) | 0;
  HEAP32[i10 >> 2] = i3;
  i1 = __ZN4wasm22SExpressionWasmBuilder14makeMaybeBlockERNS_7ElementEjj(i13, i1, 2, __ZN4wasm7Element4sizeEv(i1) | 0) | 0;
  HEAP32[i11 >> 2] = i1;
  i2 = HEAP32[i8 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) {
   HEAP32[i2 >> 2] = i3;
   HEAP32[i2 + 4 >> 2] = i1;
   HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 8;
  } else __ZNSt3__16vectorIN4wasm6Switch4CaseENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJN6cashew7IStringEPNS1_10ExpressionEEEEvDpOT_(i7, i10, i11);
  i4 = i4 + 1 | 0;
 }
 if ((i14 | 0) == 16) ___assert_fail(17635, 17087, 933, 17658);
 i1 = HEAP32[i7 >> 2] | 0;
 if ((HEAP32[i8 >> 2] | 0) == (i1 | 0)) i1 = 0; else i1 = HEAP32[(HEAP32[i1 + 4 >> 2] | 0) + 4 >> 2] | 0;
 HEAP32[i16 + 4 >> 2] = i1;
 i2 = HEAP32[i15 >> 2] | 0;
 i1 = i2 + -4 | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  i14 = i2 + -4 | 0;
  HEAP32[i15 >> 2] = i14;
  i2 = i14;
 }
 STACKTOP = i17;
 return i16 | 0;
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe(i1, i23, i8, i19, i18, d4) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i8 = i8 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 d4 = +d4;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i21 = 0, i22 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i28 = STACKTOP;
 STACKTOP = STACKTOP + 1008 | 0;
 i10 = i28 + 8 | 0;
 i3 = i28;
 i1 = i28 + 896 | 0;
 i5 = i28 + 888 | 0;
 i2 = i28 + 488 | 0;
 i20 = i28 + 480 | 0;
 i15 = i28 + 892 | 0;
 i12 = i28 + 476 | 0;
 i16 = i28 + 472 | 0;
 i24 = i28 + 460 | 0;
 i27 = i28 + 448 | 0;
 i26 = i28 + 436 | 0;
 i7 = i28 + 432 | 0;
 i9 = i28 + 32 | 0;
 i14 = i28 + 24 | 0;
 i13 = i28 + 16 | 0;
 i11 = i28 + 20 | 0;
 HEAP32[i5 >> 2] = i1;
 HEAPF64[i10 >> 3] = d4;
 i1 = _snprintf(i1, 100, 36765, i10) | 0;
 if (i1 >>> 0 > 99) {
  i1 = __ZNSt3__16__clocEv() | 0;
  HEAPF64[i3 >> 3] = d4;
  i1 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i5, i1, 36765, i3) | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  if (!i2) __ZSt17__throw_bad_allocv();
  i3 = _malloc(i1 << 2) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i17 = i3;
   i29 = i3;
   i30 = i2;
   i22 = i1;
  }
 } else {
  i17 = i2;
  i29 = 0;
  i30 = 0;
  i22 = i1;
 }
 i1 = __ZNKSt3__18ios_base6getlocEv(i19) | 0;
 HEAP32[i20 >> 2] = i1;
 i6 = __ZNKSt3__16locale9use_facetERNS0_2idE(i20, 43120) | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 48 >> 2] & 7](i6, i3, i3 + i22 | 0, i17) | 0;
 if (!i22) i5 = 0; else i5 = (HEAP8[HEAP32[i5 >> 2] >> 0] | 0) == 45;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i24 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i27 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i26 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i8, i5, i20, i15, i12, i16, i24, i27, i26, i7);
 i3 = HEAP32[i7 >> 2] | 0;
 if ((i22 | 0) > (i3 | 0)) {
  i8 = HEAP8[i26 >> 0] | 0;
  i2 = HEAP8[i27 >> 0] | 0;
  i2 = (i22 - i3 << 1 | 1) + i3 + ((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 } else {
  i8 = HEAP8[i26 >> 0] | 0;
  i2 = HEAP8[i27 >> 0] | 0;
  i2 = i3 + 2 + ((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 }
 if (i2 >>> 0 > 100) {
  i2 = _malloc(i2 << 2) | 0;
  if (!i2) __ZSt17__throw_bad_allocv(); else {
   i25 = i2;
   i21 = i2;
  }
 } else {
  i25 = 0;
  i21 = i9;
 }
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i21, i14, i13, HEAP32[i19 + 4 >> 2] | 0, i17, i17 + (i22 << 2) | 0, i6, i5, i15, HEAP32[i12 >> 2] | 0, HEAP32[i16 >> 2] | 0, i24, i27, i26, i3);
 HEAP32[i11 >> 2] = HEAP32[i23 >> 2];
 i23 = HEAP32[i14 >> 2] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 i2 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i21, i23, i2, i19, i18) | 0;
 if (i25) {
  _free(i25);
  i1 = HEAP32[i20 >> 2] | 0;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i26);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i27);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 if (i29 | 0) _free(i29);
 if (i30 | 0) _free(i30);
 STACKTOP = i28;
 return i2 | 0;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce(i1, i23, i8, i19, i18, d4) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i8 = i8 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 d4 = +d4;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i21 = 0, i22 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i28 = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 i10 = i28 + 8 | 0;
 i3 = i28;
 i1 = i28 + 284 | 0;
 i5 = i28 + 72 | 0;
 i2 = i28 + 184 | 0;
 i20 = i28 + 68 | 0;
 i15 = i28 + 180 | 0;
 i12 = i28 + 177 | 0;
 i16 = i28 + 176 | 0;
 i24 = i28 + 56 | 0;
 i27 = i28 + 44 | 0;
 i26 = i28 + 32 | 0;
 i7 = i28 + 28 | 0;
 i9 = i28 + 76 | 0;
 i14 = i28 + 24 | 0;
 i13 = i28 + 16 | 0;
 i11 = i28 + 20 | 0;
 HEAP32[i5 >> 2] = i1;
 HEAPF64[i10 >> 3] = d4;
 i1 = _snprintf(i1, 100, 36765, i10) | 0;
 if (i1 >>> 0 > 99) {
  i1 = __ZNSt3__16__clocEv() | 0;
  HEAPF64[i3 >> 3] = d4;
  i1 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i5, i1, 36765, i3) | 0;
  i2 = HEAP32[i5 >> 2] | 0;
  if (!i2) __ZSt17__throw_bad_allocv();
  i3 = _malloc(i1) | 0;
  if (!i3) __ZSt17__throw_bad_allocv(); else {
   i17 = i3;
   i29 = i3;
   i30 = i2;
   i22 = i1;
  }
 } else {
  i17 = i2;
  i29 = 0;
  i30 = 0;
  i22 = i1;
 }
 i1 = __ZNKSt3__18ios_base6getlocEv(i19) | 0;
 HEAP32[i20 >> 2] = i1;
 i6 = __ZNKSt3__16locale9use_facetERNS0_2idE(i20, 43088) | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 32 >> 2] & 7](i6, i3, i3 + i22 | 0, i17) | 0;
 if (!i22) i5 = 0; else i5 = (HEAP8[HEAP32[i5 >> 2] >> 0] | 0) == 45;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i24 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i27 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i26 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i8, i5, i20, i15, i12, i16, i24, i27, i26, i7);
 i3 = HEAP32[i7 >> 2] | 0;
 if ((i22 | 0) > (i3 | 0)) {
  i8 = HEAP8[i26 >> 0] | 0;
  i2 = HEAP8[i27 >> 0] | 0;
  i2 = (i22 - i3 << 1 | 1) + i3 + ((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 } else {
  i8 = HEAP8[i26 >> 0] | 0;
  i2 = HEAP8[i27 >> 0] | 0;
  i2 = i3 + 2 + ((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 }
 if (i2 >>> 0 > 100) {
  i2 = _malloc(i2) | 0;
  if (!i2) __ZSt17__throw_bad_allocv(); else {
   i25 = i2;
   i21 = i2;
  }
 } else {
  i25 = 0;
  i21 = i9;
 }
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i21, i14, i13, HEAP32[i19 + 4 >> 2] | 0, i17, i17 + i22 | 0, i6, i5, i15, HEAP8[i12 >> 0] | 0, HEAP8[i16 >> 0] | 0, i24, i27, i26, i3);
 HEAP32[i11 >> 2] = HEAP32[i23 >> 2];
 i23 = HEAP32[i14 >> 2] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 i2 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i21, i23, i2, i19, i18) | 0;
 if (i25) {
  _free(i25);
  i1 = HEAP32[i20 >> 2] | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 if (i29 | 0) _free(i29);
 if (i30 | 0) _free(i30);
 STACKTOP = i28;
 return i2 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11visitSwitchEPNS_6SwitchE(i14, i18, i16) {
 i14 = i14 | 0;
 i18 = i18 | 0;
 i16 = i16 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i17 = 0, i19 = 0, i20 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i17 = i20 + 24 | 0;
 i8 = i20 + 60 | 0;
 i15 = i20 + 48 | 0;
 i12 = i20;
 __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i17, i18, HEAP32[i16 + 12 >> 2] | 0);
 i13 = i17 + 16 | 0;
 i1 = HEAP32[i13 >> 2] | 0;
 if (!i1) {
  i2 = __ZN4wasm7Literal10getIntegerEv(i17) | 0;
  i10 = tempRet0;
  i1 = HEAP32[i16 + 28 >> 2] | 0;
  HEAP32[i8 >> 2] = i1;
  if ((i10 | 0) > -1 | (i10 | 0) == -1 & i2 >>> 0 > 4294967295 ? (i3 = HEAP32[i16 + 16 >> 2] | 0, i2 >>> 0 < (HEAP32[i16 + 20 >> 2] | 0) - i3 >> 2 >>> 0) : 0) {
   i1 = HEAP32[i3 + (i2 << 2) >> 2] | 0;
   HEAP32[i8 >> 2] = i1;
  }
  HEAP32[i15 + 4 >> 2] = 0;
  HEAP32[i15 + 8 >> 2] = 0;
  i7 = i15 + 4 | 0;
  HEAP32[i15 >> 2] = i7;
  i9 = i16 + 32 | 0;
  i10 = i16 + 36 | 0;
  i2 = 0;
  while (1) {
   i3 = HEAP32[i10 >> 2] | 0;
   i4 = HEAP32[i9 >> 2] | 0;
   i5 = i3 - i4 >> 3;
   i6 = i4;
   if (i2 >>> 0 >= i5 >>> 0) break;
   i6 = __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEEixERS7_(i15, i6 + (i2 << 3) | 0) | 0;
   HEAP32[i6 >> 2] = i2;
   i2 = i2 + 1 | 0;
  }
  i2 = __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE4findIS3_EENS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEiEERKT_(i15, i8) | 0;
  if ((i2 | 0) == (i7 | 0)) {
   HEAP32[i14 >> 2] = 0;
   i19 = i14 + 8 | 0;
   HEAP32[i19 >> 2] = 0;
   HEAP32[i19 + 4 >> 2] = 0;
   HEAP32[i14 + 16 >> 2] = i1;
   if ((i1 | 0) == (HEAP32[i16 + 8 >> 2] | 0)) HEAP32[i14 + 16 >> 2] = 0;
  } else {
   i2 = HEAP32[i2 + 20 >> 2] | 0;
   if (i2 >>> 0 >= i5 >>> 0) ___assert_fail(20700, 20213, 283, 20731);
   i1 = i6;
   while (1) {
    if (i2 >>> 0 >= i3 - i4 >> 3 >>> 0) break;
    __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i12, i18, HEAP32[i1 + (i2 << 3) + 4 >> 2] | 0);
    HEAP32[i17 >> 2] = HEAP32[i12 >> 2];
    HEAP32[i17 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
    HEAP32[i17 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
    HEAP32[i17 + 12 >> 2] = HEAP32[i12 + 12 >> 2];
    HEAP32[i17 + 16 >> 2] = HEAP32[i12 + 16 >> 2];
    i1 = HEAP32[i13 >> 2] | 0;
    if (i1 | 0) {
     i11 = i1;
     i19 = 20;
     break;
    }
    i1 = HEAP32[i9 >> 2] | 0;
    i4 = i1;
    i3 = HEAP32[i10 >> 2] | 0;
    i2 = i2 + 1 | 0;
   }
   if ((i19 | 0) == 20 ? (i11 | 0) == (HEAP32[i16 + 8 >> 2] | 0) : 0) HEAP32[i13 >> 2] = 0;
   HEAP32[i14 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i14 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
   HEAP32[i14 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
   HEAP32[i14 + 12 >> 2] = HEAP32[i17 + 12 >> 2];
   HEAP32[i14 + 16 >> 2] = HEAP32[i17 + 16 >> 2];
   HEAP32[i14 + 20 >> 2] = HEAP32[i17 + 20 >> 2];
  }
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEED2Ev(i15);
 } else {
  if ((i1 | 0) == (HEAP32[i16 + 8 >> 2] | 0)) HEAP32[i13 >> 2] = 0;
  HEAP32[i14 >> 2] = HEAP32[i17 >> 2];
  HEAP32[i14 + 4 >> 2] = HEAP32[i17 + 4 >> 2];
  HEAP32[i14 + 8 >> 2] = HEAP32[i17 + 8 >> 2];
  HEAP32[i14 + 12 >> 2] = HEAP32[i17 + 12 >> 2];
  HEAP32[i14 + 16 >> 2] = HEAP32[i17 + 16 >> 2];
  HEAP32[i14 + 20 >> 2] = HEAP32[i17 + 20 >> 2];
 }
 STACKTOP = i20;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_(i3, i1, i5, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i12 = i16 + 36 | 0;
 i13 = i16 + 24 | 0;
 i14 = i16 + 12 | 0;
 i15 = i16;
 i1 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i3, i1, i2) | 0;
 if ((i1 | 0) != (i3 | 0) ? (i4 = i2 + 4 | 0, i6 = HEAP32[i4 >> 2] | 0, (HEAP32[i2 >> 2] | 0) != (i6 | 0)) : 0) {
  i11 = i6 + -24 | 0;
  __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i14, i5, 38467);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i15, (HEAP32[i4 >> 2] | 0) + -24 | 0);
  i2 = HEAP8[i15 >> 0] | 0;
  i3 = (i2 & 1) == 0;
  i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i14, i3 ? i15 + 1 | 0 : HEAP32[i15 + 8 >> 2] | 0, i3 ? (i2 & 255) >>> 1 : HEAP32[i15 + 4 >> 2] | 0) | 0;
  HEAP32[i13 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i13 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
  i3 = 0;
  while (1) {
   if ((i3 | 0) == 3) break;
   HEAP32[i2 + (i3 << 2) >> 2] = 0;
   i3 = i3 + 1 | 0;
  }
  i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i13, 38469) | 0;
  HEAP32[i12 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i12 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i12 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
  i3 = 0;
  while (1) {
   if ((i3 | 0) == 3) break;
   HEAP32[i2 + (i3 << 2) >> 2] = 0;
   i3 = i3 + 1 | 0;
  }
  do if (HEAP8[i11 >> 0] & 1) {
   i10 = i6 + -16 | 0;
   HEAP8[HEAP32[i10 >> 2] >> 0] = 0;
   i7 = i6 + -20 | 0;
   HEAP32[i7 >> 2] = 0;
   i2 = HEAP8[i11 >> 0] | 0;
   if (!(i2 & 1)) i6 = 10; else {
    i6 = HEAP32[i11 >> 2] | 0;
    i2 = i6 & 255;
    i6 = (i6 & -2) + -1 | 0;
   }
   if (!(i2 & 1)) {
    i3 = (i2 & 255) >>> 1;
    if ((i2 & 255) < 22) {
     i5 = 10;
     i8 = i3;
     i9 = 1;
    } else {
     i5 = (i3 + 16 & 240) + -1 | 0;
     i8 = i3;
     i9 = 1;
    }
   } else {
    i5 = 10;
    i8 = 0;
    i9 = 0;
   }
   if ((i5 | 0) != (i6 | 0)) {
    if ((i5 | 0) == 10) {
     i4 = i11 + 1 | 0;
     i3 = HEAP32[i10 >> 2] | 0;
     if (i9) {
      _memcpy(i4 | 0, i3 | 0, ((i2 & 255) >>> 1) + 1 | 0) | 0;
      _free(i3);
     } else {
      HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
      _free(i3);
     }
     HEAP8[i11 >> 0] = i8 << 1;
     break;
    }
    i3 = i5 + 1 | 0;
    i4 = _malloc(i3) | 0;
    if (!(i5 >>> 0 <= i6 >>> 0 & (i4 | 0) == 0)) {
     if (i9) _memcpy(i4 | 0, i11 + 1 | 0, ((i2 & 255) >>> 1) + 1 | 0) | 0; else {
      i9 = HEAP32[i10 >> 2] | 0;
      HEAP8[i4 >> 0] = HEAP8[i9 >> 0] | 0;
      _free(i9);
     }
     HEAP32[i11 >> 2] = i3 | 1;
     HEAP32[i7 >> 2] = i8;
     HEAP32[i10 >> 2] = i4;
    }
   }
  } else {
   HEAP8[i11 + 1 >> 0] = 0;
   HEAP8[i11 >> 0] = 0;
  } while (0);
  HEAP32[i11 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i11 + 4 >> 2] = HEAP32[i12 + 4 >> 2];
  HEAP32[i11 + 8 >> 2] = HEAP32[i12 + 8 >> 2];
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i12 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i12);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i13);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i15);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i14);
 } else i1 = i3;
 STACKTOP = i16;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_(i5, i4, i6) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i8;
 L1 : do if ((i4 - i5 | 0) > 1) {
  i1 = HEAP8[i5 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 100:
  case 111:
   {
    if ((HEAP8[i5 + 1 >> 0] | 0) == 110) {
     i3 = i5 + 2 | 0;
     if (i1 << 24 >> 24 == 111) {
      i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i3, i4, i6) | 0;
      if ((i1 | 0) == (i3 | 0)) {
       i1 = i5;
       break L1;
      }
      i5 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i6) | 0;
      if ((i5 | 0) == (i1 | 0)) break L1;
      i4 = i6 + 4 | 0;
      i1 = HEAP32[i4 >> 2] | 0;
      if (((i1 - (HEAP32[i6 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
       i1 = i5;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i1 + -24 | 0);
      i1 = HEAP32[i4 >> 2] | 0;
      i2 = i1 + -24 | 0;
      i3 = i1;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break;
       i6 = i3 + -24 | 0;
       HEAP32[i4 >> 2] = i6;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
       i3 = HEAP32[i4 >> 2] | 0;
      }
      i6 = HEAP8[i7 >> 0] | 0;
      i4 = (i6 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1 + -48 | 0, i4 ? i7 + 1 | 0 : HEAP32[i7 + 8 >> 2] | 0, i4 ? (i6 & 255) >>> 1 : HEAP32[i7 + 4 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
      i1 = i5;
      break L1;
     } else {
      if ((i3 | 0) != (i4 | 0)) {
       i1 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_(i3, i4, i6) | 0;
       if ((i1 | 0) == (i3 | 0)) i1 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i3, i4, i6) | 0;
       if ((i1 | 0) != (i3 | 0) ? (i2 = HEAP32[i6 + 4 >> 2] | 0, (HEAP32[i6 >> 2] | 0) != (i2 | 0)) : 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i2 + -24 | 0, 0, 38556) | 0; else i1 = i3;
      } else i1 = i4;
      i1 = (i1 | 0) == (i3 | 0) ? i5 : i1;
      break L1;
     }
    }
    break;
   }
  default:
   {}
  }
  i1 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i5, i4, i6) | 0;
  if ((i1 | 0) == (i5 | 0)) {
   i1 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_(i5, i4, i6) | 0;
   if ((i1 | 0) != (i5 | 0)) {
    i5 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i6) | 0;
    if ((i5 | 0) != (i1 | 0)) {
     i4 = i6 + 4 | 0;
     i1 = HEAP32[i4 >> 2] | 0;
     if (((i1 - (HEAP32[i6 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) i1 = i5; else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i1 + -24 | 0);
      i1 = HEAP32[i4 >> 2] | 0;
      i2 = i1 + -24 | 0;
      i3 = i1;
      while (1) {
       if ((i3 | 0) == (i2 | 0)) break;
       i6 = i3 + -24 | 0;
       HEAP32[i4 >> 2] = i6;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i6);
       i3 = HEAP32[i4 >> 2] | 0;
      }
      i6 = HEAP8[i7 >> 0] | 0;
      i4 = (i6 & 1) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1 + -48 | 0, i4 ? i7 + 1 | 0 : HEAP32[i7 + 8 >> 2] | 0, i4 ? (i6 & 255) >>> 1 : HEAP32[i7 + 4 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
      i1 = i5;
     }
    }
   } else i1 = i5;
  }
 } else i1 = i5; while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseAfterIdentERNS3_4FragERPcPKc(i16, i12, i15, i14) {
 i16 = i16 | 0;
 i12 = i12 | 0;
 i15 = i15 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i17 = 0, i18 = 0, i19 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i17 = i19 + 64 | 0;
 i6 = i19 + 36 | 0;
 i1 = i19 + 56 | 0;
 i2 = i19 + 48 | 0;
 i3 = i19 + 40 | 0;
 i4 = i19 + 32 | 0;
 i8 = i19 + 28 | 0;
 i9 = i19 + 24 | 0;
 i10 = i19 + 16 | 0;
 i11 = i19 + 8 | 0;
 i13 = i19;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i15);
 i5 = HEAP32[i15 >> 2] | 0;
 i7 = HEAP8[i5 >> 0] | 0;
 L1 : do switch (i7 << 24 >> 24) {
 case 40:
  {
   i13 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9parseFragERNS3_4FragE(i16, i12) | 0;
   HEAP32[i2 >> 2] = i13;
   HEAP32[i17 >> 2] = HEAP32[i2 >> 2];
   i13 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9parseCallES1_RPc(i16, i17, i15) | 0;
   HEAP8[i1 >> 0] = 1;
   HEAP32[i1 + 4 >> 2] = i13;
   HEAP32[i17 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i17 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
   i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseExpressionENS3_17ExpressionElementERPcPKc(i16, i17, i15, i14) | 0;
   break;
  }
 case 91:
  {
   i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9parseFragERNS3_4FragE(i16, i12) | 0;
   HEAP32[i4 >> 2] = i1;
   HEAP32[i17 >> 2] = HEAP32[i4 >> 2];
   i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseIndexingES1_RPc(i16, i17, i15) | 0;
   HEAP8[i3 >> 0] = 1;
   HEAP32[i3 + 4 >> 2] = i1;
   HEAP32[i17 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i17 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
   i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseExpressionENS3_17ExpressionElementERPcPKc(i16, i17, i15, i14) | 0;
   break;
  }
 case 58:
  {
   i11 = HEAP32[i16 + 4 >> 2] | 0;
   if ((HEAP32[i11 + -8 >> 2] | 0) != (HEAP32[i11 + -12 >> 2] | 0)) {
    i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9parseFragERNS3_4FragE(i16, i12) | 0;
    i18 = 12;
    break L1;
   }
   HEAP32[i15 >> 2] = i5 + 1;
   __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i15);
   if ((HEAP8[HEAP32[i15 >> 2] >> 0] | 0) == 123) i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE19parseBracketedBlockERPc(i16, i15) | 0; else i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i16, i15, i14) | 0;
   HEAP32[i8 >> 2] = HEAP32[i12 >> 2];
   HEAP32[i9 >> 2] = i1;
   HEAP32[i6 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i17 >> 2] = HEAP32[i9 >> 2];
   i1 = __ZN6cashew12ValueBuilder9makeLabelENS_7IStringENS_3RefE(i6, i17) | 0;
   break;
  }
 default:
  {
   i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9parseFragERNS3_4FragE(i16, i12) | 0;
   if (i7 << 24 >> 24 == 46) {
    HEAP32[i11 >> 2] = i1;
    HEAP32[i17 >> 2] = HEAP32[i11 >> 2];
    i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseDottingES1_RPc(i16, i17, i15) | 0;
    HEAP8[i10 >> 0] = 1;
    HEAP32[i10 + 4 >> 2] = i1;
    HEAP32[i17 >> 2] = HEAP32[i10 >> 2];
    HEAP32[i17 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
    i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseExpressionENS3_17ExpressionElementERPcPKc(i16, i17, i15, i14) | 0;
   } else i18 = 12;
  }
 } while (0);
 if ((i18 | 0) == 12) {
  HEAP8[i13 >> 0] = 1;
  HEAP32[i13 + 4 >> 2] = i1;
  HEAP32[i17 >> 2] = HEAP32[i13 >> 2];
  HEAP32[i17 + 4 >> 2] = HEAP32[i13 + 4 >> 2];
  i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseExpressionENS3_17ExpressionElementERPcPKc(i16, i17, i15, i14) | 0;
 }
 STACKTOP = i19;
 return i1 | 0;
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE(i1, i23, i3, i20, i19, i18) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i3 = i3 | 0;
 i20 = i20 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i21 = 0, i22 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i28 = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 i9 = i28 + 468 | 0;
 i21 = i28 + 464 | 0;
 i16 = i28 + 472 | 0;
 i13 = i28 + 460 | 0;
 i17 = i28 + 456 | 0;
 i24 = i28 + 444 | 0;
 i27 = i28 + 432 | 0;
 i26 = i28 + 420 | 0;
 i6 = i28 + 416 | 0;
 i8 = i28 + 16 | 0;
 i15 = i28 + 8 | 0;
 i14 = i28 + 4 | 0;
 i10 = i28;
 i1 = __ZNKSt3__18ios_base6getlocEv(i20) | 0;
 HEAP32[i21 >> 2] = i1;
 i11 = __ZNKSt3__16locale9use_facetERNS0_2idE(i21, 43120) | 0;
 i7 = HEAP8[i18 >> 0] | 0;
 i2 = (i7 & 1) == 0;
 i12 = i18 + 4 | 0;
 if (!((i2 ? (i7 & 255) >>> 1 : HEAP32[i12 >> 2] | 0) | 0)) i7 = 0; else {
  i7 = HEAP32[(i2 ? i12 : HEAP32[i18 + 8 >> 2] | 0) >> 2] | 0;
  i7 = (i7 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 44 >> 2] & 31](i11, 45) | 0);
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i24 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i27 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i26 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i3, i7, i21, i16, i13, i17, i24, i27, i26, i6);
 i4 = HEAP8[i18 >> 0] | 0;
 i5 = HEAP32[i12 >> 2] | 0;
 i2 = (i4 & 1) == 0 ? (i4 & 255) >>> 1 : i5;
 i3 = HEAP32[i6 >> 2] | 0;
 if ((i2 | 0) > (i3 | 0)) {
  i29 = HEAP8[i26 >> 0] | 0;
  i6 = HEAP8[i27 >> 0] | 0;
  i2 = (i2 - i3 << 1 | 1) + i3 + ((i29 & 1) == 0 ? (i29 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i6 & 1) == 0 ? (i6 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 } else {
  i29 = HEAP8[i26 >> 0] | 0;
  i2 = HEAP8[i27 >> 0] | 0;
  i2 = i3 + 2 + ((i29 & 1) == 0 ? (i29 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i27 + 4 >> 2] | 0) | 0;
 }
 if (i2 >>> 0 > 100) {
  i2 = _malloc(i2 << 2) | 0;
  if (!i2) __ZSt17__throw_bad_allocv(); else {
   i25 = i2;
   i22 = i2;
  }
 } else {
  i25 = 0;
  i22 = i8;
 }
 i29 = (i4 & 1) == 0;
 i2 = i29 ? i12 : HEAP32[i18 + 8 >> 2] | 0;
 __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i22, i15, i14, HEAP32[i20 + 4 >> 2] | 0, i2, i2 + ((i29 ? (i4 & 255) >>> 1 : i5) << 2) | 0, i11, i7, i16, HEAP32[i13 >> 2] | 0, HEAP32[i17 >> 2] | 0, i24, i27, i26, i3);
 HEAP32[i10 >> 2] = HEAP32[i23 >> 2];
 i29 = HEAP32[i15 >> 2] | 0;
 i2 = HEAP32[i14 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i2 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i22, i29, i2, i20, i19) | 0;
 if (i25) {
  _free(i25);
  i1 = HEAP32[i21 >> 2] | 0;
 }
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i26);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i27);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 STACKTOP = i28;
 return i2 | 0;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE(i1, i22, i4, i19, i18, i17) {
 i1 = i1 | 0;
 i22 = i22 | 0;
 i4 = i4 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 i17 = i17 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i20 = 0, i21 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0;
 i27 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i9 = i27 + 56 | 0;
 i20 = i27 + 52 | 0;
 i15 = i27 + 164 | 0;
 i12 = i27 + 161 | 0;
 i16 = i27 + 160 | 0;
 i23 = i27 + 40 | 0;
 i26 = i27 + 28 | 0;
 i25 = i27 + 16 | 0;
 i6 = i27 + 12 | 0;
 i8 = i27 + 60 | 0;
 i14 = i27 + 8 | 0;
 i13 = i27 + 4 | 0;
 i10 = i27;
 i1 = __ZNKSt3__18ios_base6getlocEv(i19) | 0;
 HEAP32[i20 >> 2] = i1;
 i11 = __ZNKSt3__16locale9use_facetERNS0_2idE(i20, 43088) | 0;
 i7 = HEAP8[i17 >> 0] | 0;
 i2 = (i7 & 1) == 0;
 i3 = i17 + 4 | 0;
 if (!((i2 ? (i7 & 255) >>> 1 : HEAP32[i3 >> 2] | 0) | 0)) i7 = 0; else {
  i7 = HEAP8[(i2 ? i17 + 1 | 0 : HEAP32[i17 + 8 >> 2] | 0) >> 0] | 0;
  i7 = i7 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] & 31](i11, 45) | 0) << 24 >> 24;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i23 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i26 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i25 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i4, i7, i20, i15, i12, i16, i23, i26, i25, i6);
 i5 = HEAP8[i17 >> 0] | 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i2 = (i5 & 1) == 0 ? (i5 & 255) >>> 1 : i4;
 i3 = HEAP32[i6 >> 2] | 0;
 if ((i2 | 0) > (i3 | 0)) {
  i28 = HEAP8[i25 >> 0] | 0;
  i6 = HEAP8[i26 >> 0] | 0;
  i2 = (i2 - i3 << 1 | 1) + i3 + ((i28 & 1) == 0 ? (i28 & 255) >>> 1 : HEAP32[i25 + 4 >> 2] | 0) + ((i6 & 1) == 0 ? (i6 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) | 0;
 } else {
  i28 = HEAP8[i25 >> 0] | 0;
  i2 = HEAP8[i26 >> 0] | 0;
  i2 = i3 + 2 + ((i28 & 1) == 0 ? (i28 & 255) >>> 1 : HEAP32[i25 + 4 >> 2] | 0) + ((i2 & 1) == 0 ? (i2 & 255) >>> 1 : HEAP32[i26 + 4 >> 2] | 0) | 0;
 }
 if (i2 >>> 0 > 100) {
  i2 = _malloc(i2) | 0;
  if (!i2) __ZSt17__throw_bad_allocv(); else {
   i24 = i2;
   i21 = i2;
  }
 } else {
  i24 = 0;
  i21 = i8;
 }
 i28 = (i5 & 1) == 0;
 i2 = i28 ? i17 + 1 | 0 : HEAP32[i17 + 8 >> 2] | 0;
 __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i21, i14, i13, HEAP32[i19 + 4 >> 2] | 0, i2, i2 + (i28 ? (i5 & 255) >>> 1 : i4) | 0, i11, i7, i15, HEAP8[i12 >> 0] | 0, HEAP8[i16 >> 0] | 0, i23, i26, i25, i3);
 HEAP32[i10 >> 2] = HEAP32[i22 >> 2];
 i28 = HEAP32[i14 >> 2] | 0;
 i2 = HEAP32[i13 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i2 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i21, i28, i2, i19, i18) | 0;
 if (i24) {
  _free(i24);
  i1 = HEAP32[i20 >> 2] | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i25);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 STACKTOP = i27;
 return i2 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i3, i14, i13, i6, i12) {
 i3 = i3 | 0;
 i14 = i14 | 0;
 i13 = i13 | 0;
 i6 = i6 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 L1 : do if ((i3 | 0) == (HEAP32[i14 + 8 >> 2] | 0)) {
  if ((HEAP32[i14 + 4 >> 2] | 0) == (i13 | 0) ? (i1 = i14 + 28 | 0, (HEAP32[i1 >> 2] | 0) != 1) : 0) HEAP32[i1 >> 2] = i6;
 } else {
  if ((i3 | 0) != (HEAP32[i14 >> 2] | 0)) {
   i11 = HEAP32[i3 + 12 >> 2] | 0;
   i4 = i3 + 16 + (i11 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i3 + 16 | 0, i14, i13, i6, i12);
   i1 = i3 + 24 | 0;
   if ((i11 | 0) <= 1) break;
   i2 = HEAP32[i3 + 8 >> 2] | 0;
   if ((i2 & 2 | 0) == 0 ? (i5 = i14 + 36 | 0, (HEAP32[i5 >> 2] | 0) != 1) : 0) {
    if (!(i2 & 1)) {
     i2 = i14 + 54 | 0;
     while (1) {
      if (HEAP8[i2 >> 0] | 0) break L1;
      if ((HEAP32[i5 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i13, i6, i12);
      i1 = i1 + 8 | 0;
      if (i1 >>> 0 >= i4 >>> 0) break L1;
     }
    }
    i2 = i14 + 24 | 0;
    i3 = i14 + 54 | 0;
    while (1) {
     if (HEAP8[i3 >> 0] | 0) break L1;
     if ((HEAP32[i5 >> 2] | 0) == 1 ? (HEAP32[i2 >> 2] | 0) == 1 : 0) break L1;
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i13, i6, i12);
     i1 = i1 + 8 | 0;
     if (i1 >>> 0 >= i4 >>> 0) break L1;
    }
   }
   i2 = i14 + 54 | 0;
   while (1) {
    if (HEAP8[i2 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i13, i6, i12);
    i1 = i1 + 8 | 0;
    if (i1 >>> 0 >= i4 >>> 0) break L1;
   }
  }
  if ((HEAP32[i14 + 16 >> 2] | 0) != (i13 | 0) ? (i11 = i14 + 20 | 0, (HEAP32[i11 >> 2] | 0) != (i13 | 0)) : 0) {
   HEAP32[i14 + 32 >> 2] = i6;
   i10 = i14 + 44 | 0;
   if ((HEAP32[i10 >> 2] | 0) == 4) break;
   i4 = i3 + 16 + (HEAP32[i3 + 12 >> 2] << 3) | 0;
   i5 = i14 + 52 | 0;
   i6 = i14 + 53 | 0;
   i8 = i14 + 54 | 0;
   i7 = i3 + 8 | 0;
   i9 = i14 + 24 | 0;
   i2 = 0;
   i1 = 0;
   i3 = i3 + 16 | 0;
   L34 : while (1) {
    if (i3 >>> 0 >= i4 >>> 0) {
     i3 = 20;
     break;
    }
    HEAP8[i5 >> 0] = 0;
    HEAP8[i6 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i3, i14, i13, i13, 1, i12);
    if (HEAP8[i8 >> 0] | 0) {
     i3 = 20;
     break;
    }
    do if (HEAP8[i6 >> 0] | 0) {
     if (!(HEAP8[i5 >> 0] | 0)) if (!(HEAP32[i7 >> 2] & 1)) {
      i1 = 1;
      i3 = 20;
      break L34;
     } else {
      i1 = 1;
      break;
     }
     if ((HEAP32[i9 >> 2] | 0) == 1) {
      i3 = 25;
      break L34;
     }
     if (!(HEAP32[i7 >> 2] & 2)) {
      i3 = 25;
      break L34;
     } else {
      i2 = 1;
      i1 = 1;
     }
    } while (0);
    i3 = i3 + 8 | 0;
   }
   do if ((i3 | 0) == 20) {
    if ((!i2 ? (HEAP32[i11 >> 2] = i13, i13 = i14 + 40 | 0, HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 1, (HEAP32[i14 + 36 >> 2] | 0) == 1) : 0) ? (HEAP32[i9 >> 2] | 0) == 2 : 0) {
     HEAP8[i8 >> 0] = 1;
     if (i1) {
      i3 = 25;
      break;
     } else {
      i1 = 4;
      break;
     }
    }
    if (i1) i3 = 25; else i1 = 4;
   } while (0);
   if ((i3 | 0) == 25) i1 = 3;
   HEAP32[i10 >> 2] = i1;
   break;
  }
  if ((i6 | 0) == 1) HEAP32[i14 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(i1, i11, i12, i3, i13, i14, i10, i2) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i3 = i3 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i15 = 0;
 HEAP32[i12 >> 2] = i1;
 HEAP32[i14 >> 2] = i3;
 if (i2 & 4) {
  i1 = HEAP32[i12 >> 2] | 0;
  i2 = i11;
  if ((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == -17 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[i1 + 2 >> 0] | 0) == -65 : 0) HEAP32[i12 >> 2] = i1 + 3;
 } else i2 = i11;
 i8 = i13;
 L9 : while (1) {
  i5 = HEAP32[i12 >> 2] | 0;
  i1 = i5 >>> 0 < i11 >>> 0;
  if (!i1) {
   i15 = 41;
   break;
  }
  i9 = HEAP32[i14 >> 2] | 0;
  if (i9 >>> 0 >= i13 >>> 0) {
   i15 = 41;
   break;
  }
  i1 = HEAP8[i5 >> 0] | 0;
  i7 = i1 & 255;
  if (i7 >>> 0 > i10 >>> 0) {
   i1 = 2;
   break;
  }
  do if (i1 << 24 >> 24 > -1) {
   HEAP16[i9 >> 1] = i1 & 255;
   HEAP32[i12 >> 2] = i5 + 1;
  } else {
   if ((i1 & 255) < 194) {
    i1 = 2;
    break L9;
   }
   if ((i1 & 255) < 224) {
    if ((i2 - i5 | 0) < 2) {
     i1 = 1;
     break L9;
    }
    i1 = HEAPU8[i5 + 1 >> 0] | 0;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = i1 & 63 | i7 << 6 & 1984;
    if (i1 >>> 0 > i10 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP16[i9 >> 1] = i1;
    HEAP32[i12 >> 2] = i5 + 2;
    break;
   }
   if ((i1 & 255) < 240) {
    if ((i2 - i5 | 0) < 3) {
     i1 = 1;
     break L9;
    }
    i3 = HEAP8[i5 + 1 >> 0] | 0;
    i1 = HEAP8[i5 + 2 >> 0] | 0;
    switch (i7 | 0) {
    case 224:
     {
      if ((i3 & -32) << 24 >> 24 != -96) {
       i1 = 2;
       break L9;
      }
      break;
     }
    case 237:
     {
      if ((i3 & -32) << 24 >> 24 != -128) {
       i1 = 2;
       break L9;
      }
      break;
     }
    default:
     if ((i3 & -64) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
    }
    i1 = i1 & 255;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = (i3 & 255) << 6 & 4032 | i7 << 12 | i1 & 63;
    if ((i1 & 65535) >>> 0 > i10 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP16[i9 >> 1] = i1;
    HEAP32[i12 >> 2] = i5 + 3;
    break;
   }
   if ((i1 & 255) >= 245) {
    i1 = 2;
    break L9;
   }
   if ((i2 - i5 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i4 = HEAP8[i5 + 1 >> 0] | 0;
   i1 = HEAP8[i5 + 2 >> 0] | 0;
   i3 = HEAP8[i5 + 3 >> 0] | 0;
   switch (i7 | 0) {
   case 240:
    {
     if ((i4 + 112 & 255) >= 48) {
      i1 = 2;
      break L9;
     }
     break;
    }
   case 244:
    {
     if ((i4 & -16) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
     break;
    }
   default:
    if ((i4 & -64) << 24 >> 24 != -128) {
     i1 = 2;
     break L9;
    }
   }
   i6 = i1 & 255;
   if ((i6 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i1 = i3 & 255;
   if ((i1 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   if ((i8 - i9 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i5 = i7 & 7;
   i4 = i4 & 255;
   i3 = i6 << 6;
   i1 = i1 & 63;
   if ((i4 << 12 & 258048 | i5 << 18 | i3 & 4032 | i1) >>> 0 > i10 >>> 0) {
    i1 = 2;
    break L9;
   }
   HEAP16[i9 >> 1] = i4 << 2 & 60 | i6 >>> 4 & 3 | ((i4 >>> 4 & 3 | i5 << 2) << 6) + 16320 | 55296;
   i9 = i9 + 2 | 0;
   HEAP32[i14 >> 2] = i9;
   HEAP16[i9 >> 1] = i1 | i3 & 960 | 56320;
   HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 4;
  } while (0);
  HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 2;
 }
 if ((i15 | 0) == 41) i1 = i1 & 1;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i4 = HEAP8[i5 >> 0] | 0;
 i1 = (i4 & 1) == 0;
 i4 = i1 ? (i4 & 255) >>> 1 : HEAP32[i5 + 4 >> 2] | 0;
 L1 : do if (!i4) __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i6, i5); else {
  i2 = i1 ? i5 + 1 | 0 : HEAP32[i5 + 8 >> 2] | 0;
  i1 = i4 >>> 0 > 11;
  i3 = _memcmp(i2, 39150, i1 ? 11 : i4) | 0;
  if (!(((i3 | 0) == 0 ? (i4 >>> 0 < 11 ? -1 : i1 & 1) : i3) | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj(i5, 39202, 70);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i6, 39273, 12);
   break;
  }
  i1 = i4 >>> 0 > 12;
  i3 = i1 ? 12 : i4;
  i7 = _memcmp(i2, 39162, i3) | 0;
  i1 = i4 >>> 0 < 12 ? -1 : i1 & 1;
  if (!(((i7 | 0) == 0 ? i1 : i7) | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj(i5, 39286, 49);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i6, 39336, 13);
   break;
  }
  i7 = _memcmp(i2, 39175, i3) | 0;
  if (!(((i7 | 0) == 0 ? i1 : i7) | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj(i5, 39350, 49);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i6, 39400, 13);
   break;
  }
  i3 = i4 >>> 0 > 13;
  i7 = _memcmp(i2, 39188, i3 ? 13 : i4) | 0;
  if (!(((i7 | 0) == 0 ? (i4 >>> 0 < 13 ? -1 : i3 & 1) : i7) | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj(i5, 39414, 50);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i6, 39465, 14);
   break;
  }
  i1 = i2 + i4 | 0;
  L16 : do if ((HEAP8[i1 + -1 >> 0] | 0) == 62) {
   i4 = 1;
   L17 : while (1) {
    i3 = i1;
    L19 : while (1) {
     i1 = i3 + -1 | 0;
     if ((i1 | 0) == (i2 | 0)) break L17;
     i3 = i3 + -2 | 0;
     switch (HEAP8[i3 >> 0] | 0) {
     case 60:
      {
       i5 = 18;
       break L19;
      }
     case 62:
      {
       i5 = 19;
       break L19;
      }
     default:
      i3 = i1;
     }
    }
    if ((i5 | 0) == 18) {
     i4 = i4 + -1 | 0;
     if (!i4) {
      i1 = i3;
      break L16;
     } else continue;
    } else if ((i5 | 0) == 19) {
     i4 = i4 + 1 | 0;
     continue;
    }
   }
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break L1;
    HEAP32[i6 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
  } while (0);
  i4 = i1;
  while (1) {
   i3 = i4 + -1 | 0;
   if ((i3 | 0) == (i2 | 0)) break;
   if ((HEAP8[i3 >> 0] | 0) == 58) {
    i2 = i4;
    break;
   } else i4 = i3;
  }
  i5 = i1 - i2 | 0;
  if (i5 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i6);
  if (i5 >>> 0 < 11) {
   HEAP8[i6 >> 0] = i5 << 1;
   i4 = i6 + 1 | 0;
  } else {
   i7 = i5 + 16 & -16;
   i4 = _malloc(i7) | 0;
   HEAP32[i6 + 8 >> 2] = i4;
   HEAP32[i6 >> 2] = i7 | 1;
   HEAP32[i6 + 4 >> 2] = i5;
  }
  i3 = i4;
  while (1) {
   if ((i2 | 0) == (i1 | 0)) break;
   HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
   i2 = i2 + 1 | 0;
   i3 = i3 + 1 | 0;
  }
  HEAP8[i4 + i5 >> 0] = 0;
 } while (0);
 return;
}

function __ZNK4wasm7Literal3minERKS0_(i14, i1, i4) {
 i14 = i14 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var d2 = 0.0, d3 = 0.0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, d16 = 0.0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i6 = i15 + 112 | 0;
 i7 = i15 + 96 | 0;
 i10 = i15 + 80 | 0;
 i12 = i15 + 64 | 0;
 i8 = i15 + 48 | 0;
 i9 = i15 + 32 | 0;
 i11 = i15 + 16 | 0;
 i13 = i15;
 do if ((HEAP32[i1 >> 2] | 0) == 3) {
  d5 = +__ZNK4wasm7Literal6getf32Ev(i1);
  d2 = +__ZNK4wasm7Literal6getf32Ev(i4);
  if (d5 == 0.0 & d5 == d2) {
   d5 = ((HEAPF32[tempDoublePtr >> 2] = d5, HEAP32[tempDoublePtr >> 2] | 0) | 0) < 0 ? d5 : d2;
   HEAP32[i14 >> 2] = 3;
   HEAPF32[i14 + 8 >> 2] = d5;
   break;
  }
  d3 = d2 < d5 ? d2 : d5;
  d16 = +Math_abs(+d5);
  i1 = (HEAPF32[tempDoublePtr >> 2] = d16, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 2139095040;
  d16 = +Math_abs(+d2);
  i4 = (HEAPF32[tempDoublePtr >> 2] = d16, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 2139095040;
  d16 = +Math_abs(+d3);
  if (!(i4 | (i1 | (HEAPF32[tempDoublePtr >> 2] = d16, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 2139095040))) {
   HEAP32[i14 >> 2] = 3;
   HEAPF32[i14 + 8 >> 2] = d3;
   break;
  }
  if (!(i1 | i4)) {
   HEAP32[i6 >> 2] = 1;
   HEAP32[i6 + 8 >> 2] = 2143289344;
   __ZN4wasm7Literal9castToF32Ev(i14, i6);
   break;
  }
  HEAP32[i7 >> 2] = 3;
  HEAPF32[i7 + 8 >> 2] = i1 ? d5 : d2;
  __ZN4wasm7Literal9castToI32Ev(i10, i7);
  i1 = i10 + 8 | 0;
  if ((HEAP32[i10 >> 2] | 0) == 1) {
   HEAP32[i12 + 8 >> 2] = HEAP32[i1 >> 2] | 12582912;
   i1 = 1;
  } else {
   i11 = i1;
   i13 = HEAP32[i11 + 4 >> 2] | 0;
   i1 = i12 + 8 | 0;
   HEAP32[i1 >> 2] = HEAP32[i11 >> 2] | 12582912;
   HEAP32[i1 + 4 >> 2] = i13;
   i1 = 2;
  }
  HEAP32[i12 >> 2] = i1;
  __ZN4wasm7Literal9castToF32Ev(i14, i12);
 } else {
  d5 = +__ZNK4wasm7Literal6getf64Ev(i1);
  d2 = +__ZNK4wasm7Literal6getf64Ev(i4);
  if (d5 == 0.0 & d5 == d2) {
   HEAPF64[tempDoublePtr >> 3] = d5;
   d16 = (HEAP32[tempDoublePtr + 4 >> 2] | 0) < 0 ? d5 : d2;
   HEAP32[i14 >> 2] = 4;
   HEAPF64[i14 + 8 >> 3] = d16;
   break;
  }
  d3 = d2 < d5 ? d2 : d5;
  d16 = +Math_abs(+d5);
  HEAPF64[tempDoublePtr >> 3] = d16;
  i1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
  i1 = i1 >>> 0 > 2146435072 | (i1 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0;
  d16 = +Math_abs(+d2);
  HEAPF64[tempDoublePtr >> 3] = d16;
  i4 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
  i4 = i4 >>> 0 > 2146435072 | (i4 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0;
  d16 = +Math_abs(+d3);
  HEAPF64[tempDoublePtr >> 3] = d16;
  i12 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
  if (!(i4 | (i1 | (i12 >>> 0 > 2146435072 | (i12 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0)))) {
   HEAP32[i14 >> 2] = 4;
   HEAPF64[i14 + 8 >> 3] = d3;
   break;
  }
  if (!(i1 | i4)) {
   HEAP32[i8 >> 2] = 2;
   i13 = i8 + 8 | 0;
   HEAP32[i13 >> 2] = 0;
   HEAP32[i13 + 4 >> 2] = 2146959360;
   __ZN4wasm7Literal9castToF64Ev(i14, i8);
   break;
  }
  HEAP32[i9 >> 2] = 4;
  HEAPF64[i9 + 8 >> 3] = i1 ? d5 : d2;
  __ZN4wasm7Literal9castToI64Ev(i11, i9);
  i1 = i11 + 8 | 0;
  if ((HEAP32[i11 >> 2] | 0) == 1) {
   HEAP32[i13 + 8 >> 2] = HEAP32[i1 >> 2];
   i1 = 1;
  } else {
   i11 = i1;
   i12 = HEAP32[i11 + 4 >> 2] | 524288;
   i1 = i13 + 8 | 0;
   HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i1 + 4 >> 2] = i12;
   i1 = 2;
  }
  HEAP32[i13 >> 2] = i1;
  __ZN4wasm7Literal9castToF64Ev(i14, i13);
 } while (0);
 STACKTOP = i15;
 return;
}

function __ZNK4wasm7Literal3maxERKS0_(i14, i1, i4) {
 i14 = i14 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var d2 = 0.0, d3 = 0.0, d5 = 0.0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, d16 = 0.0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i6 = i15 + 112 | 0;
 i7 = i15 + 96 | 0;
 i10 = i15 + 80 | 0;
 i12 = i15 + 64 | 0;
 i8 = i15 + 48 | 0;
 i9 = i15 + 32 | 0;
 i11 = i15 + 16 | 0;
 i13 = i15;
 do if ((HEAP32[i1 >> 2] | 0) == 3) {
  d5 = +__ZNK4wasm7Literal6getf32Ev(i1);
  d2 = +__ZNK4wasm7Literal6getf32Ev(i4);
  if (d5 == 0.0 & d5 == d2) {
   d5 = ((HEAPF32[tempDoublePtr >> 2] = d5, HEAP32[tempDoublePtr >> 2] | 0) | 0) < 0 ? d2 : d5;
   HEAP32[i14 >> 2] = 3;
   HEAPF32[i14 + 8 >> 2] = d5;
   break;
  }
  d3 = d5 < d2 ? d2 : d5;
  d16 = +Math_abs(+d5);
  i1 = (HEAPF32[tempDoublePtr >> 2] = d16, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 2139095040;
  d16 = +Math_abs(+d2);
  i4 = (HEAPF32[tempDoublePtr >> 2] = d16, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 2139095040;
  d16 = +Math_abs(+d3);
  if (!(i4 | (i1 | (HEAPF32[tempDoublePtr >> 2] = d16, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 2139095040))) {
   HEAP32[i14 >> 2] = 3;
   HEAPF32[i14 + 8 >> 2] = d3;
   break;
  }
  if (!(i1 | i4)) {
   HEAP32[i6 >> 2] = 1;
   HEAP32[i6 + 8 >> 2] = 2143289344;
   __ZN4wasm7Literal9castToF32Ev(i14, i6);
   break;
  }
  HEAP32[i7 >> 2] = 3;
  HEAPF32[i7 + 8 >> 2] = i1 ? d5 : d2;
  __ZN4wasm7Literal9castToI32Ev(i10, i7);
  i1 = i10 + 8 | 0;
  if ((HEAP32[i10 >> 2] | 0) == 1) {
   HEAP32[i12 + 8 >> 2] = HEAP32[i1 >> 2] | 12582912;
   i1 = 1;
  } else {
   i11 = i1;
   i13 = HEAP32[i11 + 4 >> 2] | 0;
   i1 = i12 + 8 | 0;
   HEAP32[i1 >> 2] = HEAP32[i11 >> 2] | 12582912;
   HEAP32[i1 + 4 >> 2] = i13;
   i1 = 2;
  }
  HEAP32[i12 >> 2] = i1;
  __ZN4wasm7Literal9castToF32Ev(i14, i12);
 } else {
  d5 = +__ZNK4wasm7Literal6getf64Ev(i1);
  d2 = +__ZNK4wasm7Literal6getf64Ev(i4);
  if (d5 == 0.0 & d5 == d2) {
   HEAPF64[tempDoublePtr >> 3] = d5;
   d16 = (HEAP32[tempDoublePtr + 4 >> 2] | 0) < 0 ? d2 : d5;
   HEAP32[i14 >> 2] = 4;
   HEAPF64[i14 + 8 >> 3] = d16;
   break;
  }
  d3 = d5 < d2 ? d2 : d5;
  d16 = +Math_abs(+d5);
  HEAPF64[tempDoublePtr >> 3] = d16;
  i1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
  i1 = i1 >>> 0 > 2146435072 | (i1 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0;
  d16 = +Math_abs(+d2);
  HEAPF64[tempDoublePtr >> 3] = d16;
  i4 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
  i4 = i4 >>> 0 > 2146435072 | (i4 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0;
  d16 = +Math_abs(+d3);
  HEAPF64[tempDoublePtr >> 3] = d16;
  i12 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
  if (!(i4 | (i1 | (i12 >>> 0 > 2146435072 | (i12 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0)))) {
   HEAP32[i14 >> 2] = 4;
   HEAPF64[i14 + 8 >> 3] = d3;
   break;
  }
  if (!(i1 | i4)) {
   HEAP32[i8 >> 2] = 2;
   i13 = i8 + 8 | 0;
   HEAP32[i13 >> 2] = 0;
   HEAP32[i13 + 4 >> 2] = 2146959360;
   __ZN4wasm7Literal9castToF64Ev(i14, i8);
   break;
  }
  HEAP32[i9 >> 2] = 4;
  HEAPF64[i9 + 8 >> 3] = i1 ? d5 : d2;
  __ZN4wasm7Literal9castToI64Ev(i11, i9);
  i1 = i11 + 8 | 0;
  if ((HEAP32[i11 >> 2] | 0) == 1) {
   HEAP32[i13 + 8 >> 2] = HEAP32[i1 >> 2];
   i1 = 1;
  } else {
   i11 = i1;
   i12 = HEAP32[i11 + 4 >> 2] | 524288;
   i1 = i13 + 8 | 0;
   HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i1 + 4 >> 2] = i12;
   i1 = 2;
  }
  HEAP32[i13 >> 2] = i1;
  __ZN4wasm7Literal9castToF64Ev(i14, i13);
 } while (0);
 STACKTOP = i15;
 return;
}

function __Z10detectSignN6cashew3RefENS_7IStringE(i14, i11) {
 i14 = i14 | 0;
 i11 = i11 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i12 = i15 + 32 | 0;
 i3 = i15 + 24 | 0;
 i13 = i15 + 28 | 0;
 i4 = i15 + 20 | 0;
 i6 = i15 + 16 | 0;
 i7 = i15 + 12 | 0;
 i8 = i15 + 8 | 0;
 i9 = i15 + 4 | 0;
 i10 = i15;
 i5 = __ZN6cashew3RefixEj(i14, 0) | 0;
 i5 = __ZN6cashew5Value10getIStringEv(HEAP32[i5 >> 2] | 0) | 0;
 i5 = HEAP32[i5 >> 2] | 0;
 L1 : do if ((i5 | 0) != (HEAP32[10268] | 0)) {
  if ((i5 | 0) == (HEAP32[10287] | 0)) {
   i13 = __ZN6cashew3RefixEj(i14, 1) | 0;
   i13 = __ZN6cashew5Value10getIStringEv(HEAP32[i13 >> 2] | 0) | 0;
   switch (HEAP8[HEAP32[i13 >> 2] >> 0] | 0) {
   case 45:
    {
     i2 = 0;
     break L1;
    }
   case 43:
    {
     i2 = 3;
     break L1;
    }
   case 126:
    {
     i2 = 1;
     break L1;
    }
   default:
    {
     HEAP32[i4 >> 2] = HEAP32[i14 >> 2];
     HEAP32[i12 >> 2] = HEAP32[i4 >> 2];
     __ZL8abort_onN6cashew3RefE(i12);
    }
   }
  }
  if ((i5 | 0) == (HEAP32[10278] | 0)) {
   i14 = __ZN6cashew3RefixEj(i14, 1) | 0;
   i14 = __ZN6cashew5Value9getNumberEv(HEAP32[i14 >> 2] | 0) | 0;
   d1 = +HEAPF64[i14 >> 3];
   if (d1 < 0.0) {
    i2 = 1;
    break;
   }
   if (d1 > 4294967295.0) {
    i2 = 3;
    break;
   }
   if (+_fmod(d1, 1.0) != 0.0) {
    i2 = 3;
    break;
   }
   i2 = __ZN4wasm12isSInteger32Ed(d1) | 0;
   i2 = i2 ? 0 : 2;
   break;
  }
  if ((i5 | 0) == (HEAP32[10264] | 0)) i2 = 0; else {
   if ((i5 | 0) == (HEAP32[10267] | 0)) {
    i2 = __ZN6cashew3RefixEj(i14, 2) | 0;
    HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
    HEAP32[i12 >> 2] = HEAP32[i7 >> 2];
    i2 = __Z10detectSignN6cashew3RefENS_7IStringE(i3, i12) | 0;
    break;
   }
   if ((i5 | 0) == (HEAP32[10277] | 0)) {
    if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i14, 1) | 0, 0) | 0, 41056) | 0) {
     if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i14, 1) | 0, 1) | 0, 41156) | 0) {
      i2 = 3;
      break;
     }
     if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i14, 1) | 0, 1) | 0, i11) | 0) {
      i2 = 3;
      break;
     }
    }
   } else if ((i5 | 0) == (HEAP32[10275] | 0)) {
    i2 = __ZN6cashew3RefixEj(i14, 2) | 0;
    HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
    HEAP32[i3 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i12 >> 2] = HEAP32[i9 >> 2];
    i2 = __Z10detectSignN6cashew3RefENS_7IStringE(i3, i12) | 0;
    break;
   }
   HEAP32[i10 >> 2] = HEAP32[i14 >> 2];
   HEAP32[i12 >> 2] = HEAP32[i10 >> 2];
   __ZL8abort_onN6cashew3RefE(i12);
  }
 } else {
  i2 = __ZN6cashew3RefixEj(i14, 1) | 0;
  i2 = __ZN6cashew5Value10getIStringEv(HEAP32[i2 >> 2] | 0) | 0;
  i2 = HEAP32[i2 >> 2] | 0;
  switch (HEAP8[i2 >> 0] | 0) {
  case 45:
  case 43:
   {
    i2 = 0;
    break L1;
   }
  case 62:
   {
    if ((i2 | 0) == (HEAP32[10313] | 0)) {
     i2 = 2;
     break L1;
    }
    break;
   }
  case 33:
  case 61:
  case 60:
  case 94:
  case 38:
  case 124:
   break;
  case 47:
  case 42:
   {
    i2 = 3;
    break L1;
   }
  default:
   {
    HEAP32[i13 >> 2] = HEAP32[i14 >> 2];
    HEAP32[i12 >> 2] = HEAP32[i13 >> 2];
    __ZL8abort_onN6cashew3RefE(i12);
   }
  }
  i2 = 1;
 } while (0);
 STACKTOP = i15;
 return i2 | 0;
}

function _fmod(d12, d1) {
 d12 = +d12;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, d15 = 0.0;
 HEAPF64[tempDoublePtr >> 3] = d12;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 i9 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i10 = HEAP32[tempDoublePtr >> 2] | 0;
 i11 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i3 = _bitshift64Lshr(i2 | 0, i9 | 0, 52) | 0;
 i3 = i3 & 2047;
 i7 = _bitshift64Lshr(i10 | 0, i11 | 0, 52) | 0;
 i7 = i7 & 2047;
 i13 = i9 & -2147483648;
 i6 = _bitshift64Shl(i10 | 0, i11 | 0, 1) | 0;
 i8 = tempRet0;
 L1 : do if (!((i6 | 0) == 0 & (i8 | 0) == 0) ? (d15 = +Math_abs(+d1), HEAPF64[tempDoublePtr >> 3] = d15, i5 = HEAP32[tempDoublePtr + 4 >> 2] | 0, !(i5 >>> 0 > 2146435072 | (i5 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0 | (i3 | 0) == 2047)) : 0) {
  i4 = _bitshift64Shl(i2 | 0, i9 | 0, 1) | 0;
  i5 = tempRet0;
  if (!(i5 >>> 0 > i8 >>> 0 | (i5 | 0) == (i8 | 0) & i4 >>> 0 > i6 >>> 0)) return +((i4 | 0) == (i6 | 0) & (i5 | 0) == (i8 | 0) ? d12 * 0.0 : d12);
  if (!i3) {
   i3 = _bitshift64Shl(i2 | 0, i9 | 0, 12) | 0;
   i4 = tempRet0;
   if ((i4 | 0) > -1 | (i4 | 0) == -1 & i3 >>> 0 > 4294967295) {
    i5 = i3;
    i3 = 0;
    do {
     i3 = i3 + -1 | 0;
     i5 = _bitshift64Shl(i5 | 0, i4 | 0, 1) | 0;
     i4 = tempRet0;
    } while ((i4 | 0) > -1 | (i4 | 0) == -1 & i5 >>> 0 > 4294967295);
   } else i3 = 0;
   i2 = _bitshift64Shl(i2 | 0, i9 | 0, 1 - i3 | 0) | 0;
   i4 = tempRet0;
  } else i4 = i9 & 1048575 | 1048576;
  if (!i7) {
   i5 = _bitshift64Shl(i10 | 0, i11 | 0, 12) | 0;
   i6 = tempRet0;
   if ((i6 | 0) > -1 | (i6 | 0) == -1 & i5 >>> 0 > 4294967295) {
    i7 = 0;
    do {
     i7 = i7 + -1 | 0;
     i5 = _bitshift64Shl(i5 | 0, i6 | 0, 1) | 0;
     i6 = tempRet0;
    } while ((i6 | 0) > -1 | (i6 | 0) == -1 & i5 >>> 0 > 4294967295);
   } else i7 = 0;
   i10 = _bitshift64Shl(i10 | 0, i11 | 0, 1 - i7 | 0) | 0;
   i9 = tempRet0;
  } else i9 = i11 & 1048575 | 1048576;
  i8 = _i64Subtract(i2 | 0, i4 | 0, i10 | 0, i9 | 0) | 0;
  i6 = tempRet0;
  i5 = (i6 | 0) > -1 | (i6 | 0) == -1 & i8 >>> 0 > 4294967295;
  L23 : do if ((i3 | 0) > (i7 | 0)) {
   while (1) {
    if (i5) if ((i2 | 0) == (i10 | 0) & (i4 | 0) == (i9 | 0)) break; else {
     i2 = i8;
     i4 = i6;
    }
    i2 = _bitshift64Shl(i2 | 0, i4 | 0, 1) | 0;
    i4 = tempRet0;
    i3 = i3 + -1 | 0;
    i8 = _i64Subtract(i2 | 0, i4 | 0, i10 | 0, i9 | 0) | 0;
    i6 = tempRet0;
    i5 = (i6 | 0) > -1 | (i6 | 0) == -1 & i8 >>> 0 > 4294967295;
    if ((i3 | 0) <= (i7 | 0)) break L23;
   }
   d1 = d12 * 0.0;
   break L1;
  } while (0);
  if (i5) if ((i2 | 0) == (i10 | 0) & (i4 | 0) == (i9 | 0)) {
   d1 = d12 * 0.0;
   break;
  } else {
   i4 = i6;
   i2 = i8;
  }
  if (i4 >>> 0 < 1048576 | (i4 | 0) == 1048576 & i2 >>> 0 < 0) do {
   i2 = _bitshift64Shl(i2 | 0, i4 | 0, 1) | 0;
   i4 = tempRet0;
   i3 = i3 + -1 | 0;
  } while (i4 >>> 0 < 1048576 | (i4 | 0) == 1048576 & i2 >>> 0 < 0);
  if ((i3 | 0) > 0) {
   i11 = _i64Add(i2 | 0, i4 | 0, 0, -1048576) | 0;
   i2 = tempRet0;
   i3 = _bitshift64Shl(i3 | 0, 0, 52) | 0;
   i2 = i2 | tempRet0;
   i3 = i11 | i3;
  } else {
   i3 = _bitshift64Lshr(i2 | 0, i4 | 0, 1 - i3 | 0) | 0;
   i2 = tempRet0;
  }
  HEAP32[tempDoublePtr >> 2] = i3;
  HEAP32[tempDoublePtr + 4 >> 2] = i2 | i13;
  d1 = +HEAPF64[tempDoublePtr >> 3];
 } else i14 = 3; while (0);
 if ((i14 | 0) == 3) {
  d1 = d12 * d1;
  d1 = d1 / d1;
 }
 return +d1;
}

function __GLOBAL__sub_I_wasm_js_cpp() {
 __ZN6cashew7IString3setEPKcb(40712, 12940, 1);
 __ZN6cashew7IString3setEPKcb(40716, 12947, 1);
 __ZN6cashew7IString3setEPKcb(40720, 12951, 1);
 __ZN6cashew7IString3setEPKcb(40724, 34343, 1);
 __ZN6cashew7IString3setEPKcb(40728, 31918, 1);
 __ZN6cashew7IString3setEPKcb(40732, 12960, 1);
 __ZN6cashew7IString3setEPKcb(40736, 12968, 1);
 __ZN6cashew7IString3setEPKcb(40740, 12978, 1);
 __ZN6cashew7IString3setEPKcb(40744, 12989, 1);
 __ZN6cashew7IString3setEPKcb(40748, 13e3, 1);
 __ZN6cashew7IString3setEPKcb(40752, 13011, 1);
 __ZN6cashew7IString3setEPKcb(40756, 13023, 1);
 __ZN6cashew7IString3setEPKcb(40760, 13035, 1);
 __ZN6cashew7IString3setEPKcb(40764, 13048, 1);
 __ZN6cashew7IString3setEPKcb(40768, 13061, 1);
 __ZN6cashew7IString3setEPKcb(40772, 13081, 1);
 __ZN6cashew7IString3setEPKcb(40776, 13086, 1);
 __ZN6cashew7IString3setEPKcb(40780, 13091, 1);
 __ZN6cashew7IString3setEPKcb(40784, 13097, 1);
 __ZN6cashew7IString3setEPKcb(40788, 13104, 1);
 __ZN6cashew7IString3setEPKcb(40792, 13113, 1);
 __ZN6cashew7IString3setEPKcb(40796, 13121, 1);
 __ZN6cashew7IString3setEPKcb(40800, 13132, 1);
 __ZN6cashew7IString3setEPKcb(40804, 26018, 1);
 __ZN6cashew7IString3setEPKcb(40808, 26027, 1);
 __ZN6cashew7IString3setEPKcb(40812, 26022, 1);
 __ZN6cashew7IString3setEPKcb(40816, 26047, 1);
 __ZN6cashew7IString3setEPKcb(40820, 13144, 1);
 __ZN6cashew7IString3setEPKcb(40824, 13162, 1);
 __ZN6cashew7IString3setEPKcb(40828, 13171, 1);
 __ZN6cashew7IString3setEPKcb(40832, 13188, 1);
 __ZN6cashew7IString3setEPKcb(40836, 25616, 1);
 __ZN6cashew7IString3setEPKcb(40840, 25707, 1);
 __ZN6cashew7IString3setEPKcb(40844, 13196, 1);
 __ZN6cashew7IString3setEPKcb(40848, 25725, 1);
 __ZN6cashew7IString3setEPKcb(40852, 13201, 1);
 __ZN6cashew7IString3setEPKcb(40856, 25648, 1);
 __ZN6cashew7IString3setEPKcb(40860, 13208, 1);
 __ZN6cashew7IString3setEPKcb(40864, 13216, 1);
 __ZN6cashew7IString3setEPKcb(40868, 13223, 1);
 __ZN6cashew7IString3setEPKcb(40872, 25770, 1);
 __ZN6cashew7IString3setEPKcb(40876, 13230, 1);
 __ZN6cashew7IString3setEPKcb(40880, 25713, 1);
 __ZN6cashew7IString3setEPKcb(40884, 30666, 1);
 __ZN6cashew7IString3setEPKcb(40888, 13236, 1);
 __ZN6cashew7IString3setEPKcb(40892, 13248, 1);
 __ZN6cashew7IString3setEPKcb(40896, 13262, 1);
 __ZN6cashew7IString3setEPKcb(40900, 13268, 1);
 __ZN6cashew7IString3setEPKcb(40904, 13278, 1);
 __ZN6cashew7IString3setEPKcb(40908, 30926, 1);
 __ZN6cashew7IString3setEPKcb(40912, 25892, 1);
 __ZN6cashew7IString3setEPKcb(40916, 13283, 1);
 __ZN6cashew7IString3setEPKcb(40920, 13291, 1);
 __ZN6cashew7IString3setEPKcb(40924, 13298, 1);
 __ZN6cashew7IString3setEPKcb(40928, 13302, 1);
 __ZN6cashew7IString3setEPKcb(40932, 13322, 1);
 __ZN6cashew7IString3setEPKcb(40936, 13332, 1);
 __ZN6cashew7IString3setEPKcb(40940, 13343, 1);
 __ZN6cashew7IString3setEPKcb(40944, 13354, 1);
 __ZN6cashew7IString3setEPKcb(40948, 13368, 1);
 __ZN6cashew7IString3setEPKcb(40952, 13377, 1);
 __ZN6cashew7IString3setEPKcb(40956, 13387, 1);
 __ZN6cashew7IString3setEPKcb(40960, 13398, 1);
 __ZN6cashew7IString3setEPKcb(40964, 13409, 1);
 __ZN6cashew7IString3setEPKcb(40968, 13422, 1);
 __ZN6cashew7IString3setEPKcb(40972, 13432, 1);
 __ZN6cashew7IString3setEPKcb(40976, 13441, 1);
 HEAP32[10245] = 0;
 HEAP32[10246] = 0;
 HEAP32[10247] = 0;
 ___cxa_atexit(202, 40980, ___dso_handle | 0) | 0;
 __ZN6cashew7IString3setEPKcb(40992, 14322, 1);
 __ZN6cashew7IString3setEPKcb(40996, 14327, 1);
 return;
}

function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i2, i14, i13, i15, i16, i11, i1) {
 i2 = i2 | 0;
 i14 = i14 | 0;
 i13 = i13 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i11 = i11 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i17 = 0, i18 = 0, i19 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i12 = i17;
 i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43120) | 0;
 i5 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43128) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 127](i12, i5);
 i8 = HEAP8[i12 >> 0] | 0;
 i9 = i12 + 4 | 0;
 L1 : do if (((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) | 0) {
  HEAP32[i11 >> 2] = i15;
  i1 = HEAP8[i2 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 43:
  case 45:
   {
    i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 31](i10, i1) | 0;
    i3 = HEAP32[i11 >> 2] | 0;
    HEAP32[i11 >> 2] = i3 + 4;
    HEAP32[i3 >> 2] = i8;
    i3 = i2 + 1 | 0;
    break;
   }
  default:
   i3 = i2;
  }
  L7 : do if ((i13 - i3 | 0) > 1 ? (HEAP8[i3 >> 0] | 0) == 48 : 0) {
   i1 = i3 + 1 | 0;
   switch (HEAP8[i1 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    break L7;
   }
   i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 31](i10, 48) | 0;
   i7 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i7 + 4;
   HEAP32[i7 >> 2] = i8;
   i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 31](i10, HEAP8[i1 >> 0] | 0) | 0;
   i8 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i8 + 4;
   HEAP32[i8 >> 2] = i7;
   i3 = i3 + 2 | 0;
  } while (0);
  L12 : do if ((i3 | 0) != (i13 | 0)) {
   i1 = i13;
   i4 = i3;
   while (1) {
    i1 = i1 + -1 | 0;
    if (i4 >>> 0 >= i1 >>> 0) break L12;
    i8 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i1 >> 0] | 0;
    HEAP8[i1 >> 0] = i8;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] & 127](i5) | 0;
  i6 = i12 + 8 | 0;
  i7 = i12 + 1 | 0;
  i1 = 0;
  i4 = 0;
  i8 = i3;
  while (1) {
   if (i8 >>> 0 >= i13 >>> 0) break;
   i18 = HEAP8[((HEAP8[i12 >> 0] & 1) == 0 ? i7 : HEAP32[i6 >> 2] | 0) + i4 >> 0] | 0;
   if (i18 << 24 >> 24 != 0 & (i1 | 0) == (i18 << 24 >> 24 | 0)) {
    i18 = HEAP32[i11 >> 2] | 0;
    HEAP32[i11 >> 2] = i18 + 4;
    HEAP32[i18 >> 2] = i5;
    i18 = HEAP8[i12 >> 0] | 0;
    i1 = 0;
    i4 = (i4 >>> 0 < (((i18 & 1) == 0 ? (i18 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) + -1 | 0) >>> 0 & 1) + i4 | 0;
   }
   i19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 44 >> 2] & 31](i10, HEAP8[i8 >> 0] | 0) | 0;
   i18 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i18 + 4;
   HEAP32[i18 >> 2] = i19;
   i1 = i1 + 1 | 0;
   i8 = i8 + 1 | 0;
  }
  i1 = i15 + (i3 - i2 << 2) | 0;
  i4 = HEAP32[i11 >> 2] | 0;
  if ((i1 | 0) != (i4 | 0)) {
   i3 = i4;
   while (1) {
    i3 = i3 + -4 | 0;
    if (i1 >>> 0 >= i3 >>> 0) {
     i1 = i4;
     break L1;
    }
    i19 = HEAP32[i1 >> 2] | 0;
    HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
    HEAP32[i3 >> 2] = i19;
    i1 = i1 + 4 | 0;
   }
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 48 >> 2] & 7](i10, i2, i13, i15) | 0;
  i1 = i15 + (i13 - i2 << 2) | 0;
  HEAP32[i11 >> 2] = i1;
 } while (0);
 HEAP32[i16 >> 2] = (i14 | 0) == (i13 | 0) ? i1 : i15 + (i14 - i2 << 2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
 STACKTOP = i17;
 return;
}

function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i2, i14, i13, i15, i16, i11, i1) {
 i2 = i2 | 0;
 i14 = i14 | 0;
 i13 = i13 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i11 = i11 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i17 = 0, i18 = 0, i19 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i12 = i17;
 i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43088) | 0;
 i5 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43100) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 127](i12, i5);
 i8 = HEAP8[i12 >> 0] | 0;
 i9 = i12 + 4 | 0;
 if (((i8 & 1) == 0 ? (i8 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) | 0) {
  HEAP32[i11 >> 2] = i15;
  i1 = HEAP8[i2 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 43:
  case 45:
   {
    i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 31](i10, i1) | 0;
    i3 = HEAP32[i11 >> 2] | 0;
    HEAP32[i11 >> 2] = i3 + 1;
    HEAP8[i3 >> 0] = i8;
    i3 = i2 + 1 | 0;
    break;
   }
  default:
   i3 = i2;
  }
  L7 : do if ((i13 - i3 | 0) > 1 ? (HEAP8[i3 >> 0] | 0) == 48 : 0) {
   i1 = i3 + 1 | 0;
   switch (HEAP8[i1 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    break L7;
   }
   i8 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 31](i10, 48) | 0;
   i7 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i7 + 1;
   HEAP8[i7 >> 0] = i8;
   i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 31](i10, HEAP8[i1 >> 0] | 0) | 0;
   i8 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i8 + 1;
   HEAP8[i8 >> 0] = i7;
   i3 = i3 + 2 | 0;
  } while (0);
  L12 : do if ((i3 | 0) != (i13 | 0)) {
   i1 = i13;
   i4 = i3;
   while (1) {
    i1 = i1 + -1 | 0;
    if (i4 >>> 0 >= i1 >>> 0) break L12;
    i8 = HEAP8[i4 >> 0] | 0;
    HEAP8[i4 >> 0] = HEAP8[i1 >> 0] | 0;
    HEAP8[i1 >> 0] = i8;
    i4 = i4 + 1 | 0;
   }
  } while (0);
  i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] & 127](i5) | 0;
  i6 = i12 + 8 | 0;
  i7 = i12 + 1 | 0;
  i1 = 0;
  i4 = 0;
  i8 = i3;
  while (1) {
   if (i8 >>> 0 >= i13 >>> 0) break;
   i18 = HEAP8[((HEAP8[i12 >> 0] & 1) == 0 ? i7 : HEAP32[i6 >> 2] | 0) + i4 >> 0] | 0;
   if (i18 << 24 >> 24 != 0 & (i1 | 0) == (i18 << 24 >> 24 | 0)) {
    i18 = HEAP32[i11 >> 2] | 0;
    HEAP32[i11 >> 2] = i18 + 1;
    HEAP8[i18 >> 0] = i5;
    i18 = HEAP8[i12 >> 0] | 0;
    i1 = 0;
    i4 = (i4 >>> 0 < (((i18 & 1) == 0 ? (i18 & 255) >>> 1 : HEAP32[i9 >> 2] | 0) + -1 | 0) >>> 0 & 1) + i4 | 0;
   }
   i19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 31](i10, HEAP8[i8 >> 0] | 0) | 0;
   i18 = HEAP32[i11 >> 2] | 0;
   HEAP32[i11 >> 2] = i18 + 1;
   HEAP8[i18 >> 0] = i19;
   i1 = i1 + 1 | 0;
   i8 = i8 + 1 | 0;
  }
  i1 = i15 + (i3 - i2) | 0;
  i3 = HEAP32[i11 >> 2] | 0;
  if ((i1 | 0) != (i3 | 0)) {
   while (1) {
    i3 = i3 + -1 | 0;
    if (i1 >>> 0 >= i3 >>> 0) break;
    i19 = HEAP8[i1 >> 0] | 0;
    HEAP8[i1 >> 0] = HEAP8[i3 >> 0] | 0;
    HEAP8[i3 >> 0] = i19;
    i1 = i1 + 1 | 0;
   }
   i1 = HEAP32[i11 >> 2] | 0;
  }
 } else {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 32 >> 2] & 7](i10, i2, i13, i15) | 0;
  i1 = i15 + (i13 - i2) | 0;
  HEAP32[i11 >> 2] = i1;
 }
 HEAP32[i16 >> 2] = (i14 | 0) == (i13 | 0) ? i1 : i15 + (i14 - i2) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i12);
 STACKTOP = i17;
 return;
}

function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE(i12, i10, i11, i9, i1) {
 i12 = i12 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = i10;
 if ((((i1 & 4 | 0) != 0 ? (i8 - i12 | 0) > 2 : 0) ? (HEAP8[i12 >> 0] | 0) == -17 : 0) ? (HEAP8[i12 + 1 >> 0] | 0) == -69 : 0) {
  i7 = (HEAP8[i12 + 2 >> 0] | 0) == -65 ? i12 + 3 | 0 : i12;
  i2 = 0;
 } else {
  i7 = i12;
  i2 = 0;
 }
 L6 : while (1) {
  if (!(i2 >>> 0 < i11 >>> 0 & i7 >>> 0 < i10 >>> 0)) {
   i1 = i7;
   i2 = 40;
   break;
  }
  i1 = HEAP8[i7 >> 0] | 0;
  i6 = i1 & 255;
  if (i6 >>> 0 > i9 >>> 0) {
   i1 = i7;
   i2 = 40;
   break;
  }
  do if (i1 << 24 >> 24 > -1) i1 = i7 + 1 | 0; else {
   if ((i1 & 255) < 194) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   if ((i1 & 255) < 224) {
    if ((i8 - i7 | 0) < 2) {
     i1 = i7;
     i2 = 40;
     break L6;
    }
    i1 = HEAPU8[i7 + 1 >> 0] | 0;
    if ((i1 & 192 | 0) != 128) {
     i1 = i7;
     i2 = 40;
     break L6;
    }
    if ((i1 & 63 | i6 << 6 & 1984) >>> 0 > i9 >>> 0) {
     i1 = i7;
     i2 = 40;
     break L6;
    } else {
     i1 = i7 + 2 | 0;
     break;
    }
   }
   if ((i1 & 255) < 240) {
    i1 = i7;
    if ((i8 - i1 | 0) < 3) {
     i1 = i7;
     i2 = 40;
     break L6;
    }
    i4 = HEAP8[i7 + 1 >> 0] | 0;
    i3 = HEAP8[i7 + 2 >> 0] | 0;
    switch (i6 | 0) {
    case 224:
     {
      if ((i4 & -32) << 24 >> 24 != -96) {
       i2 = 19;
       break L6;
      }
      break;
     }
    case 237:
     {
      if ((i4 & -32) << 24 >> 24 != -128) {
       i2 = 21;
       break L6;
      }
      break;
     }
    default:
     if ((i4 & -64) << 24 >> 24 != -128) {
      i2 = 23;
      break L6;
     }
    }
    i1 = i3 & 255;
    if ((i1 & 192 | 0) != 128) {
     i1 = i7;
     i2 = 40;
     break L6;
    }
    if (((i4 & 255) << 6 & 4032 | i6 << 12 & 61440 | i1 & 63) >>> 0 > i9 >>> 0) {
     i1 = i7;
     i2 = 40;
     break L6;
    } else {
     i1 = i7 + 3 | 0;
     break;
    }
   }
   if ((i1 & 255) >= 245) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   i1 = i7;
   if ((i11 - i2 | 0) >>> 0 < 2 | (i8 - i1 | 0) < 4) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   i5 = HEAP8[i7 + 1 >> 0] | 0;
   i3 = HEAP8[i7 + 2 >> 0] | 0;
   i4 = HEAP8[i7 + 3 >> 0] | 0;
   switch (i6 | 0) {
   case 240:
    {
     if ((i5 + 112 & 255) >= 48) {
      i2 = 30;
      break L6;
     }
     break;
    }
   case 244:
    {
     if ((i5 & -16) << 24 >> 24 != -128) {
      i2 = 32;
      break L6;
     }
     break;
    }
   default:
    if ((i5 & -64) << 24 >> 24 != -128) {
     i2 = 34;
     break L6;
    }
   }
   i3 = i3 & 255;
   if ((i3 & 192 | 0) != 128) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   i1 = i4 & 255;
   if ((i1 & 192 | 0) != 128) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   if (((i5 & 255) << 12 & 258048 | i6 << 18 & 1835008 | i3 << 6 & 4032 | i1 & 63) >>> 0 > i9 >>> 0) {
    i1 = i7;
    i2 = 40;
    break L6;
   }
   i1 = i7 + 4 | 0;
   i2 = i2 + 1 | 0;
  } while (0);
  i7 = i1;
  i2 = i2 + 1 | 0;
 }
 if ((i2 | 0) == 19) i1 = i1 - i12 | 0; else if ((i2 | 0) == 21) i1 = i1 - i12 | 0; else if ((i2 | 0) == 23) i1 = i1 - i12 | 0; else if ((i2 | 0) == 30) i1 = i1 - i12 | 0; else if ((i2 | 0) == 32) i1 = i1 - i12 | 0; else if ((i2 | 0) == 34) i1 = i1 - i12 | 0; else if ((i2 | 0) == 40) i1 = i1 - i12 | 0;
 return i1 | 0;
}

function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE(i12, i10, i11, i9, i1) {
 i12 = i12 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = i10;
 if ((((i1 & 4 | 0) != 0 ? (i8 - i12 | 0) > 2 : 0) ? (HEAP8[i12 >> 0] | 0) == -17 : 0) ? (HEAP8[i12 + 1 >> 0] | 0) == -69 : 0) {
  i6 = (HEAP8[i12 + 2 >> 0] | 0) == -65 ? i12 + 3 | 0 : i12;
  i7 = 0;
 } else {
  i6 = i12;
  i7 = 0;
 }
 L6 : while (1) {
  if (!(i7 >>> 0 < i11 >>> 0 & i6 >>> 0 < i10 >>> 0)) {
   i1 = i6;
   i2 = 40;
   break;
  }
  i1 = HEAP8[i6 >> 0] | 0;
  i5 = i1 & 255;
  do if (i1 << 24 >> 24 <= -1) {
   if ((i1 & 255) < 194) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   if ((i1 & 255) < 224) {
    if ((i8 - i6 | 0) < 2) {
     i1 = i6;
     i2 = 40;
     break L6;
    }
    i1 = HEAPU8[i6 + 1 >> 0] | 0;
    if ((i1 & 192 | 0) != 128) {
     i1 = i6;
     i2 = 40;
     break L6;
    }
    if ((i1 & 63 | i5 << 6 & 1984) >>> 0 > i9 >>> 0) {
     i1 = i6;
     i2 = 40;
     break L6;
    }
    i1 = i6 + 2 | 0;
    break;
   }
   if ((i1 & 255) < 240) {
    i1 = i6;
    if ((i8 - i1 | 0) < 3) {
     i1 = i6;
     i2 = 40;
     break L6;
    }
    i3 = HEAP8[i6 + 1 >> 0] | 0;
    i2 = HEAP8[i6 + 2 >> 0] | 0;
    switch (i5 | 0) {
    case 224:
     {
      if ((i3 & -32) << 24 >> 24 != -96) {
       i2 = 20;
       break L6;
      }
      break;
     }
    case 237:
     {
      if ((i3 & -32) << 24 >> 24 != -128) {
       i2 = 22;
       break L6;
      }
      break;
     }
    default:
     if ((i3 & -64) << 24 >> 24 != -128) {
      i2 = 24;
      break L6;
     }
    }
    i1 = i2 & 255;
    if ((i1 & 192 | 0) != 128) {
     i1 = i6;
     i2 = 40;
     break L6;
    }
    if (((i3 & 255) << 6 & 4032 | i5 << 12 & 61440 | i1 & 63) >>> 0 > i9 >>> 0) {
     i1 = i6;
     i2 = 40;
     break L6;
    } else {
     i1 = i6 + 3 | 0;
     break;
    }
   }
   if ((i1 & 255) >= 245) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   i1 = i6;
   if ((i8 - i1 | 0) < 4) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   i4 = HEAP8[i6 + 1 >> 0] | 0;
   i2 = HEAP8[i6 + 2 >> 0] | 0;
   i3 = HEAP8[i6 + 3 >> 0] | 0;
   switch (i5 | 0) {
   case 240:
    {
     if ((i4 + 112 & 255) >= 48) {
      i2 = 31;
      break L6;
     }
     break;
    }
   case 244:
    {
     if ((i4 & -16) << 24 >> 24 != -128) {
      i2 = 33;
      break L6;
     }
     break;
    }
   default:
    if ((i4 & -64) << 24 >> 24 != -128) {
     i2 = 35;
     break L6;
    }
   }
   i2 = i2 & 255;
   if ((i2 & 192 | 0) != 128) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   i1 = i3 & 255;
   if ((i1 & 192 | 0) != 128) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   if (((i4 & 255) << 12 & 258048 | i5 << 18 & 1835008 | i2 << 6 & 4032 | i1 & 63) >>> 0 > i9 >>> 0) {
    i1 = i6;
    i2 = 40;
    break L6;
   } else i1 = i6 + 4 | 0;
  } else {
   if (i5 >>> 0 > i9 >>> 0) {
    i1 = i6;
    i2 = 40;
    break L6;
   }
   i1 = i6 + 1 | 0;
  } while (0);
  i6 = i1;
  i7 = i7 + 1 | 0;
 }
 if ((i2 | 0) == 20) i1 = i1 - i12 | 0; else if ((i2 | 0) == 22) i1 = i1 - i12 | 0; else if ((i2 | 0) == 24) i1 = i1 - i12 | 0; else if ((i2 | 0) == 31) i1 = i1 - i12 | 0; else if ((i2 | 0) == 33) i1 = i1 - i12 | 0; else if ((i2 | 0) == 35) i1 = i1 - i12 | 0; else if ((i2 | 0) == 40) i1 = i1 - i12 | 0;
 return i1 | 0;
}

function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i1, i8, i9, i4, i2, i10, i7, i3) {
 i1 = i1 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i10 = i10 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0;
 HEAP32[i9 >> 2] = i1;
 HEAP32[i10 >> 2] = i4;
 if (i3 & 2) if ((i2 - i4 | 0) < 3) i1 = 1; else {
  HEAP32[i10 >> 2] = i4 + 1;
  HEAP8[i4 >> 0] = -17;
  i5 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -69;
  i5 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -65;
  i5 = 4;
 } else i5 = 4;
 L4 : do if ((i5 | 0) == 4) {
  i6 = i8;
  i1 = HEAP32[i9 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i8 >>> 0) {
    i1 = 0;
    break L4;
   }
   i3 = HEAP16[i1 >> 1] | 0;
   i5 = i3 & 65535;
   if (i5 >>> 0 > i7 >>> 0) {
    i1 = 2;
    break L4;
   }
   do if ((i3 & 65535) < 128) {
    i1 = HEAP32[i10 >> 2] | 0;
    if ((i2 - i1 | 0) < 1) {
     i1 = 1;
     break L4;
    }
    HEAP32[i10 >> 2] = i1 + 1;
    HEAP8[i1 >> 0] = i3;
   } else {
    if ((i3 & 65535) < 2048) {
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i2 - i1 | 0) < 2) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 6 | 192;
     i4 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i3 & 65535) < 55296) {
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i2 - i1 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 12 | 224;
     i4 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 >>> 6 & 63 | 128;
     i4 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i3 & 65535) >= 56320) {
     if ((i3 & 65535) < 57344) {
      i1 = 2;
      break L4;
     }
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i2 - i1 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 12 | 224;
     i4 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 >>> 6 & 63 | 128;
     i4 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i6 - i1 | 0) < 4) {
     i1 = 1;
     break L4;
    }
    i1 = i1 + 2 | 0;
    i3 = HEAPU16[i1 >> 1] | 0;
    if ((i3 & 64512 | 0) != 56320) {
     i1 = 2;
     break L4;
    }
    if ((i2 - (HEAP32[i10 >> 2] | 0) | 0) < 4) {
     i1 = 1;
     break L4;
    }
    i4 = i5 & 960;
    if (((i4 << 10) + 65536 | i5 << 10 & 64512 | i3 & 1023) >>> 0 > i7 >>> 0) {
     i1 = 2;
     break L4;
    }
    HEAP32[i9 >> 2] = i1;
    i1 = (i4 >>> 6) + 1 | 0;
    i4 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i1 >>> 2 | 240;
    i4 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i5 >>> 2 & 15 | i1 << 4 & 48 | 128;
    i4 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i5 << 4 & 48 | i3 >>> 6 & 15 | 128;
    i5 = HEAP32[i10 >> 2] | 0;
    HEAP32[i10 >> 2] = i5 + 1;
    HEAP8[i5 >> 0] = i3 & 63 | 128;
   } while (0);
   i1 = (HEAP32[i9 >> 2] | 0) + 2 | 0;
   HEAP32[i9 >> 2] = i1;
  }
 } while (0);
 return i1 | 0;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(i1, i13, i14, i2, i3, i15, i12) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i15 = i15 | 0;
 i12 = i12 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 576 | 0;
 i7 = i20 + 424 | 0;
 i10 = i20;
 i4 = i20 + 24 | 0;
 i19 = i20 + 16 | 0;
 i8 = i20 + 12 | 0;
 i16 = i20 + 8 | 0;
 i5 = i20 + 564 | 0;
 i21 = i20 + 4 | 0;
 i9 = i20 + 464 | 0;
 HEAP32[i19 >> 2] = i4;
 i18 = i19 + 4 | 0;
 HEAP32[i18 >> 2] = 220;
 i1 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 HEAP32[i16 >> 2] = i1;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i16, 43120) | 0;
 HEAP8[i5 >> 0] = 0;
 HEAP32[i21 >> 2] = HEAP32[i14 >> 2];
 i3 = HEAP32[i3 + 4 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i21 >> 2];
 if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i13, i7, i2, i16, i3, i15, i5, i1, i19, i8, i4 + 400 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 7](i1, 36659, 36669, i7) | 0;
  i2 = HEAP32[i8 >> 2] | 0;
  i4 = HEAP32[i19 >> 2] | 0;
  i1 = i2 - i4 | 0;
  if ((i1 | 0) > 392) {
   i1 = _malloc((i1 >> 2) + 2 | 0) | 0;
   if (!i1) __ZSt17__throw_bad_allocv(); else {
    i11 = i1;
    i6 = i1;
   }
  } else {
   i11 = 0;
   i6 = i9;
  }
  if (!(HEAP8[i5 >> 0] | 0)) i1 = i6; else {
   HEAP8[i6 >> 0] = 45;
   i1 = i6 + 1 | 0;
  }
  i5 = i7 + 40 | 0;
  i6 = i7;
  while (1) {
   if (i4 >>> 0 >= i2 >>> 0) break;
   i3 = HEAP32[i4 >> 2] | 0;
   i2 = i7;
   while (1) {
    if ((i2 | 0) == (i5 | 0)) {
     i2 = i5;
     break;
    }
    if ((HEAP32[i2 >> 2] | 0) == (i3 | 0)) break;
    i2 = i2 + 4 | 0;
   }
   HEAP8[i1 >> 0] = HEAP8[36659 + (i2 - i6 >> 2) >> 0] | 0;
   i2 = HEAP32[i8 >> 2] | 0;
   i1 = i1 + 1 | 0;
   i4 = i4 + 4 | 0;
  }
  HEAP8[i1 >> 0] = 0;
  HEAP32[i10 >> 2] = i12;
  _sscanf(i9, 36560, i10) | 0;
  if (i11 | 0) _free(i11);
 }
 i1 = HEAP32[i13 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i13 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i13 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i1 = HEAP32[i14 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) != -1) if (i3) break; else {
   i17 = 32;
   break;
  } else {
   HEAP32[i14 >> 2] = 0;
   i17 = 30;
   break;
  }
 } else i17 = 30; while (0);
 if ((i17 | 0) == 30 ? i3 : 0) i17 = 32;
 if ((i17 | 0) == 32) HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 2;
 i2 = HEAP32[i13 >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[i16 >> 2] | 0) | 0;
 i1 = HEAP32[i19 >> 2] | 0;
 HEAP32[i19 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i18 >> 2] & 255](i1);
 STACKTOP = i20;
 return i2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i12, i10) {
 i12 = i12 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0;
 do if (HEAP8[i12 >> 0] & 1) {
  i9 = i12 + 8 | 0;
  HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
  i7 = i12 + 4 | 0;
  HEAP32[i7 >> 2] = 0;
  i1 = HEAP8[i12 >> 0] | 0;
  if (!(i1 & 1)) i5 = 10; else {
   i5 = HEAP32[i12 >> 2] | 0;
   i1 = i5 & 255;
   i5 = (i5 & -2) + -1 | 0;
  }
  if (!(i1 & 1)) {
   i2 = (i1 & 255) >>> 1;
   if ((i1 & 255) < 22) {
    i4 = 10;
    i6 = i2;
    i8 = 1;
   } else {
    i4 = (i2 + 16 & 240) + -1 | 0;
    i6 = i2;
    i8 = 1;
   }
  } else {
   i4 = 10;
   i6 = 0;
   i8 = 0;
  }
  if ((i4 | 0) != (i5 | 0)) {
   if ((i4 | 0) == 10) {
    i3 = i12 + 1 | 0;
    i2 = HEAP32[i9 >> 2] | 0;
    if (i8) {
     _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
     _free(i2);
    } else {
     HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
     _free(i2);
    }
    HEAP8[i12 >> 0] = i6 << 1;
    break;
   }
   i2 = i4 + 1 | 0;
   i3 = _malloc(i2) | 0;
   if (!(i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0)) {
    if (i8) _memcpy(i3 | 0, i12 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
     i11 = HEAP32[i9 >> 2] | 0;
     HEAP8[i3 >> 0] = HEAP8[i11 >> 0] | 0;
     _free(i11);
    }
    HEAP32[i12 >> 2] = i2 | 1;
    HEAP32[i7 >> 2] = i6;
    HEAP32[i9 >> 2] = i3;
   }
  }
 } else {
  HEAP8[i12 + 1 >> 0] = 0;
  HEAP8[i12 >> 0] = 0;
 } while (0);
 HEAP32[i12 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i12 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
 HEAP32[i12 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i10 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i11 = i12 + 12 | 0;
 i10 = i10 + 12 | 0;
 do if (HEAP8[i11 >> 0] & 1) {
  i9 = i12 + 20 | 0;
  HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
  i6 = i12 + 16 | 0;
  HEAP32[i6 >> 2] = 0;
  i1 = HEAP8[i11 >> 0] | 0;
  if (!(i1 & 1)) i5 = 10; else {
   i5 = HEAP32[i11 >> 2] | 0;
   i1 = i5 & 255;
   i5 = (i5 & -2) + -1 | 0;
  }
  if (!(i1 & 1)) {
   i2 = (i1 & 255) >>> 1;
   if ((i1 & 255) < 22) {
    i4 = 10;
    i7 = i2;
    i8 = 1;
   } else {
    i4 = (i2 + 16 & 240) + -1 | 0;
    i7 = i2;
    i8 = 1;
   }
  } else {
   i4 = 10;
   i7 = 0;
   i8 = 0;
  }
  if ((i4 | 0) != (i5 | 0)) {
   if ((i4 | 0) == 10) {
    i3 = i11 + 1 | 0;
    i2 = HEAP32[i9 >> 2] | 0;
    if (i8) {
     _memcpy(i3 | 0, i2 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0;
     _free(i2);
    } else {
     HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
     _free(i2);
    }
    HEAP8[i11 >> 0] = i7 << 1;
    break;
   }
   i2 = i4 + 1 | 0;
   i3 = _malloc(i2) | 0;
   if (!(i4 >>> 0 <= i5 >>> 0 & (i3 | 0) == 0)) {
    if (i8) _memcpy(i3 | 0, i11 + 1 | 0, ((i1 & 255) >>> 1) + 1 | 0) | 0; else {
     i12 = HEAP32[i9 >> 2] | 0;
     HEAP8[i3 >> 0] = HEAP8[i12 >> 0] | 0;
     _free(i12);
    }
    HEAP32[i11 >> 2] = i2 | 1;
    HEAP32[i6 >> 2] = i7;
    HEAP32[i9 >> 2] = i3;
   }
  }
 } else {
  HEAP8[i11 + 1 >> 0] = 0;
  HEAP8[i11 >> 0] = 0;
 } while (0);
 HEAP32[i11 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i11 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
 HEAP32[i11 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i10 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__17__sort4IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_S9_T_(i8, i9, i10, i1, i7) {
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i12 = i13 + 56 | 0;
 i11 = i13 + 48 | 0;
 i15 = i13 + 40 | 0;
 i14 = i13 + 32 | 0;
 i2 = i13 + 24 | 0;
 i3 = i13 + 16 | 0;
 i4 = i13 + 8 | 0;
 i5 = i13;
 i6 = __ZNSt3__17__sort3IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_T_(i8, i9, i10, i7) | 0;
 i16 = i1;
 i17 = HEAP32[i16 + 4 >> 2] | 0;
 i18 = i15;
 HEAP32[i18 >> 2] = HEAP32[i16 >> 2];
 HEAP32[i18 + 4 >> 2] = i17;
 i18 = i10;
 i17 = HEAP32[i18 + 4 >> 2] | 0;
 i16 = i14;
 HEAP32[i16 >> 2] = HEAP32[i18 >> 2];
 HEAP32[i16 + 4 >> 2] = i17;
 HEAP32[i11 >> 2] = HEAP32[i15 >> 2];
 HEAP32[i11 + 4 >> 2] = HEAP32[i15 + 4 >> 2];
 HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
 HEAP32[i12 + 4 >> 2] = HEAP32[i14 + 4 >> 2];
 if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i7, i11, i12) | 0) {
  i18 = i10;
  i17 = HEAP32[i18 >> 2] | 0;
  i18 = HEAP32[i18 + 4 >> 2] | 0;
  i14 = i1;
  i15 = HEAP32[i14 + 4 >> 2] | 0;
  i16 = i10;
  HEAP32[i16 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i16 + 4 >> 2] = i15;
  HEAP32[i1 >> 2] = i17;
  HEAP32[i1 + 4 >> 2] = i18;
  i1 = i6 + 1 | 0;
  i18 = i10;
  i17 = HEAP32[i18 + 4 >> 2] | 0;
  i16 = i2;
  HEAP32[i16 >> 2] = HEAP32[i18 >> 2];
  HEAP32[i16 + 4 >> 2] = i17;
  i16 = i9;
  i17 = HEAP32[i16 + 4 >> 2] | 0;
  i18 = i3;
  HEAP32[i18 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i18 + 4 >> 2] = i17;
  HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i11 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i12 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i12 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i7, i11, i12) | 0) {
   i17 = i9;
   i16 = HEAP32[i17 >> 2] | 0;
   i17 = HEAP32[i17 + 4 >> 2] | 0;
   i14 = i10;
   i15 = HEAP32[i14 + 4 >> 2] | 0;
   i18 = i9;
   HEAP32[i18 >> 2] = HEAP32[i14 >> 2];
   HEAP32[i18 + 4 >> 2] = i15;
   i18 = i10;
   HEAP32[i18 >> 2] = i16;
   HEAP32[i18 + 4 >> 2] = i17;
   i18 = i9;
   i17 = HEAP32[i18 + 4 >> 2] | 0;
   i16 = i4;
   HEAP32[i16 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i16 + 4 >> 2] = i17;
   i16 = i8;
   i17 = HEAP32[i16 + 4 >> 2] | 0;
   i18 = i5;
   HEAP32[i18 >> 2] = HEAP32[i16 >> 2];
   HEAP32[i18 + 4 >> 2] = i17;
   HEAP32[i11 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i11 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
   HEAP32[i12 >> 2] = HEAP32[i5 >> 2];
   HEAP32[i12 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
   if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i7, i11, i12) | 0) {
    i18 = i8;
    i17 = HEAP32[i18 >> 2] | 0;
    i18 = HEAP32[i18 + 4 >> 2] | 0;
    i15 = i9;
    i16 = HEAP32[i15 + 4 >> 2] | 0;
    i1 = i8;
    HEAP32[i1 >> 2] = HEAP32[i15 >> 2];
    HEAP32[i1 + 4 >> 2] = i16;
    i1 = i9;
    HEAP32[i1 >> 2] = i17;
    HEAP32[i1 + 4 >> 2] = i18;
    i1 = i6 + 3 | 0;
   } else i1 = i6 + 2 | 0;
  }
 } else i1 = i6;
 STACKTOP = i13;
 return i1 | 0;
}

function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(i1, i10, i11, i3, i12, i13, i9, i2) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i3 = i3 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i14 = 0;
 HEAP32[i11 >> 2] = i1;
 HEAP32[i13 >> 2] = i3;
 if (i2 & 4) {
  i1 = HEAP32[i11 >> 2] | 0;
  i2 = i10;
  if ((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == -17 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[i1 + 2 >> 0] | 0) == -65 : 0) HEAP32[i11 >> 2] = i1 + 3;
 } else i2 = i10;
 L9 : while (1) {
  i7 = HEAP32[i11 >> 2] | 0;
  i1 = i7 >>> 0 < i10 >>> 0;
  if (!i1) {
   i14 = 40;
   break;
  }
  i8 = HEAP32[i13 >> 2] | 0;
  if (i8 >>> 0 >= i12 >>> 0) {
   i14 = 40;
   break;
  }
  i1 = HEAP8[i7 >> 0] | 0;
  i6 = i1 & 255;
  do if (i1 << 24 >> 24 > -1) {
   if (i6 >>> 0 > i9 >>> 0) {
    i1 = 2;
    break L9;
   }
   HEAP32[i8 >> 2] = i6;
   HEAP32[i11 >> 2] = i7 + 1;
  } else {
   if ((i1 & 255) < 194) {
    i1 = 2;
    break L9;
   }
   if ((i1 & 255) < 224) {
    if ((i2 - i7 | 0) < 2) {
     i1 = 1;
     break L9;
    }
    i1 = HEAPU8[i7 + 1 >> 0] | 0;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = i1 & 63 | i6 << 6 & 1984;
    if (i1 >>> 0 > i9 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP32[i8 >> 2] = i1;
    HEAP32[i11 >> 2] = i7 + 2;
    break;
   }
   if ((i1 & 255) < 240) {
    if ((i2 - i7 | 0) < 3) {
     i1 = 1;
     break L9;
    }
    i3 = HEAP8[i7 + 1 >> 0] | 0;
    i1 = HEAP8[i7 + 2 >> 0] | 0;
    switch (i6 | 0) {
    case 224:
     {
      if ((i3 & -32) << 24 >> 24 != -96) {
       i1 = 2;
       break L9;
      }
      break;
     }
    case 237:
     {
      if ((i3 & -32) << 24 >> 24 != -128) {
       i1 = 2;
       break L9;
      }
      break;
     }
    default:
     if ((i3 & -64) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
    }
    i1 = i1 & 255;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = (i3 & 255) << 6 & 4032 | i6 << 12 & 61440 | i1 & 63;
    if (i1 >>> 0 > i9 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP32[i8 >> 2] = i1;
    HEAP32[i11 >> 2] = i7 + 3;
    break;
   }
   if ((i1 & 255) >= 245) {
    i1 = 2;
    break L9;
   }
   if ((i2 - i7 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i5 = HEAP8[i7 + 1 >> 0] | 0;
   i1 = HEAP8[i7 + 2 >> 0] | 0;
   i3 = HEAP8[i7 + 3 >> 0] | 0;
   switch (i6 | 0) {
   case 240:
    {
     if ((i5 + 112 & 255) >= 48) {
      i1 = 2;
      break L9;
     }
     break;
    }
   case 244:
    {
     if ((i5 & -16) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
     break;
    }
   default:
    if ((i5 & -64) << 24 >> 24 != -128) {
     i1 = 2;
     break L9;
    }
   }
   i4 = i1 & 255;
   if ((i4 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i1 = i3 & 255;
   if ((i1 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i1 = (i5 & 255) << 12 & 258048 | i6 << 18 & 1835008 | i4 << 6 & 4032 | i1 & 63;
   if (i1 >>> 0 > i9 >>> 0) {
    i1 = 2;
    break L9;
   }
   HEAP32[i8 >> 2] = i1;
   HEAP32[i11 >> 2] = i7 + 4;
  } while (0);
  HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 4;
 }
 if ((i14 | 0) == 40) i1 = i1 & 1;
 return i1 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder20preParseFunctionTypeERNS_7ElementE(i8, i5) {
 i8 = i8 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i9 + 4 | 0;
 i6 = i9;
 i1 = __ZN4wasm7Element4listEv(i5) | 0;
 i1 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i1 >> 2] >> 2] | 0) | 0;
 if ((i1 | 0) != (HEAP32[10220] | 0)) {
  if ((i1 | 0) == (HEAP32[10211] | 0)) {
   HEAP32[i7 >> 2] = 0;
   i4 = __ZN4wasm7Element4listEv(i5) | 0;
   if (!(HEAP8[HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] >> 0] | 0)) {
    i4 = __ZN4wasm7Element4listEv(i5) | 0;
    i4 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] | 0) | 0;
    HEAP32[i7 >> 2] = i4;
    i3 = 2;
   } else {
    i4 = __ZN4wasm4Name7fromIntEj(HEAP32[i8 + 44 >> 2] | 0) | 0;
    HEAP32[i7 >> 2] = i4;
    i3 = 1;
   }
   i1 = i8 + 36 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i8 + 40 >> 2] | 0)) __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i8 + 32 | 0, i7); else {
    HEAP32[i2 >> 2] = i4;
    HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 4;
   }
   i4 = i8 + 44 | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
   while (1) {
    if (i3 >>> 0 >= (__ZN4wasm7Element4sizeEv(i5) | 0) >>> 0) {
     i2 = 18;
     break;
    }
    i1 = __ZN4wasm7ElementixEj(i5, i3) | 0;
    i2 = __ZN4wasm7Element4listEv(i1) | 0;
    i2 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i2 >> 2] >> 2] | 0) | 0;
    if ((i2 | 0) == (HEAP32[10213] | 0)) {
     i2 = 13;
     break;
    }
    if ((i2 | 0) == (HEAP32[10220] | 0)) {
     i2 = 15;
     break;
    } else i3 = i3 + 1 | 0;
   }
   if ((i2 | 0) == 13) {
    i6 = __ZN4wasm7Element4listEv(i1) | 0;
    i6 = __ZN4wasm22SExpressionWasmBuilder16stringToWasmTypeEPKcbb(i8, __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i6 >> 2] | 0) + 4 >> 2] | 0) | 0, 0, 0) | 0;
    i8 = __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(i8 + 52 | 0, i7) | 0;
    HEAP32[i8 >> 2] = i6;
   } else if ((i2 | 0) == 15) {
    i1 = __ZN4wasm7Element4listEv(i1) | 0;
    i1 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0) | 0;
    HEAP32[i6 >> 2] = i1;
    i1 = HEAP32[i8 >> 2] | 0;
    if ((__ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i1 + 48 | 0, i6) | 0) == (i1 + 52 | 0)) {
     __ZNKSt3__18functionIFvvEEclEv(i8 + 8 | 0);
     i1 = HEAP32[i8 >> 2] | 0;
    }
    i6 = __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i1 + 48 | 0, i6) | 0;
    i6 = HEAP32[(HEAP32[i6 >> 2] | 0) + 4 >> 2] | 0;
    i8 = __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(i8 + 52 | 0, i7) | 0;
    HEAP32[i8 >> 2] = i6;
   } else if ((i2 | 0) == 18) {
    i8 = __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(i8 + 52 | 0, i7) | 0;
    HEAP32[i8 >> 2] = 0;
   }
  }
 } else __ZN4wasm22SExpressionWasmBuilder9parseTypeERNS_7ElementE(i8, i5);
 STACKTOP = i9;
 return;
}

function __ZN4wasm22SExpressionWasmBuilder11parseMemoryERNS_7ElementE(i12, i11) {
 i12 = i12 | 0;
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i10 = i13 + 8 | 0;
 i8 = i13 + 4 | 0;
 i9 = i13;
 i7 = __ZN4wasm7Element4listEv(i11) | 0;
 i7 = _atoi(__ZN4wasm7Element5c_strEv(HEAP32[(HEAP32[i7 >> 2] | 0) + 4 >> 2] | 0) | 0) | 0;
 HEAP32[(HEAP32[i12 >> 2] | 0) + 108 >> 2] = i7;
 L1 : do if ((__ZN4wasm7Element4sizeEv(i11) | 0) != 2) {
  i7 = __ZN4wasm7Element4listEv(i11) | 0;
  if (!(HEAP8[HEAP32[(HEAP32[i7 >> 2] | 0) + 8 >> 2] >> 0] | 0)) {
   i1 = __ZN4wasm7Element4listEv(i11) | 0;
   i1 = _atoi(__ZN4wasm7Element5c_strEv(HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] | 0) | 0) | 0;
   HEAP32[(HEAP32[i12 >> 2] | 0) + 112 >> 2] = i1;
   i1 = 3;
  } else i1 = 2;
  while (1) {
   if (i1 >>> 0 >= (__ZN4wasm7Element4sizeEv(i11) | 0) >>> 0) break L1;
   i5 = __ZN4wasm7ElementixEj(i11, i1) | 0;
   i7 = __ZN4wasm7Element4listEv(i5) | 0;
   i7 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i7 >> 2] >> 2] | 0) | 0;
   if ((i7 | 0) != (HEAP32[10215] | 0)) break;
   i2 = __ZN4wasm7Element4listEv(i5) | 0;
   i2 = __ZN4wasm7Element5c_strEv(HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] | 0) | 0;
   i4 = _malloc(_strlen(i2) | 0) | 0;
   HEAP32[i10 >> 2] = i4;
   L10 : while (1) {
    i3 = HEAP8[i2 >> 0] | 0;
    L12 : do switch (i3 << 24 >> 24) {
    case 0:
     {
      i2 = i4;
      break L10;
     }
    case 92:
     {
      i3 = HEAP8[i2 + 1 >> 0] | 0;
      switch (i3 << 24 >> 24) {
      case 34:
       {
        HEAP8[i4 >> 0] = 34;
        i2 = i2 + 2 | 0;
        break L12;
       }
      case 39:
       {
        HEAP8[i4 >> 0] = 39;
        i2 = i2 + 2 | 0;
        break L12;
       }
      case 92:
       {
        HEAP8[i4 >> 0] = 92;
        i2 = i2 + 2 | 0;
        break L12;
       }
      case 110:
       {
        HEAP8[i4 >> 0] = 10;
        i2 = i2 + 2 | 0;
        break L12;
       }
      case 116:
       {
        HEAP8[i4 >> 0] = 9;
        i2 = i2 + 2 | 0;
        break L12;
       }
      default:
       {
        i7 = ((__ZN4wasm5unhexEc(i3) | 0) << 4) + (__ZN4wasm5unhexEc(HEAP8[i2 + 2 >> 0] | 0) | 0) & 255;
        HEAP8[i4 >> 0] = i7;
        i2 = i2 + 3 | 0;
        break L12;
       }
      }
     }
    default:
     {
      HEAP8[i4 >> 0] = i3;
      i2 = i2 + 1 | 0;
     }
    } while (0);
    i4 = i4 + 1 | 0;
   }
   i7 = HEAP32[i12 >> 2] | 0;
   i5 = __ZN4wasm7Element4listEv(i5) | 0;
   i5 = _atoi(__ZN4wasm7Element5c_strEv(HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] | 0) | 0) | 0;
   HEAP32[i8 >> 2] = i5;
   i6 = HEAP32[i10 >> 2] | 0;
   i2 = i2 - i6 | 0;
   HEAP32[i9 >> 2] = i2;
   i3 = i7 + 120 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if (i4 >>> 0 < (HEAP32[i7 + 124 >> 2] | 0) >>> 0) {
    HEAP32[i4 >> 2] = i5;
    HEAP32[i4 + 4 >> 2] = i6;
    HEAP32[i4 + 8 >> 2] = i2;
    HEAP32[i3 >> 2] = i4 + 12;
   } else __ZNSt3__16vectorIN4wasm6Memory7SegmentENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJiRPciEEEvDpOT_(i7 + 116 | 0, i8, i10, i9);
   i1 = i1 + 1 | 0;
  }
  ___assert_fail(17669, 17087, 952, 17695);
 } while (0);
 STACKTOP = i13;
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i11, i10, i9) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i4 = i12 + 56 | 0;
 i3 = i12;
 i1 = i12 + 48 | 0;
 i6 = i12 + 40 | 0;
 i7 = i12 + 32 | 0;
 i8 = i12 + 24 | 0;
 i2 = i12 + 16 | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i10);
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i3, HEAP32[i10 >> 2] | 0);
 HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + (HEAP32[i3 + 8 >> 2] | 0);
 L1 : do switch (HEAP32[i3 + 12 >> 2] | 0) {
 case 0:
  {
   i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17parseAfterKeywordERNS3_4FragERPcPKc(i11, i3, i10, i9) | 0;
   break;
  }
 case 2:
  {
   i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseAfterIdentERNS3_4FragERPcPKc(i11, i3, i10, i9) | 0;
   break;
  }
 case 5:
 case 4:
 case 3:
  {
   i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9parseFragERNS3_4FragE(i11, i3) | 0;
   HEAP8[i1 >> 0] = 1;
   HEAP32[i1 + 4 >> 2] = i5;
   HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i4 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
   i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseExpressionENS3_17ExpressionElementERPcPKc(i11, i4, i10, i9) | 0;
   break;
  }
 case 6:
  {
   i1 = HEAP32[i3 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[10326] | 0)) {
    i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseAfterParenERPc(i11, i10) | 0;
    HEAP8[i6 >> 0] = 1;
    HEAP32[i6 + 4 >> 2] = i5;
    HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
    HEAP32[i4 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
    i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseExpressionENS3_17ExpressionElementERPcPKc(i11, i4, i10, i9) | 0;
    break L1;
   }
   if ((i1 | 0) == (HEAP32[10327] | 0)) {
    i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseAfterBraceERPc(i11, i10) | 0;
    HEAP8[i7 >> 0] = 1;
    HEAP32[i7 + 4 >> 2] = i5;
    HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
    HEAP32[i4 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
    i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseExpressionENS3_17ExpressionElementERPcPKc(i11, i4, i10, i9) | 0;
    break L1;
   }
   if ((i1 | 0) == (HEAP32[10328] | 0)) {
    i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseAfterCurlyERPc(i11, i10) | 0;
    HEAP8[i8 >> 0] = 1;
    HEAP32[i8 + 4 >> 2] = i5;
    HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
    HEAP32[i4 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
    i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseExpressionENS3_17ExpressionElementERPcPKc(i11, i4, i10, i9) | 0;
    break L1;
   } else _abort();
   break;
  }
 case 1:
  {
   i5 = HEAP32[i3 >> 2] | 0;
   HEAP8[i2 >> 0] = 0;
   HEAP32[i2 + 4 >> 2] = i5;
   HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i4 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseExpressionENS3_17ExpressionElementERPcPKc(i11, i4, i10, i9) | 0;
   break;
  }
 default:
  _abort();
 } while (0);
 STACKTOP = i12;
 return i5 | 0;
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(i1, i13, i14, i2, i3, i15, i12) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i15 = i15 | 0;
 i12 = i12 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i7 = i20 + 24 | 0;
 i10 = i20;
 i4 = i20 + 140 | 0;
 i19 = i20 + 16 | 0;
 i8 = i20 + 12 | 0;
 i16 = i20 + 8 | 0;
 i5 = i20 + 136 | 0;
 i21 = i20 + 4 | 0;
 i9 = i20 + 36 | 0;
 HEAP32[i19 >> 2] = i4;
 i18 = i19 + 4 | 0;
 HEAP32[i18 >> 2] = 220;
 i1 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 HEAP32[i16 >> 2] = i1;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i16, 43088) | 0;
 HEAP8[i5 >> 0] = 0;
 HEAP32[i21 >> 2] = HEAP32[i14 >> 2];
 i3 = HEAP32[i3 + 4 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i21 >> 2];
 if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i13, i7, i2, i16, i3, i15, i5, i1, i19, i8, i4 + 100 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] & 7](i1, 36549, 36559, i7) | 0;
  i2 = HEAP32[i8 >> 2] | 0;
  i4 = HEAP32[i19 >> 2] | 0;
  i1 = i2 - i4 | 0;
  if ((i1 | 0) > 98) {
   i1 = _malloc(i1 + 2 | 0) | 0;
   if (!i1) __ZSt17__throw_bad_allocv(); else {
    i11 = i1;
    i6 = i1;
   }
  } else {
   i11 = 0;
   i6 = i9;
  }
  if (!(HEAP8[i5 >> 0] | 0)) i1 = i6; else {
   HEAP8[i6 >> 0] = 45;
   i1 = i6 + 1 | 0;
  }
  i5 = i7 + 10 | 0;
  i6 = i7;
  while (1) {
   if (i4 >>> 0 >= i2 >>> 0) break;
   i3 = HEAP8[i4 >> 0] | 0;
   i2 = i7;
   while (1) {
    if ((i2 | 0) == (i5 | 0)) {
     i2 = i5;
     break;
    }
    if ((HEAP8[i2 >> 0] | 0) == i3 << 24 >> 24) break;
    i2 = i2 + 1 | 0;
   }
   HEAP8[i1 >> 0] = HEAP8[36549 + (i2 - i6) >> 0] | 0;
   i2 = HEAP32[i8 >> 2] | 0;
   i1 = i1 + 1 | 0;
   i4 = i4 + 1 | 0;
  }
  HEAP8[i1 >> 0] = 0;
  HEAP32[i10 >> 2] = i12;
  _sscanf(i9, 36560, i10) | 0;
  if (i11 | 0) _free(i11);
 }
 i1 = HEAP32[i13 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i13 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i13 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i1 = (i1 | 0) == 0;
 i2 = HEAP32[i14 >> 2] | 0;
 do if (i2) {
  if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1 : 0) {
   HEAP32[i14 >> 2] = 0;
   i17 = 27;
   break;
  }
  if (!i1) i17 = 28;
 } else i17 = 27; while (0);
 if ((i17 | 0) == 27 ? i1 : 0) i17 = 28;
 if ((i17 | 0) == 28) HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 2;
 i2 = HEAP32[i13 >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[i16 >> 2] | 0) | 0;
 i1 = HEAP32[i19 >> 2] | 0;
 HEAP32[i19 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i18 >> 2] & 255](i1);
 STACKTOP = i20;
 return i2 | 0;
}

function __ZN4wasm15Asm2WasmBuilder12checkLiteralEN6cashew3RefE(i3, i2, i4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var d1 = 0.0;
 do if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i4, 0) | 0, 41112) | 0) {
  i4 = __ZN6cashew3RefixEj(i4, 1) | 0;
  i4 = __ZN6cashew5Value10getIntegerEv(HEAP32[i4 >> 2] | 0) | 0;
  HEAP32[i3 >> 2] = 1;
  HEAP32[i3 + 8 >> 2] = i4;
 } else {
  if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i4, 0) | 0, 41148) | 0) {
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i4, 1) | 0, 41180) | 0 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 0) | 0, 41112) | 0 : 0) {
    i4 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 1) | 0;
    i4 = __ZN6cashew5Value9getNumberEv(HEAP32[i4 >> 2] | 0) | 0;
    d1 = +HEAPF64[i4 >> 3];
    HEAP32[i3 >> 2] = 4;
    HEAPF64[i3 + 8 >> 3] = d1;
    break;
   }
   if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i4, 1) | 0, 41184) | 0 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 0) | 0, 41112) | 0 : 0) {
    i2 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 1) | 0;
    i2 = __ZN6cashew5Value9getNumberEv(HEAP32[i2 >> 2] | 0) | 0;
    d1 = -+HEAPF64[i2 >> 3];
    if (__ZN4wasm12isSInteger32Ed(d1) | 0) {
     HEAP32[i3 >> 2] = 1;
     HEAP32[i3 + 8 >> 2] = ~~d1;
     break;
    }
    if (__ZN4wasm12isUInteger32Ed(d1) | 0) {
     HEAP32[i3 >> 2] = 1;
     HEAP32[i3 + 8 >> 2] = ~~d1 >>> 0;
     break;
    } else ___assert_fail(22625, 13478, 380, 22670);
   }
   if (((__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i4, 1) | 0, 41180) | 0 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 0) | 0, 41148) | 0 : 0) ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 1) | 0, 41184) | 0 : 0) ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 2) | 0, 0) | 0, 41112) | 0 : 0) {
    i4 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 2) | 0, 1) | 0;
    i4 = __ZN6cashew5Value9getNumberEv(HEAP32[i4 >> 2] | 0) | 0;
    d1 = -+HEAPF64[i4 >> 3];
    HEAP32[i3 >> 2] = 4;
    HEAPF64[i3 + 8 >> 3] = d1;
    break;
   }
   if (((__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i4, 1) | 0, 41184) | 0 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 0) | 0, 41148) | 0 : 0) ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 1) | 0, 41180) | 0 : 0) ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 2) | 0, 0) | 0, 41112) | 0 : 0) {
    i4 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i4, 2) | 0, 2) | 0, 1) | 0;
    i4 = __ZN6cashew5Value9getNumberEv(HEAP32[i4 >> 2] | 0) | 0;
    d1 = -+HEAPF64[i4 >> 3];
    HEAP32[i3 >> 2] = 4;
    HEAPF64[i3 + 8 >> 3] = d1;
    break;
   }
  }
  HEAP32[i3 >> 2] = 0;
  i4 = i3 + 8 | 0;
  HEAP32[i4 >> 2] = 0;
  HEAP32[i4 + 4 >> 2] = 0;
 } while (0);
 return;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner17visitCallIndirectEPNS_12CallIndirectE(i8, i13, i10) {
 i8 = i8 | 0;
 i13 = i13 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0, i12 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i5 = i14 + 84 | 0;
 i1 = i14 + 40 | 0;
 i12 = i14 + 80 | 0;
 i9 = i14 + 68 | 0;
 i11 = i14 + 16 | 0;
 i6 = i14;
 i7 = i14 + 64 | 0;
 __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i1, i13, HEAP32[i10 + 24 >> 2] | 0);
 if (!(HEAP32[i1 + 16 >> 2] | 0)) {
  i3 = __ZNK4wasm7Literal6geti32Ev(i1) | 0;
  i4 = i13 + 4 | 0;
  i2 = HEAP32[i4 >> 2] | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i3 >>> 0 < (HEAP32[i1 + 100 >> 2] | 0) - (HEAP32[i1 + 96 >> 2] | 0) >> 2 >>> 0) i2 = i1; else {
   i2 = HEAP32[i2 + 12 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i2, 20743);
   i2 = HEAP32[HEAP32[i4 >> 2] >> 2] | 0;
  }
  i1 = HEAP32[(HEAP32[i2 + 96 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  HEAP32[i12 >> 2] = i1;
  i12 = __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i2 + 84 | 0, i12) | 0;
  i12 = HEAP32[(HEAP32[i12 >> 2] | 0) + 32 >> 2] | 0;
  if (i12 | 0 ? (i12 | 0) != (HEAP32[HEAP32[i10 + 20 >> 2] >> 2] | 0) : 0) {
   i12 = HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 127](i12, 20766);
  }
  HEAP32[i9 >> 2] = 0;
  HEAP32[i9 + 4 >> 2] = 0;
  HEAP32[i9 + 8 >> 2] = 0;
  __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner17generateArgumentsERKNS4_IPNS_10ExpressionENS6_ISC_EEEES9_(i11, i13, i10 + 8 | 0, i9);
  if (!(HEAP32[i11 + 16 >> 2] | 0)) {
   i13 = HEAP32[i4 >> 2] | 0;
   HEAP32[i7 >> 2] = i1;
   HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
   __ZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEE(i6, i13, i5, i9);
   HEAP32[i8 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   HEAP32[i8 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
   HEAP32[i8 + 16 >> 2] = 0;
  } else {
   HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   HEAP32[i8 + 12 >> 2] = HEAP32[i11 + 12 >> 2];
   HEAP32[i8 + 16 >> 2] = HEAP32[i11 + 16 >> 2];
   HEAP32[i8 + 20 >> 2] = HEAP32[i11 + 20 >> 2];
  }
  __ZNSt3__113__vector_baseIN4wasm7LiteralENS_9allocatorIS2_EEED2Ev(i9);
 } else {
  HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
  HEAP32[i8 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
  HEAP32[i8 + 16 >> 2] = HEAP32[i1 + 16 >> 2];
  HEAP32[i8 + 20 >> 2] = HEAP32[i1 + 20 >> 2];
 }
 STACKTOP = i14;
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj(i11, i12, i5, i6, i4, i10) {
 i11 = i11 | 0;
 i12 = i12 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0, i8 = 0, i9 = 0;
 i1 = i12 + 44 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i8 = i12 + 24 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 i3 = i9;
 if (i2 >>> 0 < i9 >>> 0) {
  HEAP32[i1 >> 2] = i9;
  i7 = i3;
 } else i7 = i2;
 i1 = i10 & 24;
 L4 : do if (!i1) {
  i12 = i11;
  HEAP32[i12 >> 2] = 0;
  HEAP32[i12 + 4 >> 2] = 0;
  i12 = i11 + 8 | 0;
  HEAP32[i12 >> 2] = -1;
  HEAP32[i12 + 4 >> 2] = -1;
 } else {
  if ((i4 | 0) == 1 & (i1 | 0) == 24) {
   i12 = i11;
   HEAP32[i12 >> 2] = 0;
   HEAP32[i12 + 4 >> 2] = 0;
   i12 = i11 + 8 | 0;
   HEAP32[i12 >> 2] = -1;
   HEAP32[i12 + 4 >> 2] = -1;
   break;
  }
  L10 : do switch (i4 | 0) {
  case 0:
   {
    i1 = 0;
    i2 = 0;
    break;
   }
  case 1:
   if (!(i10 & 8)) {
    i2 = i3 - (HEAP32[i12 + 20 >> 2] | 0) | 0;
    i1 = i2;
    i2 = ((i2 | 0) < 0) << 31 >> 31;
    break L10;
   } else {
    i2 = (HEAP32[i12 + 12 >> 2] | 0) - (HEAP32[i12 + 8 >> 2] | 0) | 0;
    i1 = i2;
    i2 = ((i2 | 0) < 0) << 31 >> 31;
    break L10;
   }
  case 2:
   {
    i1 = i12 + 32 | 0;
    if (!(HEAP8[i1 >> 0] & 1)) i1 = i1 + 1 | 0; else i1 = HEAP32[i12 + 40 >> 2] | 0;
    i2 = i7 - i1 | 0;
    i1 = i2;
    i2 = ((i2 | 0) < 0) << 31 >> 31;
    break;
   }
  default:
   {
    i12 = i11;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    i12 = i11 + 8 | 0;
    HEAP32[i12 >> 2] = -1;
    HEAP32[i12 + 4 >> 2] = -1;
    break L4;
   }
  } while (0);
  i2 = _i64Add(i1 | 0, i2 | 0, i5 | 0, i6 | 0) | 0;
  i3 = tempRet0;
  if ((i3 | 0) >= 0) {
   i1 = i12 + 32 | 0;
   if (!(HEAP8[i1 >> 0] & 1)) i1 = i1 + 1 | 0; else i1 = HEAP32[i12 + 40 >> 2] | 0;
   i6 = i7 - i1 | 0;
   i5 = ((i6 | 0) < 0) << 31 >> 31;
   if (!((i5 | 0) < (i3 | 0) | (i5 | 0) == (i3 | 0) & i6 >>> 0 < i2 >>> 0)) {
    i1 = i10 & 8;
    if (!((i2 | 0) == 0 & (i3 | 0) == 0)) {
     if (i1 | 0 ? (HEAP32[i12 + 12 >> 2] | 0) == 0 : 0) {
      i12 = i11;
      HEAP32[i12 >> 2] = 0;
      HEAP32[i12 + 4 >> 2] = 0;
      i12 = i11 + 8 | 0;
      HEAP32[i12 >> 2] = -1;
      HEAP32[i12 + 4 >> 2] = -1;
      break;
     }
     if ((i10 & 16 | 0) != 0 & (i9 | 0) == 0) {
      i12 = i11;
      HEAP32[i12 >> 2] = 0;
      HEAP32[i12 + 4 >> 2] = 0;
      i12 = i11 + 8 | 0;
      HEAP32[i12 >> 2] = -1;
      HEAP32[i12 + 4 >> 2] = -1;
      break;
     }
    }
    if (i1 | 0) {
     HEAP32[i12 + 12 >> 2] = (HEAP32[i12 + 8 >> 2] | 0) + i2;
     HEAP32[i12 + 16 >> 2] = i7;
    }
    if (i10 & 16 | 0) HEAP32[i8 >> 2] = (HEAP32[i12 + 20 >> 2] | 0) + i2;
    i12 = i11;
    HEAP32[i12 >> 2] = 0;
    HEAP32[i12 + 4 >> 2] = 0;
    i12 = i11 + 8 | 0;
    HEAP32[i12 >> 2] = i2;
    HEAP32[i12 + 4 >> 2] = i3;
    break;
   }
  }
  i12 = i11;
  HEAP32[i12 >> 2] = 0;
  HEAP32[i12 + 4 >> 2] = 0;
  i12 = i11 + 8 | 0;
  HEAP32[i12 >> 2] = -1;
  HEAP32[i12 + 4 >> 2] = -1;
 } while (0);
 return;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE(i1, i10, i11, i4, i2, i12, i6) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 i6 = i6 | 0;
 var i3 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 i19 = i16 + 424 | 0;
 i17 = i16 + 24 | 0;
 i15 = i16 + 16 | 0;
 i5 = i16 + 8 | 0;
 i18 = i16 + 4 | 0;
 i3 = i16 + 428 | 0;
 i7 = i16;
 HEAP32[i15 >> 2] = i17;
 i14 = i15 + 4 | 0;
 HEAP32[i14 >> 2] = 220;
 i9 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i18 >> 2] = i9;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i18, 43120) | 0;
 HEAP8[i3 >> 0] = 0;
 i8 = HEAP32[i11 >> 2] | 0;
 HEAP32[i7 >> 2] = i8;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i19 >> 2] = HEAP32[i7 >> 2];
 i7 = i8;
 if (__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i10, i19, i4, i18, i2, i12, i3, i1, i15, i5, i17 + 400 | 0) | 0) {
  if (!(HEAP8[i6 >> 0] & 1)) HEAP8[i6 >> 0] = 0; else HEAP32[HEAP32[i6 + 8 >> 2] >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
  if (HEAP8[i3 >> 0] | 0) __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 31](i1, 45) | 0);
  i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 44 >> 2] & 31](i1, 48) | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  i2 = i4 + -4 | 0;
  i1 = HEAP32[i15 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i2 >>> 0) break;
   if ((HEAP32[i1 >> 2] | 0) != (i3 | 0)) break;
   i1 = i1 + 4 | 0;
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(i6, i1, i4) | 0;
 }
 i1 = HEAP32[i10 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i10 >> 2] = 0;
   i2 = 1;
   break;
  } else {
   i2 = (HEAP32[i10 >> 2] | 0) == 0;
   break;
  }
 } else i2 = 1; while (0);
 do if (i8) {
  i1 = HEAP32[i7 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i7 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 36 >> 2] & 127](i7) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i13 = 27;
   break;
  } else {
   HEAP32[i11 >> 2] = 0;
   i13 = 25;
   break;
  }
 } else i13 = 25; while (0);
 if ((i13 | 0) == 25 ? i2 : 0) i13 = 27;
 if ((i13 | 0) == 27) HEAP32[i12 >> 2] = HEAP32[i12 >> 2] | 2;
 i2 = HEAP32[i10 >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 HEAP32[i15 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i14 >> 2] & 255](i1);
 STACKTOP = i16;
 return i2 | 0;
}

function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[40160] | 0) == 0 ? ___cxa_guard_acquire(40160) | 0 : 0) {
  if ((HEAP8[40168] | 0) == 0 ? ___cxa_guard_acquire(40168) | 0 : 0) {
   i1 = 44144;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 44432);
   ___cxa_atexit(217, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(40168);
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44144, 10256) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44156, 10288) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44168, 10324) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44180, 10348) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44192, 10372) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44204, 10388) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44216, 10408) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44228, 10428) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44240, 10456) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44252, 10496) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44264, 10528) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44276, 10564) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44288, 10600) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44300, 10616) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44312, 10632) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44324, 10648) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44336, 10372) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44348, 10664) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44360, 10680) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44372, 10696) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44384, 10712) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44396, 10728) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44408, 10744) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44420, 10760) | 0;
  HEAP32[11108] = 44144;
  ___cxa_guard_release(40160);
 }
 return HEAP32[11108] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[40080] | 0) == 0 ? ___cxa_guard_acquire(40080) | 0 : 0) {
  if ((HEAP8[40088] | 0) == 0 ? ___cxa_guard_acquire(40088) | 0 : 0) {
   i1 = 43332;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 43620);
   ___cxa_atexit(213, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(40088);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43332, 35872) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43344, 35880) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43356, 35889) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43368, 35895) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43380, 35901) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43392, 35905) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43404, 35910) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43416, 35915) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43428, 35922) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43440, 35932) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43452, 35940) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43464, 35949) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43476, 35958) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43488, 35962) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43500, 35966) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43512, 35970) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43524, 35901) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43536, 35974) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43548, 35978) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43560, 35982) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43572, 35986) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43584, 35990) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43596, 35994) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43608, 35998) | 0;
  HEAP32[10905] = 43332;
  ___cxa_guard_release(40080);
 }
 return HEAP32[10905] | 0;
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE(i1, i10, i11, i4, i2, i12, i6) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 i6 = i6 | 0;
 var i3 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 i19 = i16 + 24 | 0;
 i17 = i16 + 32 | 0;
 i15 = i16 + 16 | 0;
 i5 = i16 + 8 | 0;
 i18 = i16 + 4 | 0;
 i3 = i16 + 28 | 0;
 i7 = i16;
 HEAP32[i15 >> 2] = i17;
 i14 = i15 + 4 | 0;
 HEAP32[i14 >> 2] = 220;
 i9 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i18 >> 2] = i9;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i18, 43088) | 0;
 HEAP8[i3 >> 0] = 0;
 i8 = HEAP32[i11 >> 2] | 0;
 HEAP32[i7 >> 2] = i8;
 i2 = HEAP32[i2 + 4 >> 2] | 0;
 HEAP32[i19 >> 2] = HEAP32[i7 >> 2];
 i7 = i8;
 if (__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i10, i19, i4, i18, i2, i12, i3, i1, i15, i5, i17 + 100 | 0) | 0) {
  if (!(HEAP8[i6 >> 0] & 1)) {
   HEAP8[i6 + 1 >> 0] = 0;
   HEAP8[i6 >> 0] = 0;
  } else {
   HEAP8[HEAP32[i6 + 8 >> 2] >> 0] = 0;
   HEAP32[i6 + 4 >> 2] = 0;
  }
  if (HEAP8[i3 >> 0] | 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 45) | 0);
  i3 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 48) | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  i2 = i4 + -1 | 0;
  i1 = HEAP32[i15 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i2 >>> 0) break;
   if ((HEAP8[i1 >> 0] | 0) != i3 << 24 >> 24) break;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(i6, i1, i4) | 0;
 }
 i1 = HEAP32[i10 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i10 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i1 = (i1 | 0) == 0;
 do if (i8) {
  if ((HEAP32[i7 + 12 >> 2] | 0) == (HEAP32[i7 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 36 >> 2] & 127](i7) | 0) == -1 : 0) {
   HEAP32[i11 >> 2] = 0;
   i13 = 22;
   break;
  }
  if (!i1) i13 = 23;
 } else i13 = 22; while (0);
 if ((i13 | 0) == 22 ? i1 : 0) i13 = 23;
 if ((i13 | 0) == 23) HEAP32[i12 >> 2] = HEAP32[i12 >> 2] | 2;
 i2 = HEAP32[i10 >> 2] | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
 i1 = HEAP32[i15 >> 2] | 0;
 HEAP32[i15 >> 2] = 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[i14 >> 2] & 255](i1);
 STACKTOP = i16;
 return i2 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner9visitHostEPNS_4HostE(i6, i2, i1) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i7;
 L1 : do switch (HEAP32[i1 + 8 >> 2] | 0) {
 case 0:
  {
   HEAP32[i6 >> 2] = 1;
   HEAP32[i6 + 8 >> 2] = 65536;
   HEAP32[i6 + 16 >> 2] = 0;
   break;
  }
 case 1:
  {
   i5 = HEAP32[(HEAP32[i2 + 4 >> 2] | 0) + 8 >> 2] | 0;
   HEAP32[i6 >> 2] = 1;
   HEAP32[i6 + 8 >> 2] = i5;
   HEAP32[i6 + 16 >> 2] = 0;
   break;
  }
 case 2:
  {
   __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i3, i2, HEAP32[HEAP32[i1 + 16 >> 2] >> 2] | 0);
   if (!(HEAP32[i3 + 16 >> 2] | 0)) {
    i4 = i2 + 4 | 0;
    i5 = HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] | 0;
    i3 = __ZNK4wasm7Literal6geti32Ev(i3) | 0;
    if (i3 & 65535 | 0) {
     i2 = HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i2, 21515);
    }
    if (i3 >>> 0 > 4294901759) {
     i2 = HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i2, 21546);
    }
    i2 = HEAP32[i4 >> 2] | 0;
    i1 = HEAP32[i2 + 8 >> 2] | 0;
    if (i1 >>> 0 >= ~i3 >>> 0) {
     i2 = HEAP32[i2 + 12 >> 2] | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i2, 21583);
     i2 = HEAP32[i4 >> 2] | 0;
     i1 = HEAP32[i2 + 8 >> 2] | 0;
    }
    i3 = i1 + i3 | 0;
    if (i3 >>> 0 > (HEAP32[(HEAP32[i2 >> 2] | 0) + 112 >> 2] | 0) >>> 0) {
     i1 = HEAP32[i2 + 12 >> 2] | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 127](i1, 21621);
     i1 = HEAP32[i4 >> 2] | 0;
     i2 = i1;
     i1 = HEAP32[i1 + 8 >> 2] | 0;
    }
    i2 = HEAP32[i2 + 12 >> 2] | 0;
    FUNCTION_TABLE_viii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 15](i2, i1, i3);
    HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] = i3;
    HEAP32[i6 >> 2] = 1;
    HEAP32[i6 + 8 >> 2] = i5;
    HEAP32[i6 + 16 >> 2] = 0;
   } else {
    HEAP32[i6 >> 2] = HEAP32[i3 >> 2];
    HEAP32[i6 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
    HEAP32[i6 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
    HEAP32[i6 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
    HEAP32[i6 + 16 >> 2] = HEAP32[i3 + 16 >> 2];
    HEAP32[i6 + 20 >> 2] = HEAP32[i3 + 20 >> 2];
   }
   break;
  }
 case 3:
  {
   i5 = (HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[10248] | 0);
   HEAP32[i6 >> 2] = 1;
   i1 = i6 + 8 | 0;
   if (i5) {
    HEAP32[i1 >> 2] = 1;
    HEAP32[i6 + 16 >> 2] = 0;
    break L1;
   } else {
    HEAP32[i1 >> 2] = 0;
    HEAP32[i6 + 16 >> 2] = 0;
    break L1;
   }
  }
 default:
  _abort();
 } while (0);
 STACKTOP = i7;
 return;
}

function __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(i17, i16, i12) {
 i17 = i17 | 0;
 i16 = i16 | 0;
 i12 = i12 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, i15 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i18;
 i10 = HEAP32[i12 >> 2] | 0;
 i1 = i10;
 i4 = 5381;
 while (1) {
  i3 = HEAP8[i1 >> 0] | 0;
  if (!(i3 << 24 >> 24)) break;
  i1 = i1 + 1 | 0;
  i4 = i3 << 24 >> 24 ^ i4 * 33;
 }
 i13 = i16 + 4 | 0;
 i14 = HEAP32[i13 >> 2] | 0;
 i11 = (i14 | 0) == 0;
 L5 : do if (!i11) {
  i8 = i14 + -1 | 0;
  i9 = (i8 & i14 | 0) == 0;
  if (i9) i3 = i8 & i4; else i3 = (i4 >>> 0) % (i14 >>> 0) | 0;
  i1 = HEAP32[(HEAP32[i16 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (!i1) i15 = 15; else while (1) {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i15 = 15;
    break L5;
   }
   i7 = HEAP32[i1 + 4 >> 2] | 0;
   if (i9) i7 = i7 & i8; else i7 = (i7 >>> 0) % (i14 >>> 0) | 0;
   if ((i7 | 0) != (i3 | 0)) {
    i15 = 15;
    break L5;
   }
   if (!(_strcmp(HEAP32[i1 + 8 >> 2] | 0, i10) | 0)) {
    i2 = 0;
    break;
   }
  }
 } else {
  i3 = 0;
  i15 = 15;
 } while (0);
 if ((i15 | 0) == 15) {
  __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE16__construct_nodeERKS2_j(i2, i16, i12, i4);
  i8 = i16 + 12 | 0;
  d5 = +(((HEAP32[i8 >> 2] | 0) + 1 | 0) >>> 0);
  d6 = +HEAPF32[i16 + 16 >> 2];
  do if (i11 | d5 > +(i14 >>> 0) * d6) {
   if (i14 >>> 0 > 2) i1 = (i14 + -1 & i14 | 0) == 0; else i1 = 0;
   i1 = (i1 & 1 | i14 << 1) ^ 1;
   i3 = ~~+Math_ceil(+(d5 / d6)) >>> 0;
   __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE6rehashEj(i16, i1 >>> 0 < i3 >>> 0 ? i3 : i1);
   i1 = HEAP32[i13 >> 2] | 0;
   i3 = i1 + -1 | 0;
   if (!(i3 & i1)) {
    i7 = i1;
    i3 = i3 & i4;
    break;
   } else {
    i7 = i1;
    i3 = (i4 >>> 0) % (i1 >>> 0) | 0;
    break;
   }
  } else i7 = i14; while (0);
  i1 = HEAP32[(HEAP32[i16 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (!i1) {
   i15 = i16 + 8 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   HEAP32[i1 >> 2] = HEAP32[i15 >> 2];
   HEAP32[i15 >> 2] = i1;
   HEAP32[(HEAP32[i16 >> 2] | 0) + (i3 << 2) >> 2] = i15;
   i3 = HEAP32[i1 >> 2] | 0;
   if (i3) {
    i3 = HEAP32[i3 + 4 >> 2] | 0;
    i4 = i7 + -1 | 0;
    if (!(i4 & i7)) i3 = i3 & i4; else i3 = (i3 >>> 0) % (i7 >>> 0) | 0;
    HEAP32[(HEAP32[i16 >> 2] | 0) + (i3 << 2) >> 2] = i1;
   }
  } else {
   i16 = HEAP32[i2 >> 2] | 0;
   HEAP32[i16 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i1 >> 2] = i16;
   i1 = i16;
  }
  HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
  HEAP32[i2 >> 2] = 0;
  i2 = 1;
 }
 HEAP32[i17 >> 2] = i1;
 HEAP8[i17 + 4 >> 0] = i2;
 STACKTOP = i18;
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_(i4, i8, i1, i13, i14, i2, i9, i12) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i11 = i15;
 i3 = i1;
 while (1) {
  if ((i3 | 0) == (i13 | 0)) {
   i3 = i13;
   break;
  }
  if (!(HEAP8[i3 >> 0] | 0)) break;
  i3 = i3 + 1 | 0;
 }
 HEAP32[i12 >> 2] = i2;
 HEAP32[i14 >> 2] = i1;
 i7 = i9;
 i10 = i4 + 8 | 0;
 L6 : while (1) {
  if ((i2 | 0) == (i9 | 0) | (i1 | 0) == (i13 | 0)) {
   i3 = 34;
   break;
  }
  i6 = i8;
  i5 = HEAP32[i6 + 4 >> 2] | 0;
  i4 = i11;
  HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i4 + 4 >> 2] = i5;
  i4 = i3;
  i5 = _uselocale(HEAP32[i10 >> 2] | 0) | 0;
  i6 = _mbsnrtowcs(i2, i14, i4 - i1 | 0, i7 - i2 >> 2, i8) | 0;
  if (i5 | 0) _uselocale(i5) | 0;
  switch (i6 | 0) {
  case -1:
   {
    i3 = 10;
    break L6;
   }
  case 0:
   {
    i1 = 2;
    i3 = 30;
    break L6;
   }
  default:
   {}
  }
  i2 = (HEAP32[i12 >> 2] | 0) + (i6 << 2) | 0;
  HEAP32[i12 >> 2] = i2;
  if ((i2 | 0) == (i9 | 0)) {
   i3 = 31;
   break;
  }
  i1 = HEAP32[i14 >> 2] | 0;
  if ((i3 | 0) == (i13 | 0)) i3 = i13; else {
   i3 = _uselocale(HEAP32[i10 >> 2] | 0) | 0;
   i1 = _mbrtowc(i2, i1, 1, i8) | 0;
   if (i3 | 0) _uselocale(i3) | 0;
   if (i1 | 0) {
    i1 = 2;
    i3 = 30;
    break;
   }
   HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 4;
   i1 = (HEAP32[i14 >> 2] | 0) + 1 | 0;
   HEAP32[i14 >> 2] = i1;
   i3 = i1;
   while (1) {
    if ((i3 | 0) == (i13 | 0)) {
     i3 = i13;
     break;
    }
    if (!(HEAP8[i3 >> 0] | 0)) break;
    i3 = i3 + 1 | 0;
   }
   i2 = HEAP32[i12 >> 2] | 0;
  }
 }
 do if ((i3 | 0) == 10) {
  L29 : while (1) {
   HEAP32[i12 >> 2] = i2;
   if ((i1 | 0) == (HEAP32[i14 >> 2] | 0)) {
    i3 = 20;
    break;
   }
   i3 = _uselocale(HEAP32[i10 >> 2] | 0) | 0;
   i2 = _mbrtowc(i2, i1, i4 - i1 | 0, i11) | 0;
   if (i3 | 0) _uselocale(i3) | 0;
   switch (i2 | 0) {
   case -1:
    {
     i3 = 16;
     break L29;
    }
   case -2:
    {
     i3 = 17;
     break L29;
    }
   case 0:
    {
     i1 = i1 + 1 | 0;
     break;
    }
   default:
    i1 = i1 + i2 | 0;
   }
   i2 = (HEAP32[i12 >> 2] | 0) + 4 | 0;
  }
  if ((i3 | 0) == 16) {
   HEAP32[i14 >> 2] = i1;
   i1 = 2;
   i3 = 30;
   break;
  } else if ((i3 | 0) == 17) {
   HEAP32[i14 >> 2] = i1;
   i1 = 1;
   i3 = 30;
   break;
  } else if ((i3 | 0) == 20) {
   HEAP32[i14 >> 2] = i1;
   i1 = (i1 | 0) != (i13 | 0) & 1;
   i3 = 30;
   break;
  }
 } else if ((i3 | 0) == 31) {
  i1 = HEAP32[i14 >> 2] | 0;
  i3 = 34;
 } while (0);
 if ((i3 | 0) != 30) if ((i3 | 0) == 34) i1 = (i1 | 0) != (i13 | 0) & 1;
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i4, i9, i12, i7, i10, i2, i3, i8, i13, i14, i11, i5) {
 i4 = i4 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i7 = i7 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i11 = i11 | 0;
 i5 = i5 | 0;
 var i1 = 0, i6 = 0;
 L1 : do if (i4 << 24 >> 24 == i2 << 24 >> 24) if (HEAP8[i9 >> 0] | 0) {
  HEAP8[i9 >> 0] = 0;
  i12 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i12 + 1;
  HEAP8[i12 >> 0] = 46;
  i12 = HEAP8[i8 >> 0] | 0;
  if ((((i12 & 1) == 0 ? (i12 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) != 0 ? (i1 = HEAP32[i14 >> 2] | 0, (i1 - i13 | 0) < 160) : 0) {
   i13 = HEAP32[i11 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   i1 = 0;
  } else i1 = 0;
 } else i1 = -1; else {
  if (i4 << 24 >> 24 == i3 << 24 >> 24 ? (i3 = HEAP8[i8 >> 0] | 0, ((i3 & 1) == 0 ? (i3 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) : 0) {
   if (!(HEAP8[i9 >> 0] | 0)) {
    i1 = -1;
    break;
   }
   i1 = HEAP32[i14 >> 2] | 0;
   if ((i1 - i13 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i11 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i11 >> 2] = 0;
   i1 = 0;
   break;
  }
  i2 = i5 + 32 | 0;
  i1 = i5;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) {
    i1 = i2;
    break;
   }
   if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) break;
   i1 = i1 + 1 | 0;
  }
  i2 = i1 - i5 | 0;
  if ((i2 | 0) > 31) i1 = -1; else {
   i3 = HEAP8[35270 + i2 >> 0] | 0;
   switch (i2 | 0) {
   case 24:
   case 25:
    {
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i1 | 0) != (i7 | 0) ? (HEAPU8[i1 + -1 >> 0] & 95 | 0) != (HEAPU8[i12 >> 0] & 127 | 0) : 0) {
      i1 = -1;
      break L1;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   case 23:
   case 22:
    {
     HEAP8[i12 >> 0] = 80;
     i1 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   default:
    {
     i1 = i3 & 95;
     if ((((i1 | 0) == (HEAP8[i12 >> 0] | 0) ? (HEAP8[i12 >> 0] = i1 | 128, HEAP8[i9 >> 0] | 0) : 0) ? (HEAP8[i9 >> 0] = 0, i12 = HEAP8[i8 >> 0] | 0, ((i12 & 1) == 0 ? (i12 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) : 0) ? (i6 = HEAP32[i14 >> 2] | 0, (i6 - i13 | 0) < 160) : 0) {
      i13 = HEAP32[i11 >> 2] | 0;
      HEAP32[i14 >> 2] = i6 + 4;
      HEAP32[i6 >> 2] = i13;
     }
     i14 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i14 + 1;
     HEAP8[i14 >> 0] = i3;
     if ((i2 | 0) > 21) {
      i1 = 0;
      break L1;
     }
     HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
     i1 = 0;
     break L1;
    }
   }
  }
 } while (0);
 return i1 | 0;
}

function __ZN6cashew12ValueBuilder10makeBinaryENS_3RefENS_7IStringES1_(i14, i15, i16) {
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i1 = i17 + 44 | 0;
 i2 = i17 + 40 | 0;
 i3 = i17 + 36 | 0;
 i6 = i17 + 32 | 0;
 i7 = i17 + 28 | 0;
 i8 = i17 + 24 | 0;
 i9 = i17 + 20 | 0;
 i10 = i17 + 16 | 0;
 i11 = i17 + 12 | 0;
 i12 = i17 + 8 | 0;
 i13 = i17 + 4 | 0;
 i4 = i17;
 i5 = HEAP32[i15 >> 2] | 0;
 do if ((i5 | 0) != (HEAP32[10341] | 0)) if ((i5 | 0) == (HEAP32[10330] | 0)) {
  i15 = __ZN6cashew12ValueBuilder12makeRawArrayEi(3) | 0;
  i13 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41100) | 0;
  HEAP32[i8 >> 2] = i13;
  HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
  i15 = __ZN6cashew5Value9push_backENS_3RefE(i15, i1) | 0;
  HEAP32[i9 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i9 >> 2];
  i15 = __ZN6cashew5Value9push_backENS_3RefE(i15, i1) | 0;
  HEAP32[i10 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i10 >> 2];
  i1 = __ZN6cashew5Value9push_backENS_3RefE(i15, i1) | 0;
  break;
 } else {
  i10 = __ZN6cashew12ValueBuilder12makeRawArrayEi(4) | 0;
  i9 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41072) | 0;
  HEAP32[i11 >> 2] = i9;
  HEAP32[i1 >> 2] = HEAP32[i11 >> 2];
  i11 = __ZN6cashew5Value9push_backENS_3RefE(i10, i1) | 0;
  i15 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i15) | 0;
  HEAP32[i12 >> 2] = i15;
  HEAP32[i1 >> 2] = HEAP32[i12 >> 2];
  i15 = __ZN6cashew5Value9push_backENS_3RefE(i11, i1) | 0;
  HEAP32[i13 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i13 >> 2];
  i15 = __ZN6cashew5Value9push_backENS_3RefE(i15, i1) | 0;
  HEAP32[i4 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
  i1 = __ZN6cashew5Value9push_backENS_3RefE(i15, i1) | 0;
  break;
 } else {
  i15 = __ZN6cashew12ValueBuilder12makeRawArrayEi(4) | 0;
  i13 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41052) | 0;
  HEAP32[i2 >> 2] = i13;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i15 = __ZN6cashew5Value9push_backENS_3RefE(i15, i1) | 0;
  i13 = __ZN6cashew5Arena5allocEv(41412) | 0;
  __ZN6cashew5Value4freeEv(i13);
  HEAP32[i13 >> 2] = 4;
  HEAP8[i13 + 8 >> 0] = 1;
  HEAP32[i3 >> 2] = i13;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  i15 = __ZN6cashew5Value9push_backENS_3RefE(i15, i1) | 0;
  HEAP32[i6 >> 2] = HEAP32[i14 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
  i15 = __ZN6cashew5Value9push_backENS_3RefE(i15, i1) | 0;
  HEAP32[i7 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i7 >> 2];
  i1 = __ZN6cashew5Value9push_backENS_3RefE(i15, i1) | 0;
 } while (0);
 STACKTOP = i17;
 return i1 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i8, i9, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i7 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i7 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i2 = HEAP32[i8 >> 2] | 0;
 do if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i3) {
   i5 = i2;
   i6 = 17;
   break;
  } else {
   i6 = 16;
   break;
  } else {
   HEAP32[i8 >> 2] = 0;
   i6 = 14;
   break;
  }
 } else i6 = 14; while (0);
 if ((i6 | 0) == 14) if (i3) i6 = 16; else {
  i5 = 0;
  i6 = 17;
 }
 L22 : do if ((i6 | 0) == 16) HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 6; else if ((i6 | 0) == 17) {
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 52 >> 2] & 31](i4, i1, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 4;
   break;
  }
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   i1 = HEAP32[i7 >> 2] | 0;
   if (!i1) i2 = 1; else i6 = 25;
  } else {
   HEAP32[i2 >> 2] = i3 + 4;
   i6 = 25;
  }
  do if ((i6 | 0) == 25) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i7 >> 2] = 0;
    i2 = 1;
    break;
   } else {
    i2 = (HEAP32[i7 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (i5) {
   i1 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i2) break L22; else break; else {
    HEAP32[i8 >> 2] = 0;
    i6 = 37;
    break;
   }
  } else i6 = 37; while (0);
  if ((i6 | 0) == 37 ? !i2 : 0) break;
  HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 2;
 } while (0);
 return;
}

function __ZN4wasm22SExpressionWasmBuilder8makeLoopERNS_7ElementE(i8, i7) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i11 + 12 | 0;
 i2 = i11;
 i10 = __ZN10MixedArena5allocIN4wasm4LoopEEEPT_v(HEAP32[i8 + 4 >> 2] | 0) | 0;
 i9 = __ZN4wasm7Element4listEv(i7) | 0;
 if ((HEAP8[HEAP32[(HEAP32[i9 >> 2] | 0) + 4 >> 2] >> 0] | 0) == 0 ? (i9 = __ZN4wasm7Element4listEv(i7) | 0, (HEAP8[HEAP32[(HEAP32[i9 >> 2] | 0) + 8 >> 2] >> 0] | 0) == 0) : 0) {
  i1 = __ZN4wasm7Element4listEv(i7) | 0;
  i1 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0) | 0;
  HEAP32[i10 + 8 >> 2] = i1;
  i1 = 2;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 17618, 8);
  i9 = __ZN4wasm22SExpressionWasmBuilder15getPrefixedNameENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i8, i1) | 0;
  HEAP32[i10 + 8 >> 2] = i9;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
  i1 = 1;
 }
 i9 = __ZN4wasm7ElementixEj(i7, i1) | 0;
 i6 = i10 + 12 | 0;
 if (!(HEAP8[i9 >> 0] | 0)) {
  i9 = __ZN4wasm7Element3strEv(__ZN4wasm7ElementixEj(i7, i1) | 0) | 0;
  HEAP32[i6 >> 2] = i9;
  i1 = i1 + 1 | 0;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i2, 17627, 7);
  i9 = __ZN4wasm22SExpressionWasmBuilder15getPrefixedNameENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i8, i2) | 0;
  HEAP32[i10 + 12 >> 2] = i9;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 }
 i4 = i8 + 92 | 0;
 i2 = i10 + 8 | 0;
 i9 = i8 + 96 | 0;
 i3 = HEAP32[i9 >> 2] | 0;
 i5 = i8 + 100 | 0;
 if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) {
  __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i4, i2);
  i2 = HEAP32[i9 >> 2] | 0;
 } else {
  HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
  i2 = (HEAP32[i9 >> 2] | 0) + 4 | 0;
  HEAP32[i9 >> 2] = i2;
 }
 if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i4, i6); else {
  HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + 4;
 }
 i4 = __ZN4wasm22SExpressionWasmBuilder14makeMaybeBlockERNS_7ElementEjj(i8, i7, i1, -1) | 0;
 HEAP32[i10 + 16 >> 2] = i4;
 i2 = HEAP32[i9 >> 2] | 0;
 i1 = i2 + -4 | 0;
 i3 = i2;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i8 = i3 + -4 | 0;
  HEAP32[i9 >> 2] = i8;
  i3 = i8;
 }
 i2 = i2 + -8 | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  i8 = i1 + -4 | 0;
  HEAP32[i9 >> 2] = i8;
  i1 = i8;
 }
 HEAP32[i10 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
 STACKTOP = i11;
 return i10 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseFunctionERPcPKc(i15, i14, i1) {
 i15 = i15 | 0;
 i14 = i14 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i16 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i9 = i13 + 56 | 0;
 i8 = i13 + 52 | 0;
 i2 = i13 + 16 | 0;
 i1 = i13 + 48 | 0;
 i7 = i13;
 i5 = i13 + 44 | 0;
 i6 = i13 + 40 | 0;
 i10 = i13 + 36 | 0;
 i12 = i13 + 32 | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i2, HEAP32[i14 >> 2] | 0);
 switch (HEAP32[i2 + 12 >> 2] | 0) {
 case 2:
  {
   HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + (HEAP32[i2 + 8 >> 2] | 0);
   i3 = HEAP32[i2 >> 2] | 0;
   break;
  }
 case 6:
  {
   if ((HEAP8[HEAP32[i2 >> 2] >> 0] | 0) == 40) {
    HEAP32[i2 >> 2] = 0;
    i3 = 0;
   } else i16 = 4;
   break;
  }
 default:
  i16 = 4;
 }
 if ((i16 | 0) == 4) ___assert_fail(23525, 23426, 400, 23570);
 HEAP32[i1 >> 2] = i3;
 HEAP32[i9 >> 2] = HEAP32[i1 >> 2];
 i4 = __ZN6cashew12ValueBuilder12makeFunctionENS_7IStringE(i9) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i14);
 i1 = HEAP32[i14 >> 2] | 0;
 if ((HEAP8[i1 >> 0] | 0) != 40) ___assert_fail(23584, 23426, 405, 23570);
 HEAP32[i14 >> 2] = i1 + 1;
 i2 = i7 + 12 | 0;
 i3 = i7 + 8 | 0;
 L11 : while (1) {
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i14);
  i1 = HEAP32[i14 >> 2] | 0;
  if ((HEAP8[i1 >> 0] | 0) == 41) {
   i11 = i1;
   break;
  }
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i7, i1);
  if ((HEAP32[i2 >> 2] | 0) != 2) {
   i16 = 11;
   break;
  }
  HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + (HEAP32[i3 >> 2] | 0);
  HEAP32[i5 >> 2] = i4;
  HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  __ZN6cashew12ValueBuilder24appendArgumentToFunctionENS_3RefENS_7IStringE(i8, i9);
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i14);
  i1 = HEAP32[i14 >> 2] | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 41:
   {
    i16 = 15;
    break L11;
   }
  case 44:
   break;
  default:
   {
    i16 = 14;
    break L11;
   }
  }
  HEAP32[i14 >> 2] = i1 + 1;
 }
 if ((i16 | 0) == 11) ___assert_fail(23596, 23426, 411, 23570); else if ((i16 | 0) == 14) _abort(); else if ((i16 | 0) == 15) i11 = i1;
 HEAP32[i14 >> 2] = i11 + 1;
 HEAP32[i10 >> 2] = i4;
 i16 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE19parseBracketedBlockERPc(i15, i14) | 0;
 HEAP32[i12 >> 2] = i16;
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i12 >> 2];
 __ZN6cashew12ValueBuilder15setBlockContentENS_3RefES1_(i8, i9);
 STACKTOP = i13;
 return i4 | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_(i4, i7, i1, i10, i14, i2, i9, i13) {
 i4 = i4 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i13 = i13 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i8 = 0, i11 = 0, i12 = 0, i15 = 0, i16 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i12 = i15;
 i8 = i15 + 8 | 0;
 i3 = i1;
 while (1) {
  if ((i3 | 0) == (i10 | 0)) {
   i3 = i10;
   break;
  }
  if (!(HEAP32[i3 >> 2] | 0)) break;
  i3 = i3 + 4 | 0;
 }
 HEAP32[i13 >> 2] = i2;
 HEAP32[i14 >> 2] = i1;
 i6 = i9;
 i11 = i4 + 8 | 0;
 L6 : while (1) {
  if ((i2 | 0) == (i9 | 0) | (i1 | 0) == (i10 | 0)) {
   i3 = 35;
   break;
  }
  i16 = i7;
  i5 = HEAP32[i16 + 4 >> 2] | 0;
  i4 = i12;
  HEAP32[i4 >> 2] = HEAP32[i16 >> 2];
  HEAP32[i4 + 4 >> 2] = i5;
  i4 = _uselocale(HEAP32[i11 >> 2] | 0) | 0;
  i5 = _wcsnrtombs(i2, i14, i3 - i1 >> 2, i6 - i2 | 0, i7) | 0;
  if (i4 | 0) _uselocale(i4) | 0;
  switch (i5 | 0) {
  case -1:
   {
    i3 = 10;
    break L6;
   }
  case 0:
   {
    i1 = 1;
    i3 = 32;
    break L6;
   }
  default:
   {}
  }
  i2 = (HEAP32[i13 >> 2] | 0) + i5 | 0;
  HEAP32[i13 >> 2] = i2;
  if ((i2 | 0) == (i9 | 0)) {
   i3 = 33;
   break;
  }
  if ((i3 | 0) == (i10 | 0)) {
   i1 = HEAP32[i14 >> 2] | 0;
   i3 = i10;
  } else {
   i1 = _uselocale(HEAP32[i11 >> 2] | 0) | 0;
   i2 = _wcrtomb(i8, 0, i7) | 0;
   if (i1 | 0) _uselocale(i1) | 0;
   if ((i2 | 0) == -1) {
    i1 = 2;
    i3 = 31;
    break;
   }
   if (i2 >>> 0 > (i6 - (HEAP32[i13 >> 2] | 0) | 0) >>> 0) {
    i1 = 1;
    i3 = 31;
    break;
   } else i1 = i8;
   while (1) {
    if (!i2) break;
    i5 = HEAP8[i1 >> 0] | 0;
    i16 = HEAP32[i13 >> 2] | 0;
    HEAP32[i13 >> 2] = i16 + 1;
    HEAP8[i16 >> 0] = i5;
    i2 = i2 + -1 | 0;
    i1 = i1 + 1 | 0;
   }
   i1 = (HEAP32[i14 >> 2] | 0) + 4 | 0;
   HEAP32[i14 >> 2] = i1;
   i3 = i1;
   while (1) {
    if ((i3 | 0) == (i10 | 0)) {
     i3 = i10;
     break;
    }
    if (!(HEAP32[i3 >> 2] | 0)) break;
    i3 = i3 + 4 | 0;
   }
   i2 = HEAP32[i13 >> 2] | 0;
  }
 }
 if ((i3 | 0) == 10) {
  HEAP32[i13 >> 2] = i2;
  while (1) {
   if ((i1 | 0) == (HEAP32[i14 >> 2] | 0)) break;
   i16 = HEAP32[i1 >> 2] | 0;
   i3 = _uselocale(HEAP32[i11 >> 2] | 0) | 0;
   i2 = _wcrtomb(i2, i16, i12) | 0;
   if (i3 | 0) _uselocale(i3) | 0;
   if ((i2 | 0) == -1) break;
   i2 = (HEAP32[i13 >> 2] | 0) + i2 | 0;
   HEAP32[i13 >> 2] = i2;
   i1 = i1 + 4 | 0;
  }
  HEAP32[i14 >> 2] = i1;
  i1 = 2;
  i3 = 32;
 } else if ((i3 | 0) == 31) i3 = 32; else if ((i3 | 0) == 33) {
  i1 = HEAP32[i14 >> 2] | 0;
  i3 = 35;
 }
 if ((i3 | 0) != 32) if ((i3 | 0) == 35) i1 = (i1 | 0) != (i10 | 0) & 1;
 STACKTOP = i15;
 return i1 | 0;
}

function __ZZ11instantiateEN19JSExternalInterface5storeEPN4wasm5StoreEjNS0_7LiteralE(i6, i7, i9, i8) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i9 = i9 | 0;
 i8 = i8 | 0;
 var d1 = 0.0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i2 = i10 + 32 | 0;
 i5 = i10 + 48 | 0;
 i3 = i10 + 16 | 0;
 i4 = i10;
 L1 : do if ((HEAP32[i8 >> 2] | 0) == 2) {
  HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  HEAP32[i5 + 12 >> 2] = HEAP32[i7 + 12 >> 2];
  HEAP32[i5 + 16 >> 2] = HEAP32[i7 + 16 >> 2];
  HEAP32[i5 + 20 >> 2] = HEAP32[i7 + 20 >> 2];
  HEAP32[i5 + 24 >> 2] = HEAP32[i7 + 24 >> 2];
  HEAP32[i5 + 8 >> 2] = 4;
  HEAP32[i5 + 4 >> 2] = 1;
  i11 = __ZNK4wasm7Literal6geti64Ev(i8) | 0;
  i7 = tempRet0;
  i8 = HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] | 0;
  HEAP32[i3 >> 2] = 1;
  HEAP32[i3 + 8 >> 2] = i11;
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
  HEAP32[i2 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
  FUNCTION_TABLE_viiii[i8 & 15](i6, i5, i9, i2);
  i8 = HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] | 0;
  HEAP32[i4 >> 2] = 1;
  HEAP32[i4 + 8 >> 2] = i7;
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
  HEAP32[i2 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
  FUNCTION_TABLE_viiii[i8 & 15](i6, i5, i9 + 4 | 0, i2);
 } else {
  i3 = HEAP32[i7 + 8 >> 2] | 0;
  if ((HEAP32[i7 + 16 >> 2] | 0) >>> 0 >= i3 >>> 0 ? (i3 + -1 & i9 | 0) == 0 : 0) {
   if (((HEAP32[i7 + 4 >> 2] | 0) + -3 | 0) >>> 0 < 2) switch (i3 | 0) {
   case 4:
    {
     +_emscripten_asm_const_did(3, i9 | 0, +(+__ZNK4wasm7Literal6getf32Ev(i8)));
     break L1;
    }
   case 8:
    {
     +_emscripten_asm_const_did(4, i9 | 0, +(+__ZNK4wasm7Literal6getf64Ev(i8)));
     break L1;
    }
   default:
    _abort();
   }
   switch (i3 | 0) {
   case 1:
    {
     _emscripten_asm_const_iii(27, i9 | 0, __ZNK4wasm7Literal6geti32Ev(i8) | 0) | 0;
     break L1;
    }
   case 2:
    {
     _emscripten_asm_const_iii(28, i9 | 0, __ZNK4wasm7Literal6geti32Ev(i8) | 0) | 0;
     break L1;
    }
   case 4:
    {
     _emscripten_asm_const_iii(2, i9 | 0, __ZNK4wasm7Literal6geti32Ev(i8) | 0) | 0;
     break L1;
    }
   default:
    _abort();
   }
  }
  i2 = ((HEAP32[i7 + 4 >> 2] | 0) + -3 | 0) >>> 0 < 2;
  if (i2) d1 = +__ZN4wasm7Literal8getFloatEv(i8); else {
   i11 = __ZN4wasm7Literal10getIntegerEv(i8) | 0;
   d1 = +(i11 >>> 0) + 4294967296.0 * +(tempRet0 | 0);
  }
  +_emscripten_asm_const_diiid(26, i9 | 0, i3 | 0, i2 & 1 | 0, +d1);
 } while (0);
 STACKTOP = i10;
 return;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS6_PvEE(i16, i15, i1) {
 i16 = i16 | 0;
 i15 = i15 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i9 = HEAP32[i1 + 8 >> 2] | 0;
 i2 = i9 * 33 ^ 5381;
 i14 = i1 + 4 | 0;
 HEAP32[i14 >> 2] = i2;
 i13 = i15 + 4 | 0;
 i7 = HEAP32[i13 >> 2] | 0;
 i12 = (i7 | 0) == 0;
 L1 : do if (!i12) {
  i10 = i7 + -1 | 0;
  i8 = (i10 & i7 | 0) == 0;
  if (i8) i3 = i10 & i2; else i3 = (i2 >>> 0) % (i7 >>> 0) | 0;
  i2 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (!i2) i11 = 12; else while (1) {
   i4 = HEAP32[i2 >> 2] | 0;
   if (!i4) {
    i11 = 12;
    break L1;
   }
   i2 = HEAP32[i4 + 4 >> 2] | 0;
   if (i8) i2 = i2 & i10; else i2 = (i2 >>> 0) % (i7 >>> 0) | 0;
   if ((i2 | 0) != (i3 | 0)) {
    i11 = 12;
    break L1;
   }
   if ((HEAP32[i4 + 8 >> 2] | 0) == (i9 | 0)) {
    i2 = 0;
    i1 = i4;
    break;
   } else i2 = i4;
  }
 } else {
  i3 = 0;
  i11 = 12;
 } while (0);
 if ((i11 | 0) == 12) {
  i8 = i15 + 12 | 0;
  d5 = +(((HEAP32[i8 >> 2] | 0) + 1 | 0) >>> 0);
  d6 = +HEAPF32[i15 + 16 >> 2];
  do if (i12 | d5 > +(i7 >>> 0) * d6) {
   if (i7 >>> 0 > 2) i2 = (i7 + -1 & i7 | 0) == 0; else i2 = 0;
   i4 = (i2 & 1 | i7 << 1) ^ 1;
   i2 = ~~+Math_ceil(+(d5 / d6)) >>> 0;
   __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE6rehashEj(i15, i4 >>> 0 < i2 >>> 0 ? i2 : i4);
   i4 = HEAP32[i13 >> 2] | 0;
   i2 = HEAP32[i14 >> 2] | 0;
   i3 = i4 + -1 | 0;
   if (!(i3 & i4)) {
    i7 = i4;
    i3 = i3 & i2;
    break;
   } else {
    i7 = i4;
    i3 = (i2 >>> 0) % (i4 >>> 0) | 0;
    break;
   }
  } while (0);
  i2 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (!i2) {
   i2 = i15 + 8 | 0;
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = i1;
   HEAP32[(HEAP32[i15 >> 2] | 0) + (i3 << 2) >> 2] = i2;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 | 0) {
    i2 = HEAP32[i2 + 4 >> 2] | 0;
    i3 = i7 + -1 | 0;
    if (!(i3 & i7)) i2 = i2 & i3; else i2 = (i2 >>> 0) % (i7 >>> 0) | 0;
    HEAP32[(HEAP32[i15 >> 2] | 0) + (i2 << 2) >> 2] = i1;
   }
  } else {
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = i1;
  }
  HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
  i2 = 1;
 }
 HEAP32[i16 >> 2] = i1;
 HEAP8[i16 + 4 >> 0] = i2;
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe(i1, i26, i21, i20, d9) {
 i1 = i1 | 0;
 i26 = i26 | 0;
 i21 = i21 | 0;
 i20 = i20 | 0;
 d9 = +d9;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 i12 = i23 + 304 | 0;
 i7 = i23 + 48 | 0;
 i6 = i23 + 32 | 0;
 i3 = i23 + 24 | 0;
 i2 = i23 + 8 | 0;
 i5 = i23;
 i10 = i23 + 308 | 0;
 i8 = i23 + 300 | 0;
 i11 = i23 + 72 | 0;
 i17 = i23 + 68 | 0;
 i16 = i23 + 64 | 0;
 i13 = i23 + 60 | 0;
 i14 = i23 + 56 | 0;
 i4 = i5;
 HEAP32[i4 >> 2] = 37;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(i5 + 1 | 0, 35519, HEAP32[i21 + 4 >> 2] | 0) | 0;
 HEAP32[i8 >> 2] = i10;
 i1 = __ZNSt3__16__clocEv() | 0;
 if (i4) {
  HEAP32[i2 >> 2] = HEAP32[i21 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d9;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i10, 30, i1, i5, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d9;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i10, 30, i1, i5, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i1 = __ZNSt3__16__clocEv() | 0;
  if (i4) {
   HEAP32[i6 >> 2] = HEAP32[i21 + 8 >> 2];
   HEAPF64[i6 + 8 >> 3] = d9;
   i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i8, i1, i5, i6) | 0;
  } else {
   HEAPF64[i7 >> 3] = d9;
   i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i8, i1, i5, i7) | 0;
  }
  i1 = HEAP32[i8 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i18 = i1;
   i24 = i1;
   i15 = i2;
  }
 } else {
  i18 = HEAP32[i8 >> 2] | 0;
  i24 = 0;
  i15 = i1;
 }
 i2 = i18 + i15 | 0;
 i3 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i18, i2, i21) | 0;
 if ((i18 | 0) != (i10 | 0)) {
  i1 = _malloc(i15 << 3) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i19 = i18;
   i22 = i1;
   i25 = i1;
  }
 } else {
  i19 = i10;
  i22 = i11;
  i25 = 0;
 }
 i1 = __ZNKSt3__18ios_base6getlocEv(i21) | 0;
 HEAP32[i13 >> 2] = i1;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i19, i3, i2, i22, i17, i16, i13);
 __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 HEAP32[i14 >> 2] = HEAP32[i26 >> 2];
 i19 = HEAP32[i17 >> 2] | 0;
 i1 = HEAP32[i16 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
 i1 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i12, i22, i19, i1, i21, i20) | 0;
 HEAP32[i26 >> 2] = i1;
 if (i25 | 0) _free(i25);
 _free(i24);
 STACKTOP = i23;
 return i1 | 0;
}

function __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(i17, i16, i11) {
 i17 = i17 | 0;
 i16 = i16 | 0;
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i18 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i18;
 i8 = HEAP32[i11 >> 2] | 0;
 i15 = i8 * 33 ^ 5381;
 i14 = i16 + 4 | 0;
 i7 = HEAP32[i14 >> 2] | 0;
 i13 = (i7 | 0) == 0;
 L1 : do if (!i13) {
  i9 = i7 + -1 | 0;
  i10 = (i9 & i7 | 0) == 0;
  if (i10) i3 = i9 & i15; else i3 = (i15 >>> 0) % (i7 >>> 0) | 0;
  i1 = HEAP32[(HEAP32[i16 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (!i1) i12 = 12; else while (1) {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i12 = 12;
    break L1;
   }
   i4 = HEAP32[i1 + 4 >> 2] | 0;
   if (i10) i4 = i4 & i9; else i4 = (i4 >>> 0) % (i7 >>> 0) | 0;
   if ((i4 | 0) != (i3 | 0)) {
    i12 = 12;
    break L1;
   }
   if ((HEAP32[i1 + 8 >> 2] | 0) == (i8 | 0)) {
    i2 = 0;
    break;
   }
  }
 } else {
  i3 = 0;
  i12 = 12;
 } while (0);
 if ((i12 | 0) == 12) {
  __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_j(i2, i16, i11, i15);
  i8 = i16 + 12 | 0;
  d5 = +(((HEAP32[i8 >> 2] | 0) + 1 | 0) >>> 0);
  d6 = +HEAPF32[i16 + 16 >> 2];
  do if (i13 | d5 > +(i7 >>> 0) * d6) {
   if (i7 >>> 0 > 2) i1 = (i7 + -1 & i7 | 0) == 0; else i1 = 0;
   i1 = (i1 & 1 | i7 << 1) ^ 1;
   i3 = ~~+Math_ceil(+(d5 / d6)) >>> 0;
   __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEj(i16, i1 >>> 0 < i3 >>> 0 ? i3 : i1);
   i1 = HEAP32[i14 >> 2] | 0;
   i3 = i1 + -1 | 0;
   if (!(i3 & i1)) {
    i7 = i1;
    i3 = i3 & i15;
    break;
   } else {
    i7 = i1;
    i3 = (i15 >>> 0) % (i1 >>> 0) | 0;
    break;
   }
  } while (0);
  i1 = HEAP32[(HEAP32[i16 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (!i1) {
   i15 = i16 + 8 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   HEAP32[i1 >> 2] = HEAP32[i15 >> 2];
   HEAP32[i15 >> 2] = i1;
   HEAP32[(HEAP32[i16 >> 2] | 0) + (i3 << 2) >> 2] = i15;
   i3 = HEAP32[i1 >> 2] | 0;
   if (i3) {
    i3 = HEAP32[i3 + 4 >> 2] | 0;
    i4 = i7 + -1 | 0;
    if (!(i4 & i7)) i3 = i3 & i4; else i3 = (i3 >>> 0) % (i7 >>> 0) | 0;
    HEAP32[(HEAP32[i16 >> 2] | 0) + (i3 << 2) >> 2] = i1;
   }
  } else {
   i16 = HEAP32[i2 >> 2] | 0;
   HEAP32[i16 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i1 >> 2] = i16;
   i1 = i16;
  }
  HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
  HEAP32[i2 >> 2] = 0;
  i2 = 1;
 }
 HEAP32[i17 >> 2] = i1;
 HEAP8[i17 + 4 >> 0] = i2;
 STACKTOP = i18;
 return;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS4_PvEE(i16, i15, i1) {
 i16 = i16 | 0;
 i15 = i15 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i9 = HEAP32[i1 + 8 >> 2] | 0;
 i2 = i9 * 33 ^ 5381;
 i14 = i1 + 4 | 0;
 HEAP32[i14 >> 2] = i2;
 i13 = i15 + 4 | 0;
 i7 = HEAP32[i13 >> 2] | 0;
 i12 = (i7 | 0) == 0;
 L1 : do if (!i12) {
  i10 = i7 + -1 | 0;
  i8 = (i10 & i7 | 0) == 0;
  if (i8) i3 = i10 & i2; else i3 = (i2 >>> 0) % (i7 >>> 0) | 0;
  i2 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (!i2) i11 = 12; else while (1) {
   i4 = HEAP32[i2 >> 2] | 0;
   if (!i4) {
    i11 = 12;
    break L1;
   }
   i2 = HEAP32[i4 + 4 >> 2] | 0;
   if (i8) i2 = i2 & i10; else i2 = (i2 >>> 0) % (i7 >>> 0) | 0;
   if ((i2 | 0) != (i3 | 0)) {
    i11 = 12;
    break L1;
   }
   if ((HEAP32[i4 + 8 >> 2] | 0) == (i9 | 0)) {
    i2 = 0;
    i1 = i4;
    break;
   } else i2 = i4;
  }
 } else {
  i3 = 0;
  i11 = 12;
 } while (0);
 if ((i11 | 0) == 12) {
  i8 = i15 + 12 | 0;
  d5 = +(((HEAP32[i8 >> 2] | 0) + 1 | 0) >>> 0);
  d6 = +HEAPF32[i15 + 16 >> 2];
  do if (i12 | d5 > +(i7 >>> 0) * d6) {
   if (i7 >>> 0 > 2) i2 = (i7 + -1 & i7 | 0) == 0; else i2 = 0;
   i4 = (i2 & 1 | i7 << 1) ^ 1;
   i2 = ~~+Math_ceil(+(d5 / d6)) >>> 0;
   __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEE6rehashEj(i15, i4 >>> 0 < i2 >>> 0 ? i2 : i4);
   i4 = HEAP32[i13 >> 2] | 0;
   i2 = HEAP32[i14 >> 2] | 0;
   i3 = i4 + -1 | 0;
   if (!(i3 & i4)) {
    i7 = i4;
    i3 = i3 & i2;
    break;
   } else {
    i7 = i4;
    i3 = (i2 >>> 0) % (i4 >>> 0) | 0;
    break;
   }
  } while (0);
  i2 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (!i2) {
   i2 = i15 + 8 | 0;
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = i1;
   HEAP32[(HEAP32[i15 >> 2] | 0) + (i3 << 2) >> 2] = i2;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 | 0) {
    i2 = HEAP32[i2 + 4 >> 2] | 0;
    i3 = i7 + -1 | 0;
    if (!(i3 & i7)) i2 = i2 & i3; else i2 = (i2 >>> 0) % (i7 >>> 0) | 0;
    HEAP32[(HEAP32[i15 >> 2] | 0) + (i2 << 2) >> 2] = i1;
   }
  } else {
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = i1;
  }
  HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
  i2 = 1;
 }
 HEAP32[i16 >> 2] = i1;
 HEAP8[i16 + 4 >> 0] = i2;
 return;
}

function __ZN4wasm15Asm2WasmBuilder8optimizeEv(i11) {
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i9 = i12 + 96 | 0;
 i10 = i12 + 72 | 0;
 i1 = i12 + 60 | 0;
 i2 = i12 + 48 | 0;
 i4 = i12 + 36 | 0;
 i5 = i12 + 24 | 0;
 i6 = i12 + 12 | 0;
 i7 = i12;
 HEAP32[i9 + 4 >> 2] = 0;
 HEAP32[i9 >> 2] = 2896;
 i8 = HEAP32[i11 >> 2] | 0;
 i3 = i8 + 88 | 0;
 i8 = HEAP32[i8 + 84 >> 2] | 0;
 while (1) {
  if ((i8 | 0) == (i3 | 0)) break;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i9 >> 2] | 0) + 12 >> 2] & 127](i9, HEAP32[i8 + 20 >> 2] | 0);
  i8 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(i8) | 0;
 }
 HEAP32[i10 >> 2] = HEAP32[i11 + 4 >> 2];
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 + 8 >> 2] = 0;
 HEAP32[i10 + 12 >> 2] = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 26910, 17);
 __ZN4wasm10PassRunner3addENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i10, i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i2, 27644, 19);
 __ZN4wasm10PassRunner3addENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i10, i2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i4, 24824, 12);
 __ZN4wasm10PassRunner3addENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i10, i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i5, 29143, 15);
 __ZN4wasm10PassRunner3addENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i10, i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i6, 29831, 14);
 __ZN4wasm10PassRunner3addENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i10, i6);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 if ((HEAP32[i11 + 12 >> 2] | 0) >>> 0 < 1024) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i7, 28379, 15);
  __ZN4wasm10PassRunner3addENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i10, i7);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
 }
 __ZN4wasm10PassRunner3runEPNS_6ModuleE(i10, HEAP32[i11 >> 2] | 0);
 __ZN4wasm10PassRunnerD2Ev(i10);
 STACKTOP = i12;
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce(i1, i26, i22, i21, d9) {
 i1 = i1 | 0;
 i26 = i26 | 0;
 i22 = i22 | 0;
 i21 = i21 | 0;
 d9 = +d9;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i23 = 0, i24 = 0, i25 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i12 = i18 + 76 | 0;
 i7 = i18 + 48 | 0;
 i6 = i18 + 32 | 0;
 i3 = i18 + 24 | 0;
 i2 = i18 + 8 | 0;
 i5 = i18;
 i10 = i18 + 138 | 0;
 i8 = i18 + 72 | 0;
 i11 = i18 + 80 | 0;
 i17 = i18 + 68 | 0;
 i16 = i18 + 64 | 0;
 i13 = i18 + 60 | 0;
 i14 = i18 + 56 | 0;
 i4 = i5;
 HEAP32[i4 >> 2] = 37;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(i5 + 1 | 0, 35519, HEAP32[i22 + 4 >> 2] | 0) | 0;
 HEAP32[i8 >> 2] = i10;
 i1 = __ZNSt3__16__clocEv() | 0;
 if (i4) {
  HEAP32[i2 >> 2] = HEAP32[i22 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d9;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i10, 30, i1, i5, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d9;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i10, 30, i1, i5, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i1 = __ZNSt3__16__clocEv() | 0;
  if (i4) {
   HEAP32[i6 >> 2] = HEAP32[i22 + 8 >> 2];
   HEAPF64[i6 + 8 >> 3] = d9;
   i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i8, i1, i5, i6) | 0;
  } else {
   HEAPF64[i7 >> 3] = d9;
   i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i8, i1, i5, i7) | 0;
  }
  i1 = HEAP32[i8 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i19 = i1;
   i23 = i1;
   i15 = i2;
  }
 } else {
  i19 = HEAP32[i8 >> 2] | 0;
  i23 = 0;
  i15 = i1;
 }
 i2 = i19 + i15 | 0;
 i3 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i19, i2, i22) | 0;
 if ((i19 | 0) != (i10 | 0)) {
  i1 = _malloc(i15 << 1) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i20 = i19;
   i24 = i1;
   i25 = i1;
  }
 } else {
  i20 = i10;
  i24 = i11;
  i25 = 0;
 }
 i19 = __ZNKSt3__18ios_base6getlocEv(i22) | 0;
 HEAP32[i13 >> 2] = i19;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i20, i3, i2, i24, i17, i16, i13);
 __ZNSt3__114__shared_count16__release_sharedEv(i19) | 0;
 HEAP32[i14 >> 2] = HEAP32[i26 >> 2];
 i20 = HEAP32[i17 >> 2] | 0;
 i26 = HEAP32[i16 >> 2] | 0;
 HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
 i26 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i12, i24, i20, i26, i22, i21) | 0;
 _free(i25);
 _free(i23);
 STACKTOP = i18;
 return i26 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(i1, i5, i6, i7, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i8 = 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  do if (i1) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i5 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i5 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  i2 = HEAP32[i6 >> 2] | 0;
  do if (i2) {
   i1 = HEAP32[i2 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i3) {
    i3 = i2;
    break;
   } else {
    i3 = i2;
    break L1;
   } else {
    HEAP32[i6 >> 2] = 0;
    i8 = 15;
    break;
   }
  } else i8 = 15; while (0);
  if ((i8 | 0) == 15) {
   i8 = 0;
   if (i3) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] & 31](i4, 8192, i1) | 0)) break;
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i2 >> 2] = i3 + 4;
   continue;
  }
 }
 i1 = HEAP32[i5 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i5 >> 2] = 0;
   i2 = 1;
   break;
  } else {
   i2 = (HEAP32[i5 >> 2] | 0) == 0;
   break;
  }
 } else i2 = 1; while (0);
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i8 = 39;
   break;
  } else {
   HEAP32[i6 >> 2] = 0;
   i8 = 37;
   break;
  }
 } else i8 = 37; while (0);
 if ((i8 | 0) == 37 ? i2 : 0) i8 = 39;
 if ((i8 | 0) == 39) HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 2;
 return;
}

function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i4, i9, i12, i7, i10, i2, i3, i8, i13, i14, i11, i5) {
 i4 = i4 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i7 = i7 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i11 = i11 | 0;
 i5 = i5 | 0;
 var i1 = 0, i6 = 0;
 L1 : do if ((i4 | 0) == (i2 | 0)) if (HEAP8[i9 >> 0] | 0) {
  HEAP8[i9 >> 0] = 0;
  i12 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i12 + 1;
  HEAP8[i12 >> 0] = 46;
  i12 = HEAP8[i8 >> 0] | 0;
  if ((((i12 & 1) == 0 ? (i12 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) != 0 ? (i1 = HEAP32[i14 >> 2] | 0, (i1 - i13 | 0) < 160) : 0) {
   i13 = HEAP32[i11 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   i1 = 0;
  } else i1 = 0;
 } else i1 = -1; else {
  if ((i4 | 0) == (i3 | 0) ? (i3 = HEAP8[i8 >> 0] | 0, ((i3 & 1) == 0 ? (i3 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) : 0) {
   if (!(HEAP8[i9 >> 0] | 0)) {
    i1 = -1;
    break;
   }
   i1 = HEAP32[i14 >> 2] | 0;
   if ((i1 - i13 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i11 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i11 >> 2] = 0;
   i1 = 0;
   break;
  }
  i2 = i5 + 128 | 0;
  i1 = i5;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) {
    i1 = i2;
    break;
   }
   if ((HEAP32[i1 >> 2] | 0) == (i4 | 0)) break;
   i1 = i1 + 4 | 0;
  }
  i2 = i1 - i5 | 0;
  i1 = i2 >> 2;
  if ((i2 | 0) <= 124) {
   i3 = HEAP8[35270 + i1 >> 0] | 0;
   switch (i1 | 0) {
   case 24:
   case 25:
    {
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i1 | 0) != (i7 | 0) ? (HEAPU8[i1 + -1 >> 0] & 95 | 0) != (HEAPU8[i12 >> 0] & 127 | 0) : 0) {
      i1 = -1;
      break L1;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   case 23:
   case 22:
    {
     HEAP8[i12 >> 0] = 80;
     break;
    }
   default:
    {
     i1 = i3 & 95;
     if ((((i1 | 0) == (HEAP8[i12 >> 0] | 0) ? (HEAP8[i12 >> 0] = i1 | 128, HEAP8[i9 >> 0] | 0) : 0) ? (HEAP8[i9 >> 0] = 0, i12 = HEAP8[i8 >> 0] | 0, ((i12 & 1) == 0 ? (i12 & 255) >>> 1 : HEAP32[i8 + 4 >> 2] | 0) | 0) : 0) ? (i6 = HEAP32[i14 >> 2] | 0, (i6 - i13 | 0) < 160) : 0) {
      i13 = HEAP32[i11 >> 2] | 0;
      HEAP32[i14 >> 2] = i6 + 4;
      HEAP32[i6 >> 2] = i13;
     }
    }
   }
   i14 = HEAP32[i10 >> 2] | 0;
   HEAP32[i10 >> 2] = i14 + 1;
   HEAP8[i14 >> 0] = i3;
   if ((i2 | 0) > 84) i1 = 0; else {
    HEAP32[i11 >> 2] = (HEAP32[i11 >> 2] | 0) + 1;
    i1 = 0;
   }
  } else i1 = -1;
 } while (0);
 return i1 | 0;
}

function _load_asm2wasm(i1) {
 i1 = i1 | 0;
 var d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8 + 24 | 0;
 i4 = i8 + 28 | 0;
 i7 = i8 + 4 | 0;
 i6 = i8;
 __ZL12prepare2wasmv();
 HEAP8[i4 >> 0] = 0;
 i1 = __ZN4wasm20Asm2WasmPreProcessor7processEPc(i4, i1) | 0;
 if (HEAP8[45016] | 0) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 14443) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEEC2Ev(i7);
 i3 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseToplevelEPc(i7, i1) | 0;
 i10 = __Znwj(164) | 0;
 _memset(i10 | 0, 0, 164) | 0;
 __ZN4wasm16AllocatingModuleC2Ev(i10);
 HEAP32[10255] = i10;
 i10 = _emscripten_asm_const_i(0) | 0;
 i9 = HEAP32[10255] | 0;
 HEAP32[i9 + 108 >> 2] = i10;
 i1 = HEAP8[i4 >> 0] | 0;
 HEAP32[i9 + 112 >> 2] = i1 << 24 >> 24 == 0 ? i10 : -1;
 if (HEAP8[45016] | 0) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 14501) | 0;
 i10 = __Znwj(124) | 0;
 __ZN4wasm15Asm2WasmBuilderC2ERNS_16AllocatingModuleEbi(i10, HEAP32[10255] | 0, i1 << 24 >> 24 != 0, HEAP32[10250] | 0);
 HEAP32[10251] = i10;
 HEAP32[i6 >> 2] = i3;
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 __ZN4wasm15Asm2WasmBuilder10processAsmEN6cashew3RefE(i10, i5);
 if (HEAP8[45016] | 0) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 14513) | 0;
 __ZN4wasm15Asm2WasmBuilder8optimizeEv(HEAP32[10251] | 0);
 if (HEAP8[45016] | 0) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 14528) | 0;
 i4 = HEAP32[10251] | 0;
 i1 = i4 + 52 | 0;
 i4 = HEAP32[i4 + 48 >> 2] | 0;
 L13 : while (1) {
  if ((i4 | 0) == (i1 | 0)) {
   i1 = 11;
   break;
  }
  L16 : do if (HEAP8[i4 + 28 >> 0] | 0) {
   d2 = +_emscripten_asm_const_dii(1, HEAP32[i4 + 32 >> 2] | 0, HEAP32[i4 + 36 >> 2] | 0);
   i3 = HEAP32[i4 + 20 >> 2] | 0;
   switch (HEAP32[i4 + 24 >> 2] | 0) {
   case 1:
    {
     _emscripten_asm_const_iid(2, i3 | 0, +d2) | 0;
     break L16;
    }
   case 3:
    {
     _emscripten_asm_const_iid(3, i3 | 0, +d2) | 0;
     break L16;
    }
   case 4:
    {
     _emscripten_asm_const_iid(4, i3 | 0, +d2) | 0;
     break L16;
    }
   default:
    {
     i1 = 17;
     break L13;
    }
   }
  } while (0);
  i4 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(i4) | 0;
 }
 if ((i1 | 0) == 11) {
  __ZNSt3__113__vector_baseINS_6vectorIN6cashew6ParserINS2_3RefENS2_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS7_EEEENS8_ISA_EEED2Ev(i7);
  STACKTOP = i8;
  return;
 } else if ((i1 | 0) == 17) _abort();
}

function __ZN4wasm11MergeBlocks10visitBlockEPNS_5BlockE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i14 = i15 + 4 | 0;
 i13 = i15;
 i12 = i2 + 12 | 0;
 i7 = i2 + 16 | 0;
 i8 = i14 + 4 | 0;
 i9 = i14 + 8 | 0;
 i10 = i14 + 8 | 0;
 i11 = (i12 | 0) == (i14 | 0);
 i1 = 0;
 while (1) {
  i2 = HEAP32[i12 >> 2] | 0;
  if (i1 >>> 0 >= (HEAP32[i7 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i5 = __ZN4wasm10Expression8dyn_castINS_5BlockEEEPT_v(HEAP32[i2 + (i1 << 2) >> 2] | 0) | 0;
  if (i5 | 0 ? (HEAP32[i5 + 8 >> 2] | 0) == 0 : 0) {
   HEAP32[i14 >> 2] = 0;
   HEAP32[i8 >> 2] = 0;
   HEAP32[i9 >> 2] = 0;
   i4 = 0;
   while (1) {
    if (i4 >>> 0 >= i1 >>> 0) break;
    i2 = (HEAP32[i12 >> 2] | 0) + (i4 << 2) | 0;
    i3 = HEAP32[i8 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i10 >> 2] | 0)) __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i14, i2); else {
     HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
     HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 4;
    }
    i4 = i4 + 1 | 0;
   }
   i6 = HEAP32[i5 + 16 >> 2] | 0;
   i4 = HEAP32[i5 + 12 >> 2] | 0;
   while (1) {
    if ((i4 | 0) == (i6 | 0)) break;
    i2 = HEAP32[i4 >> 2] | 0;
    HEAP32[i13 >> 2] = i2;
    i3 = HEAP32[i8 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i10 >> 2] | 0)) __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i14, i13); else {
     HEAP32[i3 >> 2] = i2;
     HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 4;
    }
    i4 = i4 + 4 | 0;
   }
   while (1) {
    i1 = i1 + 1 | 0;
    i2 = HEAP32[i12 >> 2] | 0;
    if (i1 >>> 0 >= (HEAP32[i7 >> 2] | 0) - i2 >> 2 >>> 0) break;
    i2 = i2 + (i1 << 2) | 0;
    i3 = HEAP32[i8 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i10 >> 2] | 0)) {
     __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i14, i2);
     continue;
    } else {
     HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
     HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 4;
     continue;
    }
   }
   if (!i11) __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(i12, HEAP32[i14 >> 2] | 0, HEAP32[i8 >> 2] | 0);
   __ZNSt3__113__vector_baseIPN4wasm10ExpressionENS_9allocatorIS3_EEED2Ev(i14);
   i1 = 0;
   continue;
  }
  i1 = i1 + 1 | 0;
 }
 STACKTOP = i15;
 return;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEEEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 do switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE10visitBlockEPNS_5BlockE(i2, i1);
   break;
  }
 case 2:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE7visitIfEPNS_2IfE(i2, i1);
   break;
  }
 case 3:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
   break;
  }
 case 4:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE10visitBreakEPNS_5BreakE(i2, i1);
   break;
  }
 case 5:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE11visitSwitchEPNS_6SwitchE(i2, i1);
   break;
  }
 case 6:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE9visitCallEPNS_4CallE(i2, i1);
   break;
  }
 case 7:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE15visitCallImportEPNS_10CallImportE(i2, i1);
   break;
  }
 case 8:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE17visitCallIndirectEPNS_12CallIndirectE(i2, i1);
   break;
  }
 case 20:
 case 19:
 case 13:
 case 9:
  break;
 case 10:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 11:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
   break;
  }
 case 12:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE10visitStoreEPNS_5StoreE(i2, i1);
   break;
  }
 case 14:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 15:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE11visitBinaryEPNS_6BinaryE(i2, i1);
   break;
  }
 case 16:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE11visitSelectEPNS_6SelectE(i2, i1);
   break;
  }
 case 17:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 8 | 0);
   break;
  }
 case 18:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE9visitHostEPNS_4HostE(i2, i1);
   break;
  }
 default:
  {}
 } while (0);
 return;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEEEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 do switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE10visitBlockEPNS_5BlockE(i2, i1);
   break;
  }
 case 2:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE7visitIfEPNS_2IfE(i2, i1);
   break;
  }
 case 3:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
   break;
  }
 case 4:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE10visitBreakEPNS_5BreakE(i2, i1);
   break;
  }
 case 5:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE11visitSwitchEPNS_6SwitchE(i2, i1);
   break;
  }
 case 6:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE9visitCallEPNS_4CallE(i2, i1);
   break;
  }
 case 7:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE15visitCallImportEPNS_10CallImportE(i2, i1);
   break;
  }
 case 8:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE17visitCallIndirectEPNS_12CallIndirectE(i2, i1);
   break;
  }
 case 20:
 case 19:
 case 13:
 case 9:
  break;
 case 10:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 11:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
   break;
  }
 case 12:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE10visitStoreEPNS_5StoreE(i2, i1);
   break;
  }
 case 14:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 15:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE11visitBinaryEPNS_6BinaryE(i2, i1);
   break;
  }
 case 16:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE11visitSelectEPNS_6SelectE(i2, i1);
   break;
  }
 case 17:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 8 | 0);
   break;
  }
 case 18:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE9visitHostEPNS_4HostE(i2, i1);
   break;
  }
 default:
  {}
 } while (0);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b(i15, i14, i6) {
 i15 = i15 | 0;
 i14 = i14 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i16;
 HEAP8[i15 >> 0] = 0;
 i1 = i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0;
 i2 = i1 + 16 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (!i3) {
  i1 = HEAP32[i1 + 72 >> 2] | 0;
  if (i1 | 0) __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  do if (!i6 ? (i5 = i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0, HEAP32[i5 + 4 >> 2] & 4096 | 0) : 0) {
   i5 = __ZNKSt3__18ios_base6getlocEv(i5) | 0;
   HEAP32[i4 >> 2] = i5;
   i5 = __ZNKSt3__16locale9use_facetERNS0_2idE(i4, 43088) | 0;
   __ZNSt3__16localeD2Ev(i4);
   i1 = HEAP32[i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
   i4 = i5 + 8 | 0;
   i5 = i1;
   i6 = (i1 | 0) == 0;
   i7 = i5 + 12 | 0;
   i8 = i5 + 16 | 0;
   i9 = i1;
   i2 = i1;
   i10 = i2 + 12 | 0;
   i11 = i2 + 16 | 0;
   i12 = i1;
   i13 = i1;
   while (1) {
    if (i6) {
     i2 = 0;
     i1 = 0;
     break;
    }
    if ((HEAP32[i7 >> 2] | 0) == (HEAP32[i8 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 36 >> 2] & 127](i5) | 0) == -1 : 0) {
     i2 = 0;
     i1 = 0;
     break;
    }
    i3 = HEAP32[i10 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i11 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = HEAPU8[i3 >> 0] | 0;
    if ((i3 & 255) << 24 >> 24 <= -1) break;
    if (!(HEAP16[(HEAP32[i4 >> 2] | 0) + (i3 << 24 >> 24 << 1) >> 1] & 8192)) break;
    i3 = HEAP32[i10 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i11 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i13 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
     continue;
    } else {
     HEAP32[i10 >> 2] = i3 + 1;
     continue;
    }
   }
   if (i1 | 0) {
    if ((HEAP32[i2 + 12 >> 2] | 0) != (HEAP32[i2 + 16 >> 2] | 0)) break;
    if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) != -1) break;
   }
   i12 = i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) | 0;
   i13 = i12 + 16 | 0;
   HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | (HEAP32[i12 + 24 >> 2] | 0) == 0 | 6;
  } while (0);
  HEAP8[i15 >> 0] = (HEAP32[i14 + (HEAP32[(HEAP32[i14 >> 2] | 0) + -12 >> 2] | 0) + 16 >> 2] | 0) == 0 & 1;
 } else HEAP32[i2 >> 2] = i3 | (HEAP32[i1 + 24 >> 2] | 0) == 0 | 4;
 STACKTOP = i16;
 return;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEEEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 do switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE10visitBlockEPNS_5BlockE(i2, i1);
   break;
  }
 case 2:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE7visitIfEPNS_2IfE(i2, i1);
   break;
  }
 case 3:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
   break;
  }
 case 4:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE10visitBreakEPNS_5BreakE(i2, i1);
   break;
  }
 case 5:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE11visitSwitchEPNS_6SwitchE(i2, i1);
   break;
  }
 case 6:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE9visitCallEPNS_4CallE(i2, i1);
   break;
  }
 case 7:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE15visitCallImportEPNS_10CallImportE(i2, i1);
   break;
  }
 case 8:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE17visitCallIndirectEPNS_12CallIndirectE(i2, i1);
   break;
  }
 case 20:
 case 19:
 case 13:
 case 9:
  break;
 case 10:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 11:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
   break;
  }
 case 12:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE10visitStoreEPNS_5StoreE(i2, i1);
   break;
  }
 case 14:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 15:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE11visitBinaryEPNS_6BinaryE(i2, i1);
   break;
  }
 case 16:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE11visitSelectEPNS_6SelectE(i2, i1);
   break;
  }
 case 17:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 8 | 0);
   break;
  }
 case 18:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE9visitHostEPNS_4HostE(i2, i1);
   break;
  }
 default:
  {}
 } while (0);
 return;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEEEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 do switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE10visitBlockEPNS_5BlockE(i2, i1);
   break;
  }
 case 2:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE7visitIfEPNS_2IfE(i2, i1);
   break;
  }
 case 3:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
   break;
  }
 case 4:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE10visitBreakEPNS_5BreakE(i2, i1);
   break;
  }
 case 5:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE11visitSwitchEPNS_6SwitchE(i2, i1);
   break;
  }
 case 6:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE9visitCallEPNS_4CallE(i2, i1);
   break;
  }
 case 7:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE15visitCallImportEPNS_10CallImportE(i2, i1);
   break;
  }
 case 8:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE17visitCallIndirectEPNS_12CallIndirectE(i2, i1);
   break;
  }
 case 20:
 case 19:
 case 13:
 case 9:
  break;
 case 10:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 11:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
   break;
  }
 case 12:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE10visitStoreEPNS_5StoreE(i2, i1);
   break;
  }
 case 14:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 15:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE11visitBinaryEPNS_6BinaryE(i2, i1);
   break;
  }
 case 16:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE11visitSelectEPNS_6SelectE(i2, i1);
   break;
  }
 case 17:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 8 | 0);
   break;
  }
 case 18:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE9visitHostEPNS_4HostE(i2, i1);
   break;
  }
 default:
  {}
 } while (0);
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd(i1, i24, i19, i18, d7) {
 i1 = i1 | 0;
 i24 = i24 | 0;
 i19 = i19 | 0;
 i18 = i18 | 0;
 d7 = +d7;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i25 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 i10 = i21 + 296 | 0;
 i5 = i21 + 32 | 0;
 i3 = i21 + 24 | 0;
 i2 = i21 + 8 | 0;
 i4 = i21;
 i8 = i21 + 300 | 0;
 i6 = i21 + 292 | 0;
 i9 = i21 + 64 | 0;
 i15 = i21 + 60 | 0;
 i14 = i21 + 56 | 0;
 i11 = i21 + 52 | 0;
 i12 = i21 + 48 | 0;
 i25 = i4;
 HEAP32[i25 >> 2] = 37;
 HEAP32[i25 + 4 >> 2] = 0;
 i25 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(i4 + 1 | 0, 49108, HEAP32[i19 + 4 >> 2] | 0) | 0;
 HEAP32[i6 >> 2] = i8;
 i1 = __ZNSt3__16__clocEv() | 0;
 if (i25) {
  HEAP32[i2 >> 2] = HEAP32[i19 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d7;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i8, 30, i1, i4, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d7;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i8, 30, i1, i4, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i2 = __ZNSt3__16__clocEv() | 0;
  HEAP32[i5 >> 2] = HEAP32[i19 + 8 >> 2];
  HEAPF64[i5 + 8 >> 3] = d7;
  i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i6, i2, i4, i5) | 0;
  i1 = HEAP32[i6 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i16 = i1;
   i22 = i1;
   i13 = i2;
  }
 } else {
  i16 = HEAP32[i6 >> 2] | 0;
  i22 = 0;
  i13 = i1;
 }
 i2 = i16 + i13 | 0;
 i3 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i16, i2, i19) | 0;
 if ((i16 | 0) != (i8 | 0)) {
  i1 = _malloc(i13 << 3) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i17 = i16;
   i20 = i1;
   i23 = i1;
  }
 } else {
  i17 = i8;
  i20 = i9;
  i23 = 0;
 }
 i25 = __ZNKSt3__18ios_base6getlocEv(i19) | 0;
 HEAP32[i11 >> 2] = i25;
 __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i17, i3, i2, i20, i15, i14, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i25) | 0;
 HEAP32[i12 >> 2] = HEAP32[i24 >> 2];
 i25 = HEAP32[i15 >> 2] | 0;
 i1 = HEAP32[i14 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
 i1 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i20, i25, i1, i19, i18) | 0;
 HEAP32[i24 >> 2] = i1;
 if (i23 | 0) _free(i23);
 _free(i22);
 STACKTOP = i21;
 return i1 | 0;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEEEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 do switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE10visitBlockEPNS_5BlockE(i2, i1);
   break;
  }
 case 2:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE7visitIfEPNS_2IfE(i2, i1);
   break;
  }
 case 3:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
   break;
  }
 case 4:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE10visitBreakEPNS_5BreakE(i2, i1);
   break;
  }
 case 5:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE11visitSwitchEPNS_6SwitchE(i2, i1);
   break;
  }
 case 6:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE9visitCallEPNS_4CallE(i2, i1);
   break;
  }
 case 7:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE15visitCallImportEPNS_10CallImportE(i2, i1);
   break;
  }
 case 8:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE17visitCallIndirectEPNS_12CallIndirectE(i2, i1);
   break;
  }
 case 20:
 case 19:
 case 13:
 case 9:
  break;
 case 10:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 11:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
   break;
  }
 case 12:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE10visitStoreEPNS_5StoreE(i2, i1);
   break;
  }
 case 14:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 15:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE11visitBinaryEPNS_6BinaryE(i2, i1);
   break;
  }
 case 16:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE11visitSelectEPNS_6SelectE(i2, i1);
   break;
  }
 case 17:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 8 | 0);
   break;
  }
 case 18:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE9visitHostEPNS_4HostE(i2, i1);
   break;
  }
 default:
  {}
 } while (0);
 return;
}

function __ZN4wasm11WasmVisitorINS_16PrintSExpressionEvE5visitEPNS_10ExpressionE(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i4;
 if (!i2) ___assert_fail(30470, 30223, 1222, 30475);
 do switch (HEAP32[i2 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZN4wasm16PrintSExpression10visitBlockEPNS_5BlockE(i3, i2);
   break;
  }
 case 2:
  {
   __ZN4wasm16PrintSExpression7visitIfEPNS_2IfE(i3, i2);
   break;
  }
 case 3:
  {
   __ZN4wasm16PrintSExpression9visitLoopEPNS_4LoopE(i3, i2);
   break;
  }
 case 4:
  {
   __ZN4wasm16PrintSExpression10visitBreakEPNS_5BreakE(i3, i2);
   break;
  }
 case 5:
  {
   __ZN4wasm16PrintSExpression11visitSwitchEPNS_6SwitchE(i3, i2);
   break;
  }
 case 6:
  {
   __ZN4wasm16PrintSExpression9visitCallEPNS_4CallE(i3, i2);
   break;
  }
 case 7:
  {
   __ZN4wasm16PrintSExpression15visitCallImportEPNS_10CallImportE(i3, i2);
   break;
  }
 case 8:
  {
   __ZN4wasm16PrintSExpression17visitCallIndirectEPNS_12CallIndirectE(i3, i2);
   break;
  }
 case 9:
  {
   __ZN4wasm16PrintSExpression13visitGetLocalEPNS_8GetLocalE(i3, i2);
   break;
  }
 case 10:
  {
   __ZN4wasm16PrintSExpression13visitSetLocalEPNS_8SetLocalE(i3, i2);
   break;
  }
 case 11:
  {
   __ZN4wasm16PrintSExpression9visitLoadEPNS_4LoadE(i3, i2);
   break;
  }
 case 12:
  {
   __ZN4wasm16PrintSExpression10visitStoreEPNS_5StoreE(i3, i2);
   break;
  }
 case 13:
  {
   i3 = HEAP32[i3 + 4 >> 2] | 0;
   i2 = i2 + 8 | 0;
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
   HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
   HEAP32[i1 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
   __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_7LiteralE(i3, i1) | 0;
   break;
  }
 case 14:
  {
   __ZN4wasm16PrintSExpression10visitUnaryEPNS_5UnaryE(i3, i2);
   break;
  }
 case 15:
  {
   __ZN4wasm16PrintSExpression11visitBinaryEPNS_6BinaryE(i3, i2);
   break;
  }
 case 16:
  {
   __ZN4wasm16PrintSExpression11visitSelectEPNS_6SelectE(i3, i2);
   break;
  }
 case 17:
  {
   __ZN4wasm16PrintSExpression11visitReturnEPNS_6ReturnE(i3, i2);
   break;
  }
 case 18:
  {
   __ZN4wasm16PrintSExpression9visitHostEPNS_4HostE(i3, i2);
   break;
  }
 case 19:
  {
   __ZN4wasm16PrintSExpression8visitNopEPNS_3NopE(i3, i2);
   break;
  }
 case 20:
  {
   __ZN4wasm16PrintSExpression16visitUnreachableEPNS_11UnreachableE(i3, i2);
   break;
  }
 default:
  {}
 } while (0);
 STACKTOP = i4;
 return;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEEEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 do switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE10visitBlockEPNS_5BlockE(i2, i1);
   break;
  }
 case 2:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE7visitIfEPNS_2IfE(i2, i1);
   break;
  }
 case 3:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
   break;
  }
 case 4:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE10visitBreakEPNS_5BreakE(i2, i1);
   break;
  }
 case 5:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE11visitSwitchEPNS_6SwitchE(i2, i1);
   break;
  }
 case 6:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE9visitCallEPNS_4CallE(i2, i1);
   break;
  }
 case 7:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE15visitCallImportEPNS_10CallImportE(i2, i1);
   break;
  }
 case 8:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE17visitCallIndirectEPNS_12CallIndirectE(i2, i1);
   break;
  }
 case 20:
 case 19:
 case 13:
 case 9:
  break;
 case 10:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 11:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
   break;
  }
 case 12:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE10visitStoreEPNS_5StoreE(i2, i1);
   break;
  }
 case 14:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
   break;
  }
 case 15:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE11visitBinaryEPNS_6BinaryE(i2, i1);
   break;
  }
 case 16:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE11visitSelectEPNS_6SelectE(i2, i1);
   break;
  }
 case 17:
  {
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 8 | 0);
   break;
  }
 case 18:
  {
   __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE9visitHostEPNS_4HostE(i2, i1);
   break;
  }
 default:
  {}
 } while (0);
 return;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd(i1, i24, i20, i19, d7) {
 i1 = i1 | 0;
 i24 = i24 | 0;
 i20 = i20 | 0;
 i19 = i19 | 0;
 d7 = +d7;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i21 = 0, i22 = 0, i23 = 0, i25 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 i10 = i16 + 68 | 0;
 i5 = i16 + 32 | 0;
 i3 = i16 + 24 | 0;
 i2 = i16 + 8 | 0;
 i4 = i16;
 i8 = i16 + 130 | 0;
 i6 = i16 + 64 | 0;
 i9 = i16 + 72 | 0;
 i15 = i16 + 60 | 0;
 i14 = i16 + 56 | 0;
 i11 = i16 + 52 | 0;
 i12 = i16 + 48 | 0;
 i25 = i4;
 HEAP32[i25 >> 2] = 37;
 HEAP32[i25 + 4 >> 2] = 0;
 i25 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj(i4 + 1 | 0, 49108, HEAP32[i20 + 4 >> 2] | 0) | 0;
 HEAP32[i6 >> 2] = i8;
 i1 = __ZNSt3__16__clocEv() | 0;
 if (i25) {
  HEAP32[i2 >> 2] = HEAP32[i20 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d7;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i8, 30, i1, i4, i2) | 0;
 } else {
  HEAPF64[i3 >> 3] = d7;
  i1 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i8, 30, i1, i4, i3) | 0;
 }
 if ((i1 | 0) > 29) {
  i2 = __ZNSt3__16__clocEv() | 0;
  HEAP32[i5 >> 2] = HEAP32[i20 + 8 >> 2];
  HEAPF64[i5 + 8 >> 3] = d7;
  i2 = __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i6, i2, i4, i5) | 0;
  i1 = HEAP32[i6 >> 2] | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i17 = i1;
   i21 = i1;
   i13 = i2;
  }
 } else {
  i17 = HEAP32[i6 >> 2] | 0;
  i21 = 0;
  i13 = i1;
 }
 i2 = i17 + i13 | 0;
 i3 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i17, i2, i20) | 0;
 if ((i17 | 0) != (i8 | 0)) {
  i1 = _malloc(i13 << 1) | 0;
  if (!i1) __ZSt17__throw_bad_allocv(); else {
   i18 = i17;
   i22 = i1;
   i23 = i1;
  }
 } else {
  i18 = i8;
  i22 = i9;
  i23 = 0;
 }
 i25 = __ZNKSt3__18ios_base6getlocEv(i20) | 0;
 HEAP32[i11 >> 2] = i25;
 __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i18, i3, i2, i22, i15, i14, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i25) | 0;
 HEAP32[i12 >> 2] = HEAP32[i24 >> 2];
 i24 = HEAP32[i15 >> 2] | 0;
 i25 = HEAP32[i14 >> 2] | 0;
 HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
 i25 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i22, i24, i25, i20, i19) | 0;
 _free(i23);
 _free(i21);
 STACKTOP = i16;
 return i25 | 0;
}

function __ZNSt3__110__stdinbufIcE9__getcharEb(i11, i14) {
 i11 = i11 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i13 = i16 + 16 | 0;
 i12 = i16 + 8 | 0;
 i8 = i16 + 4 | 0;
 i9 = i16;
 i3 = i11 + 52 | 0;
 if (HEAP8[i3 >> 0] | 0) {
  i2 = i11 + 48 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i14) {
   HEAP32[i2 >> 2] = -1;
   HEAP8[i3 >> 0] = 0;
  }
 } else {
  i1 = HEAP32[i11 + 44 >> 2] | 0;
  i1 = (i1 | 0) > 1 ? i1 : 1;
  i10 = i11 + 32 | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) >= (i1 | 0)) {
    i15 = 8;
    break;
   }
   i2 = _getc(HEAP32[i10 >> 2] | 0) | 0;
   if ((i2 | 0) == -1) {
    i1 = -1;
    break;
   }
   HEAP8[i13 + i3 >> 0] = i2;
   i3 = i3 + 1 | 0;
  }
  if ((i15 | 0) == 8) {
   do if (!(HEAP8[i11 + 53 >> 0] | 0)) {
    i5 = i11 + 40 | 0;
    i6 = i11 + 36 | 0;
    i7 = i12 + 1 | 0;
    L11 : while (1) {
     i17 = HEAP32[i5 >> 2] | 0;
     i3 = i17;
     i2 = HEAP32[i3 >> 2] | 0;
     i3 = HEAP32[i3 + 4 >> 2] | 0;
     i18 = HEAP32[i6 >> 2] | 0;
     i4 = i13 + i1 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 16 >> 2] & 15](i18, i17, i13, i4, i8, i12, i7, i9) | 0) {
     case 3:
      {
       i15 = 15;
       break L11;
      }
     case 2:
      {
       i15 = 17;
       break L11;
      }
     case 1:
      break;
     default:
      break L11;
     }
     i18 = HEAP32[i5 >> 2] | 0;
     HEAP32[i18 >> 2] = i2;
     HEAP32[i18 + 4 >> 2] = i3;
     if ((i1 | 0) == 8) {
      i15 = 17;
      break;
     }
     i2 = _getc(HEAP32[i10 >> 2] | 0) | 0;
     if ((i2 | 0) == -1) {
      i15 = 17;
      break;
     }
     HEAP8[i4 >> 0] = i2;
     i1 = i1 + 1 | 0;
    }
    if ((i15 | 0) == 15) HEAP8[i12 >> 0] = HEAP8[i13 >> 0] | 0; else if ((i15 | 0) == 17) {
     i1 = -1;
     break;
    }
    i15 = 18;
   } else {
    HEAP8[i12 >> 0] = HEAP8[i13 >> 0] | 0;
    i15 = 18;
   } while (0);
   L21 : do if ((i15 | 0) == 18) {
    if (i14) {
     i1 = HEAP8[i12 >> 0] | 0;
     HEAP32[i11 + 48 >> 2] = i1 & 255;
    } else {
     while (1) {
      if ((i1 | 0) <= 0) break;
      i1 = i1 + -1 | 0;
      if ((_ungetc(HEAPU8[i13 + i1 >> 0] | 0, HEAP32[i10 >> 2] | 0) | 0) == -1) {
       i1 = -1;
       break L21;
      }
     }
     i1 = HEAP8[i12 >> 0] | 0;
    }
    i1 = i1 & 255;
   } while (0);
  }
 }
 STACKTOP = i16;
 return i1 | 0;
}
function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i7, i8, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0;
 i1 = HEAP32[i6 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i6 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i6 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i2 = (i1 | 0) == 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i7 >> 2] = 0;
   i5 = 11;
   break;
  }
  if (i2) {
   i4 = i1;
   i5 = 13;
  } else i5 = 12;
 } else i5 = 11; while (0);
 if ((i5 | 0) == 11) if (i2) i5 = 12; else {
  i4 = 0;
  i5 = 13;
 }
 L16 : do if ((i5 | 0) == 12) HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 6; else if ((i5 | 0) == 13) {
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 31](i3, i1 & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 4;
   break;
  }
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   i1 = HEAP32[i6 >> 2] | 0;
   if (!i1) i1 = 0; else i5 = 21;
  } else {
   HEAP32[i2 >> 2] = i3 + 1;
   i5 = 21;
  }
  do if ((i5 | 0) == 21) if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i6 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i6 >> 2] | 0;
   break;
  } while (0);
  i1 = (i1 | 0) == 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
    HEAP32[i7 >> 2] = 0;
    i5 = 30;
    break;
   }
   if (i1) break L16;
  } else i5 = 30; while (0);
  if ((i5 | 0) == 30 ? !i1 : 0) break;
  HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 2;
 } while (0);
 return;
}

function __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS2_PvEE(i16, i15, i1) {
 i16 = i16 | 0;
 i15 = i15 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, d5 = 0.0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i9 = HEAP32[i1 + 8 >> 2] | 0;
 i2 = i9 * 33 ^ 5381;
 i14 = i1 + 4 | 0;
 HEAP32[i14 >> 2] = i2;
 i13 = i15 + 4 | 0;
 i7 = HEAP32[i13 >> 2] | 0;
 i12 = (i7 | 0) == 0;
 L1 : do if (!i12) {
  i10 = i7 + -1 | 0;
  i8 = (i10 & i7 | 0) == 0;
  if (i8) i3 = i10 & i2; else i3 = (i2 >>> 0) % (i7 >>> 0) | 0;
  i2 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (!i2) i11 = 12; else while (1) {
   i4 = HEAP32[i2 >> 2] | 0;
   if (!i4) {
    i11 = 12;
    break L1;
   }
   i2 = HEAP32[i4 + 4 >> 2] | 0;
   if (i8) i2 = i2 & i10; else i2 = (i2 >>> 0) % (i7 >>> 0) | 0;
   if ((i2 | 0) != (i3 | 0)) {
    i11 = 12;
    break L1;
   }
   if ((HEAP32[i4 + 8 >> 2] | 0) == (i9 | 0)) {
    i2 = 0;
    i1 = i4;
    break;
   } else i2 = i4;
  }
 } else {
  i3 = 0;
  i11 = 12;
 } while (0);
 if ((i11 | 0) == 12) {
  i8 = i15 + 12 | 0;
  d5 = +(((HEAP32[i8 >> 2] | 0) + 1 | 0) >>> 0);
  d6 = +HEAPF32[i15 + 16 >> 2];
  do if (i12 | d5 > +(i7 >>> 0) * d6) {
   if (i7 >>> 0 > 2) i2 = (i7 + -1 & i7 | 0) == 0; else i2 = 0;
   i4 = (i2 & 1 | i7 << 1) ^ 1;
   i2 = ~~+Math_ceil(+(d5 / d6)) >>> 0;
   __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEj(i15, i4 >>> 0 < i2 >>> 0 ? i2 : i4);
   i4 = HEAP32[i13 >> 2] | 0;
   i2 = HEAP32[i14 >> 2] | 0;
   i3 = i4 + -1 | 0;
   if (!(i3 & i4)) {
    i7 = i4;
    i3 = i3 & i2;
    break;
   } else {
    i7 = i4;
    i3 = (i2 >>> 0) % (i4 >>> 0) | 0;
    break;
   }
  } while (0);
  i2 = HEAP32[(HEAP32[i15 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (!i2) {
   i2 = i15 + 8 | 0;
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = i1;
   HEAP32[(HEAP32[i15 >> 2] | 0) + (i3 << 2) >> 2] = i2;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 | 0) {
    i2 = HEAP32[i2 + 4 >> 2] | 0;
    i3 = i7 + -1 | 0;
    if (!(i3 & i7)) i2 = i2 & i3; else i2 = (i2 >>> 0) % (i7 >>> 0) | 0;
    HEAP32[(HEAP32[i15 >> 2] | 0) + (i2 << 2) >> 2] = i1;
   }
  } else {
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   HEAP32[i2 >> 2] = i1;
  }
  HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
  i2 = 1;
 }
 HEAP32[i16 >> 2] = i1;
 HEAP8[i16 + 4 >> 0] = i2;
 return;
}

function __ZN4wasm15Asm2WasmBuilder16parseAsmBinaryOpEN6cashew7IStringENS1_3RefES3_P7AsmData(i10, i1, i4, i9, i3) {
 i10 = i10 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i9 = i9 | 0;
 i3 = i3 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i12 = i15 + 28 | 0;
 i2 = i15 + 24 | 0;
 i5 = i15 + 20 | 0;
 i6 = i15 + 16 | 0;
 i13 = i15 + 4 | 0;
 i14 = i15;
 i7 = HEAP32[i1 >> 2] | 0;
 i8 = i7;
 do if ((i7 | 0) != (HEAP32[10295] | 0)) if ((i7 | 0) != (HEAP32[10296] | 0)) if ((i7 | 0) != (HEAP32[10310] | 0)) if ((i7 | 0) != (HEAP32[10298] | 0)) if ((i7 | 0) != (HEAP32[10297] | 0)) if ((i7 | 0) != (HEAP32[10299] | 0)) if ((i7 | 0) != (HEAP32[10312] | 0)) if ((i7 | 0) != (HEAP32[10311] | 0)) if ((i7 | 0) != (HEAP32[10313] | 0)) if ((i7 | 0) != (HEAP32[10306] | 0)) if ((i7 | 0) != (HEAP32[10307] | 0)) {
  i4 = HEAP32[i4 >> 2] | 0;
  HEAP32[i2 >> 2] = i4;
  HEAP32[i12 >> 2] = HEAP32[i2 >> 2];
  i2 = (__ZN4wasm15Asm2WasmBuilder14detectWasmTypeEN6cashew3RefEP7AsmData(i10, i12, i3) | 0) == 1;
  HEAP32[i5 >> 2] = i4;
  HEAP32[i12 >> 2] = HEAP32[i5 >> 2];
  if (__ZN4wasm15Asm2WasmBuilder18isUnsignedCoercionEN6cashew3RefE(i10, i12) | 0) i1 = 1; else {
   HEAP32[i6 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i12 >> 2] = HEAP32[i6 >> 2];
   i1 = __ZN4wasm15Asm2WasmBuilder18isUnsignedCoercionEN6cashew3RefE(i10, i12) | 0;
  }
  if ((i7 | 0) == (HEAP32[10308] | 0)) {
   i11 = i2 ? (i1 ? 4 : 3) : 13;
   break;
  }
  if ((i7 | 0) == (HEAP32[10309] | 0)) {
   i11 = i2 & i1 ? 6 : 5;
   break;
  }
  if ((i7 | 0) == (HEAP32[10303] | 0)) {
   i11 = i2 ? (i1 ? 26 : 25) : 30;
   break;
  }
  if ((i7 | 0) == (HEAP32[10305] | 0)) {
   i11 = i2 ? (i1 ? 24 : 23) : 29;
   break;
  }
  if ((i7 | 0) == (HEAP32[10304] | 0)) {
   i11 = i2 ? (i1 ? 22 : 21) : 28;
   break;
  }
  if ((i7 | 0) == (HEAP32[10302] | 0)) {
   STACKTOP = i15;
   return (i2 ? (i1 ? 20 : 19) : 27) | 0;
  } else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i13, 22606, 18);
   HEAP32[i14 >> 2] = i8;
   HEAP32[i12 >> 2] = HEAP32[i14 >> 2];
   __ZN4wasmL8abort_onENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN6cashew7IStringE(i13, i12);
  }
 } else i11 = 18; else i11 = 17; else i11 = 11; else i11 = 12; else i11 = 10; else i11 = 9; else i11 = 8; else i11 = 7; else i11 = 2; else i11 = 1; else i11 = 0; while (0);
 STACKTOP = i15;
 return i11 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseAfterCurlyERPc(i12, i14) {
 i12 = i12 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i4 = i16 + 36 | 0;
 i3 = i16 + 32 | 0;
 i2 = i16 + 28 | 0;
 i11 = i16;
 i5 = i16 + 24 | 0;
 i6 = i16 + 20 | 0;
 i9 = i16 + 16 | 0;
 __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE6resizeEj(i12, (((HEAP32[i12 + 4 >> 2] | 0) - (HEAP32[i12 >> 2] | 0) | 0) / 12 | 0) + 1 | 0);
 i13 = __ZN6cashew12ValueBuilder10makeObjectEv() | 0;
 i7 = i11 + 12 | 0;
 i8 = i11 + 8 | 0;
 L1 : while (1) {
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i14);
  i1 = HEAP32[i14 >> 2] | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 0:
   {
    i15 = 3;
    break L1;
   }
  case 125:
   {
    i10 = i1;
    break L1;
   }
  default:
   {}
  }
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i11, i1);
  if ((HEAP32[i7 >> 2] & -2 | 0) != 2) {
   i15 = 5;
   break;
  }
  HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + (HEAP32[i8 >> 2] | 0);
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i14);
  i1 = HEAP32[i14 >> 2] | 0;
  if ((HEAP8[i1 >> 0] | 0) != 58) {
   i15 = 7;
   break;
  }
  HEAP32[i14 >> 2] = i1 + 1;
  i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i12, i14, 24513) | 0;
  HEAP32[i5 >> 2] = i13;
  HEAP32[i6 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i9 >> 2] = i1;
  HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
  __ZN6cashew12ValueBuilder14appendToObjectENS_3RefENS_7IStringES1_(i2, i3, i4);
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i14);
  i1 = HEAP32[i14 >> 2] | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 125:
   {
    i15 = 11;
    break L1;
   }
  case 44:
   break;
  default:
   {
    i15 = 10;
    break L1;
   }
  }
  HEAP32[i14 >> 2] = i1 + 1;
 }
 if ((i15 | 0) == 3) ___assert_fail(24401, 23426, 692, 24457); else if ((i15 | 0) == 5) ___assert_fail(24473, 23426, 695, 24457); else if ((i15 | 0) == 7) ___assert_fail(23940, 23426, 698, 24457); else if ((i15 | 0) == 10) _abort(); else if ((i15 | 0) == 11) i10 = i1;
 HEAP32[i14 >> 2] = i10 + 1;
 STACKTOP = i16;
 return i13 | 0;
}

function __ZNSt3__110__stdinbufIwE9__getcharEb(i11, i14) {
 i11 = i11 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i13 = i16 + 16 | 0;
 i12 = i16 + 8 | 0;
 i8 = i16 + 4 | 0;
 i9 = i16;
 i3 = i11 + 52 | 0;
 if (HEAP8[i3 >> 0] | 0) {
  i2 = i11 + 48 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i14) {
   HEAP32[i2 >> 2] = -1;
   HEAP8[i3 >> 0] = 0;
  }
 } else {
  i1 = HEAP32[i11 + 44 >> 2] | 0;
  i1 = (i1 | 0) > 1 ? i1 : 1;
  i10 = i11 + 32 | 0;
  i3 = 0;
  while (1) {
   if ((i3 | 0) >= (i1 | 0)) {
    i15 = 8;
    break;
   }
   i2 = _getc(HEAP32[i10 >> 2] | 0) | 0;
   if ((i2 | 0) == -1) {
    i1 = -1;
    break;
   }
   HEAP8[i13 + i3 >> 0] = i2;
   i3 = i3 + 1 | 0;
  }
  if ((i15 | 0) == 8) {
   do if (!(HEAP8[i11 + 53 >> 0] | 0)) {
    i5 = i11 + 40 | 0;
    i6 = i11 + 36 | 0;
    i7 = i12 + 4 | 0;
    L11 : while (1) {
     i17 = HEAP32[i5 >> 2] | 0;
     i3 = i17;
     i2 = HEAP32[i3 >> 2] | 0;
     i3 = HEAP32[i3 + 4 >> 2] | 0;
     i18 = HEAP32[i6 >> 2] | 0;
     i4 = i13 + i1 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 16 >> 2] & 15](i18, i17, i13, i4, i8, i12, i7, i9) | 0) {
     case 3:
      {
       i15 = 15;
       break L11;
      }
     case 2:
      {
       i15 = 17;
       break L11;
      }
     case 1:
      break;
     default:
      break L11;
     }
     i18 = HEAP32[i5 >> 2] | 0;
     HEAP32[i18 >> 2] = i2;
     HEAP32[i18 + 4 >> 2] = i3;
     if ((i1 | 0) == 8) {
      i15 = 17;
      break;
     }
     i2 = _getc(HEAP32[i10 >> 2] | 0) | 0;
     if ((i2 | 0) == -1) {
      i15 = 17;
      break;
     }
     HEAP8[i4 >> 0] = i2;
     i1 = i1 + 1 | 0;
    }
    if ((i15 | 0) == 15) HEAP32[i12 >> 2] = HEAP8[i13 >> 0]; else if ((i15 | 0) == 17) {
     i1 = -1;
     break;
    }
    i15 = 18;
   } else {
    HEAP32[i12 >> 2] = HEAP8[i13 >> 0];
    i15 = 18;
   } while (0);
   L21 : do if ((i15 | 0) == 18) {
    if (i14) {
     i1 = HEAP32[i12 >> 2] | 0;
     HEAP32[i11 + 48 >> 2] = i1;
     break;
    }
    while (1) {
     if ((i1 | 0) <= 0) break;
     i1 = i1 + -1 | 0;
     if ((_ungetc(HEAP8[i13 + i1 >> 0] | 0, HEAP32[i10 >> 2] | 0) | 0) == -1) {
      i1 = -1;
      break L21;
     }
    }
    i1 = HEAP32[i12 >> 2] | 0;
   } while (0);
  }
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZN4wasm15Asm2WasmBuilder13detectAsmTypeEN6cashew3RefEP7AsmData(i9, i5, i6) {
 i9 = i9 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i11 + 12 | 0;
 i1 = i11 + 8 | 0;
 i2 = i11 + 4 | 0;
 i3 = i11;
 do if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i5, 0) | 0, 41056) | 0) {
  i4 = __ZN6cashew3RefixEj(i5, 1) | 0;
  i4 = __ZN6cashew5Value10getIStringEv(HEAP32[i4 >> 2] | 0) | 0;
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  if (__ZNKSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(i6, i8) | 0) {
   i10 = 11;
   break;
  }
  i1 = i9 + 48 | 0;
  if ((__ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(i1, i8) | 0) == (i9 + 52 | 0)) ___assert_fail(21963, 13478, 271, 22683); else {
   i7 = (__ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEEixERSA_(i1, i8) | 0) + 4 | 0;
   i7 = __ZN4wasm13wasmToAsmTypeENS_8WasmTypeE(HEAP32[i7 >> 2] | 0) | 0;
   break;
  }
 } else if ((__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i5, 0) | 0, 41104) | 0 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i5, 1) | 0, 0) | 0, 41056) | 0 : 0) ? (i4 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i5, 1) | 0, 1) | 0, i4 = __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(i9 + 60 | 0, __ZN6cashew5Value10getIStringEv(HEAP32[i4 >> 2] | 0) | 0) | 0, (i4 | 0) != (i9 + 64 | 0)) : 0) i7 = HEAP32[i4 + 28 >> 2] | 0; else i10 = 11; while (0);
 if ((i10 | 0) == 11) {
  HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i9 + 80 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
  i7 = __Z10detectTypeN6cashew3RefEP7AsmDatabNS_7IStringE(i1, i6, 0, i8) | 0;
 }
 STACKTOP = i11;
 return i7 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(i2, i5, i6, i7, i1) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i8 = 0;
 i4 = i1 + 8 | 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  do if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
    HEAP32[i5 >> 2] = 0;
    i1 = 0;
    break;
   } else {
    i1 = HEAP32[i5 >> 2] | 0;
    break;
   }
  } else i1 = 0; while (0);
  i1 = (i1 | 0) == 0;
  i2 = HEAP32[i6 >> 2] | 0;
  do if (i2) {
   if ((HEAP32[i2 + 12 >> 2] | 0) != (HEAP32[i2 + 16 >> 2] | 0)) if (i1) break; else break L1;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) != -1) if (i1) break; else break L1; else {
    HEAP32[i6 >> 2] = 0;
    i8 = 12;
    break;
   }
  } else i8 = 12; while (0);
  if ((i8 | 0) == 12) {
   i8 = 0;
   if (i1) {
    i2 = 0;
    break;
   } else i2 = 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i3 >> 0] | 0;
  if ((i1 & 255) << 24 >> 24 <= -1) break;
  if (!(HEAP16[(HEAP32[i4 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) break;
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i2 >> 2] = i3 + 1;
   continue;
  }
 }
 i1 = HEAP32[i5 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i5 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i5 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i1 = (i1 | 0) == 0;
 do if (i2) {
  if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1 : 0) {
   HEAP32[i6 >> 2] = 0;
   i8 = 32;
   break;
  }
  if (!i1) i8 = 33;
 } else i8 = 32; while (0);
 if ((i8 | 0) == 32 ? i1 : 0) i8 = 33;
 if ((i8 | 0) == 33) HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 2;
 return;
}

function __ZNSt3__18ios_base4InitC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[1192] | 0;
 __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(42720, i3, 42776);
 HEAP32[10510] = 9112;
 HEAP32[10512] = 9132;
 HEAP32[10511] = 0;
 __ZNSt3__18ios_base4initEPv(42048, 42720);
 HEAP32[10530] = 0;
 HEAP32[10531] = -1;
 i2 = HEAP32[1162] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(42824, i2, 42784);
 HEAP32[10532] = 9192;
 HEAP32[10533] = 9212;
 __ZNSt3__18ios_base4initEPv(42132, 42824);
 HEAP32[10551] = 0;
 HEAP32[10552] = -1;
 i1 = HEAP32[1133] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(42872, i1, 42792);
 HEAP32[10553] = 9192;
 HEAP32[10554] = 9212;
 __ZNSt3__18ios_base4initEPv(42216, 42872);
 HEAP32[10572] = 0;
 HEAP32[10573] = -1;
 i4 = HEAP32[42212 + (HEAP32[(HEAP32[10553] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[10574] = 9192;
 HEAP32[10575] = 9212;
 __ZNSt3__18ios_base4initEPv(42300, i4);
 HEAP32[10593] = 0;
 HEAP32[10594] = -1;
 HEAP32[42040 + (HEAP32[(HEAP32[10510] | 0) + -12 >> 2] | 0) + 72 >> 2] = 42128;
 i4 = 42212 + (HEAP32[(HEAP32[10553] | 0) + -12 >> 2] | 0) + 4 | 0;
 HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 8192;
 HEAP32[42212 + (HEAP32[(HEAP32[10553] | 0) + -12 >> 2] | 0) + 72 >> 2] = 42128;
 __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(42920, i3, 42800);
 HEAP32[10595] = 9152;
 HEAP32[10597] = 9172;
 HEAP32[10596] = 0;
 __ZNSt3__18ios_base4initEPv(42388, 42920);
 HEAP32[10615] = 0;
 HEAP32[10616] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(42976, i2, 42808);
 HEAP32[10617] = 9232;
 HEAP32[10618] = 9252;
 __ZNSt3__18ios_base4initEPv(42472, 42976);
 HEAP32[10636] = 0;
 HEAP32[10637] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(43024, i1, 42816);
 HEAP32[10638] = 9232;
 HEAP32[10639] = 9252;
 __ZNSt3__18ios_base4initEPv(42556, 43024);
 HEAP32[10657] = 0;
 HEAP32[10658] = -1;
 i1 = HEAP32[42552 + (HEAP32[(HEAP32[10638] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[10659] = 9232;
 HEAP32[10660] = 9252;
 __ZNSt3__18ios_base4initEPv(42640, i1);
 HEAP32[10678] = 0;
 HEAP32[10679] = -1;
 HEAP32[42380 + (HEAP32[(HEAP32[10595] | 0) + -12 >> 2] | 0) + 72 >> 2] = 42468;
 i1 = 42552 + (HEAP32[(HEAP32[10638] | 0) + -12 >> 2] | 0) + 4 | 0;
 HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | 8192;
 HEAP32[42552 + (HEAP32[(HEAP32[10638] | 0) + -12 >> 2] | 0) + 72 >> 2] = 42468;
 return;
}

function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i1, i8, i9, i4, i2, i10, i7, i3) {
 i1 = i1 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i10 = i10 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0;
 HEAP32[i9 >> 2] = i1;
 HEAP32[i10 >> 2] = i4;
 i6 = i2;
 if (i3 & 2) if ((i6 - i4 | 0) < 3) i1 = 1; else {
  HEAP32[i10 >> 2] = i4 + 1;
  HEAP8[i4 >> 0] = -17;
  i5 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -69;
  i5 = HEAP32[i10 >> 2] | 0;
  HEAP32[i10 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -65;
  i5 = 4;
 } else i5 = 4;
 L4 : do if ((i5 | 0) == 4) {
  i1 = HEAP32[i9 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i8 >>> 0) {
    i1 = 0;
    break L4;
   }
   i3 = HEAP32[i1 >> 2] | 0;
   if (i3 >>> 0 > i7 >>> 0 | (i3 & -2048 | 0) == 55296) {
    i1 = 2;
    break L4;
   }
   do if (i3 >>> 0 >= 128) {
    if (i3 >>> 0 < 2048) {
     i1 = HEAP32[i10 >> 2] | 0;
     if ((i6 - i1 | 0) < 2) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 6 | 192;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    }
    i1 = HEAP32[i10 >> 2] | 0;
    i2 = i6 - i1 | 0;
    if (i3 >>> 0 < 65536) {
     if ((i2 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 12 | 224;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 6 & 63 | 128;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    } else {
     if ((i2 | 0) < 4) {
      i1 = 1;
      break L4;
     }
     HEAP32[i10 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 18 | 240;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 12 & 63 | 128;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 6 & 63 | 128;
     i5 = HEAP32[i10 >> 2] | 0;
     HEAP32[i10 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    }
   } else {
    i1 = HEAP32[i10 >> 2] | 0;
    if ((i6 - i1 | 0) < 1) {
     i1 = 1;
     break L4;
    }
    HEAP32[i10 >> 2] = i1 + 1;
    HEAP8[i1 >> 0] = i3;
   } while (0);
   i1 = (HEAP32[i9 >> 2] | 0) + 4 | 0;
   HEAP32[i9 >> 2] = i1;
  }
 } while (0);
 return i1 | 0;
}

function __ZN4wasm18ensureFunctionTypeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_6ModuleER10MixedArena(i12, i13, i3) {
 i12 = i12 | 0;
 i13 = i13 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i14 + 24 | 0;
 i1 = i14 + 12 | 0;
 i10 = i14 + 8 | 0;
 i2 = i14 + 4 | 0;
 i11 = i14;
 __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(i1, 13450, i12);
 __ZN6cashew7IStringC2EPKcb(i4, (HEAP8[i1 >> 0] & 1) == 0 ? i1 + 1 | 0 : HEAP32[i1 + 8 >> 2] | 0, 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
 i1 = i13 + 48 | 0;
 i4 = HEAP32[i4 >> 2] | 0;
 HEAP32[i10 >> 2] = i4;
 if ((__ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i1, i10) | 0) == (i13 + 52 | 0)) {
  i1 = __ZN10MixedArena5allocIN4wasm12FunctionTypeEEEPT_v(i3) | 0;
  HEAP32[i1 >> 2] = i4;
  i2 = HEAP16[i12 >> 1] | 0;
  if (!(i2 & 1)) {
   i10 = i12 + 8 | 0;
   i2 = (i2 & 65535) >>> 8 & 255;
  } else {
   i2 = i12 + 8 | 0;
   i10 = i2;
   i2 = HEAP8[HEAP32[i2 >> 2] >> 0] | 0;
  }
  i9 = i12 + 1 | 0;
  i4 = __ZN4wasm13sigToWasmTypeEc(i2) | 0;
  HEAP32[i1 + 4 >> 2] = i4;
  i4 = i1 + 8 | 0;
  i5 = i1 + 12 | 0;
  i6 = i1 + 16 | 0;
  i7 = i12 + 4 | 0;
  i8 = 1;
  while (1) {
   i2 = HEAP8[i12 >> 0] | 0;
   i3 = (i2 & 1) == 0;
   if (i3) i2 = (i2 & 255) >>> 1; else i2 = HEAP32[i7 >> 2] | 0;
   if (i8 >>> 0 >= i2 >>> 0) break;
   if (i3) i2 = i9; else i2 = HEAP32[i10 >> 2] | 0;
   i2 = __ZN4wasm13sigToWasmTypeEc(HEAP8[i2 + i8 >> 0] | 0) | 0;
   HEAP32[i11 >> 2] = i2;
   i3 = HEAP32[i5 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i6 >> 2] | 0) >>> 0) {
    HEAP32[i3 >> 2] = i2;
    HEAP32[i5 >> 2] = i3 + 4;
   } else __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i4, i11);
   i8 = i8 + 1 | 0;
  }
  __ZN4wasm6Module15addFunctionTypeEPNS_12FunctionTypeE(i13, i1);
 } else {
  HEAP32[i2 >> 2] = i4;
  i1 = __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixEOS2_(i1, i2) | 0;
  i1 = HEAP32[i1 >> 2] | 0;
 }
 STACKTOP = i14;
 return i1 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner10visitStoreEPNS_5StoreE(i1, i4, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i5 = i7 + 48 | 0;
 i3 = i7 + 24 | 0;
 i6 = i7;
 __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i3, i4, HEAP32[i2 + 20 >> 2] | 0);
 if (!(HEAP32[i3 + 16 >> 2] | 0)) {
  __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i6, i4, HEAP32[i2 + 24 >> 2] | 0);
  if (!(HEAP32[i6 + 16 >> 2] | 0)) {
   i4 = HEAP32[i4 + 4 >> 2] | 0;
   i8 = HEAP32[i4 + 12 >> 2] | 0;
   i9 = HEAP32[(HEAP32[i8 >> 2] | 0) + 12 >> 2] | 0;
   HEAP32[i5 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
   HEAP32[i5 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
   i4 = __ZN4wasm14ModuleInstance15getFinalAddressINS_5StoreEEEjPT_NS_7LiteralE(i4, i2, i5) | 0;
   HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   HEAP32[i5 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
   FUNCTION_TABLE_viiii[i9 & 15](i8, i2, i4, i5);
   HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i1 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i1 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   HEAP32[i1 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
   HEAP32[i1 + 16 >> 2] = HEAP32[i6 + 16 >> 2];
   HEAP32[i1 + 20 >> 2] = HEAP32[i6 + 20 >> 2];
  } else {
   HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i1 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i1 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   HEAP32[i1 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
   HEAP32[i1 + 16 >> 2] = HEAP32[i6 + 16 >> 2];
   HEAP32[i1 + 20 >> 2] = HEAP32[i6 + 20 >> 2];
  }
 } else {
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
  HEAP32[i1 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
  HEAP32[i1 + 16 >> 2] = HEAP32[i3 + 16 >> 2];
  HEAP32[i1 + 20 >> 2] = HEAP32[i3 + 20 >> 2];
 }
 STACKTOP = i7;
 return;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11visitSelectEPNS_6SelectE(i1, i6, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i5 = i7 + 48 | 0;
 i4 = i7 + 24 | 0;
 i2 = i7;
 __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i5, i6, HEAP32[i3 + 8 >> 2] | 0);
 if (!(HEAP32[i5 + 16 >> 2] | 0)) {
  __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i4, i6, HEAP32[i3 + 12 >> 2] | 0);
  if (!(HEAP32[i4 + 16 >> 2] | 0)) {
   __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i2, i6, HEAP32[i3 + 16 >> 2] | 0);
   if (!(HEAP32[i2 + 16 >> 2] | 0)) {
    i6 = (__ZNK4wasm7Literal6geti32Ev(i2) | 0) != 0;
    i6 = i6 ? i5 : i4;
    HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
    HEAP32[i1 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
    HEAP32[i1 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
    HEAP32[i1 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
    HEAP32[i1 + 16 >> 2] = HEAP32[i6 + 16 >> 2];
    HEAP32[i1 + 20 >> 2] = HEAP32[i6 + 20 >> 2];
   } else {
    HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
    HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
    HEAP32[i1 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
    HEAP32[i1 + 16 >> 2] = HEAP32[i2 + 16 >> 2];
    HEAP32[i1 + 20 >> 2] = HEAP32[i2 + 20 >> 2];
   }
  } else {
   HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i1 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
   HEAP32[i1 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
   HEAP32[i1 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
   HEAP32[i1 + 16 >> 2] = HEAP32[i4 + 16 >> 2];
   HEAP32[i1 + 20 >> 2] = HEAP32[i4 + 20 >> 2];
  }
 } else {
  HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  HEAP32[i1 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
  HEAP32[i1 + 16 >> 2] = HEAP32[i5 + 16 >> 2];
  HEAP32[i1 + 20 >> 2] = HEAP32[i5 + 20 >> 2];
 }
 STACKTOP = i7;
 return;
}

function _pop_arg_529(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0;
 L1 : do if (i3 >>> 0 <= 20) do switch (i3 | 0) {
 case 9:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 4;
   HEAP32[i2 >> 2] = i3;
   break L1;
  }
 case 10:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 4;
   i4 = i2;
   HEAP32[i4 >> 2] = i3;
   HEAP32[i4 + 4 >> 2] = ((i3 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 11:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i3 = HEAP32[i4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 4;
   i4 = i2;
   HEAP32[i4 >> 2] = i3;
   HEAP32[i4 + 4 >> 2] = 0;
   break L1;
  }
 case 12:
  {
   i4 = (HEAP32[i1 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   i3 = i4;
   i5 = HEAP32[i3 >> 2] | 0;
   i3 = HEAP32[i3 + 4 >> 2] | 0;
   HEAP32[i1 >> 2] = i4 + 8;
   i4 = i2;
   HEAP32[i4 >> 2] = i5;
   HEAP32[i4 + 4 >> 2] = i3;
   break L1;
  }
 case 13:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i4 = (i4 & 65535) << 16 >> 16;
   i5 = i2;
   HEAP32[i5 >> 2] = i4;
   HEAP32[i5 + 4 >> 2] = ((i4 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 14:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i5 = i2;
   HEAP32[i5 >> 2] = i4 & 65535;
   HEAP32[i5 + 4 >> 2] = 0;
   break L1;
  }
 case 15:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i4 = (i4 & 255) << 24 >> 24;
   i5 = i2;
   HEAP32[i5 >> 2] = i4;
   HEAP32[i5 + 4 >> 2] = ((i4 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 16:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i1 >> 2] = i5 + 4;
   i5 = i2;
   HEAP32[i5 >> 2] = i4 & 255;
   HEAP32[i5 + 4 >> 2] = 0;
   break L1;
  }
 case 17:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   d6 = +HEAPF64[i5 >> 3];
   HEAP32[i1 >> 2] = i5 + 8;
   HEAPF64[i2 >> 3] = d6;
   break L1;
  }
 case 18:
  {
   i5 = (HEAP32[i1 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   d6 = +HEAPF64[i5 >> 3];
   HEAP32[i1 >> 2] = i5 + 8;
   HEAPF64[i2 >> 3] = d6;
   break L1;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function _scanexp(i8, i3) {
 i8 = i8 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = i8 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i7 = i8 + 100 | 0;
 if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
  HEAP32[i6 >> 2] = i1 + 1;
  i1 = HEAPU8[i1 >> 0] | 0;
 } else i1 = ___shgetc(i8) | 0;
 switch (i1 | 0) {
 case 43:
 case 45:
  {
   i2 = (i1 | 0) == 45 & 1;
   i1 = HEAP32[i6 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i8) | 0;
   if ((i3 | 0) != 0 & (i1 + -48 | 0) >>> 0 > 9 ? (HEAP32[i7 >> 2] | 0) != 0 : 0) {
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
    i5 = i2;
   } else i5 = i2;
   break;
  }
 default:
  i5 = 0;
 }
 if ((i1 + -48 | 0) >>> 0 > 9) if (!(HEAP32[i7 >> 2] | 0)) {
  i2 = -2147483648;
  i1 = 0;
 } else {
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
  i2 = -2147483648;
  i1 = 0;
 } else {
  i2 = 0;
  do {
   i2 = i1 + -48 + (i2 * 10 | 0) | 0;
   i1 = HEAP32[i6 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i8) | 0;
  } while ((i1 + -48 | 0) >>> 0 < 10 & (i2 | 0) < 214748364);
  i3 = ((i2 | 0) < 0) << 31 >> 31;
  if ((i1 + -48 | 0) >>> 0 < 10) {
   do {
    i3 = ___muldi3(i2 | 0, i3 | 0, 10, 0) | 0;
    i2 = tempRet0;
    i1 = _i64Add(i1 | 0, ((i1 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
    i2 = _i64Add(i1 | 0, tempRet0 | 0, i3 | 0, i2 | 0) | 0;
    i3 = tempRet0;
    i1 = HEAP32[i6 >> 2] | 0;
    if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
     HEAP32[i6 >> 2] = i1 + 1;
     i1 = HEAPU8[i1 >> 0] | 0;
    } else i1 = ___shgetc(i8) | 0;
   } while ((i1 + -48 | 0) >>> 0 < 10 & ((i3 | 0) < 21474836 | (i3 | 0) == 21474836 & i2 >>> 0 < 2061584302));
   i4 = i2;
  } else i4 = i2;
  if ((i1 + -48 | 0) >>> 0 < 10) do {
   i1 = HEAP32[i6 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i8) | 0;
  } while ((i1 + -48 | 0) >>> 0 < 10);
  if (HEAP32[i7 >> 2] | 0) HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
  i8 = (i5 | 0) != 0;
  i1 = _i64Subtract(0, 0, i4 | 0, i3 | 0) | 0;
  i2 = i8 ? tempRet0 : i3;
  i1 = i8 ? i1 : i4;
 }
 tempRet0 = i2;
 return i1 | 0;
}

function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE(i17, i1, i7, i9, i8, i2) {
 i17 = i17 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i9 = i9 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i13 = i16 + 168 | 0;
 i12 = i16 + 40 | 0;
 i11 = i16 + 36 | 0;
 i15 = i16 + 32 | 0;
 i14 = i16;
 i6 = i16 + 24 | 0;
 i10 = i16 + 16 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i14 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 >> 2] = 11460;
 i5 = HEAP8[i2 >> 0] | 0;
 i1 = (i5 & 1) == 0;
 i4 = i2 + 4 | 0;
 i2 = i1 ? i4 : HEAP32[i2 + 8 >> 2] | 0;
 i4 = i2 + ((i1 ? (i5 & 255) >>> 1 : HEAP32[i4 >> 2] | 0) << 2) | 0;
 i5 = i12 + 32 | 0;
 i1 = 0;
 while (1) {
  if (!((i1 | 0) != 2 & i2 >>> 0 < i4 >>> 0)) break;
  HEAP32[i15 >> 2] = i2;
  i3 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] & 15](i6, i13, i2, i4, i15, i12, i5, i11) | 0;
  i1 = i12;
  while (1) {
   if (i1 >>> 0 >= (HEAP32[i11 >> 2] | 0) >>> 0) break;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i14, HEAP8[i1 >> 0] | 0);
   i1 = i1 + 1 | 0;
  }
  i2 = HEAP32[i15 >> 2] | 0;
  i1 = i3;
 }
 i2 = _catgets((i7 | 0) == -1 ? -1 : i7 << 1, i9, i8, (HEAP8[i14 >> 0] & 1) == 0 ? i14 + 1 | 0 : HEAP32[i14 + 8 >> 2] | 0) | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i17 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i10 + 4 >> 2] = 0;
 HEAP32[i10 >> 2] = 11508;
 i4 = i2 + (_strlen(i2) | 0) | 0;
 i5 = i4;
 i6 = i12 + 128 | 0;
 i1 = 0;
 while (1) {
  if (!((i1 | 0) != 2 & i2 >>> 0 < i4 >>> 0)) break;
  HEAP32[i15 >> 2] = i2;
  i3 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] & 15](i10, i13, i2, (i5 - i2 | 0) > 32 ? i2 + 32 | 0 : i4, i15, i12, i6, i11) | 0;
  i1 = i12;
  while (1) {
   if (i1 >>> 0 >= (HEAP32[i11 >> 2] | 0) >>> 0) break;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i17, HEAP32[i1 >> 2] | 0);
   i1 = i1 + 4 | 0;
  }
  i2 = HEAP32[i15 >> 2] | 0;
  i1 = i3;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i14);
 STACKTOP = i16;
 return;
}

function __ZN4wasm22SExpressionWasmBuilder8makeLoadERNS_7ElementENS_8WasmTypeE(i10, i8, i1) {
 i10 = i10 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i3 = __ZN4wasm7Element4listEv(i8) | 0;
 i3 = _strchr(__ZN4wasm7Element5c_strEv(HEAP32[HEAP32[i3 >> 2] >> 2] | 0) | 0, 46) | 0;
 i4 = i3 + 5 | 0;
 i9 = __ZN10MixedArena5allocIN4wasm4LoadEEEPT_v(HEAP32[i10 + 4 >> 2] | 0) | 0;
 HEAP32[i9 + 4 >> 2] = i1;
 i1 = __ZN4wasm15getWasmTypeSizeENS_8WasmTypeE(i1) | 0;
 i2 = i9 + 8 | 0;
 HEAP32[i2 >> 2] = i1;
 L1 : do switch (HEAP8[i4 >> 0] | 0) {
 case 56:
  {
   HEAP32[i2 >> 2] = 1;
   i7 = 1;
   i5 = i3 + 6 | 0;
   break;
  }
 case 49:
  {
   if ((HEAP8[i3 + 6 >> 0] | 0) == 54) {
    HEAP32[i2 >> 2] = 2;
    i7 = 2;
    i5 = i3 + 7 | 0;
    break L1;
   } else ___assert_fail(17472, 17087, 721, 17488);
   break;
  }
 case 51:
  {
   if ((HEAP8[i3 + 6 >> 0] | 0) == 50) {
    HEAP32[i2 >> 2] = 4;
    i7 = 4;
    i5 = i3 + 7 | 0;
    break L1;
   } else ___assert_fail(17497, 17087, 725, 17488);
   break;
  }
 default:
  {
   i7 = i1;
   i5 = i4;
  }
 } while (0);
 if (!(HEAP8[i5 >> 0] | 0)) i1 = 0; else i1 = (HEAP8[i5 + 1 >> 0] | 0) == 115 & 1;
 HEAP8[i9 + 12 >> 0] = i1;
 i5 = i9 + 16 | 0;
 HEAP32[i5 >> 2] = 0;
 i6 = i9 + 20 | 0;
 HEAP32[i6 >> 2] = i7;
 i3 = i10 + 8 | 0;
 i4 = 1;
 while (1) {
  i7 = __ZN4wasm7ElementixEj(i8, i4) | 0;
  i7 = (HEAP8[i7 >> 0] | 0) == 0;
  i1 = __ZN4wasm7ElementixEj(i8, i4) | 0;
  if (!i7) {
   i2 = 22;
   break;
  }
  i2 = __ZN4wasm7Element5c_strEv(i1) | 0;
  i1 = _strchr(i2, 61) | 0;
  if (!i1) {
   i2 = 14;
   break;
  }
  i1 = i1 + 1 | 0;
  switch (HEAP8[i2 >> 0] | 0) {
  case 97:
   {
    i7 = _atoi(i1) | 0;
    HEAP32[i6 >> 2] = i7;
    break;
   }
  case 111:
   {
    i1 = _atoll(i1) | 0;
    i7 = tempRet0;
    if (i7 >>> 0 > 0 | (i7 | 0) == 0 & i1 >>> 0 > 4294967295) __ZNKSt3__18functionIFvvEEclEv(i3);
    HEAP32[i5 >> 2] = i1;
    break;
   }
  default:
   __ZNKSt3__18functionIFvvEEclEv(i3);
  }
  i4 = i4 + 1 | 0;
 }
 if ((i2 | 0) == 14) ___assert_fail(26323, 17087, 736, 17488); else if ((i2 | 0) == 22) {
  i10 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i10, i1) | 0;
  HEAP32[i9 + 24 >> 2] = i10;
  return i9 | 0;
 }
 return 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17parseAfterKeywordERNS3_4FragERPcPKc(i5, i1, i4, i3) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i2 = 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i4);
 i1 = HEAP32[i1 >> 2] | 0;
 do if ((i1 | 0) != (HEAP32[10325] | 0)) {
  if ((i1 | 0) == (HEAP32[10265] | 0)) {
   i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE8parseVarERPcPKcb(i5, i4, i3, 0) | 0;
   break;
  }
  if ((i1 | 0) == (HEAP32[10266] | 0)) {
   i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE8parseVarERPcPKcb(i5, i4, i3, 1) | 0;
   break;
  }
  if ((i1 | 0) == (HEAP32[10269] | 0)) {
   i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE11parseReturnERPcPKc(i5, i4, i3) | 0;
   break;
  }
  if ((i1 | 0) == (HEAP32[10270] | 0)) {
   i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE7parseIfERPcPKc(i5, i4, i3) | 0;
   break;
  }
  if ((i1 | 0) == (HEAP32[10273] | 0)) {
   i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE7parseDoERPcPKc(i5, i4, i3) | 0;
   break;
  }
  if ((i1 | 0) == (HEAP32[10272] | 0)) {
   i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE10parseWhileERPcPKc(i5, i4, i3) | 0;
   break;
  }
  if ((i1 | 0) == (HEAP32[10280] | 0)) {
   i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE10parseBreakERPcPKc(i5, i4, i3) | 0;
   break;
  }
  if ((i1 | 0) == (HEAP32[10281] | 0)) {
   i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseContinueERPcPKc(i5, i4, i3) | 0;
   break;
  }
  if ((i1 | 0) == (HEAP32[10282] | 0)) {
   i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE11parseSwitchERPcPKc(i5, i4, i3) | 0;
   break;
  }
  if ((i1 | 0) == (HEAP32[10337] | 0)) {
   i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE8parseNewERPcPKc(i5, i4, i3) | 0;
   break;
  }
  if ((i1 | 0) == (HEAP32[10274] | 0)) {
   i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE8parseForERPcPKc(i5, i4, i3) | 0;
   break;
  } else {
   __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4dumpEPKcPc(i1, HEAP32[i4 >> 2] | 0);
   _abort();
  }
 } else i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseFunctionERPcPKc(i5, i4, i3) | 0; while (0);
 return i2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i3) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i5 = i10 + 40 | 0;
 i6 = i10 + 24 | 0;
 i8 = i10 + 12 | 0;
 i9 = i10;
 L1 : do if ((i4 - i1 | 0) > 3 ? (HEAP8[i1 >> 0] | 0) == 68 : 0) {
  switch (HEAP8[i1 + 1 >> 0] | 0) {
  case 84:
  case 116:
   break;
  default:
   break L1;
  }
  i11 = i1 + 2 | 0;
  i7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i11, i4, i3) | 0;
  if ((!((i7 | 0) == (i11 | 0) | (i7 | 0) == (i4 | 0)) ? (HEAP8[i7 >> 0] | 0) == 69 : 0) ? (i2 = HEAP32[i3 + 4 >> 2] | 0, (HEAP32[i3 >> 2] | 0) != (i2 | 0)) : 0) {
   i3 = i2 + -24 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i9, i3);
   i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i9, 0, 39107) | 0;
   HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i8 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
   HEAP32[i8 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i1 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i8, 38469) | 0;
   HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i6 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
   HEAP32[i6 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
   i2 = 0;
   while (1) {
    if ((i2 | 0) == 3) break;
    HEAP32[i1 + (i2 << 2) >> 2] = 0;
    i2 = i2 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i5, i6);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_(i3, i5);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i5);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i6);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i8);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i9);
   i1 = i7 + 1 | 0;
  }
 } while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function __ZZ11instantiateEN19JSExternalInterface4loadEPN4wasm4LoadEj(i7, i2, i5, i4) {
 i7 = i7 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var d1 = 0.0, i3 = 0, i6 = 0;
 i3 = i5 + 8 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 L1 : do if ((HEAP32[i5 + 20 >> 2] | 0) >>> 0 >= i2 >>> 0 ? (i2 + -1 & i4 | 0) == 0 : 0) {
  if (((HEAP32[i5 + 4 >> 2] | 0) + -3 | 0) >>> 0 < 2) switch (i2 | 0) {
  case 4:
   {
    d1 = +_emscripten_asm_const_di(24, i4 | 0);
    HEAP32[i7 >> 2] = 3;
    HEAPF32[i7 + 8 >> 2] = d1;
    break L1;
   }
  case 8:
   {
    d1 = +_emscripten_asm_const_di(25, i4 | 0);
    HEAP32[i7 >> 2] = 4;
    HEAPF64[i7 + 8 >> 3] = d1;
    break L1;
   }
  default:
   _abort();
  }
  switch (i2 | 0) {
  case 1:
   if (!(HEAP8[i5 + 12 >> 0] | 0)) {
    i5 = _emscripten_asm_const_ii(19, i4 | 0) | 0;
    HEAP32[i7 >> 2] = 1;
    HEAP32[i7 + 8 >> 2] = i5;
    break L1;
   } else {
    i5 = _emscripten_asm_const_ii(18, i4 | 0) | 0;
    HEAP32[i7 >> 2] = 1;
    HEAP32[i7 + 8 >> 2] = i5;
    break L1;
   }
  case 2:
   if (!(HEAP8[i5 + 12 >> 0] | 0)) {
    i5 = _emscripten_asm_const_ii(21, i4 | 0) | 0;
    HEAP32[i7 >> 2] = 1;
    HEAP32[i7 + 8 >> 2] = i5;
    break L1;
   } else {
    i5 = _emscripten_asm_const_ii(20, i4 | 0) | 0;
    HEAP32[i7 >> 2] = 1;
    HEAP32[i7 + 8 >> 2] = i5;
    break L1;
   }
  case 4:
   if (!(HEAP8[i5 + 12 >> 0] | 0)) {
    i5 = _emscripten_asm_const_ii(23, i4 | 0) | 0;
    HEAP32[i7 >> 2] = 1;
    HEAP32[i7 + 8 >> 2] = i5;
    break L1;
   } else {
    i5 = _emscripten_asm_const_ii(22, i4 | 0) | 0;
    HEAP32[i7 >> 2] = 1;
    HEAP32[i7 + 8 >> 2] = i5;
    break L1;
   }
  default:
   _abort();
  }
 } else i6 = 3; while (0);
 L25 : do if ((i6 | 0) == 3) {
  i6 = i5 + 4 | 0;
  d1 = +_emscripten_asm_const_diiii(17, i4 | 0, i2 | 0, ((HEAP32[i6 >> 2] | 0) + -3 | 0) >>> 0 < 2 | 0, HEAPU8[i5 + 12 >> 0] | 0);
  if (((HEAP32[i6 >> 2] | 0) + -3 | 0) >>> 0 >= 2) {
   HEAP32[i7 >> 2] = 1;
   HEAP32[i7 + 8 >> 2] = ~~d1;
   break;
  }
  switch (HEAP32[i3 >> 2] | 0) {
  case 4:
   {
    HEAP32[i7 >> 2] = 3;
    HEAPF32[i7 + 8 >> 2] = d1;
    break L25;
   }
  case 8:
   {
    HEAP32[i7 >> 2] = 4;
    HEAPF64[i7 + 8 >> 3] = d1;
    break L25;
   }
  default:
   _abort();
  }
 } while (0);
 return;
}

function __ZNSt3__118__insertion_sort_3IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEvT0_S9_T_(i10, i12, i9) {
 i10 = i10 | 0;
 i12 = i12 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i14 = i15 + 40 | 0;
 i13 = i15 + 32 | 0;
 i3 = i15 + 24 | 0;
 i4 = i15 + 16 | 0;
 i5 = i15 + 8 | 0;
 i6 = i15;
 i1 = i10 + 16 | 0;
 __ZNSt3__17__sort3IRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEjT0_S9_S9_T_(i10, i10 + 8 | 0, i1, i9) | 0;
 i11 = i10 + 24 | 0;
 while (1) {
  if ((i11 | 0) == (i12 | 0)) break;
  i8 = i11;
  i7 = HEAP32[i8 + 4 >> 2] | 0;
  i2 = i3;
  HEAP32[i2 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i2 + 4 >> 2] = i7;
  i2 = i1;
  i7 = HEAP32[i2 + 4 >> 2] | 0;
  i8 = i4;
  HEAP32[i8 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i8 + 4 >> 2] = i7;
  HEAP32[i13 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i13 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
  HEAP32[i14 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i14 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
  if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i9, i13, i14) | 0) {
   i8 = i11;
   i7 = HEAP32[i8 >> 2] | 0;
   i8 = HEAP32[i8 + 4 >> 2] | 0;
   i2 = i11;
   while (1) {
    i17 = i1;
    i16 = HEAP32[i17 + 4 >> 2] | 0;
    HEAP32[i2 >> 2] = HEAP32[i17 >> 2];
    HEAP32[i2 + 4 >> 2] = i16;
    if ((i1 | 0) == (i10 | 0)) break;
    i2 = i5;
    HEAP32[i2 >> 2] = i7;
    HEAP32[i2 + 4 >> 2] = i8;
    i2 = i1 + -8 | 0;
    i18 = i2;
    i16 = HEAP32[i18 + 4 >> 2] | 0;
    i17 = i6;
    HEAP32[i17 >> 2] = HEAP32[i18 >> 2];
    HEAP32[i17 + 4 >> 2] = i16;
    HEAP32[i13 >> 2] = HEAP32[i5 >> 2];
    HEAP32[i13 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
    HEAP32[i14 >> 2] = HEAP32[i6 >> 2];
    HEAP32[i14 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
    if (__ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i9, i13, i14) | 0) {
     i18 = i1;
     i1 = i2;
     i2 = i18;
    } else break;
   }
   i18 = i1;
   HEAP32[i18 >> 2] = i7;
   HEAP32[i18 + 4 >> 2] = i8;
  }
  i1 = i11;
  i11 = i11 + 8 | 0;
 }
 STACKTOP = i15;
 return;
}

function __ZN4wasm17SExpressionParser11parseStringEv(i8) {
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i6 = i9 + 8 | 0;
 i4 = i9 + 4 | 0;
 i5 = i9;
 i2 = HEAP32[i8 >> 2] | 0;
 i1 = HEAP8[i2 >> 0] | 0;
 if (i1 << 24 >> 24 == 36) {
  i3 = i2 + 1 | 0;
  HEAP32[i8 >> 2] = i3;
  i1 = HEAP8[i3 >> 0] | 0;
  i7 = 1;
 } else {
  i3 = i2;
  i7 = 0;
 }
 if (i1 << 24 >> 24 == 34) {
  i1 = i3 + 1 | 0;
  HEAP32[i8 >> 2] = i1;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i6 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  L9 : while (1) {
   i2 = HEAP8[i1 >> 0] | 0;
   switch (i2 << 24 >> 24) {
   case 34:
    break L9;
   case 92:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i6, 92);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i6, HEAP8[(HEAP32[i8 >> 2] | 0) + 1 >> 0] | 0);
     i1 = (HEAP32[i8 >> 2] | 0) + 2 | 0;
     break;
    }
   default:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i6, i2);
     i1 = (HEAP32[i8 >> 2] | 0) + 1 | 0;
    }
   }
   HEAP32[i8 >> 2] = i1;
  }
  HEAP32[i8 >> 2] = i1 + 1;
  i1 = __ZN10MixedArena5allocIN4wasm7ElementEEEPT_v(i8 + 4 | 0) | 0;
  __ZN6cashew7IStringC2EPKcb(i4, (HEAP8[i6 >> 0] & 1) == 0 ? i6 + 1 | 0 : HEAP32[i6 + 8 >> 2] | 0, 0);
  i8 = HEAP32[i4 >> 2] | 0;
  HEAP8[i1 >> 0] = 0;
  HEAP32[i1 + 16 >> 2] = i8;
  HEAP8[i1 + 20 >> 0] = i7;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 } else {
  i2 = i3;
  while (1) {
   if (!(i1 << 24 >> 24)) {
    i1 = i2;
    i2 = 0;
    break;
   }
   i6 = (_isspace(i1 << 24 >> 24) | 0) != 0;
   i1 = HEAP32[i8 >> 2] | 0;
   i2 = HEAP8[i1 >> 0] | 0;
   if (i6 | (i2 & -2) << 24 >> 24 == 40) break;
   i2 = i1 + 1 | 0;
   HEAP32[i8 >> 2] = i2;
   i1 = HEAP8[i2 >> 0] | 0;
  }
  HEAP8[i1 >> 0] = 0;
  i1 = __ZN10MixedArena5allocIN4wasm7ElementEEEPT_v(i8 + 4 | 0) | 0;
  __ZN6cashew7IStringC2EPKcb(i5, i3, 0);
  i6 = HEAP32[i5 >> 2] | 0;
  HEAP8[i1 >> 0] = 0;
  HEAP32[i1 + 16 >> 2] = i6;
  HEAP8[i1 + 20 >> 0] = i7;
  HEAP8[HEAP32[i8 >> 2] >> 0] = i2;
 }
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder9parseTypeERNS_7ElementE(i13, i2) {
 i13 = i13 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i11 = i14;
 i12 = __ZN10MixedArena5allocIN4wasm12FunctionTypeEEEPT_v(HEAP32[i13 + 4 >> 2] | 0) | 0;
 i10 = __ZN4wasm7Element4listEv(i2) | 0;
 if (!(HEAP8[HEAP32[(HEAP32[i10 >> 2] | 0) + 4 >> 2] >> 0] | 0)) {
  i1 = __ZN4wasm7Element4listEv(i2) | 0;
  i1 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0) | 0;
  HEAP32[i12 >> 2] = i1;
  i1 = 2;
 } else i1 = 1;
 i1 = __ZN4wasm7ElementixEj(i2, i1) | 0;
 if (!(HEAP8[i1 >> 0] | 0)) ___assert_fail(17223, 17087, 1058, 17237);
 i2 = i12 + 4 | 0;
 i3 = i12 + 12 | 0;
 i4 = i12 + 16 | 0;
 i5 = i12 + 8 | 0;
 i9 = 1;
 while (1) {
  if (i9 >>> 0 >= (__ZN4wasm7Element4sizeEv(i1) | 0) >>> 0) break;
  i6 = __ZN4wasm7ElementixEj(i1, i9) | 0;
  i10 = __ZN4wasm7Element4listEv(i6) | 0;
  i10 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i10 >> 2] >> 2] | 0) | 0;
  L10 : do if ((i10 | 0) != (HEAP32[10212] | 0)) {
   i10 = __ZN4wasm7Element4listEv(i6) | 0;
   i10 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i10 >> 2] >> 2] | 0) | 0;
   if ((i10 | 0) == (HEAP32[10213] | 0)) {
    i10 = __ZN4wasm7Element4listEv(i6) | 0;
    i10 = __ZN4wasm22SExpressionWasmBuilder16stringToWasmTypeEPKcbb(i13, __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i10 >> 2] | 0) + 4 >> 2] | 0) | 0, 0, 0) | 0;
    HEAP32[i2 >> 2] = i10;
   }
  } else {
   i10 = 1;
   while (1) {
    if (i10 >>> 0 >= (__ZN4wasm7Element4sizeEv(i6) | 0) >>> 0) break L10;
    i7 = __ZN4wasm22SExpressionWasmBuilder16stringToWasmTypeEPKcbb(i13, __ZN4wasm7Element3strEv(__ZN4wasm7ElementixEj(i6, i10) | 0) | 0, 0, 0) | 0;
    HEAP32[i11 >> 2] = i7;
    i8 = HEAP32[i3 >> 2] | 0;
    if (i8 >>> 0 < (HEAP32[i4 >> 2] | 0) >>> 0) {
     HEAP32[i8 >> 2] = i7;
     HEAP32[i3 >> 2] = i8 + 4;
    } else __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i5, i11);
    i10 = i10 + 1 | 0;
   }
  } while (0);
  i9 = i9 + 1 | 0;
 }
 __ZN4wasm6Module15addFunctionTypeEPNS_12FunctionTypeE(HEAP32[i13 >> 2] | 0, i12);
 STACKTOP = i14;
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi(i16, i15) {
 i16 = i16 | 0;
 i15 = i15 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i10 = i17;
 do if ((i15 | 0) != -1) {
  i11 = i16 + 12 | 0;
  i12 = i16 + 8 | 0;
  i13 = (HEAP32[i11 >> 2] | 0) - (HEAP32[i12 >> 2] | 0) | 0;
  i14 = i16 + 24 | 0;
  i7 = HEAP32[i14 >> 2] | 0;
  i8 = i16 + 28 | 0;
  i1 = HEAP32[i8 >> 2] | 0;
  if ((i7 | 0) == (i1 | 0)) {
   i6 = i16 + 48 | 0;
   if (!(HEAP32[i6 >> 2] & 16)) {
    i1 = -1;
    break;
   }
   i3 = i16 + 20 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   i9 = i16 + 44 | 0;
   i5 = (HEAP32[i9 >> 2] | 0) - i4 | 0;
   i2 = i16 + 32 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i2, 0);
   if (!(HEAP8[i2 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i2 >> 2] & -2) + -1 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i2, i1, 0);
   i1 = HEAP8[i2 >> 0] | 0;
   if (!(i1 & 1)) {
    i2 = i2 + 1 | 0;
    i1 = (i1 & 255) >>> 1;
   } else {
    i2 = HEAP32[i16 + 40 >> 2] | 0;
    i1 = HEAP32[i16 + 36 >> 2] | 0;
   }
   i1 = i2 + i1 | 0;
   HEAP32[i3 >> 2] = i2;
   HEAP32[i8 >> 2] = i1;
   i7 = i2 + (i7 - i4) | 0;
   HEAP32[i14 >> 2] = i7;
   i2 = i2 + i5 | 0;
   HEAP32[i9 >> 2] = i2;
   i8 = i9;
   i3 = i9;
   i5 = i1;
  } else {
   i2 = i16 + 44 | 0;
   i8 = i2;
   i6 = i16 + 48 | 0;
   i3 = i2;
   i2 = HEAP32[i2 >> 2] | 0;
   i5 = i1;
  }
  i4 = i7 + 1 | 0;
  HEAP32[i10 >> 2] = i4;
  i2 = HEAP32[(i4 >>> 0 < i2 >>> 0 ? i3 : i10) >> 2] | 0;
  HEAP32[i8 >> 2] = i2;
  if (HEAP32[i6 >> 2] & 8 | 0) {
   i1 = i16 + 32 | 0;
   if (!(HEAP8[i1 >> 0] & 1)) i1 = i1 + 1 | 0; else i1 = HEAP32[i16 + 40 >> 2] | 0;
   HEAP32[i12 >> 2] = i1;
   HEAP32[i11 >> 2] = i1 + i13;
   HEAP32[i16 + 16 >> 2] = i2;
  }
  if ((i7 | 0) == (i5 | 0)) {
   i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i16 >> 2] | 0) + 52 >> 2] & 31](i16, i15 & 255) | 0;
   break;
  } else {
   HEAP32[i14 >> 2] = i4;
   HEAP8[i7 >> 0] = i15;
   i1 = i15 & 255;
   break;
  }
 } else i1 = 0; while (0);
 STACKTOP = i17;
 return i1 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(i10, i11, i8, i9, i12, i14) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i13 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i2 = i15 + 48 | 0;
 i1 = i15 + 24 | 0;
 i13 = i15 + 16 | 0;
 i3 = i15 + 20 | 0;
 i4 = i15 + 12 | 0;
 i5 = i15 + 8 | 0;
 i6 = i15 + 4 | 0;
 i7 = i15;
 if (!(HEAP32[i9 + 4 >> 2] & 1)) {
  HEAP32[i13 >> 2] = -1;
  i7 = HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  i1 = FUNCTION_TABLE_iiiiiii[i7 & 63](i10, i1, i2, i9, i12, i13) | 0;
  HEAP32[i11 >> 2] = i1;
  switch (HEAP32[i13 >> 2] | 0) {
  case 0:
   {
    HEAP8[i14 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[i14 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[i14 >> 0] = 1;
    HEAP32[i12 >> 2] = 4;
   }
  }
 } else {
  i10 = __ZNKSt3__18ios_base6getlocEv(i9) | 0;
  HEAP32[i5 >> 2] = i10;
  i13 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 43120) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
  i9 = __ZNKSt3__18ios_base6getlocEv(i9) | 0;
  HEAP32[i6 >> 2] = i9;
  i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43128) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 24 >> 2] & 127](i1, i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 127](i1 + 12 | 0, i10);
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
  i13 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i11, i2, i1, i1 + 24 | 0, i13, i12, 1) | 0) == (i1 | 0) & 1;
  HEAP8[i14 >> 0] = i13;
  i14 = HEAP32[i11 >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1 + 12 | 0);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1);
  i1 = i14;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(i10, i11, i8, i9, i12, i14) {
 i10 = i10 | 0;
 i11 = i11 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i13 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i2 = i15 + 48 | 0;
 i1 = i15 + 24 | 0;
 i13 = i15 + 16 | 0;
 i3 = i15 + 20 | 0;
 i4 = i15 + 12 | 0;
 i5 = i15 + 8 | 0;
 i6 = i15 + 4 | 0;
 i7 = i15;
 if (!(HEAP32[i9 + 4 >> 2] & 1)) {
  HEAP32[i13 >> 2] = -1;
  i7 = HEAP32[(HEAP32[i10 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  i1 = FUNCTION_TABLE_iiiiiii[i7 & 63](i10, i1, i2, i9, i12, i13) | 0;
  HEAP32[i11 >> 2] = i1;
  switch (HEAP32[i13 >> 2] | 0) {
  case 0:
   {
    HEAP8[i14 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[i14 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[i14 >> 0] = 1;
    HEAP32[i12 >> 2] = 4;
   }
  }
 } else {
  i10 = __ZNKSt3__18ios_base6getlocEv(i9) | 0;
  HEAP32[i5 >> 2] = i10;
  i13 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 43088) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
  i9 = __ZNKSt3__18ios_base6getlocEv(i9) | 0;
  HEAP32[i6 >> 2] = i9;
  i10 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43100) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i9) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 24 >> 2] & 127](i1, i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] & 127](i1 + 12 | 0, i10);
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
  i13 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i11, i2, i1, i1 + 24 | 0, i13, i12, 1) | 0) == (i1 | 0) & 1;
  HEAP8[i14 >> 0] = i13;
  i14 = HEAP32[i11 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
  i1 = i14;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function __ZZN4wasm14ModuleInstance15getFinalAddressINS_5StoreEEEjPT_NS_7LiteralEENKUljjPKcE_clEjjS7_(i1, i7, i9, i8) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i9 = i9 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i5 = i11 + 160 | 0;
 i10 = i11 + 16 | 0;
 i6 = i11;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i7 >>> 0 > i9 >>> 0) {
  i2 = i10 + 64 | 0;
  i1 = i10 + 8 | 0;
  HEAP32[i1 >> 2] = 3204;
  i4 = i10 + 12 | 0;
  HEAP32[i10 >> 2] = 3344;
  HEAP32[i2 >> 2] = 3364;
  HEAP32[i10 + 4 >> 2] = 0;
  __ZNSt3__18ios_base4initEPv(i10 + 64 | 0, i4);
  HEAP32[i10 + 136 >> 2] = 0;
  HEAP32[i10 + 140 >> 2] = -1;
  HEAP32[i10 >> 2] = 3184;
  HEAP32[i2 >> 2] = 3224;
  HEAP32[i1 >> 2] = 3204;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i4);
  HEAP32[i4 >> 2] = 3048;
  i1 = i10 + 44 | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i1 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  HEAP32[i10 + 56 >> 2] = 0;
  HEAP32[i10 + 60 >> 2] = 24;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i5 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i4, i5);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i10 + 8 | 0, i8) | 0, 20896) | 0, i7) | 0, 20899) | 0, i9) | 0;
  i9 = HEAP32[i3 + 12 >> 2] | 0;
  i8 = HEAP32[(HEAP32[i9 >> 2] | 0) + 20 >> 2] | 0;
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(i6, i4);
  FUNCTION_TABLE_vii[i8 & 127](i9, (HEAP8[i6 >> 0] & 1) == 0 ? i6 + 1 | 0 : HEAP32[i6 + 8 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
  __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i10);
 }
 STACKTOP = i11;
 return;
}

function __ZZN4wasm14ModuleInstance15getFinalAddressINS_4LoadEEEjPT_NS_7LiteralEENKUljjPKcE_clEjjS7_(i1, i7, i9, i8) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i9 = i9 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i5 = i11 + 160 | 0;
 i10 = i11 + 16 | 0;
 i6 = i11;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i7 >>> 0 > i9 >>> 0) {
  i2 = i10 + 64 | 0;
  i1 = i10 + 8 | 0;
  HEAP32[i1 >> 2] = 3204;
  i4 = i10 + 12 | 0;
  HEAP32[i10 >> 2] = 3344;
  HEAP32[i2 >> 2] = 3364;
  HEAP32[i10 + 4 >> 2] = 0;
  __ZNSt3__18ios_base4initEPv(i10 + 64 | 0, i4);
  HEAP32[i10 + 136 >> 2] = 0;
  HEAP32[i10 + 140 >> 2] = -1;
  HEAP32[i10 >> 2] = 3184;
  HEAP32[i2 >> 2] = 3224;
  HEAP32[i1 >> 2] = 3204;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i4);
  HEAP32[i4 >> 2] = 3048;
  i1 = i10 + 44 | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i1 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  HEAP32[i10 + 56 >> 2] = 0;
  HEAP32[i10 + 60 >> 2] = 24;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i5 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i4, i5);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i10 + 8 | 0, i8) | 0, 20896) | 0, i7) | 0, 20899) | 0, i9) | 0;
  i9 = HEAP32[i3 + 12 >> 2] | 0;
  i8 = HEAP32[(HEAP32[i9 >> 2] | 0) + 20 >> 2] | 0;
  __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(i6, i4);
  FUNCTION_TABLE_vii[i8 & 127](i9, (HEAP8[i6 >> 0] & 1) == 0 ? i6 + 1 | 0 : HEAP32[i6 + 8 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
  __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i10);
 }
 STACKTOP = i11;
 return;
}

function __ZN4wasm22SExpressionWasmBuilder9makeBlockERNS_7ElementE(i9, i8) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i12 + 4 | 0;
 i6 = i12;
 i11 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i9 + 4 >> 2] | 0) | 0;
 i10 = __ZN4wasm7Element4listEv(i8) | 0;
 i2 = i11 + 8 | 0;
 if (!(HEAP8[HEAP32[(HEAP32[i10 >> 2] | 0) + 4 >> 2] >> 0] | 0)) {
  i3 = __ZN4wasm7Element4listEv(i8) | 0;
  i3 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i3 >> 2] | 0) + 4 >> 2] | 0) | 0;
  HEAP32[i2 >> 2] = i3;
  i3 = 2;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 30578, 5);
  i3 = __ZN4wasm22SExpressionWasmBuilder15getPrefixedNameENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i9, i1) | 0;
  HEAP32[i11 + 8 >> 2] = i3;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
  i3 = 1;
 }
 i10 = i9 + 96 | 0;
 i1 = HEAP32[i10 >> 2] | 0;
 if ((i1 | 0) == (HEAP32[i9 + 100 >> 2] | 0)) __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i9 + 92 | 0, i2); else {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 4;
 }
 i5 = i11 + 16 | 0;
 i4 = i11 + 20 | 0;
 i7 = i11 + 12 | 0;
 while (1) {
  if (i3 >>> 0 >= (__ZN4wasm7Element4sizeEv(i8) | 0) >>> 0) break;
  i1 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i9, __ZN4wasm7ElementixEj(i8, i3) | 0) | 0;
  HEAP32[i6 >> 2] = i1;
  i2 = HEAP32[i5 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i4 >> 2] | 0) >>> 0) {
   HEAP32[i2 >> 2] = i1;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 4;
  } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i7, i6);
  i3 = i3 + 1 | 0;
 }
 i2 = HEAP32[i10 >> 2] | 0;
 i1 = i2 + -4 | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  i9 = i2 + -4 | 0;
  HEAP32[i10 >> 2] = i9;
  i2 = i9;
 }
 i1 = HEAP32[i5 >> 2] | 0;
 if ((i1 | 0) != (HEAP32[i7 >> 2] | 0)) HEAP32[i11 + 4 >> 2] = HEAP32[(HEAP32[i1 + -4 >> 2] | 0) + 4 >> 2];
 STACKTOP = i12;
 return i11 | 0;
}

function __ZN4wasm16PrintSExpression17visitFunctionTypeEPNS_12FunctionTypeEb(i7, i5, i6) {
 i7 = i7 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i8 + 4 | 0;
 i2 = i8;
 if (i6) {
  i4 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i7 + 4 >> 2] | 0, 25713, 0) | 0, 32) | 0;
  HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i4, i1) | 0, 25718) | 0;
 }
 i2 = i5 + 8 | 0;
 i1 = i5 + 12 | 0;
 if ((HEAP32[i1 >> 2] | 0) != (HEAP32[i2 >> 2] | 0)) {
  i4 = i7 + 4 | 0;
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i4 >> 2] | 0, HEAP32[i7 + 16 >> 2] | 0) | 0;
  __Z17printMinorOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(HEAP32[i4 >> 2] | 0, 25725) | 0;
  i3 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i2 >> 2] | 0;
  while (1) {
   i1 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (i3 | 0)) break;
   i1 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i1, 32) | 0;
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i1, __ZN4wasm13printWasmTypeENS_8WasmTypeE(HEAP32[i2 >> 2] | 0) | 0) | 0;
   i2 = i2 + 4 | 0;
  }
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i1, 41) | 0;
 }
 i1 = i5 + 4 | 0;
 if (HEAP32[i1 >> 2] | 0) {
  i5 = i7 + 4 | 0;
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i5 >> 2] | 0, HEAP32[i7 + 16 >> 2] | 0) | 0;
  i5 = __Z17printMinorOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(HEAP32[i5 >> 2] | 0, 25737) | 0;
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i5, __ZN4wasm13printWasmTypeENS_8WasmTypeE(HEAP32[i1 >> 2] | 0) | 0) | 0, 41) | 0;
 }
 if (i6) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i7 + 4 >> 2] | 0, 25745) | 0;
 STACKTOP = i8;
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9parseCallES1_RPc(i10, i3, i9) {
 i10 = i10 | 0;
 i3 = i3 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i14 + 16 | 0;
 i4 = i14 + 12 | 0;
 i1 = i14 + 8 | 0;
 i6 = i14 + 4 | 0;
 i7 = i14;
 i12 = i10 + 4 | 0;
 __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE6resizeEj(i10, (((HEAP32[i12 >> 2] | 0) - (HEAP32[i10 >> 2] | 0) | 0) / 12 | 0) + 1 | 0);
 i2 = HEAP32[i9 >> 2] | 0;
 if ((HEAP8[i2 >> 0] | 0) != 40) ___assert_fail(23584, 23426, 611, 24076);
 HEAP32[i9 >> 2] = i2 + 1;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 i3 = __ZN6cashew12ValueBuilder8makeCallENS_3RefE(i5) | 0;
 L4 : while (1) {
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i9);
  i1 = HEAP32[i9 >> 2] | 0;
  if ((HEAP8[i1 >> 0] | 0) == 41) {
   i8 = i1;
   break;
  }
  HEAP32[i6 >> 2] = i3;
  i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i10, i9, 24086) | 0;
  HEAP32[i7 >> 2] = i1;
  HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
  __ZN6cashew12ValueBuilder12appendToCallENS_3RefES1_(i4, i5);
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i9);
  i1 = HEAP32[i9 >> 2] | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 41:
   {
    i8 = i1;
    break L4;
   }
  case 44:
   break;
  default:
   {
    i11 = 7;
    break L4;
   }
  }
  HEAP32[i9 >> 2] = i1 + 1;
 }
 if ((i11 | 0) == 7) _abort();
 HEAP32[i9 >> 2] = i8 + 1;
 i1 = HEAP32[i12 >> 2] | 0;
 i2 = i1 + -12 | 0;
 if ((HEAP32[i1 + -8 >> 2] | 0) == (HEAP32[i2 >> 2] | 0)) i13 = i1; else ___assert_fail(24089, 23426, 627, 24076);
 while (1) {
  if ((i13 | 0) == (i2 | 0)) break;
  i11 = i13 + -12 | 0;
  HEAP32[i12 >> 2] = i11;
  __ZNSt3__113__vector_baseIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEED2Ev(i11);
  i13 = HEAP32[i12 >> 2] | 0;
 }
 STACKTOP = i14;
 return i3 | 0;
}

function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i7, i13, i11, i12, i14, i3, i2, i4, i5, i8) {
 i7 = i7 | 0;
 i13 = i13 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i14 = i14 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i6 = 0, i9 = 0, i10 = 0;
 i9 = HEAP32[i12 >> 2] | 0;
 i10 = (i9 | 0) == (i11 | 0);
 do if (i10) {
  i1 = (HEAP8[i8 + 24 >> 0] | 0) == i7 << 24 >> 24;
  if (!i1 ? (HEAP8[i8 + 25 >> 0] | 0) != i7 << 24 >> 24 : 0) {
   i6 = 5;
   break;
  }
  HEAP32[i12 >> 2] = i11 + 1;
  HEAP8[i11 >> 0] = i1 ? 43 : 45;
  HEAP32[i14 >> 2] = 0;
  i1 = 0;
 } else i6 = 5; while (0);
 L6 : do if ((i6 | 0) == 5) {
  i6 = HEAP8[i2 >> 0] | 0;
  if (i7 << 24 >> 24 == i3 << 24 >> 24 ? (((i6 & 1) == 0 ? (i6 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0) | 0) != 0 : 0) {
   i1 = HEAP32[i5 >> 2] | 0;
   if ((i1 - i4 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i14 >> 2] | 0;
   HEAP32[i5 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i14 >> 2] = 0;
   i1 = 0;
   break;
  }
  i2 = i8 + 26 | 0;
  i1 = i8;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) {
    i1 = i2;
    break;
   }
   if ((HEAP8[i1 >> 0] | 0) == i7 << 24 >> 24) break;
   i1 = i1 + 1 | 0;
  }
  i1 = i1 - i8 | 0;
  if ((i1 | 0) > 23) i1 = -1; else {
   switch (i13 | 0) {
   case 10:
   case 8:
    {
     if ((i1 | 0) >= (i13 | 0)) {
      i1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if ((i1 | 0) >= 22) {
      if (i10) {
       i1 = -1;
       break L6;
      }
      if ((i9 - i11 | 0) >= 3) {
       i1 = -1;
       break L6;
      }
      if ((HEAP8[i9 + -1 >> 0] | 0) != 48) {
       i1 = -1;
       break L6;
      }
      HEAP32[i14 >> 2] = 0;
      i1 = HEAP8[35270 + i1 >> 0] | 0;
      HEAP32[i12 >> 2] = i9 + 1;
      HEAP8[i9 >> 0] = i1;
      i1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   i1 = HEAP8[35270 + i1 >> 0] | 0;
   HEAP32[i12 >> 2] = i9 + 1;
   HEAP8[i9 >> 0] = i1;
   HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
   i1 = 0;
  }
 } while (0);
 return i1 | 0;
}

function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i7, i13, i11, i12, i14, i3, i2, i4, i5, i8) {
 i7 = i7 | 0;
 i13 = i13 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i14 = i14 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i6 = 0, i9 = 0, i10 = 0;
 i9 = HEAP32[i12 >> 2] | 0;
 i10 = (i9 | 0) == (i11 | 0);
 do if (i10) {
  i1 = (HEAP32[i8 + 96 >> 2] | 0) == (i7 | 0);
  if (!i1 ? (HEAP32[i8 + 100 >> 2] | 0) != (i7 | 0) : 0) {
   i6 = 5;
   break;
  }
  HEAP32[i12 >> 2] = i11 + 1;
  HEAP8[i11 >> 0] = i1 ? 43 : 45;
  HEAP32[i14 >> 2] = 0;
  i1 = 0;
 } else i6 = 5; while (0);
 L6 : do if ((i6 | 0) == 5) {
  i6 = HEAP8[i2 >> 0] | 0;
  if ((i7 | 0) == (i3 | 0) ? (((i6 & 1) == 0 ? (i6 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0) | 0) != 0 : 0) {
   i1 = HEAP32[i5 >> 2] | 0;
   if ((i1 - i4 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i14 >> 2] | 0;
   HEAP32[i5 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i14 >> 2] = 0;
   i1 = 0;
   break;
  }
  i2 = i8 + 104 | 0;
  i1 = i8;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) {
    i1 = i2;
    break;
   }
   if ((HEAP32[i1 >> 2] | 0) == (i7 | 0)) break;
   i1 = i1 + 4 | 0;
  }
  i1 = i1 - i8 | 0;
  i2 = i1 >> 2;
  if ((i1 | 0) > 92) i1 = -1; else {
   switch (i13 | 0) {
   case 10:
   case 8:
    {
     if ((i2 | 0) >= (i13 | 0)) {
      i1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if ((i1 | 0) >= 88) {
      if (i10) {
       i1 = -1;
       break L6;
      }
      if ((i9 - i11 | 0) >= 3) {
       i1 = -1;
       break L6;
      }
      if ((HEAP8[i9 + -1 >> 0] | 0) != 48) {
       i1 = -1;
       break L6;
      }
      HEAP32[i14 >> 2] = 0;
      i1 = HEAP8[35270 + i2 >> 0] | 0;
      HEAP32[i12 >> 2] = i9 + 1;
      HEAP8[i9 >> 0] = i1;
      i1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   i1 = HEAP8[35270 + i2 >> 0] | 0;
   HEAP32[i12 >> 2] = i9 + 1;
   HEAP8[i9 >> 0] = i1;
   HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
   i1 = 0;
  }
 } while (0);
 return i1 | 0;
}

function __ZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEE(i8, i7, i3, i5) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i2 = i11 + 36 | 0;
 i10 = i11 + 40 | 0;
 i6 = i11;
 i4 = i11 + 24 | 0;
 i9 = i7 + 4 | 0;
 i1 = HEAP32[i9 >> 2] | 0;
 if (i1 >>> 0 > 250) {
  i1 = HEAP32[i7 + 12 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 127](i1, 20201);
  i1 = HEAP32[i9 >> 2] | 0;
 }
 HEAP32[i9 >> 2] = i1 + 1;
 i1 = (HEAP32[i7 >> 2] | 0) + 84 | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 i1 = __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixEOS2_(i1, i2) | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 if (!i1) ___assert_fail(30907, 20213, 650, 20236);
 __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN13FunctionScopeC2EPNS_8FunctionES9_(i10, i1, i5);
 HEAP32[i4 >> 2] = 3164;
 HEAP32[i4 + 4 >> 2] = i7;
 HEAP32[i4 + 8 >> 2] = i10;
 __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i6, i4, HEAP32[i1 + 36 >> 2] | 0);
 i7 = HEAP32[i6 + 16 >> 2] | 0;
 if (!((i7 | 0) == 0 | (i7 | 0) == (HEAP32[10249] | 0))) ___assert_fail(20249, 20213, 658, 20236);
 HEAP32[i8 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i8 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 HEAP32[i8 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
 HEAP32[i8 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 if (!i2) {
  HEAP32[i8 >> 2] = 0;
  i1 = i8 + 8 | 0;
  HEAP32[i1 >> 2] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  i1 = 0;
 } else i1 = HEAP32[i8 >> 2] | 0;
 if ((i2 | 0) == (i1 | 0)) {
  HEAP32[i9 >> 2] = (HEAP32[i9 >> 2] | 0) + -1;
  __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm7LiteralEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEED2Ev(i10);
  STACKTOP = i11;
  return;
 } else ___assert_fail(20297, 20213, 661, 20236);
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE8parseForERPcPKc(i15, i14, i13) {
 i15 = i15 | 0;
 i14 = i14 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i8 = i16 + 28 | 0;
 i7 = i16 + 24 | 0;
 i6 = i16 + 20 | 0;
 i5 = i16 + 16 | 0;
 i9 = i16 + 12 | 0;
 i10 = i16 + 8 | 0;
 i11 = i16 + 4 | 0;
 i12 = i16;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i14);
 i1 = HEAP32[i14 >> 2] | 0;
 if ((HEAP8[i1 >> 0] | 0) != 40) ___assert_fail(23584, 23426, 498, 24055);
 HEAP32[i14 >> 2] = i1 + 1;
 i4 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i15, i14, 23393) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i14);
 i1 = HEAP32[i14 >> 2] | 0;
 if ((HEAP8[i1 >> 0] | 0) != 59) ___assert_fail(24064, 23426, 502, 24055);
 HEAP32[i14 >> 2] = i1 + 1;
 i3 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i15, i14, 23393) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i14);
 i1 = HEAP32[i14 >> 2] | 0;
 if ((HEAP8[i1 >> 0] | 0) != 59) ___assert_fail(24064, 23426, 506, 24055);
 HEAP32[i14 >> 2] = i1 + 1;
 i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i15, i14, 38469) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i14);
 i2 = HEAP32[i14 >> 2] | 0;
 if ((HEAP8[i2 >> 0] | 0) == 41) {
  HEAP32[i14 >> 2] = i2 + 1;
  i15 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE19parseMaybeBracketedERPcPKc(i15, i14, i13) | 0;
  HEAP32[i9 >> 2] = i4;
  HEAP32[i10 >> 2] = i3;
  HEAP32[i11 >> 2] = i1;
  HEAP32[i12 >> 2] = i15;
  HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i6 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i7 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i12 >> 2];
  i15 = __ZN6cashew12ValueBuilder7makeForENS_3RefES1_S1_S1_(i5, i6, i7, i8) | 0;
  STACKTOP = i16;
  return i15 | 0;
 } else ___assert_fail(23806, 23426, 510, 24055);
 return 0;
}

function __ZN4wasm22SExpressionWasmBuilder9makeStoreERNS_7ElementENS_8WasmTypeE(i9, i8, i1) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = __ZN4wasm7Element4listEv(i8) | 0;
 i3 = _strchr(__ZN4wasm7Element5c_strEv(HEAP32[HEAP32[i3 >> 2] >> 2] | 0) | 0, 46) | 0;
 i7 = __ZN10MixedArena5allocIN4wasm5StoreEEEPT_v(HEAP32[i9 + 4 >> 2] | 0) | 0;
 HEAP32[i7 + 4 >> 2] = i1;
 i1 = __ZN4wasm15getWasmTypeSizeENS_8WasmTypeE(i1) | 0;
 i2 = i7 + 8 | 0;
 HEAP32[i2 >> 2] = i1;
 L1 : do switch (HEAP8[i3 + 6 >> 0] | 0) {
 case 56:
  {
   HEAP32[i2 >> 2] = 1;
   i4 = 1;
   break;
  }
 case 49:
  {
   if ((HEAP8[i3 + 7 >> 0] | 0) == 54) {
    HEAP32[i2 >> 2] = 2;
    i4 = 2;
    break L1;
   } else ___assert_fail(17472, 17087, 760, 17519);
   break;
  }
 case 51:
  {
   if ((HEAP8[i3 + 7 >> 0] | 0) == 50) {
    HEAP32[i2 >> 2] = 4;
    i4 = 4;
    break L1;
   } else ___assert_fail(17497, 17087, 764, 17519);
   break;
  }
 default:
  i4 = i1;
 } while (0);
 i5 = i7 + 12 | 0;
 HEAP32[i5 >> 2] = 0;
 i6 = i7 + 16 | 0;
 HEAP32[i6 >> 2] = i4;
 i4 = i9 + 8 | 0;
 i1 = 1;
 while (1) {
  i2 = __ZN4wasm7ElementixEj(i8, i1) | 0;
  i2 = (HEAP8[i2 >> 0] | 0) == 0;
  i3 = __ZN4wasm7ElementixEj(i8, i1) | 0;
  if (!i2) {
   i2 = 18;
   break;
  }
  i3 = __ZN4wasm7Element5c_strEv(i3) | 0;
  i2 = _strchr(i3, 61) | 0;
  if (!i2) {
   i2 = 12;
   break;
  }
  i2 = i2 + 1 | 0;
  switch (HEAP8[i3 >> 0] | 0) {
  case 97:
   {
    i3 = _atoi(i2) | 0;
    HEAP32[i6 >> 2] = i3;
    break;
   }
  case 111:
   {
    i3 = _atoi(i2) | 0;
    HEAP32[i5 >> 2] = i3;
    break;
   }
  default:
   __ZNKSt3__18functionIFvvEEclEv(i4);
  }
  i1 = i1 + 1 | 0;
 }
 if ((i2 | 0) == 12) ___assert_fail(26323, 17087, 774, 17519); else if ((i2 | 0) == 18) {
  i6 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i9, i3) | 0;
  HEAP32[i7 + 20 >> 2] = i6;
  i9 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i9, __ZN4wasm7ElementixEj(i8, i1 + 1 | 0) | 0) | 0;
  HEAP32[i7 + 24 >> 2] = i9;
  return i7 | 0;
 }
 return 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE8parseVarERPcPKcb(i13, i15, i1, i2) {
 i13 = i13 | 0;
 i15 = i15 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i16 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i6 = i14 + 36 | 0;
 i5 = i14 + 32 | 0;
 i4 = i14 + 28 | 0;
 i11 = i14;
 i7 = i14 + 24 | 0;
 i8 = i14 + 20 | 0;
 i9 = i14 + 16 | 0;
 i10 = __ZN6cashew12ValueBuilder7makeVarEb(i2) | 0;
 i2 = i11 + 12 | 0;
 i3 = i11 + 8 | 0;
 L1 : while (1) {
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i15);
  i1 = HEAP32[i15 >> 2] | 0;
  if ((HEAP8[i1 >> 0] | 0) == 59) {
   i12 = i1;
   break;
  }
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i11, i1);
  if ((HEAP32[i2 >> 2] | 0) != 2) {
   i16 = 4;
   break;
  }
  HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + (HEAP32[i3 >> 2] | 0);
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i15);
  i1 = HEAP32[i15 >> 2] | 0;
  if ((HEAP8[i1 >> 0] | 0) == 61) {
   HEAP32[i15 >> 2] = i1 + 1;
   __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i15);
   i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i13, i15, 23731) | 0;
  } else i1 = 0;
  HEAP32[i7 >> 2] = i10;
  HEAP32[i8 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i9 >> 2] = i1;
  HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i5 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i6 >> 2] = HEAP32[i9 >> 2];
  __ZN6cashew12ValueBuilder11appendToVarENS_3RefENS_7IStringES1_(i4, i5, i6);
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i15);
  i1 = HEAP32[i15 >> 2] | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 59:
   {
    i16 = 10;
    break L1;
   }
  case 44:
   break;
  default:
   {
    i16 = 9;
    break L1;
   }
  }
  HEAP32[i15 >> 2] = i1 + 1;
 }
 if ((i16 | 0) == 4) ___assert_fail(23703, 23426, 434, 23722); else if ((i16 | 0) == 9) _abort(); else if ((i16 | 0) == 10) i12 = i1;
 HEAP32[i15 >> 2] = i12 + 1;
 STACKTOP = i14;
 return i10 | 0;
}

function _wcsrtombs(i3, i6, i1, i2) {
 i3 = i3 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i8;
 L1 : do if (!i3) {
  i3 = HEAP32[i6 >> 2] | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  if (!i2) i1 = 0; else {
   i1 = 0;
   do {
    if (i2 >>> 0 > 127) {
     i2 = _wcrtomb(i7, i2, 0) | 0;
     if ((i2 | 0) == -1) {
      i1 = -1;
      break L1;
     }
    } else i2 = 1;
    i1 = i2 + i1 | 0;
    i3 = i3 + 4 | 0;
    i2 = HEAP32[i3 >> 2] | 0;
   } while ((i2 | 0) != 0);
  }
 } else {
  L9 : do if (i1 >>> 0 > 3) {
   i2 = i1;
   i4 = HEAP32[i6 >> 2] | 0;
   while (1) {
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 + -1 | 0) >>> 0 > 126) {
     if (!i5) break;
     i5 = _wcrtomb(i3, i5, 0) | 0;
     if ((i5 | 0) == -1) {
      i1 = -1;
      break L1;
     }
     i3 = i3 + i5 | 0;
     i2 = i2 - i5 | 0;
    } else {
     HEAP8[i3 >> 0] = i5;
     i3 = i3 + 1 | 0;
     i2 = i2 + -1 | 0;
     i4 = HEAP32[i6 >> 2] | 0;
    }
    i4 = i4 + 4 | 0;
    HEAP32[i6 >> 2] = i4;
    if (i2 >>> 0 <= 3) break L9;
   }
   HEAP8[i3 >> 0] = 0;
   HEAP32[i6 >> 2] = 0;
   i1 = i1 - i2 | 0;
   break L1;
  } else i2 = i1; while (0);
  if (i2) {
   i4 = HEAP32[i6 >> 2] | 0;
   while (1) {
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 + -1 | 0) >>> 0 > 126) {
     if (!i5) {
      i4 = 19;
      break;
     }
     i5 = _wcrtomb(i7, i5, 0) | 0;
     if ((i5 | 0) == -1) {
      i1 = -1;
      break L1;
     }
     if (i2 >>> 0 < i5 >>> 0) {
      i4 = 22;
      break;
     }
     _wcrtomb(i3, HEAP32[i4 >> 2] | 0, 0) | 0;
     i3 = i3 + i5 | 0;
     i2 = i2 - i5 | 0;
    } else {
     HEAP8[i3 >> 0] = i5;
     i3 = i3 + 1 | 0;
     i2 = i2 + -1 | 0;
     i4 = HEAP32[i6 >> 2] | 0;
    }
    i4 = i4 + 4 | 0;
    HEAP32[i6 >> 2] = i4;
    if (!i2) break L1;
   }
   if ((i4 | 0) == 19) {
    HEAP8[i3 >> 0] = 0;
    HEAP32[i6 >> 2] = 0;
    i1 = i1 - i2 | 0;
    break;
   } else if ((i4 | 0) == 22) {
    i1 = i1 - i2 | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function ___stdio_write(i14, i2, i1) {
 i14 = i14 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i11 = i15 + 16 | 0;
 i10 = i15;
 i3 = i15 + 32 | 0;
 i12 = i14 + 28 | 0;
 i4 = HEAP32[i12 >> 2] | 0;
 HEAP32[i3 >> 2] = i4;
 i13 = i14 + 20 | 0;
 i4 = (HEAP32[i13 >> 2] | 0) - i4 | 0;
 HEAP32[i3 + 4 >> 2] = i4;
 HEAP32[i3 + 8 >> 2] = i2;
 HEAP32[i3 + 12 >> 2] = i1;
 i8 = i14 + 60 | 0;
 i9 = i14 + 44 | 0;
 i2 = 2;
 i4 = i4 + i1 | 0;
 while (1) {
  if (!(HEAP32[10372] | 0)) {
   HEAP32[i11 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i11 + 4 >> 2] = i3;
   HEAP32[i11 + 8 >> 2] = i2;
   i6 = ___syscall_ret(___syscall146(146, i11 | 0) | 0) | 0;
  } else {
   _pthread_cleanup_push(207, i14 | 0);
   HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i10 + 4 >> 2] = i3;
   HEAP32[i10 + 8 >> 2] = i2;
   i6 = ___syscall_ret(___syscall146(146, i10 | 0) | 0) | 0;
   _pthread_cleanup_pop(0);
  }
  if ((i4 | 0) == (i6 | 0)) {
   i4 = 6;
   break;
  }
  if ((i6 | 0) < 0) {
   i4 = 8;
   break;
  }
  i4 = i4 - i6 | 0;
  i5 = HEAP32[i3 + 4 >> 2] | 0;
  if (i6 >>> 0 <= i5 >>> 0) if ((i2 | 0) == 2) {
   HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + i6;
   i7 = i5;
   i2 = 2;
  } else i7 = i5; else {
   i7 = HEAP32[i9 >> 2] | 0;
   HEAP32[i12 >> 2] = i7;
   HEAP32[i13 >> 2] = i7;
   i7 = HEAP32[i3 + 12 >> 2] | 0;
   i6 = i6 - i5 | 0;
   i3 = i3 + 8 | 0;
   i2 = i2 + -1 | 0;
  }
  HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + i6;
  HEAP32[i3 + 4 >> 2] = i7 - i6;
 }
 if ((i4 | 0) == 6) {
  i11 = HEAP32[i9 >> 2] | 0;
  HEAP32[i14 + 16 >> 2] = i11 + (HEAP32[i14 + 48 >> 2] | 0);
  i14 = i11;
  HEAP32[i12 >> 2] = i14;
  HEAP32[i13 >> 2] = i14;
 } else if ((i4 | 0) == 8) {
  HEAP32[i14 + 16 >> 2] = 0;
  HEAP32[i12 >> 2] = 0;
  HEAP32[i13 >> 2] = 0;
  HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 32;
  if ((i2 | 0) == 2) i1 = 0; else i1 = i1 - (HEAP32[i3 + 4 >> 2] | 0) | 0;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function __ZN4wasm7Literal11printDoubleERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEd(i5, d3) {
 i5 = i5 | 0;
 d3 = +d3;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0, d7 = 0.0;
 HEAPF64[tempDoublePtr >> 3] = d3;
 i4 = HEAP32[tempDoublePtr >> 2] | 0;
 i1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i2 = (i1 | 0) < 0;
 do if (d3 == 0.0 & i2) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i5, 21678) | 0; else {
  d7 = +Math_abs(+d3);
  HEAPF64[tempDoublePtr >> 3] = d7;
  i6 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
  if (i6 >>> 0 > 2146435072 | (i6 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i5, i2 ? 39539 : 49108) | 0, 34343) | 0;
   i1 = i1 & 1048575;
   if ((i4 | 0) == 0 & (i1 | 0) == 0) break;
   i6 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i5, 21674) | 0;
   i5 = i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = HEAP32[i5 >> 2] & -75 | 8;
   i6 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy(i6, i4, i1) | 0;
   i6 = i6 + (HEAP32[(HEAP32[i6 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0;
   HEAP32[i6 >> 2] = HEAP32[i6 >> 2] & -75 | 2;
   break;
  }
  i6 = i1 & 2146435072;
  if (!(i6 >>> 0 < 2146435072 | (i6 | 0) == 2146435072 & 0 < 0)) {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i5, i2 ? 13268 : 31918) | 0;
   break;
  }
  i1 = __ZN6cashew9JSPrinter11numToStringEdb(d3, 1) | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 46:
   {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i5, 48) | 0;
    break;
   }
  case 45:
   {
    i2 = i1 + 1 | 0;
    if ((HEAP8[i2 >> 0] | 0) == 46) {
     __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i5, 21678) | 0;
     i1 = i2;
    }
    break;
   }
  default:
   {}
  }
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i5, i1) | 0;
 } while (0);
 return;
}

function __ZN4wasm16PrintSExpression9visitLoadEPNS_4LoadE(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i2 = i5 + 4 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i2 >> 2] | 0, 40) | 0;
 i3 = __Z12prepareColorRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEE(HEAP32[i2 >> 2] | 0) | 0;
 i6 = i4 + 4 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i3, __ZN4wasm13printWasmTypeENS_8WasmTypeE(HEAP32[i6 >> 2] | 0) | 0) | 0, 25957) | 0;
 i3 = i4 + 8 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if (!(i1 >>> 0 >= 4 ? !(i1 >>> 0 < 8 & (HEAP32[i6 >> 2] | 0) == 2) : 0)) {
  switch (i1 | 0) {
  case 1:
   {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i2 >> 2] | 0, 56) | 0;
    break;
   }
  case 2:
   {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 25963) | 0;
    break;
   }
  case 4:
   {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 25966) | 0;
    break;
   }
  default:
   _abort();
  }
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, HEAP8[i4 + 12 >> 0] | 0 ? 25969 : 25972) | 0;
 }
 i1 = i4 + 16 | 0;
 if (HEAP32[i1 >> 2] | 0) {
  i6 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 25975) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(i6, HEAP32[i1 >> 2] | 0) | 0;
 }
 i1 = i4 + 20 | 0;
 if ((HEAP32[i1 >> 2] | 0) != (HEAP32[i3 >> 2] | 0)) {
  i6 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 25984) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(i6, HEAP32[i1 >> 2] | 0) | 0;
 }
 __ZN4wasm16PrintSExpression9incIndentEv(i5);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i5, HEAP32[i4 + 24 >> 2] | 0);
 __ZN4wasm16PrintSExpression9decIndentEv(i5);
 return;
}
function __ZN4wasm16PrintSExpression10visitStoreEPNS_5StoreE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i3 = i6 + 4 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i3 >> 2] | 0, 40) | 0;
 i4 = __Z12prepareColorRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEE(HEAP32[i3 >> 2] | 0) | 0;
 i7 = i5 + 4 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i4, __ZN4wasm13printWasmTypeENS_8WasmTypeE(HEAP32[i7 >> 2] | 0) | 0) | 0, 25992) | 0;
 i4 = i5 + 8 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (!(i1 >>> 0 >= 4 ? !(i1 >>> 0 < 8 & (HEAP32[i7 >> 2] | 0) == 2) : 0)) i2 = 3;
 L3 : do if ((i2 | 0) == 3) switch (i1 | 0) {
 case 1:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i3 >> 2] | 0, 56) | 0;
   break L3;
  }
 case 2:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i3 >> 2] | 0, 25963) | 0;
   break L3;
  }
 case 4:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i3 >> 2] | 0, 25966) | 0;
   break L3;
  }
 default:
  _abort();
 } while (0);
 i1 = i5 + 12 | 0;
 if (HEAP32[i1 >> 2] | 0) {
  i7 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i3 >> 2] | 0, 25975) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(i7, HEAP32[i1 >> 2] | 0) | 0;
 }
 i1 = i5 + 16 | 0;
 if ((HEAP32[i1 >> 2] | 0) != (HEAP32[i4 >> 2] | 0)) {
  i7 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i3 >> 2] | 0, 25984) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(i7, HEAP32[i1 >> 2] | 0) | 0;
 }
 __ZN4wasm16PrintSExpression9incIndentEv(i6);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i6, HEAP32[i5 + 20 >> 2] | 0);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i6, HEAP32[i5 + 24 >> 2] | 0);
 __ZN4wasm16PrintSExpression9decIndentEv(i6);
 return;
}

function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[40064] | 0) == 0 ? ___cxa_guard_acquire(40064) | 0 : 0) {
  if ((HEAP8[40072] | 0) == 0 ? ___cxa_guard_acquire(40072) | 0 : 0) {
   i1 = 43160;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 43328);
   ___cxa_atexit(212, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(40072);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43160, 35787) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43172, 35794) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43184, 35801) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43196, 35809) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43208, 35819) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43220, 35828) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43232, 35835) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43244, 35844) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43256, 35848) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43268, 35852) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43280, 35856) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43292, 35860) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43304, 35864) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43316, 35868) | 0;
  HEAP32[10832] = 43160;
  ___cxa_guard_release(40064);
 }
 return HEAP32[10832] | 0;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEEclEOS5_Oj(i9, i1, i2) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i11 + 24 | 0;
 i5 = i11 + 20 | 0;
 i6 = i11 + 8 | 0;
 i7 = i11 + 4 | 0;
 i8 = i11;
 i2 = HEAP32[i2 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 i1 = HEAP32[i9 + 4 >> 2] | 0;
 i2 = __ZN4wasm15Asm2WasmBuilder12bytesToShiftEj(i1, i2) | 0;
 if (((__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i8, 0) | 0, 41072) | 0 ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i8, 1) | 0, 41244) | 0 : 0) ? __ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i8, 3) | 0, 0) | 0, 41112) | 0 : 0) ? (i12 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i8, 3) | 0, 1) | 0, (__ZN6cashew5Value10getIntegerEv(HEAP32[i12 >> 2] | 0) | 0) == (i2 | 0)) : 0) {
  i3 = HEAP32[i9 + 8 >> 2] | 0;
  i12 = __ZN6cashew3RefixEj(i8, 2) | 0;
  HEAP32[i5 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
  i3 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i3, i4) | 0;
 } else i10 = 6;
 do if ((i10 | 0) == 6) if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i8, 0) | 0, 41112) | 0) {
  i12 = __ZN6cashew3RefixEj(i8, 1) | 0;
  i12 = (__ZN6cashew5Value10getIntegerEv(HEAP32[i12 >> 2] | 0) | 0) << i2;
  i3 = __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(HEAP32[i1 + 4 >> 2] | 0) | 0;
  HEAP32[i3 + 8 >> 2] = 1;
  HEAP32[i3 + 16 >> 2] = i12;
  break;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i6, 23117, 20);
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
  __ZN4wasmL8abort_onENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN6cashew3RefE(i6, i4);
 } while (0);
 STACKTOP = i11;
 return i3 | 0;
}

function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[40144] | 0) == 0 ? ___cxa_guard_acquire(40144) | 0 : 0) {
  if ((HEAP8[40152] | 0) == 0 ? ___cxa_guard_acquire(40152) | 0 : 0) {
   i1 = 43972;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 44140);
   ___cxa_atexit(216, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(40152);
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(43972, 9916) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(43984, 9944) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(43996, 9972) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44008, 10004) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44020, 10044) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44032, 10080) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44044, 10108) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44056, 10144) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44068, 10160) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44080, 10176) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44092, 10192) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44104, 10208) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44116, 10224) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44128, 10240) | 0;
  HEAP32[11035] = 43972;
  ___cxa_guard_release(40144);
 }
 return HEAP32[11035] | 0;
}

function __ZN4wasm15Asm2WasmBuilder22getBuiltinFunctionTypeENS_4NameES1_PNSt3__16vectorIPNS_10ExpressionENS2_9allocatorIS5_EEEE(i9, i7, i6, i8) {
 i9 = i9 | 0;
 i7 = i7 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i2 = i10 + 24 | 0;
 i3 = i10 + 12 | 0;
 i5 = i10;
 L1 : do if ((HEAP32[i7 >> 2] | 0) == (HEAP32[10200] | 0) ? (HEAP32[i6 >> 2] | 0) == (HEAP32[10201] | 0) : 0) {
  if (i8 | 0 ? (i4 = HEAP32[i8 >> 2] | 0, ((HEAP32[i8 + 4 >> 2] | 0) - i4 | 0) == 4) : 0) switch (HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] | 0) {
  case 1:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i2, 15772, 2);
    i1 = __ZN4wasm18ensureFunctionTypeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_6ModuleER10MixedArena(i2, HEAP32[i9 >> 2] | 0, HEAP32[i9 + 4 >> 2] | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
    break L1;
   }
  case 3:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i3, 15775, 2);
    i1 = __ZN4wasm18ensureFunctionTypeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_6ModuleER10MixedArena(i3, HEAP32[i9 >> 2] | 0, HEAP32[i9 + 4 >> 2] | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
    break L1;
   }
  case 4:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i5, 15778, 2);
    i1 = __ZN4wasm18ensureFunctionTypeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_6ModuleER10MixedArena(i5, HEAP32[i9 >> 2] | 0, HEAP32[i9 + 4 >> 2] | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
    break L1;
   }
  default:
   {
    i1 = 0;
    break L1;
   }
  }
  ___assert_fail(15715, 13478, 407, 15749);
 } else i1 = 0; while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function ___cxx_global_array_dtor_112(i1) {
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44712);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44700);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44688);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44676);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44664);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44652);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44640);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44628);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44616);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44604);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44592);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44580);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44568);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44556);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44544);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44532);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44520);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44508);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44496);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44484);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44472);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44460);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44448);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44436);
 return;
}

function ___cxx_global_array_dtor_109(i1) {
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43900);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43888);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43876);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43864);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43852);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43840);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43828);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43816);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43804);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43792);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43780);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43768);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43756);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43744);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43732);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43720);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43708);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43696);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43684);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43672);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43660);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43648);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43636);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43624);
 return;
}

function ___cxx_global_array_dtor_85(i1) {
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44420);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44408);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44396);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44384);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44372);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44360);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44348);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44336);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44324);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44312);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44300);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44288);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44276);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44264);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44252);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44240);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44228);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44216);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44204);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44192);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44180);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44168);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44156);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44144);
 return;
}

function ___cxx_global_array_dtor_61(i1) {
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43608);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43596);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43584);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43572);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43560);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43548);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43536);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43524);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43512);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43500);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43488);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43476);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43464);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43452);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43440);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43428);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43416);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43404);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43392);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43380);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43368);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43356);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43344);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43332);
 return;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE8__rehashEj(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i11 + 4 | 0;
 L1 : do if (i10) {
  i9 = __Znwj(i10 << 2) | 0;
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = i10;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i10 | 0)) break;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i3 = i11 + 8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 | 0) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   i8 = i10 + -1 | 0;
   i9 = (i8 & i10 | 0) == 0;
   if (i9) i2 = i2 & i8; else i2 = (i2 >>> 0) % (i10 >>> 0) | 0;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i2 << 2) >> 2] = i3;
   while (1) {
    i7 = i1;
    L21 : while (1) while (1) {
     i1 = HEAP32[i7 >> 2] | 0;
     if (!i1) break L1;
     i3 = HEAP32[i1 + 4 >> 2] | 0;
     if (i9) i6 = i3 & i8; else i6 = (i3 >>> 0) % (i10 >>> 0) | 0;
     if ((i6 | 0) == (i2 | 0)) {
      i7 = i1;
      continue L21;
     }
     i4 = (HEAP32[i11 >> 2] | 0) + (i6 << 2) | 0;
     if (!(HEAP32[i4 >> 2] | 0)) {
      i2 = i6;
      i3 = i7;
      break L21;
     }
     i5 = i1 + 8 | 0;
     i3 = i1;
     while (1) {
      i4 = HEAP32[i3 >> 2] | 0;
      if (!i4) break;
      if ((HEAP32[i5 >> 2] | 0) == (HEAP32[i4 + 8 >> 2] | 0)) i3 = i4; else break;
     }
     HEAP32[i7 >> 2] = i4;
     HEAP32[i3 >> 2] = HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i6 << 2) >> 2] >> 2];
     HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i6 << 2) >> 2] >> 2] = i1;
    }
    HEAP32[i4 >> 2] = i3;
   }
  }
 } else {
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = 0;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = 0;
 } while (0);
 return;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEE8__rehashEj(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i11 + 4 | 0;
 L1 : do if (i10) {
  i9 = __Znwj(i10 << 2) | 0;
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = i10;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i10 | 0)) break;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i3 = i11 + 8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 | 0) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   i8 = i10 + -1 | 0;
   i9 = (i8 & i10 | 0) == 0;
   if (i9) i2 = i2 & i8; else i2 = (i2 >>> 0) % (i10 >>> 0) | 0;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i2 << 2) >> 2] = i3;
   while (1) {
    i7 = i1;
    L21 : while (1) while (1) {
     i1 = HEAP32[i7 >> 2] | 0;
     if (!i1) break L1;
     i3 = HEAP32[i1 + 4 >> 2] | 0;
     if (i9) i6 = i3 & i8; else i6 = (i3 >>> 0) % (i10 >>> 0) | 0;
     if ((i6 | 0) == (i2 | 0)) {
      i7 = i1;
      continue L21;
     }
     i4 = (HEAP32[i11 >> 2] | 0) + (i6 << 2) | 0;
     if (!(HEAP32[i4 >> 2] | 0)) {
      i2 = i6;
      i3 = i7;
      break L21;
     }
     i5 = i1 + 8 | 0;
     i3 = i1;
     while (1) {
      i4 = HEAP32[i3 >> 2] | 0;
      if (!i4) break;
      if ((HEAP32[i5 >> 2] | 0) == (HEAP32[i4 + 8 >> 2] | 0)) i3 = i4; else break;
     }
     HEAP32[i7 >> 2] = i4;
     HEAP32[i3 >> 2] = HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i6 << 2) >> 2] >> 2];
     HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i6 << 2) >> 2] >> 2] = i1;
    }
    HEAP32[i4 >> 2] = i3;
   }
  }
 } else {
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = 0;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = 0;
 } while (0);
 return;
}

function __ZN4wasm22SExpressionWasmBuilder16stringToWasmTypeEPKcbb(i6, i3, i5, i2) {
 i6 = i6 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i1 = 0, i4 = 0;
 i1 = HEAP8[i3 >> 0] | 0;
 L1 : do switch (i1 << 24 >> 24) {
 case 105:
  {
   switch (HEAP8[i3 + 1 >> 0] | 0) {
   case 51:
    break;
   case 54:
    {
     if ((HEAP8[i3 + 2 >> 0] | 0) != 52) {
      i4 = 17;
      break L1;
     }
     if (i2) {
      i1 = 2;
      i4 = 19;
      break L1;
     }
     i1 = (HEAP8[i3 + 3 >> 0] | 0) == 0;
     if (i1 | i5) {
      i1 = i1 ? 2 : 0;
      i4 = 19;
      break L1;
     } else {
      i4 = 18;
      break L1;
     }
    }
   default:
    {
     i4 = 17;
     break L1;
    }
   }
   if ((HEAP8[i3 + 2 >> 0] | 0) == 50) if (!i2 ? (HEAP8[i3 + 3 >> 0] | 0) != 0 : 0) if (i1 << 24 >> 24 == 102) i4 = 10; else i4 = 17; else {
    i1 = 1;
    i4 = 19;
   } else i4 = 17;
   break;
  }
 case 102:
  {
   i4 = 10;
   break;
  }
 default:
  i4 = 17;
 } while (0);
 L11 : do if ((i4 | 0) == 10) switch (HEAP8[i3 + 1 >> 0] | 0) {
 case 51:
  {
   if ((HEAP8[i3 + 2 >> 0] | 0) != 50) {
    i4 = 17;
    break L11;
   }
   if (i2) {
    i1 = 3;
    i4 = 19;
    break L11;
   }
   i1 = (HEAP8[i3 + 3 >> 0] | 0) == 0;
   if (i1 | i5) {
    i1 = i1 ? 3 : 0;
    i4 = 19;
    break L11;
   } else {
    i4 = 18;
    break L11;
   }
  }
 case 54:
  {
   if ((HEAP8[i3 + 2 >> 0] | 0) != 52) {
    i4 = 17;
    break L11;
   }
   if (i2) {
    i1 = 4;
    i4 = 19;
    break L11;
   }
   i1 = (HEAP8[i3 + 3 >> 0] | 0) == 0;
   if (i1 | i5) {
    i1 = i1 ? 4 : 0;
    i4 = 19;
    break L11;
   } else {
    i4 = 18;
    break L11;
   }
  }
 default:
  {
   i4 = 17;
   break L11;
  }
 } while (0);
 if ((i4 | 0) == 17) if (i5) {
  i1 = 0;
  i4 = 19;
 } else i4 = 18;
 if ((i4 | 0) == 18) {
  __ZNKSt3__18functionIFvvEEclEv(i6 + 8 | 0);
  _abort();
 } else if ((i4 | 0) == 19) return i1 | 0;
 return 0;
}

function __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(i6, i1, i7) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i4 = i1;
 i3 = i7 - i4 >> 3;
 i2 = i6 + 8 | 0;
 i5 = HEAP32[i6 >> 2] | 0;
 L1 : do if (i3 >>> 0 <= (HEAP32[i2 >> 2] | 0) - i5 >> 3 >>> 0) {
  i6 = i6 + 4 | 0;
  i2 = (HEAP32[i6 >> 2] | 0) - i5 >> 3;
  i8 = i3 >>> 0 > i2 >>> 0;
  i3 = i1 + (i2 << 3) | 0;
  i2 = (i8 ? i3 : i7) - i4 | 0;
  _memmove(i5 | 0, i1 | 0, i2 | 0) | 0;
  i2 = i5 + (i2 >> 3 << 3) | 0;
  if (i8) {
   i1 = i3;
   while (1) {
    if ((i1 | 0) == (i7 | 0)) break L1;
    i4 = i1;
    i5 = HEAP32[i4 + 4 >> 2] | 0;
    i8 = HEAP32[i6 >> 2] | 0;
    HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
    HEAP32[i8 + 4 >> 2] = i5;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 8;
    i1 = i1 + 8 | 0;
   }
  } else {
   i1 = HEAP32[i6 >> 2] | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break L1;
    i8 = i1 + -8 | 0;
    HEAP32[i6 >> 2] = i8;
    i1 = i8;
   }
  }
 } else {
  __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE10deallocateEv(i6);
  if (i3 >>> 0 > 536870911) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
  i2 = (HEAP32[i2 >> 2] | 0) - (HEAP32[i6 >> 2] | 0) | 0;
  if (i2 >> 3 >>> 0 < 268435455) {
   i2 = i2 >> 2;
   i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  } else i2 = 536870911;
  __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE8allocateEj(i6, i2);
  i2 = i6 + 4 | 0;
  while (1) {
   if ((i1 | 0) == (i7 | 0)) break L1;
   i5 = i1;
   i6 = HEAP32[i5 + 4 >> 2] | 0;
   i8 = HEAP32[i2 >> 2] | 0;
   HEAP32[i8 >> 2] = HEAP32[i5 >> 2];
   HEAP32[i8 + 4 >> 2] = i6;
   HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 8;
   i1 = i1 + 8 | 0;
  }
 } while (0);
 return;
}

function __ZZ11instantiateEN19JSExternalInterface10callImportEPN4wasm6ImportERNSt3__16vectorINS0_7LiteralENS3_9allocatorIS5_EEEE(i6, i2, i7, i4) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var d1 = 0.0, i3 = 0, i5 = 0;
 if (HEAP8[45016] | 0) {
  i3 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42128, 17985) | 0;
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i3, HEAP32[i7 >> 2] | 0) | 0, 10) | 0;
 }
 _emscripten_asm_const_v(14);
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = HEAP32[i4 >> 2] | 0;
 L4 : while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  switch (HEAP32[i2 >> 2] | 0) {
  case 1:
   {
    _emscripten_asm_const_ii(16, __ZNK4wasm7Literal6geti32Ev(i2) | 0) | 0;
    break;
   }
  case 3:
   {
    _emscripten_asm_const_id(16, +(+__ZNK4wasm7Literal6getf32Ev(i2))) | 0;
    break;
   }
  case 4:
   {
    _emscripten_asm_const_id(16, +(+__ZNK4wasm7Literal6getf64Ev(i2))) | 0;
    break;
   }
  default:
   {
    i5 = 10;
    break L4;
   }
  }
  i2 = i2 + 16 | 0;
 }
 if ((i5 | 0) == 10) _abort();
 d1 = +_emscripten_asm_const_dii(15, HEAP32[i7 + 4 >> 2] | 0, HEAP32[i7 + 8 >> 2] | 0);
 if (HEAP8[45016] | 0) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42128, 18310) | 0, d1) | 0, 10) | 0;
 switch (HEAP32[(HEAP32[i7 + 12 >> 2] | 0) + 4 >> 2] | 0) {
 case 0:
  {
   HEAP32[i6 >> 2] = 1;
   HEAP32[i6 + 8 >> 2] = 0;
   break;
  }
 case 1:
  {
   HEAP32[i6 >> 2] = 1;
   HEAP32[i6 + 8 >> 2] = ~~d1;
   break;
  }
 case 3:
  {
   HEAP32[i6 >> 2] = 3;
   HEAPF32[i6 + 8 >> 2] = d1;
   break;
  }
 case 4:
  {
   HEAP32[i6 >> 2] = 4;
   HEAPF64[i6 + 8 >> 3] = d1;
   break;
  }
 default:
  _abort();
 }
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEEclEOS5_Oj(i5, i1, i2) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i10 = i14 + 16 | 0;
 i3 = i14 + 12 | 0;
 i11 = i14 + 8 | 0;
 i12 = i14 + 4 | 0;
 i13 = i14;
 i6 = HEAP32[i1 >> 2] | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 HEAP32[i13 >> 2] = i6;
 i1 = HEAP32[i5 + 4 >> 2] | 0;
 i2 = __ZN6cashew5Value4sizeEv(i6) | 0;
 do if ((i2 | 0) == (i4 | 0)) i1 = __ZN10MixedArena5allocIN4wasm3NopEEEPT_v(HEAP32[i1 + 4 >> 2] | 0) | 0; else {
  if ((i2 - i4 | 0) == 1) {
   i1 = HEAP32[i5 + 8 >> 2] | 0;
   i13 = __ZN6cashew3RefixEj(i13, i4) | 0;
   HEAP32[i3 >> 2] = HEAP32[i13 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
   i1 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i1, i10) | 0;
   break;
  }
  i1 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i1 + 4 >> 2] | 0) | 0;
  i5 = i5 + 8 | 0;
  i7 = i1 + 16 | 0;
  i8 = i1 + 20 | 0;
  i9 = i1 + 12 | 0;
  i2 = i6;
  while (1) {
   if (i4 >>> 0 >= (__ZN6cashew5Value4sizeEv(i2) | 0) >>> 0) break;
   i2 = HEAP32[i5 >> 2] | 0;
   i3 = __ZN6cashew3RefixEj(i13, i4) | 0;
   HEAP32[i12 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
   i2 = __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i2, i10) | 0;
   HEAP32[i11 >> 2] = i2;
   i3 = HEAP32[i7 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i8 >> 2] | 0) >>> 0) {
    HEAP32[i3 >> 2] = i2;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 4;
   } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i9, i11);
   i2 = HEAP32[i13 >> 2] | 0;
   i4 = i4 + 1 | 0;
  }
 } while (0);
 STACKTOP = i14;
 return i1 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb(i5, i10, i4, i3, i6) {
 i5 = i5 | 0;
 i10 = i10 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i9 = i11 + 8 | 0;
 i1 = i11 + 4 | 0;
 i2 = i11;
 if (!(HEAP32[i4 + 4 >> 2] & 1)) {
  i8 = HEAP32[(HEAP32[i5 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 >> 2] = HEAP32[i1 >> 2];
  i1 = FUNCTION_TABLE_iiiiii[i8 & 31](i5, i9, i4, i3, i6 & 1) | 0;
 } else {
  i8 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
  HEAP32[i2 >> 2] = i8;
  i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 43100) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i8) | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i6) FUNCTION_TABLE_vii[HEAP32[i2 + 24 >> 2] & 127](i9, i1); else FUNCTION_TABLE_vii[HEAP32[i2 + 28 >> 2] & 127](i9, i1);
  i4 = HEAP8[i9 >> 0] | 0;
  i5 = i9 + 1 | 0;
  i6 = i9 + 8 | 0;
  i8 = HEAP32[i6 >> 2] | 0;
  i7 = i9 + 4 | 0;
  i1 = i4;
  i2 = i8;
  i8 = (i4 & 1) == 0 ? i5 : i8;
  while (1) {
   i4 = (i1 & 1) == 0;
   if ((i8 | 0) == ((i4 ? i5 : i2) + (i4 ? (i1 & 255) >>> 1 : HEAP32[i7 >> 2] | 0) | 0)) break;
   i1 = HEAP8[i8 >> 0] | 0;
   i2 = HEAP32[i10 >> 2] | 0;
   do if (i2 | 0) {
    i3 = i2 + 24 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) != (HEAP32[i2 + 28 >> 2] | 0)) {
     HEAP32[i3 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i1;
     break;
    }
    if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 52 >> 2] & 31](i2, i1 & 255) | 0) == -1) HEAP32[i10 >> 2] = 0;
   } while (0);
   i1 = HEAP8[i9 >> 0] | 0;
   i2 = HEAP32[i6 >> 2] | 0;
   i8 = i8 + 1 | 0;
  }
  i1 = HEAP32[i10 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 }
 STACKTOP = i11;
 return i1 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner10visitBreakEPNS_5BreakE(i11, i10, i9) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i12;
 i7 = i9 + 8 | 0;
 i1 = HEAP32[i9 + 12 >> 2] | 0;
 if (i1) {
  __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i2, i10, i1);
  i6 = HEAP32[i2 >> 2] | 0;
  i5 = HEAP32[i2 + 4 >> 2] | 0;
  i4 = i2 + 8 | 0;
  i3 = HEAP32[i4 >> 2] | 0;
  i4 = HEAP32[i4 + 4 >> 2] | 0;
  i1 = HEAP32[i2 + 16 >> 2] | 0;
  if (!i1) i8 = 4; else {
   HEAP32[i11 >> 2] = i6;
   HEAP32[i11 + 4 >> 2] = i5;
   i10 = i11 + 8 | 0;
   HEAP32[i10 >> 2] = i3;
   HEAP32[i10 + 4 >> 2] = i4;
   HEAP32[i11 + 16 >> 2] = i1;
  }
 } else {
  i3 = 0;
  i4 = 0;
  i6 = 0;
  i5 = 0;
  i8 = 4;
 }
 do if ((i8 | 0) == 4) {
  i2 = HEAP32[i7 >> 2] | 0;
  i1 = HEAP32[i9 + 16 >> 2] | 0;
  if (i1 | 0) {
   __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i11, i10, i1);
   i1 = i11 + 16 | 0;
   if (HEAP32[i1 >> 2] | 0) break;
   i10 = __ZN4wasm7Literal10getIntegerEv(i11) | 0;
   if ((i10 | 0) == 0 & (tempRet0 | 0) == 0) {
    HEAP32[i11 >> 2] = 0;
    i11 = i11 + 8 | 0;
    HEAP32[i11 >> 2] = 0;
    HEAP32[i11 + 4 >> 2] = 0;
    HEAP32[i1 >> 2] = 0;
    break;
   }
  }
  HEAP32[i11 >> 2] = i6;
  HEAP32[i11 + 4 >> 2] = i5;
  i10 = i11 + 8 | 0;
  HEAP32[i10 >> 2] = i3;
  HEAP32[i10 + 4 >> 2] = i4;
  HEAP32[i11 + 16 >> 2] = i2;
 } while (0);
 STACKTOP = i12;
 return;
}

function __ZN4wasm16PrintSExpression9visitLoopEPNS_4LoopE(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i9 + 8 | 0;
 i1 = i9 + 4 | 0;
 i4 = i9;
 i5 = i7 + 4 | 0;
 __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i5 >> 2] | 0, 25811, 0) | 0;
 i2 = i6 + 8 | 0;
 do if (!(HEAP32[i2 >> 2] | 0)) {
  i1 = i6 + 12 | 0;
  if (HEAP32[i1 >> 2] | 0) i8 = 6;
 } else {
  i10 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i5 >> 2] | 0, 32) | 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
  __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i10, i3) | 0;
  if (!(HEAP32[i6 + 12 >> 2] | 0)) ___assert_fail(25816, 25830, 79, 25851); else {
   i1 = i6 + 12 | 0;
   i8 = 6;
   break;
  }
 } while (0);
 if ((i8 | 0) == 6) {
  i10 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i5 >> 2] | 0, 32) | 0;
  HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
  __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i10, i3) | 0;
 }
 __ZN4wasm16PrintSExpression9incIndentEv(i7);
 i1 = i6 + 16 | 0;
 i2 = __ZN4wasm10Expression8dyn_castINS_5BlockEEEPT_v(HEAP32[i1 >> 2] | 0) | 0;
 L10 : do if ((i2 | 0) != 0 ? (HEAP32[i2 + 8 >> 2] | 0) == 0 : 0) {
  i3 = HEAP32[i2 + 16 >> 2] | 0;
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i3 | 0)) break L10;
   __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i7, HEAP32[i1 >> 2] | 0);
   i1 = i1 + 4 | 0;
  }
 } else i8 = 12; while (0);
 if ((i8 | 0) == 12) __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i7, HEAP32[i1 >> 2] | 0);
 __ZN4wasm16PrintSExpression9decIndentEv(i7);
 STACKTOP = i9;
 return;
}

function __ZNSt3__16vectorINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEENS8_ISD_EEE8__appendEj(i8, i6) {
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9;
 i2 = HEAP32[i8 + 8 >> 2] | 0;
 i4 = i8 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (((i2 - i1 | 0) / 20 | 0) >>> 0 < i6 >>> 0) {
  i5 = HEAP32[i8 >> 2] | 0;
  i3 = ((i1 - i5 | 0) / 20 | 0) + i6 | 0;
  if (i3 >>> 0 > 214748364) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
  i1 = (i2 - i5 | 0) / 20 | 0;
  if (i1 >>> 0 < 107374182) {
   i1 = i1 << 1;
   i1 = i1 >>> 0 < i3 >>> 0 ? i3 : i1;
  } else i1 = 214748364;
  __ZNSt3__114__split_bufferINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEERNS8_ISD_EEEC2EjjSF_(i7, i1, ((HEAP32[i4 >> 2] | 0) - i5 | 0) / 20 | 0, i8 + 8 | 0);
  i3 = i7 + 8 | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  i1 = i6;
  i4 = i2;
  while (1) {
   HEAP32[i4 >> 2] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
   HEAP32[i4 + 8 >> 2] = 0;
   HEAP32[i4 + 12 >> 2] = 0;
   HEAPF32[i4 + 16 >> 2] = 1.0;
   i1 = i1 + -1 | 0;
   if (!i1) break; else i4 = i4 + 20 | 0;
  }
  HEAP32[i3 >> 2] = i2 + (i6 * 20 | 0);
  __ZNSt3__16vectorINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEENS8_ISD_EEE26__swap_out_circular_bufferERNS_14__split_bufferISD_RSE_EE(i8, i7);
  __ZNSt3__114__split_bufferINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEERNS8_ISD_EEED2Ev(i7);
 } else __ZNSt3__16vectorINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEENS8_ISD_EEE18__construct_at_endEj(i8, i6);
 STACKTOP = i9;
 return;
}

function _mbsnrtowcs(i2, i12, i3, i1, i9) {
 i2 = i2 | 0;
 i12 = i12 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i9 = i9 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 i8 = i13 + 8 | 0;
 i11 = i13;
 i7 = HEAP32[i12 >> 2] | 0;
 HEAP32[i11 >> 2] = i7;
 i10 = (i2 | 0) != 0;
 i1 = i10 ? i1 : 256;
 i2 = i10 ? i2 : i8;
 i4 = i7;
 L1 : do if ((i1 | 0) != 0 & (i7 | 0) != 0) {
  i6 = i1;
  i7 = i4;
  i1 = 0;
  while (1) {
   i4 = i3 >>> 2;
   i5 = i4 >>> 0 >= i6 >>> 0;
   if (!(i3 >>> 0 > 131 | i5)) {
    i4 = i7;
    break L1;
   }
   i4 = i5 ? i6 : i4;
   i3 = i3 - i4 | 0;
   i4 = _mbsrtowcs(i2, i11, i4, i9) | 0;
   if ((i4 | 0) == -1) {
    i1 = i3;
    break;
   }
   i14 = (i2 | 0) == (i8 | 0);
   i7 = i14 ? 0 : i4;
   i5 = i6 - i7 | 0;
   i2 = i14 ? i2 : i2 + (i4 << 2) | 0;
   i1 = i4 + i1 | 0;
   i4 = HEAP32[i11 >> 2] | 0;
   if ((i6 | 0) != (i7 | 0) & (i4 | 0) != 0) {
    i6 = i5;
    i7 = i4;
   } else {
    i6 = i5;
    break L1;
   }
  }
  i3 = i1;
  i6 = 0;
  i4 = HEAP32[i11 >> 2] | 0;
  i1 = -1;
 } else {
  i6 = i1;
  i1 = 0;
 } while (0);
 L8 : do if ((i4 | 0) != 0 ? (i6 | 0) != 0 & (i3 | 0) != 0 : 0) {
  i5 = i4;
  i4 = i2;
  while (1) {
   i2 = _mbrtowc(i4, i5, i3, i9) | 0;
   if ((i2 + 2 | 0) >>> 0 < 3) break;
   i5 = (HEAP32[i11 >> 2] | 0) + i2 | 0;
   HEAP32[i11 >> 2] = i5;
   i6 = i6 + -1 | 0;
   i1 = i1 + 1 | 0;
   if (!((i6 | 0) != 0 & (i3 | 0) != (i2 | 0))) break L8; else {
    i3 = i3 - i2 | 0;
    i4 = i4 + 4 | 0;
   }
  }
  switch (i2 | 0) {
  case -1:
   {
    i1 = -1;
    break L8;
   }
  case 0:
   {
    HEAP32[i11 >> 2] = 0;
    break L8;
   }
  default:
   {
    HEAP32[i9 >> 2] = 0;
    break L8;
   }
  }
 } while (0);
 if (i10) HEAP32[i12 >> 2] = HEAP32[i11 >> 2];
 STACKTOP = i13;
 return i1 | 0;
}

function __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE8__rehashEj(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i11 + 4 | 0;
 L1 : do if (i10) {
  i9 = __Znwj(i10 << 2) | 0;
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = i10;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i10 | 0)) break;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i3 = i11 + 8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 | 0) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   i8 = i10 + -1 | 0;
   i9 = (i8 & i10 | 0) == 0;
   if (i9) i2 = i2 & i8; else i2 = (i2 >>> 0) % (i10 >>> 0) | 0;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i2 << 2) >> 2] = i3;
   while (1) {
    i7 = i1;
    L21 : while (1) while (1) {
     i1 = HEAP32[i7 >> 2] | 0;
     if (!i1) break L1;
     i3 = HEAP32[i1 + 4 >> 2] | 0;
     if (i9) i6 = i3 & i8; else i6 = (i3 >>> 0) % (i10 >>> 0) | 0;
     if ((i6 | 0) == (i2 | 0)) {
      i7 = i1;
      continue L21;
     }
     i4 = (HEAP32[i11 >> 2] | 0) + (i6 << 2) | 0;
     if (!(HEAP32[i4 >> 2] | 0)) {
      i2 = i6;
      i3 = i7;
      break L21;
     }
     i5 = i1 + 8 | 0;
     i3 = i1;
     while (1) {
      i4 = HEAP32[i3 >> 2] | 0;
      if (!i4) break;
      if (!(_strcmp(HEAP32[i5 >> 2] | 0, HEAP32[i4 + 8 >> 2] | 0) | 0)) i3 = i4; else break;
     }
     HEAP32[i7 >> 2] = i4;
     HEAP32[i3 >> 2] = HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i6 << 2) >> 2] >> 2];
     HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i6 << 2) >> 2] >> 2] = i1;
    }
    HEAP32[i4 >> 2] = i3;
   }
  }
 } else {
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = 0;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = 0;
 } while (0);
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb(i5, i9, i4, i3, i6) {
 i5 = i5 | 0;
 i9 = i9 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i7 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i8 = i10 + 8 | 0;
 i1 = i10 + 4 | 0;
 i2 = i10;
 if (!(HEAP32[i4 + 4 >> 2] & 1)) {
  i7 = HEAP32[(HEAP32[i5 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
  i1 = FUNCTION_TABLE_iiiiii[i7 & 31](i5, i8, i4, i3, i6 & 1) | 0;
 } else {
  i7 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
  HEAP32[i2 >> 2] = i7;
  i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i2, 43128) | 0;
  __ZNSt3__114__shared_count16__release_sharedEv(i7) | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i6) FUNCTION_TABLE_vii[HEAP32[i2 + 24 >> 2] & 127](i8, i1); else FUNCTION_TABLE_vii[HEAP32[i2 + 28 >> 2] & 127](i8, i1);
  i4 = HEAP8[i8 >> 0] | 0;
  i5 = i8 + 4 | 0;
  i6 = i8 + 8 | 0;
  i7 = HEAP32[i6 >> 2] | 0;
  i1 = i4;
  i2 = i7;
  i7 = (i4 & 1) == 0 ? i5 : i7;
  while (1) {
   i4 = (i1 & 1) == 0;
   if ((i7 | 0) == ((i4 ? i5 : i2) + ((i4 ? (i1 & 255) >>> 1 : HEAP32[i5 >> 2] | 0) << 2) | 0)) break;
   i1 = HEAP32[i7 >> 2] | 0;
   i2 = HEAP32[i9 >> 2] | 0;
   if (i2 | 0) {
    i3 = i2 + 24 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i2 + 28 >> 2] | 0)) i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i2 >> 2] | 0) + 52 >> 2] & 31](i2, i1) | 0; else {
     HEAP32[i3 >> 2] = i4 + 4;
     HEAP32[i4 >> 2] = i1;
    }
    if ((i1 | 0) == -1) HEAP32[i9 >> 2] = 0;
   }
   i1 = HEAP8[i8 >> 0] | 0;
   i2 = HEAP32[i6 >> 2] | 0;
   i7 = i7 + 4 | 0;
  }
  i1 = HEAP32[i9 >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i8);
 }
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEj(i11, i10) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = i11 + 4 | 0;
 L1 : do if (i10) {
  i9 = __Znwj(i10 << 2) | 0;
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = i9;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = i10;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == (i10 | 0)) break;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  i3 = i11 + 8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 | 0) {
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   i8 = i10 + -1 | 0;
   i9 = (i8 & i10 | 0) == 0;
   if (i9) i2 = i2 & i8; else i2 = (i2 >>> 0) % (i10 >>> 0) | 0;
   HEAP32[(HEAP32[i11 >> 2] | 0) + (i2 << 2) >> 2] = i3;
   while (1) {
    i7 = i1;
    L21 : while (1) while (1) {
     i1 = HEAP32[i7 >> 2] | 0;
     if (!i1) break L1;
     i3 = HEAP32[i1 + 4 >> 2] | 0;
     if (i9) i6 = i3 & i8; else i6 = (i3 >>> 0) % (i10 >>> 0) | 0;
     if ((i6 | 0) == (i2 | 0)) {
      i7 = i1;
      continue L21;
     }
     i4 = (HEAP32[i11 >> 2] | 0) + (i6 << 2) | 0;
     if (!(HEAP32[i4 >> 2] | 0)) {
      i2 = i6;
      i3 = i7;
      break L21;
     }
     i5 = i1 + 8 | 0;
     i3 = i1;
     while (1) {
      i4 = HEAP32[i3 >> 2] | 0;
      if (!i4) break;
      if ((HEAP32[i5 >> 2] | 0) == (HEAP32[i4 + 8 >> 2] | 0)) i3 = i4; else break;
     }
     HEAP32[i7 >> 2] = i4;
     HEAP32[i3 >> 2] = HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i6 << 2) >> 2] >> 2];
     HEAP32[HEAP32[(HEAP32[i11 >> 2] | 0) + (i6 << 2) >> 2] >> 2] = i1;
    }
    HEAP32[i4 >> 2] = i3;
   }
  }
 } else {
  i1 = HEAP32[i11 >> 2] | 0;
  HEAP32[i11 >> 2] = 0;
  if (i1 | 0) __ZdlPv(i1);
  HEAP32[i2 >> 2] = 0;
 } while (0);
 return;
}

function __ZN4wasm12PassRegistry12registerPassEPKcS2_NSt3__18functionIFPNS_4PassEvEEE(i9, i8, i7, i6) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i1 = i10 + 88 | 0;
 i2 = i10 + 76 | 0;
 i3 = i10 + 24 | 0;
 i4 = i10 + 64 | 0;
 i5 = i10;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, i8, _strlen(i8) | 0);
 if ((__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_(i9, i1) | 0) == (i9 + 4 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i2, i8, _strlen(i8) | 0);
  i9 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixEOS6_(i9, i2) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i4, i7, _strlen(i7) | 0);
  __ZNSt3__18functionIFPN4wasm4PassEvEEC2ERKS5_(i5, i6);
  __ZN4wasm12PassRegistry8PassInfoC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_8functionIFPNS_4PassEvEEE(i3, i4, i5);
  __ZN4wasm12PassRegistry8PassInfoaSEOS1_(i9, i3) | 0;
  __ZN4wasm12PassRegistry8PassInfoD2Ev(i3);
  __ZNSt3__18functionIFPN4wasm4PassEvEED2Ev(i5);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
  STACKTOP = i10;
  return;
 } else ___assert_fail(24758, 24798, 32, 24811);
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE10parseBlockERPcPKcNS_7IStringES8_(i16, i15, i14, i12, i13) {
 i16 = i16 | 0;
 i15 = i15 | 0;
 i14 = i14 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i6 = i17;
 i5 = i17 + 24 | 0;
 i7 = i17 + 20 | 0;
 i8 = i17 + 16 | 0;
 i9 = __ZN6cashew12ValueBuilder9makeBlockEv() | 0;
 i10 = i6 + 12 | 0;
 i11 = i6 + 12 | 0;
 L1 : while (1) {
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i15);
  i4 = HEAP32[i15 >> 2] | 0;
  i2 = HEAP8[i4 >> 0] | 0;
  switch (i2 << 24 >> 24) {
  case 0:
   break L1;
  case 59:
   {
    HEAP32[i15 >> 2] = i4 + 1;
    continue L1;
   }
  default:
   i1 = i14;
  }
  while (1) {
   i3 = HEAP8[i1 >> 0] | 0;
   if (!(i3 << 24 >> 24)) break;
   if (i3 << 24 >> 24 == i2 << 24 >> 24) break L1; else i1 = i1 + 1 | 0;
  }
  i1 = HEAP32[i12 >> 2] | 0;
  if ((i1 | 0 ? HEAP8[i1 >> 0] | 0 : 0) ? (__ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i6, i4), (HEAP32[i11 >> 2] | 0) == 0 ? (HEAP32[i6 >> 2] | 0) == (i1 | 0) : 0) : 0) break;
  i1 = HEAP32[i13 >> 2] | 0;
  if ((i1 | 0 ? HEAP8[i1 >> 0] | 0 : 0) ? (__ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i6, HEAP32[i15 >> 2] | 0), (HEAP32[i10 >> 2] | 0) == 0 ? (HEAP32[i6 >> 2] | 0) == (i1 | 0) : 0) : 0) break;
  i4 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE23parseElementOrStatementERPcPKc(i16, i15, i14) | 0;
  HEAP32[i7 >> 2] = i9;
  HEAP32[i8 >> 2] = i4;
  HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i6 >> 2] = HEAP32[i8 >> 2];
  __ZN6cashew12ValueBuilder13appendToBlockENS_3RefES1_(i5, i6);
 }
 STACKTOP = i17;
 return i9 | 0;
}

function __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE8__appendEj(i8, i6) {
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9;
 i2 = HEAP32[i8 + 8 >> 2] | 0;
 i4 = i8 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (((i2 - i1 | 0) / 12 | 0) >>> 0 < i6 >>> 0) {
  i5 = HEAP32[i8 >> 2] | 0;
  i3 = ((i1 - i5 | 0) / 12 | 0) + i6 | 0;
  if (i3 >>> 0 > 357913941) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
  i1 = (i2 - i5 | 0) / 12 | 0;
  if (i1 >>> 0 < 178956970) {
   i1 = i1 << 1;
   i1 = i1 >>> 0 < i3 >>> 0 ? i3 : i1;
  } else i1 = 357913941;
  __ZNSt3__114__split_bufferINS_6vectorIN6cashew6ParserINS2_3RefENS2_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS7_EEEERNS8_ISA_EEEC2EjjSC_(i7, i1, ((HEAP32[i4 >> 2] | 0) - i5 | 0) / 12 | 0, i8 + 8 | 0);
  i3 = i7 + 8 | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  i1 = i6;
  i4 = i2;
  while (1) {
   HEAP32[i4 >> 2] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
   HEAP32[i4 + 8 >> 2] = 0;
   i1 = i1 + -1 | 0;
   if (!i1) break; else i4 = i4 + 12 | 0;
  }
  HEAP32[i3 >> 2] = i2 + (i6 * 12 | 0);
  __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS9_RSA_EE(i8, i7);
  __ZNSt3__114__split_bufferINS_6vectorIN6cashew6ParserINS2_3RefENS2_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS7_EEEERNS8_ISA_EEED2Ev(i7);
 } else __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE18__construct_at_endEj(i8, i6);
 STACKTOP = i9;
 return;
}

function __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(i7, i1) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 HEAP8[i1 + 12 >> 0] = (i1 | 0) == (i7 | 0) & 1;
 i4 = i1;
 while (1) {
  if ((i4 | 0) == (i7 | 0)) break;
  i2 = HEAP32[i4 + 8 >> 2] | 0;
  i6 = i2 + 12 | 0;
  if (HEAP8[i6 >> 0] | 0) break;
  i3 = i2 + 8 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  i5 = HEAP32[i1 >> 2] | 0;
  if ((i5 | 0) == (i2 | 0)) {
   i5 = HEAP32[i1 + 4 >> 2] | 0;
   if (!i5) {
    i8 = 8;
    break;
   }
   i5 = i5 + 12 | 0;
   if (HEAP8[i5 >> 0] | 0) {
    i8 = 8;
    break;
   }
   HEAP8[i6 >> 0] = 1;
   HEAP8[i1 + 12 >> 0] = (i1 | 0) == (i7 | 0) & 1;
   HEAP8[i5 >> 0] = 1;
   i4 = i1;
   continue;
  } else {
   if (!i5) {
    i8 = 14;
    break;
   }
   i5 = i5 + 12 | 0;
   if (HEAP8[i5 >> 0] | 0) {
    i8 = 14;
    break;
   }
   HEAP8[i6 >> 0] = 1;
   HEAP8[i1 + 12 >> 0] = (i1 | 0) == (i7 | 0) & 1;
   HEAP8[i5 >> 0] = 1;
   i4 = i1;
   continue;
  }
 }
 if ((i8 | 0) == 8) {
  if ((HEAP32[i2 >> 2] | 0) != (i4 | 0)) {
   __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i2);
   i1 = HEAP32[i3 >> 2] | 0;
   i2 = i1;
   i1 = HEAP32[i1 + 8 >> 2] | 0;
  }
  HEAP8[i2 + 12 >> 0] = 1;
  HEAP8[i1 + 12 >> 0] = 0;
  __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i1);
 } else if ((i8 | 0) == 14) {
  if ((HEAP32[i2 >> 2] | 0) == (i4 | 0)) {
   __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i2);
   i1 = HEAP32[i3 >> 2] | 0;
   i2 = i1;
   i1 = HEAP32[i1 + 8 >> 2] | 0;
  }
  HEAP8[i2 + 12 >> 0] = 1;
  HEAP8[i1 + 12 >> 0] = 0;
  __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i1);
 }
 return;
}

function __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(i6, i1, i7) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i4 = i1;
 i3 = i7 - i4 >> 2;
 i2 = i6 + 8 | 0;
 i5 = HEAP32[i6 >> 2] | 0;
 L1 : do if (i3 >>> 0 <= (HEAP32[i2 >> 2] | 0) - i5 >> 2 >>> 0) {
  i6 = i6 + 4 | 0;
  i2 = (HEAP32[i6 >> 2] | 0) - i5 >> 2;
  i8 = i3 >>> 0 > i2 >>> 0;
  i3 = i1 + (i2 << 2) | 0;
  i2 = (i8 ? i3 : i7) - i4 | 0;
  _memmove(i5 | 0, i1 | 0, i2 | 0) | 0;
  i2 = i5 + (i2 >> 2 << 2) | 0;
  if (i8) {
   i1 = i3;
   while (1) {
    if ((i1 | 0) == (i7 | 0)) break L1;
    HEAP32[HEAP32[i6 >> 2] >> 2] = HEAP32[i1 >> 2];
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
    i1 = i1 + 4 | 0;
   }
  } else {
   i1 = HEAP32[i6 >> 2] | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break L1;
    i8 = i1 + -4 | 0;
    HEAP32[i6 >> 2] = i8;
    i1 = i8;
   }
  }
 } else {
  __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE10deallocateEv(i6);
  if (i3 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
  i2 = (HEAP32[i2 >> 2] | 0) - (HEAP32[i6 >> 2] | 0) | 0;
  if (i2 >> 2 >>> 0 < 536870911) {
   i2 = i2 >> 1;
   i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  } else i2 = 1073741823;
  __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE8allocateEj(i6, i2);
  i2 = i6 + 4 | 0;
  while (1) {
   if ((i1 | 0) == (i7 | 0)) break L1;
   HEAP32[HEAP32[i2 >> 2] >> 2] = HEAP32[i1 >> 2];
   HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
   i1 = i1 + 4 | 0;
  }
 } while (0);
 return;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner7visitIfEPNS_2IfE(i3, i4, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i5;
 __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i2, i4, HEAP32[i1 + 8 >> 2] | 0);
 do if (!(HEAP32[i2 + 16 >> 2] | 0)) if (!(__ZNK4wasm7Literal6geti32Ev(i2) | 0)) {
  i1 = HEAP32[i1 + 16 >> 2] | 0;
  if (!i1) {
   HEAP32[i3 >> 2] = 0;
   i4 = i3 + 8 | 0;
   HEAP32[i4 >> 2] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
   HEAP32[i3 + 16 >> 2] = 0;
   break;
  } else {
   __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i3, i4, i1);
   break;
  }
 } else {
  __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i3, i4, HEAP32[i1 + 12 >> 2] | 0);
  if (HEAP32[i3 + 16 >> 2] | 0) break;
  if (HEAP32[i1 + 16 >> 2] | 0) break;
  HEAP32[i3 >> 2] = 0;
  i4 = i3 + 8 | 0;
  HEAP32[i4 >> 2] = 0;
  HEAP32[i4 + 4 >> 2] = 0;
  break;
 } else {
  HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i3 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i3 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
  HEAP32[i3 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
  HEAP32[i3 + 16 >> 2] = HEAP32[i2 + 16 >> 2];
  HEAP32[i3 + 20 >> 2] = HEAP32[i2 + 20 >> 2];
 } while (0);
 STACKTOP = i5;
 return;
}

function __ZNSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEE4swapERS7_(i9, i7) {
 i9 = i9 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i10;
 i1 = i9 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i3 = i2;
 i4 = i7 + 16 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i6 = (i5 | 0) == (i7 | 0);
 do if ((i2 | 0) == (i9 | 0)) if (i6) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2, i8);
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i6 >> 2] | 0) + 16 >> 2] & 255](i6);
  HEAP32[i1 >> 2] = 0;
  i6 = HEAP32[i4 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] & 127](i6, i2);
  i6 = HEAP32[i4 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i6 >> 2] | 0) + 16 >> 2] & 255](i6);
  HEAP32[i4 >> 2] = 0;
  HEAP32[i1 >> 2] = i9;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i8 >> 2] | 0) + 12 >> 2] & 127](i8, i5);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i8 >> 2] | 0) + 16 >> 2] & 255](i8);
  HEAP32[i4 >> 2] = i7;
  break;
 } else {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2, i7);
  i9 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i9 >> 2] | 0) + 16 >> 2] & 255](i9);
  i9 = i7 + 16 | 0;
  HEAP32[i1 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i9 >> 2] = i7;
  break;
 } else if (i6) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i7 >> 2] | 0) + 12 >> 2] & 127](i7, i9);
  i8 = HEAP32[i4 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i8 >> 2] | 0) + 16 >> 2] & 255](i8);
  HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i1 >> 2] = i9;
  break;
 } else {
  HEAP32[i1 >> 2] = i5;
  HEAP32[i4 >> 2] = i3;
  break;
 } while (0);
 STACKTOP = i10;
 return;
}

function __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(i6, i1, i7) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i4 = i1;
 i3 = i7 - i4 >> 2;
 i2 = i6 + 8 | 0;
 i5 = HEAP32[i6 >> 2] | 0;
 L1 : do if (i3 >>> 0 <= (HEAP32[i2 >> 2] | 0) - i5 >> 2 >>> 0) {
  i6 = i6 + 4 | 0;
  i2 = (HEAP32[i6 >> 2] | 0) - i5 >> 2;
  i8 = i3 >>> 0 > i2 >>> 0;
  i3 = i1 + (i2 << 2) | 0;
  i2 = (i8 ? i3 : i7) - i4 | 0;
  _memmove(i5 | 0, i1 | 0, i2 | 0) | 0;
  i2 = i5 + (i2 >> 2 << 2) | 0;
  if (i8) {
   i1 = i3;
   while (1) {
    if ((i1 | 0) == (i7 | 0)) break L1;
    HEAP32[HEAP32[i6 >> 2] >> 2] = HEAP32[i1 >> 2];
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
    i1 = i1 + 4 | 0;
   }
  } else {
   i1 = HEAP32[i6 >> 2] | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break L1;
    i8 = i1 + -4 | 0;
    HEAP32[i6 >> 2] = i8;
    i1 = i8;
   }
  }
 } else {
  __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE10deallocateEv(i6);
  if (i3 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
  i2 = (HEAP32[i2 >> 2] | 0) - (HEAP32[i6 >> 2] | 0) | 0;
  if (i2 >> 2 >>> 0 < 536870911) {
   i2 = i2 >> 1;
   i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  } else i2 = 1073741823;
  __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE8allocateEj(i6, i2);
  i2 = i6 + 4 | 0;
  while (1) {
   if ((i1 | 0) == (i7 | 0)) break L1;
   HEAP32[HEAP32[i2 >> 2] >> 2] = HEAP32[i1 >> 2];
   HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
   i1 = i1 + 4 | 0;
  }
 } while (0);
 return;
}

function __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(i6, i1, i7) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i4 = i1;
 i3 = i7 - i4 >> 2;
 i2 = i6 + 8 | 0;
 i5 = HEAP32[i6 >> 2] | 0;
 L1 : do if (i3 >>> 0 > (HEAP32[i2 >> 2] | 0) - i5 >> 2 >>> 0) {
  __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE10deallocateEv(i6);
  if (i3 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i6);
  i2 = (HEAP32[i2 >> 2] | 0) - (HEAP32[i6 >> 2] | 0) | 0;
  if (i2 >> 2 >>> 0 < 536870911) {
   i2 = i2 >> 1;
   i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  } else i2 = 1073741823;
  __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE8allocateEj(i6, i2);
  i2 = i6 + 4 | 0;
  while (1) {
   if ((i1 | 0) == (i7 | 0)) break L1;
   i6 = HEAP32[i2 >> 2] | 0;
   HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
   HEAP32[i2 >> 2] = i6 + 4;
   i1 = i1 + 4 | 0;
  }
 } else {
  i6 = i6 + 4 | 0;
  i2 = (HEAP32[i6 >> 2] | 0) - i5 >> 2;
  i8 = i3 >>> 0 > i2 >>> 0;
  i3 = i1 + (i2 << 2) | 0;
  i2 = (i8 ? i3 : i7) - i4 | 0;
  _memmove(i5 | 0, i1 | 0, i2 | 0) | 0;
  i2 = i5 + (i2 >> 2 << 2) | 0;
  if (i8) {
   i1 = i3;
   while (1) {
    if ((i1 | 0) == (i7 | 0)) break L1;
    i8 = HEAP32[i6 >> 2] | 0;
    HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i6 >> 2] = i8 + 4;
    i1 = i1 + 4 | 0;
   }
  }
  i1 = HEAP32[i6 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) break L1;
   i8 = i1 + -4 | 0;
   HEAP32[i6 >> 2] = i8;
   i1 = i8;
  }
 } while (0);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i3, i8, i7, i2, i4) {
 i3 = i3 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0;
 do if ((i3 | 0) == (HEAP32[i8 + 8 >> 2] | 0)) {
  if ((HEAP32[i8 + 4 >> 2] | 0) == (i7 | 0) ? (i1 = i8 + 28 | 0, (HEAP32[i1 >> 2] | 0) != 1) : 0) HEAP32[i1 >> 2] = i2;
 } else {
  if ((i3 | 0) != (HEAP32[i8 >> 2] | 0)) {
   i6 = HEAP32[i3 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 24 >> 2] & 3](i6, i8, i7, i2, i4);
   break;
  }
  if ((HEAP32[i8 + 16 >> 2] | 0) != (i7 | 0) ? (i6 = i8 + 20 | 0, (HEAP32[i6 >> 2] | 0) != (i7 | 0)) : 0) {
   HEAP32[i8 + 32 >> 2] = i2;
   i5 = i8 + 44 | 0;
   if ((HEAP32[i5 >> 2] | 0) == 4) break;
   i1 = i8 + 52 | 0;
   HEAP8[i1 >> 0] = 0;
   i2 = i8 + 53 | 0;
   HEAP8[i2 >> 0] = 0;
   i3 = HEAP32[i3 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 20 >> 2] & 15](i3, i8, i7, i7, 1, i4);
   if (HEAP8[i2 >> 0] | 0) if (!(HEAP8[i1 >> 0] | 0)) {
    i1 = 1;
    i2 = 13;
   } else i2 = 17; else {
    i1 = 0;
    i2 = 13;
   }
   do if ((i2 | 0) == 13) {
    HEAP32[i6 >> 2] = i7;
    i7 = i8 + 40 | 0;
    HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
    if ((HEAP32[i8 + 36 >> 2] | 0) == 1 ? (HEAP32[i8 + 24 >> 2] | 0) == 2 : 0) {
     HEAP8[i8 + 54 >> 0] = 1;
     if (i1) {
      i2 = 17;
      break;
     } else {
      i1 = 4;
      break;
     }
    }
    if (i1) i2 = 17; else i1 = 4;
   } while (0);
   if ((i2 | 0) == 17) i1 = 3;
   HEAP32[i5 >> 2] = i1;
   break;
  }
  if ((i2 | 0) == 1) HEAP32[i8 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseIndexingES1_RPc(i7, i6, i8) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i9 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i11 + 12 | 0;
 i1 = i11 + 8 | 0;
 i3 = i11 + 4 | 0;
 i4 = i11;
 i9 = i7 + 4 | 0;
 __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE6resizeEj(i7, (((HEAP32[i9 >> 2] | 0) - (HEAP32[i7 >> 2] | 0) | 0) / 12 | 0) + 1 | 0);
 i5 = HEAP32[i8 >> 2] | 0;
 if ((HEAP8[i5 >> 0] | 0) != 91) ___assert_fail(24158, 23426, 634, 24170);
 HEAP32[i8 >> 2] = i5 + 1;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 i7 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i7, i8, 38465) | 0;
 HEAP32[i4 >> 2] = i7;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
 i3 = __ZN6cashew12ValueBuilder12makeIndexingENS_3RefES1_(i1, i2) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i8);
 i1 = HEAP32[i8 >> 2] | 0;
 if ((HEAP8[i1 >> 0] | 0) != 93) ___assert_fail(24184, 23426, 638, 24170);
 HEAP32[i8 >> 2] = i1 + 1;
 i1 = HEAP32[i9 >> 2] | 0;
 i2 = i1 + -12 | 0;
 if ((HEAP32[i1 + -8 >> 2] | 0) == (HEAP32[i2 >> 2] | 0)) i10 = i1; else ___assert_fail(24089, 23426, 640, 24170);
 while (1) {
  if ((i10 | 0) == (i2 | 0)) break;
  i8 = i10 + -12 | 0;
  HEAP32[i9 >> 2] = i8;
  __ZNSt3__113__vector_baseIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEED2Ev(i8);
  i10 = HEAP32[i9 >> 2] | 0;
 }
 STACKTOP = i11;
 return i3 | 0;
}

function _wcsnrtombs(i3, i11, i4, i2, i1) {
 i3 = i3 | 0;
 i11 = i11 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 i7 = i10 + 8 | 0;
 i9 = i10;
 i6 = HEAP32[i11 >> 2] | 0;
 HEAP32[i9 >> 2] = i6;
 i8 = (i3 | 0) != 0;
 i1 = i8 ? i2 : 256;
 i2 = i8 ? i3 : i7;
 i3 = i6;
 L1 : do if ((i1 | 0) != 0 & (i6 | 0) != 0) {
  i6 = i1;
  i5 = i3;
  i1 = 0;
  while (1) {
   i3 = i4 >>> 0 >= i6 >>> 0;
   if (!(i3 | i4 >>> 0 > 32)) {
    i3 = i5;
    break L1;
   }
   i3 = i3 ? i6 : i4;
   i4 = i4 - i3 | 0;
   i3 = _wcsrtombs(i2, i9, i3, 0) | 0;
   if ((i3 | 0) == -1) {
    i1 = i4;
    break;
   }
   i13 = (i2 | 0) == (i7 | 0);
   i12 = i13 ? 0 : i3;
   i5 = i6 - i12 | 0;
   i2 = i13 ? i2 : i2 + i3 | 0;
   i1 = i3 + i1 | 0;
   i3 = HEAP32[i9 >> 2] | 0;
   if ((i6 | 0) != (i12 | 0) & (i3 | 0) != 0) {
    i6 = i5;
    i5 = i3;
   } else {
    i6 = i5;
    break L1;
   }
  }
  i4 = i1;
  i6 = 0;
  i3 = HEAP32[i9 >> 2] | 0;
  i1 = -1;
 } else {
  i6 = i1;
  i1 = 0;
 } while (0);
 L8 : do if ((i3 | 0) != 0 ? (i6 | 0) != 0 & (i4 | 0) != 0 : 0) {
  i5 = i3;
  i3 = i2;
  while (1) {
   i2 = _wcrtomb(i3, HEAP32[i5 >> 2] | 0, 0) | 0;
   if ((i2 + 1 | 0) >>> 0 < 2) break;
   i5 = (HEAP32[i9 >> 2] | 0) + 4 | 0;
   HEAP32[i9 >> 2] = i5;
   i4 = i4 + -1 | 0;
   i1 = i1 + 1 | 0;
   if (!((i6 | 0) != (i2 | 0) & (i4 | 0) != 0)) break L8; else {
    i6 = i6 - i2 | 0;
    i3 = i3 + i2 | 0;
   }
  }
  if (!i2) HEAP32[i9 >> 2] = 0; else i1 = -1;
 } while (0);
 if (i8) HEAP32[i11 >> 2] = HEAP32[i9 >> 2];
 STACKTOP = i10;
 return i1 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE7parseIfERPcPKc(i7, i6, i5) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i11 = i17;
 i10 = i17 + 32 | 0;
 i9 = i17 + 28 | 0;
 i12 = i17 + 24 | 0;
 i13 = i17 + 20 | 0;
 i14 = i17 + 16 | 0;
 i15 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseParennedERPc(i7, i6) | 0;
 i16 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE19parseMaybeBracketedERPcPKc(i7, i6, i5) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i6);
 i2 = HEAP32[i6 >> 2] | 0;
 i3 = HEAP8[i2 >> 0] | 0;
 i1 = i5;
 while (1) {
  i4 = HEAP8[i1 >> 0] | 0;
  if (!(i4 << 24 >> 24)) {
   i8 = 4;
   break;
  }
  if (i4 << 24 >> 24 == i3 << 24 >> 24) {
   i1 = 0;
   break;
  } else i1 = i1 + 1 | 0;
 }
 if ((i8 | 0) == 4) {
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i11, i2);
  if ((HEAP32[i11 + 12 >> 2] | 0) == 0 ? (HEAP32[i11 >> 2] | 0) == (HEAP32[10271] | 0) : 0) {
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + (HEAP32[i11 + 8 >> 2] | 0);
   i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE19parseMaybeBracketedERPcPKc(i7, i6, i5) | 0;
  } else i1 = 0;
 }
 HEAP32[i12 >> 2] = i15;
 HEAP32[i13 >> 2] = i16;
 HEAP32[i14 >> 2] = i1;
 HEAP32[i9 >> 2] = HEAP32[i12 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i13 >> 2];
 HEAP32[i11 >> 2] = HEAP32[i14 >> 2];
 i16 = __ZN6cashew12ValueBuilder6makeIfENS_3RefES1_S1_(i9, i10, i11) | 0;
 STACKTOP = i17;
 return i16 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i8 = i6;
 i12 = i6 + 116 | 0;
 i14 = i6 + 104 | 0;
 i7 = i6 + 20 | 0;
 i10 = i6 + 16 | 0;
 i5 = i6 + 8 | 0;
 i11 = i6 + 12 | 0;
 i9 = i6 + 4 | 0;
 HEAP8[i12 >> 0] = HEAP8[35513] | 0;
 HEAP8[i12 + 1 >> 0] = HEAP8[35514] | 0;
 HEAP8[i12 + 2 >> 0] = HEAP8[35515] | 0;
 HEAP8[i12 + 3 >> 0] = HEAP8[35516] | 0;
 HEAP8[i12 + 4 >> 0] = HEAP8[35517] | 0;
 HEAP8[i12 + 5 >> 0] = HEAP8[35518] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i12 + 1 | 0, 38484, 0, HEAP32[i2 + 4 >> 2] | 0);
 i13 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i8 >> 2] = i4;
 i12 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 12, i13, i12, i8) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i12, i2) | 0;
 i4 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i11 >> 2] = i4;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i14, i13, i12, i7, i10, i5, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i4) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 i4 = HEAP32[i10 >> 2] | 0;
 i5 = HEAP32[i5 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i8, i7, i4, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i8 = i6;
 i12 = i6 + 116 | 0;
 i14 = i6 + 104 | 0;
 i7 = i6 + 20 | 0;
 i10 = i6 + 16 | 0;
 i5 = i6 + 8 | 0;
 i11 = i6 + 12 | 0;
 i9 = i6 + 4 | 0;
 HEAP8[i12 >> 0] = HEAP8[35513] | 0;
 HEAP8[i12 + 1 >> 0] = HEAP8[35514] | 0;
 HEAP8[i12 + 2 >> 0] = HEAP8[35515] | 0;
 HEAP8[i12 + 3 >> 0] = HEAP8[35516] | 0;
 HEAP8[i12 + 4 >> 0] = HEAP8[35517] | 0;
 HEAP8[i12 + 5 >> 0] = HEAP8[35518] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i12 + 1 | 0, 38484, 1, HEAP32[i2 + 4 >> 2] | 0);
 i13 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i8 >> 2] = i4;
 i12 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 12, i13, i12, i8) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i12, i2) | 0;
 i4 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i11 >> 2] = i4;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i14, i13, i12, i7, i10, i5, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i4) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 i4 = HEAP32[i10 >> 2] | 0;
 i5 = HEAP32[i5 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i8, i7, i4, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i8 = i6;
 i12 = i6 + 56 | 0;
 i14 = i6 + 44 | 0;
 i7 = i6 + 20 | 0;
 i10 = i6 + 16 | 0;
 i5 = i6 + 8 | 0;
 i11 = i6 + 12 | 0;
 i9 = i6 + 4 | 0;
 HEAP8[i12 >> 0] = HEAP8[35513] | 0;
 HEAP8[i12 + 1 >> 0] = HEAP8[35514] | 0;
 HEAP8[i12 + 2 >> 0] = HEAP8[35515] | 0;
 HEAP8[i12 + 3 >> 0] = HEAP8[35516] | 0;
 HEAP8[i12 + 4 >> 0] = HEAP8[35517] | 0;
 HEAP8[i12 + 5 >> 0] = HEAP8[35518] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i12 + 1 | 0, 38484, 0, HEAP32[i2 + 4 >> 2] | 0);
 i13 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i8 >> 2] = i4;
 i12 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 12, i13, i12, i8) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i12, i2) | 0;
 i4 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i11 >> 2] = i4;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i14, i13, i12, i7, i10, i5, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i4) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 i4 = HEAP32[i10 >> 2] | 0;
 i5 = HEAP32[i5 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i8, i7, i4, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i8 = i6;
 i12 = i6 + 56 | 0;
 i14 = i6 + 44 | 0;
 i7 = i6 + 20 | 0;
 i10 = i6 + 16 | 0;
 i5 = i6 + 8 | 0;
 i11 = i6 + 12 | 0;
 i9 = i6 + 4 | 0;
 HEAP8[i12 >> 0] = HEAP8[35513] | 0;
 HEAP8[i12 + 1 >> 0] = HEAP8[35514] | 0;
 HEAP8[i12 + 2 >> 0] = HEAP8[35515] | 0;
 HEAP8[i12 + 3 >> 0] = HEAP8[35516] | 0;
 HEAP8[i12 + 4 >> 0] = HEAP8[35517] | 0;
 HEAP8[i12 + 5 >> 0] = HEAP8[35518] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i12 + 1 | 0, 38484, 1, HEAP32[i2 + 4 >> 2] | 0);
 i13 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i8 >> 2] = i4;
 i12 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 12, i13, i12, i8) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i12, i2) | 0;
 i4 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i11 >> 2] = i4;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i14, i13, i12, i7, i10, i5, i11);
 __ZNSt3__114__shared_count16__release_sharedEv(i4) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 i4 = HEAP32[i10 >> 2] | 0;
 i5 = HEAP32[i5 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i8, i7, i4, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function _load_s_expr2wasm(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i5;
 i3 = i5 + 24 | 0;
 __ZL12prepare2wasmv();
 if (HEAP8[45016] | 0) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 14780) | 0;
 i1 = __Znwj(24) | 0;
 __ZN4wasm17SExpressionParserC2EPc(i1, i4);
 HEAP32[10252] = i1;
 i1 = HEAP32[i1 + 20 >> 2] | 0;
 if (HEAP8[45016] | 0 ? (__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERNS_7ElementE(42128, i1) | 0, 10) | 0, HEAP8[45016] | 0) : 0) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 14501) | 0;
 i6 = __Znwj(164) | 0;
 _memset(i6 | 0, 0, 164) | 0;
 __ZN4wasm16AllocatingModuleC2Ev(i6);
 HEAP32[10255] = i6;
 i4 = __Znwj(104) | 0;
 i1 = __ZN4wasm7Element4listEv(i1) | 0;
 i1 = HEAP32[HEAP32[i1 >> 2] >> 2] | 0;
 HEAP32[i2 + 16 >> 2] = i2;
 HEAP32[i2 >> 2] = 3560;
 __ZN4wasm22SExpressionWasmBuilderC2ERNS_16AllocatingModuleERNS_7ElementENSt3__18functionIFvvEEEb(i4, i6, i1, i2, 0);
 HEAP32[10253] = i4;
 __ZNSt3__18functionIFvvEED2Ev(i2);
 i2 = _emscripten_asm_const_i(0) | 0;
 i4 = HEAP32[10255] | 0;
 HEAP32[i4 + 108 >> 2] = i2;
 HEAP32[i3 >> 2] = HEAP32[10207];
 i3 = (__ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ExportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i4 + 72 | 0, i3) | 0) == (i4 + 76 | 0);
 HEAP32[i4 + 112 >> 2] = i3 ? i2 : -1;
 STACKTOP = i5;
 return;
}

function __ZN4wasm16PrintSExpression10visitBreakEPNS_5BreakE(i9, i5) {
 i9 = i9 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i10 + 8 | 0;
 i2 = i10 + 4 | 0;
 i3 = i10;
 i8 = i5 + 16 | 0;
 i6 = i9 + 4 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 do if (!(HEAP32[i8 >> 2] | 0)) {
  i4 = __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(i4, 25868, 0) | 0;
  HEAP32[i3 >> 2] = HEAP32[i5 + 8 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i4, i1) | 0;
  i1 = i5 + 12 | 0;
  i5 = HEAP32[i1 >> 2] | 0;
  if (i5 | 0 ? (HEAP32[i5 >> 2] | 0) != 19 : 0) {
   __ZN4wasm16PrintSExpression9incIndentEv(i9);
   i7 = 7;
   break;
  }
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i6 >> 2] | 0, 38469) | 0;
 } else {
  i7 = __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(i4, 25861, 0) | 0;
  HEAP32[i2 >> 2] = HEAP32[i5 + 8 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i7, i1) | 0;
  __ZN4wasm16PrintSExpression9incIndentEv(i9);
  i1 = i5 + 12 | 0;
  i7 = 7;
 } while (0);
 if ((i7 | 0) == 7) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (i1 | 0 ? (HEAP32[i1 >> 2] | 0) != 19 : 0) __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i9, i1);
  i1 = HEAP32[i8 >> 2] | 0;
  if (i1 | 0) __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i9, i1);
  __ZN4wasm16PrintSExpression9decIndentEv(i9);
 }
 STACKTOP = i10;
 return;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner15visitCallImportEPNS_10CallImportE(i2, i6, i4) {
 i2 = i2 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i3 = 0, i5 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i3 = i7 + 40 | 0;
 i5 = i7 + 16 | 0;
 i1 = i7;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner17generateArgumentsERKNS4_IPNS_10ExpressionENS6_ISC_EEEES9_(i5, i6, i4 + 8 | 0, i3);
 if (!(HEAP32[i5 + 16 >> 2] | 0)) {
  i6 = HEAP32[i6 + 4 >> 2] | 0;
  i5 = HEAP32[i6 + 12 >> 2] | 0;
  i8 = HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] | 0;
  i6 = __ZNSt3__13mapIN4wasm4NameEPNS1_6ImportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_((HEAP32[i6 >> 2] | 0) + 60 | 0, i4 + 20 | 0) | 0;
  FUNCTION_TABLE_viiii[i8 & 15](i1, i5, HEAP32[i6 >> 2] | 0, i3);
  HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
  HEAP32[i2 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
  HEAP32[i2 + 16 >> 2] = 0;
 } else {
  HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i5 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i5 + 8 >> 2];
  HEAP32[i2 + 12 >> 2] = HEAP32[i5 + 12 >> 2];
  HEAP32[i2 + 16 >> 2] = HEAP32[i5 + 16 >> 2];
  HEAP32[i2 + 20 >> 2] = HEAP32[i5 + 20 >> 2];
 }
 __ZNSt3__113__vector_baseIN4wasm7LiteralENS_9allocatorIS2_EEED2Ev(i3);
 STACKTOP = i7;
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseAfterBraceERPc(i6, i8) {
 i6 = i6 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i9 + 12 | 0;
 i2 = i9 + 8 | 0;
 i4 = i9 + 4 | 0;
 i5 = i9;
 __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE6resizeEj(i6, (((HEAP32[i6 + 4 >> 2] | 0) - (HEAP32[i6 >> 2] | 0) | 0) / 12 | 0) + 1 | 0);
 i7 = __ZN6cashew12ValueBuilder9makeArrayEv() | 0;
 L1 : while (1) {
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i8);
  i1 = HEAP32[i8 >> 2] | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 0:
   {
    i2 = 3;
    break L1;
   }
  case 93:
   {
    i2 = 7;
    break L1;
   }
  default:
   {}
  }
  i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i6, i8, 24422) | 0;
  HEAP32[i4 >> 2] = i7;
  HEAP32[i5 >> 2] = i1;
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
  __ZN6cashew12ValueBuilder13appendToArrayENS_3RefES1_(i2, i3);
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i8);
  i1 = HEAP32[i8 >> 2] | 0;
  switch (HEAP8[i1 >> 0] | 0) {
  case 93:
   {
    i2 = 7;
    break L1;
   }
  case 44:
   break;
  default:
   {
    i2 = 6;
    break L1;
   }
  }
  HEAP32[i8 >> 2] = i1 + 1;
 }
 if ((i2 | 0) == 3) ___assert_fail(24401, 23426, 671, 24406); else if ((i2 | 0) == 6) _abort(); else if ((i2 | 0) == 7) {
  HEAP32[i8 >> 2] = i1 + 1;
  STACKTOP = i9;
  return i7 | 0;
 }
 return 0;
}

function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i11, i8, i10, i2, i3, i7) {
 i11 = i11 | 0;
 i8 = i8 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i12;
 i1 = HEAP32[i11 >> 2] | 0;
 L1 : do if (!i1) i1 = 0; else {
  i13 = i8;
  i5 = i2 - i13 >> 2;
  i6 = i3 + 12 | 0;
  i3 = HEAP32[i6 >> 2] | 0;
  i5 = (i3 | 0) > (i5 | 0) ? i3 - i5 | 0 : 0;
  i3 = i10;
  i13 = i3 - i13 | 0;
  i4 = i13 >> 2;
  if ((i13 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 31](i1, i8, i4) | 0) != (i4 | 0) : 0) {
   HEAP32[i11 >> 2] = 0;
   i1 = 0;
   break;
  }
  do if ((i5 | 0) > 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i9, i5, i7);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 31](i1, (HEAP8[i9 >> 0] & 1) == 0 ? i9 + 4 | 0 : HEAP32[i9 + 8 >> 2] | 0, i5) | 0) == (i5 | 0)) {
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
    break;
   } else {
    HEAP32[i11 >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
    i1 = 0;
    break L1;
   }
  } while (0);
  i13 = i2 - i3 | 0;
  i2 = i13 >> 2;
  if ((i13 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 31](i1, i10, i2) | 0) != (i2 | 0) : 0) {
   HEAP32[i11 >> 2] = 0;
   i1 = 0;
   break;
  }
  HEAP32[i6 >> 2] = 0;
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZN4wasm15RemoveUnusedBrs7visitIfEPNS_2IfE(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8 + 4 | 0;
 i5 = i8;
 i3 = i6 + 16 | 0;
 L1 : do if (!(HEAP32[i3 >> 2] | 0)) {
  i1 = HEAP32[i6 + 12 >> 2] | 0;
  if (!((i1 | 0) == 0 | (HEAP32[i1 >> 2] | 0) != 4) ? (i2 = i1 + 16 | 0, (HEAP32[i2 >> 2] | 0) == 0) : 0) {
   HEAP32[i2 >> 2] = HEAP32[i6 + 8 >> 2];
   HEAP32[i7 + 8 >> 2] = i1;
  }
 } else {
  i1 = i6 + 4 | 0;
  switch (HEAP32[i1 >> 2] | 0) {
  case 0:
  case 5:
   break;
  default:
   break L1;
  }
  HEAP32[i5 >> 2] = i4;
  i2 = i6 + 12 | 0;
  if (__ZZN4wasm15RemoveUnusedBrs7visitIfEPNS_2IfEENKUlPNS_10ExpressionEbE_clES4_b(i5, HEAP32[i2 >> 2] | 0, 0) | 0 ? (i9 = __ZZN4wasm15RemoveUnusedBrs7visitIfEPNS_2IfEENKUlPNS_10ExpressionEbE_clES4_b(i5, HEAP32[i2 >> 2] | 0, 0) | 0, (i9 | 0) == (__ZZN4wasm15RemoveUnusedBrs7visitIfEPNS_2IfEENKUlPNS_10ExpressionEbE_clES4_b(i5, HEAP32[i3 >> 2] | 0, 0) | 0)) : 0) {
   i9 = __ZN4wasm10Expression4castINS_5BreakEEEPT_v(__ZZN4wasm15RemoveUnusedBrs7visitIfEPNS_2IfEENKUlPNS_10ExpressionEE_clES4_(i4, HEAP32[i2 >> 2] | 0) | 0) | 0;
   __ZZN4wasm15RemoveUnusedBrs7visitIfEPNS_2IfEENKUlPNS_10ExpressionEbE_clES4_b(i5, HEAP32[i2 >> 2] | 0, 1) | 0;
   __ZZN4wasm15RemoveUnusedBrs7visitIfEPNS_2IfEENKUlPNS_10ExpressionEbE_clES4_b(i5, HEAP32[i3 >> 2] | 0, 1) | 0;
   i5 = i9 + 12 | 0;
   HEAP32[i1 >> 2] = HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2];
   HEAP32[i5 >> 2] = i6;
   HEAP32[i7 + 8 >> 2] = i9;
  }
 } while (0);
 STACKTOP = i8;
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i13, i12, i11, i14, i15) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i12 = i12 | 0;
 i11 = i11 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 if ((i1 | 0) == (HEAP32[i13 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i13, i12, i11, i14); else {
  i7 = i13 + 52 | 0;
  i10 = HEAP16[i7 >> 1] | 0;
  i8 = i10 & 255;
  i9 = i13 + 53 | 0;
  i10 = (i10 & 65535) >>> 8 & 255;
  i6 = HEAP32[i1 + 12 >> 2] | 0;
  i3 = i1 + 16 + (i6 << 3) | 0;
  HEAP8[i7 >> 0] = 0;
  HEAP8[i9 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1 + 16 | 0, i13, i12, i11, i14, i15);
  L4 : do if ((i6 | 0) > 1) {
   i4 = i13 + 24 | 0;
   i5 = i1 + 8 | 0;
   i6 = i13 + 54 | 0;
   i2 = i1 + 24 | 0;
   do {
    if (HEAP8[i6 >> 0] | 0) break L4;
    i1 = HEAP16[i7 >> 1] | 0;
    if (!((i1 & 255) << 24 >> 24)) {
     if ((i1 & 65535) >= 256 ? (HEAP32[i5 >> 2] & 1 | 0) == 0 : 0) break L4;
    } else {
     if ((HEAP32[i4 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[i5 >> 2] & 2)) break L4;
    }
    HEAP8[i7 >> 0] = 0;
    HEAP8[i9 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i2, i13, i12, i11, i14, i15);
    i2 = i2 + 8 | 0;
   } while (i2 >>> 0 < i3 >>> 0);
  } while (0);
  HEAP8[i7 >> 0] = i8;
  HEAP8[i9 >> 0] = i10;
 }
 return;
}

function ___dynamic_cast(i2, i3, i12, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i12 = i12 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i13 = i14;
 i11 = HEAP32[i2 >> 2] | 0;
 i10 = i2 + (HEAP32[i11 + -8 >> 2] | 0) | 0;
 i11 = HEAP32[i11 + -4 >> 2] | 0;
 HEAP32[i13 >> 2] = i12;
 HEAP32[i13 + 4 >> 2] = i2;
 HEAP32[i13 + 8 >> 2] = i3;
 HEAP32[i13 + 12 >> 2] = i1;
 i7 = i13 + 16 | 0;
 i1 = i13 + 20 | 0;
 i2 = i13 + 24 | 0;
 i3 = i13 + 28 | 0;
 i4 = i13 + 32 | 0;
 i5 = i13 + 40 | 0;
 i6 = (i11 | 0) == (i12 | 0);
 i8 = i7;
 i9 = i8 + 36 | 0;
 do {
  HEAP32[i8 >> 2] = 0;
  i8 = i8 + 4 | 0;
 } while ((i8 | 0) < (i9 | 0));
 HEAP16[i7 + 36 >> 1] = 0;
 HEAP8[i7 + 38 >> 0] = 0;
 L1 : do if (i6) {
  HEAP32[i13 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 15](i12, i13, i10, i10, 1, 0);
  i1 = (HEAP32[i2 >> 2] | 0) == 1 ? i10 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 24 >> 2] & 3](i11, i13, i10, 1, 0);
  switch (HEAP32[i13 + 36 >> 2] | 0) {
  case 0:
   {
    i1 = (HEAP32[i5 >> 2] | 0) == 1 & (HEAP32[i3 >> 2] | 0) == 1 & (HEAP32[i4 >> 2] | 0) == 1 ? HEAP32[i1 >> 2] | 0 : 0;
    break L1;
   }
  case 1:
   break;
  default:
   {
    i1 = 0;
    break L1;
   }
  }
  if ((HEAP32[i2 >> 2] | 0) != 1 ? !((HEAP32[i5 >> 2] | 0) == 0 & (HEAP32[i3 >> 2] | 0) == 1 & (HEAP32[i4 >> 2] | 0) == 1) : 0) {
   i1 = 0;
   break;
  }
  i1 = HEAP32[i7 >> 2] | 0;
 } while (0);
 STACKTOP = i14;
 return i1 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(i8, i1) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = i8 + 32 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(i6, i1) | 0;
 i5 = i8 + 44 | 0;
 HEAP32[i5 >> 2] = 0;
 i7 = i8 + 48 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 if (i4 & 8 | 0) {
  i1 = HEAP8[i6 >> 0] | 0;
  if (!(i1 & 1)) {
   i1 = ((i1 & 255) >>> 1) + (i6 + 1) | 0;
   HEAP32[i5 >> 2] = i1;
   i2 = i6 + 1 | 0;
   i3 = i6 + 1 | 0;
  } else {
   i3 = HEAP32[i8 + 40 >> 2] | 0;
   i1 = i3 + (HEAP32[i8 + 36 >> 2] | 0) | 0;
   HEAP32[i5 >> 2] = i1;
   i2 = i3;
  }
  HEAP32[i8 + 8 >> 2] = i2;
  HEAP32[i8 + 12 >> 2] = i3;
  HEAP32[i8 + 16 >> 2] = i1;
 }
 if (i4 & 16 | 0) {
  i1 = HEAP8[i6 >> 0] | 0;
  if (!(i1 & 1)) {
   i4 = (i1 & 255) >>> 1;
   HEAP32[i5 >> 2] = i6 + 1 + i4;
   i1 = 10;
   i5 = i4;
  } else {
   i4 = HEAP32[i8 + 36 >> 2] | 0;
   HEAP32[i5 >> 2] = (HEAP32[i8 + 40 >> 2] | 0) + i4;
   i1 = (HEAP32[i6 >> 2] & -2) + -1 | 0;
   i5 = i4;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i6, i1, 0);
  i1 = HEAP8[i6 >> 0] | 0;
  if (!(i1 & 1)) {
   i4 = i6 + 1 | 0;
   i3 = (i1 & 255) >>> 1;
   i2 = i6 + 1 | 0;
  } else {
   i2 = HEAP32[i8 + 40 >> 2] | 0;
   i4 = i2;
   i3 = HEAP32[i8 + 36 >> 2] | 0;
  }
  i1 = i8 + 24 | 0;
  HEAP32[i1 >> 2] = i2;
  HEAP32[i8 + 20 >> 2] = i2;
  HEAP32[i8 + 28 >> 2] = i4 + i3;
  if (HEAP32[i7 >> 2] & 3 | 0) HEAP32[i1 >> 2] = i2 + i5;
 }
 return;
}

function _vfprintf(i15, i11, i1) {
 i15 = i15 | 0;
 i11 = i11 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i10 = i16 + 120 | 0;
 i14 = i16 + 80 | 0;
 i13 = i16;
 i12 = i16 + 136 | 0;
 i2 = i14;
 i3 = i2 + 40 | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = i2 + 4 | 0;
 } while ((i2 | 0) < (i3 | 0));
 HEAP32[i10 >> 2] = HEAP32[i1 >> 2];
 if ((_printf_core(0, i11, i10, i13, i14) | 0) < 0) i1 = -1; else {
  if ((HEAP32[i15 + 76 >> 2] | 0) > -1) i8 = ___lockfile(i15) | 0; else i8 = 0;
  i1 = HEAP32[i15 >> 2] | 0;
  i9 = i1 & 32;
  if ((HEAP8[i15 + 74 >> 0] | 0) < 1) HEAP32[i15 >> 2] = i1 & -33;
  i1 = i15 + 48 | 0;
  if (!(HEAP32[i1 >> 2] | 0)) {
   i3 = i15 + 44 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   HEAP32[i3 >> 2] = i12;
   i5 = i15 + 28 | 0;
   HEAP32[i5 >> 2] = i12;
   i6 = i15 + 20 | 0;
   HEAP32[i6 >> 2] = i12;
   HEAP32[i1 >> 2] = 80;
   i7 = i15 + 16 | 0;
   HEAP32[i7 >> 2] = i12 + 80;
   i2 = _printf_core(i15, i11, i10, i13, i14) | 0;
   if (i4) {
    FUNCTION_TABLE_iiii[HEAP32[i15 + 36 >> 2] & 31](i15, 0, 0) | 0;
    i2 = (HEAP32[i6 >> 2] | 0) == 0 ? -1 : i2;
    HEAP32[i3 >> 2] = i4;
    HEAP32[i1 >> 2] = 0;
    HEAP32[i7 >> 2] = 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i6 >> 2] = 0;
   }
  } else i2 = _printf_core(i15, i11, i10, i13, i14) | 0;
  i1 = HEAP32[i15 >> 2] | 0;
  HEAP32[i15 >> 2] = i1 | i9;
  if (i8 | 0) ___unlockfile(i15);
  i1 = (i1 & 32 | 0) == 0 ? i2 : -1;
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i11, i8, i10, i2, i3, i7) {
 i11 = i11 | 0;
 i8 = i8 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i12;
 i1 = HEAP32[i11 >> 2] | 0;
 L1 : do if (!i1) i1 = 0; else {
  i13 = i8;
  i5 = i2 - i13 | 0;
  i6 = i3 + 12 | 0;
  i4 = HEAP32[i6 >> 2] | 0;
  i5 = (i4 | 0) > (i5 | 0) ? i4 - i5 | 0 : 0;
  i4 = i10;
  i3 = i4 - i13 | 0;
  if ((i3 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 31](i1, i8, i3) | 0) != (i3 | 0) : 0) {
   HEAP32[i11 >> 2] = 0;
   i1 = 0;
   break;
  }
  do if ((i5 | 0) > 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i9, i5, i7);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 31](i1, (HEAP8[i9 >> 0] & 1) == 0 ? i9 + 1 | 0 : HEAP32[i9 + 8 >> 2] | 0, i5) | 0) == (i5 | 0)) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
    break;
   } else {
    HEAP32[i11 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
    i1 = 0;
    break L1;
   }
  } while (0);
  i2 = i2 - i4 | 0;
  if ((i2 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 31](i1, i10, i2) | 0) != (i2 | 0) : 0) {
   HEAP32[i11 >> 2] = 0;
   i1 = 0;
   break;
  }
  HEAP32[i6 >> 2] = 0;
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZNSt3__111__stdoutbufIwE8overflowEj(i3, i13) {
 i3 = i3 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i11 = i14 + 16 | 0;
 i1 = i14 + 8 | 0;
 i10 = i14 + 4 | 0;
 i9 = i14;
 i12 = (i13 | 0) == -1;
 do if (!i12) {
  HEAP32[i1 >> 2] = i13;
  if (HEAP8[i3 + 44 >> 0] | 0) if ((_fwrite(i1, 4, 1, HEAP32[i3 + 32 >> 2] | 0) | 0) == 1) {
   i2 = 14;
   break;
  } else {
   i1 = -1;
   break;
  }
  HEAP32[i10 >> 2] = i11;
  i7 = i1 + 4 | 0;
  i8 = i3 + 36 | 0;
  i4 = i3 + 40 | 0;
  i5 = i11 + 8 | 0;
  i6 = i11;
  i3 = i3 + 32 | 0;
  while (1) {
   i2 = HEAP32[i8 >> 2] | 0;
   i2 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 15](i2, HEAP32[i4 >> 2] | 0, i1, i7, i9, i11, i5, i10) | 0;
   if ((HEAP32[i9 >> 2] | 0) == (i1 | 0)) {
    i2 = 13;
    break;
   }
   if ((i2 | 0) == 3) {
    i2 = 7;
    break;
   }
   if ((i2 | 1 | 0) != 1) {
    i2 = 13;
    break;
   }
   i1 = (HEAP32[i10 >> 2] | 0) - i6 | 0;
   if ((_fwrite(i11, 1, i1, HEAP32[i3 >> 2] | 0) | 0) != (i1 | 0)) {
    i2 = 13;
    break;
   }
   if ((i2 | 0) == 1) i1 = HEAP32[i9 >> 2] | 0; else {
    i2 = 12;
    break;
   }
  }
  if ((i2 | 0) == 7) if ((_fwrite(i1, 1, 1, HEAP32[i3 >> 2] | 0) | 0) == 1) i2 = 12; else i2 = 13;
  if ((i2 | 0) == 12) {
   i2 = 14;
   break;
  } else if ((i2 | 0) == 13) {
   i1 = -1;
   break;
  }
 } else i2 = 14; while (0);
 if ((i2 | 0) == 14) i1 = i12 ? 0 : i13;
 STACKTOP = i14;
 return i1 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner9visitLoadEPNS_4LoadE(i2, i5, i3) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i6 = i7 + 40 | 0;
 i4 = i7 + 16 | 0;
 i1 = i7;
 __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i4, i5, HEAP32[i3 + 24 >> 2] | 0);
 if (!(HEAP32[i4 + 16 >> 2] | 0)) {
  i9 = HEAP32[i5 + 4 >> 2] | 0;
  i5 = HEAP32[i9 + 12 >> 2] | 0;
  i8 = HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] | 0;
  HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i6 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
  HEAP32[i6 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
  HEAP32[i6 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
  i6 = __ZN4wasm14ModuleInstance15getFinalAddressINS_4LoadEEEjPT_NS_7LiteralE(i9, i3, i6) | 0;
  FUNCTION_TABLE_viiii[i8 & 15](i1, i5, i3, i6);
  HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
  HEAP32[i2 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
  HEAP32[i2 + 16 >> 2] = 0;
 } else {
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i4 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i4 + 8 >> 2];
  HEAP32[i2 + 12 >> 2] = HEAP32[i4 + 12 >> 2];
  HEAP32[i2 + 16 >> 2] = HEAP32[i4 + 16 >> 2];
  HEAP32[i2 + 20 >> 2] = HEAP32[i4 + 20 >> 2];
 }
 STACKTOP = i7;
 return;
}

function __ZNSt3__111__stdoutbufIcE8overflowEi(i3, i13) {
 i3 = i3 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i11 = i14 + 16 | 0;
 i1 = i14 + 8 | 0;
 i10 = i14 + 4 | 0;
 i9 = i14;
 i12 = (i13 | 0) == -1;
 do if (!i12) {
  HEAP8[i1 >> 0] = i13;
  if (HEAP8[i3 + 44 >> 0] | 0) if ((_fwrite(i1, 1, 1, HEAP32[i3 + 32 >> 2] | 0) | 0) == 1) {
   i2 = 14;
   break;
  } else {
   i1 = -1;
   break;
  }
  HEAP32[i10 >> 2] = i11;
  i8 = i1 + 1 | 0;
  i4 = i3 + 36 | 0;
  i5 = i3 + 40 | 0;
  i6 = i11 + 8 | 0;
  i7 = i11;
  i3 = i3 + 32 | 0;
  while (1) {
   i2 = HEAP32[i4 >> 2] | 0;
   i2 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 15](i2, HEAP32[i5 >> 2] | 0, i1, i8, i9, i11, i6, i10) | 0;
   if ((HEAP32[i9 >> 2] | 0) == (i1 | 0)) {
    i2 = 13;
    break;
   }
   if ((i2 | 0) == 3) {
    i2 = 7;
    break;
   }
   if ((i2 | 1 | 0) != 1) {
    i2 = 13;
    break;
   }
   i1 = (HEAP32[i10 >> 2] | 0) - i7 | 0;
   if ((_fwrite(i11, 1, i1, HEAP32[i3 >> 2] | 0) | 0) != (i1 | 0)) {
    i2 = 13;
    break;
   }
   if ((i2 | 0) == 1) i1 = HEAP32[i9 >> 2] | 0; else {
    i2 = 12;
    break;
   }
  }
  if ((i2 | 0) == 7) if ((_fwrite(i1, 1, 1, HEAP32[i3 >> 2] | 0) | 0) == 1) i2 = 12; else i2 = 13;
  if ((i2 | 0) == 12) {
   i2 = 14;
   break;
  } else if ((i2 | 0) == 13) {
   i1 = -1;
   break;
  }
 } else i2 = 14; while (0);
 if ((i2 | 0) == 14) i1 = i12 ? 0 : i13;
 STACKTOP = i14;
 return i1 | 0;
}

function _mbrtowc(i4, i3, i7, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i9;
 i6 = (i1 | 0) == 0 ? 41536 : i1;
 i1 = HEAP32[i6 >> 2] | 0;
 L1 : do if (!i3) if (!i1) i1 = 0; else i8 = 15; else {
  i5 = (i4 | 0) == 0 ? i2 : i4;
  if (!i7) i1 = -2; else {
   if (!i1) {
    i1 = HEAP8[i3 >> 0] | 0;
    i2 = i1 & 255;
    if (i1 << 24 >> 24 > -1) {
     HEAP32[i5 >> 2] = i2;
     i1 = i1 << 24 >> 24 != 0 & 1;
     break;
    }
    i1 = i2 + -194 | 0;
    if (i1 >>> 0 > 50) {
     i8 = 15;
     break;
    }
    i1 = HEAP32[4884 + (i1 << 2) >> 2] | 0;
    i2 = i7 + -1 | 0;
    if (i2) {
     i3 = i3 + 1 | 0;
     i8 = 9;
    }
   } else {
    i2 = i7;
    i8 = 9;
   }
   L11 : do if ((i8 | 0) == 9) {
    i4 = HEAP8[i3 >> 0] | 0;
    i10 = (i4 & 255) >>> 3;
    if ((i10 + -16 | i10 + (i1 >> 26)) >>> 0 > 7) {
     i8 = 15;
     break L1;
    }
    while (1) {
     i3 = i3 + 1 | 0;
     i1 = (i4 & 255) + -128 | i1 << 6;
     i2 = i2 + -1 | 0;
     if ((i1 | 0) >= 0) break;
     if (!i2) break L11;
     i4 = HEAP8[i3 >> 0] | 0;
     if ((i4 & -64) << 24 >> 24 != -128) {
      i8 = 15;
      break L1;
     }
    }
    HEAP32[i6 >> 2] = 0;
    HEAP32[i5 >> 2] = i1;
    i1 = i7 - i2 | 0;
    break L1;
   } while (0);
   HEAP32[i6 >> 2] = i1;
   i1 = -2;
  }
 } while (0);
 if ((i8 | 0) == 15) {
  HEAP32[i6 >> 2] = 0;
  i1 = ___errno_location() | 0;
  HEAP32[i1 >> 2] = 84;
  i1 = -1;
 }
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_(i1, i8, i3) {
 i1 = i1 | 0;
 i8 = i8 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  i7 = HEAP8[i3 >> 0] | 0;
  i6 = (i7 & 1) == 0;
  i7 = i6 ? (i7 & 255) >>> 1 : HEAP32[i3 + 4 >> 2] | 0;
  i6 = i6 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0;
  while (1) {
   i3 = i2 + 16 | 0;
   i1 = HEAP8[i3 >> 0] | 0;
   i4 = (i1 & 1) == 0;
   i1 = i4 ? (i1 & 255) >>> 1 : HEAP32[i2 + 20 >> 2] | 0;
   i3 = i4 ? i3 + 1 | 0 : HEAP32[i2 + 24 >> 2] | 0;
   i4 = i1 >>> 0 < i7 >>> 0;
   i9 = _memcmp(i6, i3, i4 ? i1 : i7) | 0;
   i5 = i7 >>> 0 < i1 >>> 0;
   if ((((i9 | 0) == 0 ? (i5 ? -2147483648 : 0) : i9) | 0) < 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 5;
     break;
    }
   } else {
    i9 = _memcmp(i3, i6, i5 ? i7 : i1) | 0;
    if ((((i9 | 0) == 0 ? (i4 ? -2147483648 : 0) : i9) | 0) >= 0) {
     i1 = i2;
     i3 = 10;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 9;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 5) {
   HEAP32[i8 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i8 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 10) {
   HEAP32[i8 >> 2] = i1;
   i1 = i8;
   break;
  }
 } else HEAP32[i8 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner9visitCallEPNS_4CallE(i4, i8, i6) {
 i4 = i4 | 0;
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i1 = i9 + 56 | 0;
 i5 = i9 + 44 | 0;
 i7 = i9 + 16 | 0;
 i2 = i9;
 i3 = i9 + 40 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner17generateArgumentsERKNS4_IPNS_10ExpressionENS6_ISC_EEEES9_(i7, i8, i6 + 8 | 0, i5);
 if (!(HEAP32[i7 + 16 >> 2] | 0)) {
  i8 = HEAP32[i8 + 4 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i6 + 20 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  __ZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEE(i2, i8, i1, i5);
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
  HEAP32[i4 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
  HEAP32[i4 + 16 >> 2] = 0;
 } else {
  HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
  HEAP32[i4 + 12 >> 2] = HEAP32[i7 + 12 >> 2];
  HEAP32[i4 + 16 >> 2] = HEAP32[i7 + 16 >> 2];
  HEAP32[i4 + 20 >> 2] = HEAP32[i7 + 20 >> 2];
 }
 __ZNSt3__113__vector_baseIN4wasm7LiteralENS_9allocatorIS2_EEED2Ev(i5);
 STACKTOP = i9;
 return;
}

function __ZN4wasm22SExpressionWasmBuilderC2ERNS_16AllocatingModuleERNS_7ElementENSt3__18functionIFvvEEEb(i5, i3, i4, i2, i1) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i5 >> 2] = i3;
 HEAP32[i5 + 4 >> 2] = i3 + 148;
 __ZNSt3__18functionIFvvEEC2ERKS2_(i5 + 8 | 0, i2);
 HEAP32[i5 + 32 >> 2] = 0;
 HEAP32[i5 + 36 >> 2] = 0;
 HEAP32[i5 + 40 >> 2] = 0;
 HEAP32[i5 + 48 >> 2] = 0;
 HEAP32[i5 + 56 >> 2] = 0;
 HEAP32[i5 + 60 >> 2] = 0;
 HEAP32[i5 + 52 >> 2] = i5 + 56;
 HEAP8[i5 + 64 >> 0] = i1 & 1;
 HEAP32[i5 + 68 >> 2] = 0;
 HEAP32[i5 + 76 >> 2] = 0;
 HEAP32[i5 + 80 >> 2] = 0;
 HEAP32[i5 + 72 >> 2] = i5 + 76;
 HEAP32[i5 + 92 >> 2] = 0;
 HEAP32[i5 + 96 >> 2] = 0;
 HEAP32[i5 + 100 >> 2] = 0;
 i3 = __ZN4wasm7Element4listEv(i4) | 0;
 i3 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i3 >> 2] >> 2] | 0) | 0;
 if ((i3 | 0) != (HEAP32[10209] | 0)) ___assert_fail(17160, 17087, 234, 17187);
 i1 = i5 + 44 | 0;
 HEAP32[i1 >> 2] = 0;
 i2 = 1;
 while (1) {
  if (i2 >>> 0 >= (__ZN4wasm7Element4sizeEv(i4) | 0) >>> 0) break;
  __ZN4wasm22SExpressionWasmBuilder20preParseFunctionTypeERNS_7ElementE(i5, __ZN4wasm7ElementixEj(i4, i2) | 0);
  __ZN4wasm22SExpressionWasmBuilder15preParseImportsERNS_7ElementE(i5, __ZN4wasm7ElementixEj(i4, i2) | 0);
  i2 = i2 + 1 | 0;
 }
 HEAP32[i1 >> 2] = 0;
 i1 = 1;
 while (1) {
  if (i1 >>> 0 >= (__ZN4wasm7Element4sizeEv(i4) | 0) >>> 0) break;
  __ZN4wasm22SExpressionWasmBuilder18parseModuleElementERNS_7ElementE(i5, __ZN4wasm7ElementixEj(i4, i1) | 0);
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 i10 = i6;
 i5 = i6 + 180 | 0;
 i7 = i6 + 160 | 0;
 i8 = i6 + 8 | 0;
 i12 = i6 + 156 | 0;
 i11 = i6 + 4 | 0;
 HEAP8[i5 >> 0] = HEAP8[35521] | 0;
 HEAP8[i5 + 1 >> 0] = HEAP8[35522] | 0;
 HEAP8[i5 + 2 >> 0] = HEAP8[35523] | 0;
 HEAP8[i5 + 3 >> 0] = HEAP8[35524] | 0;
 HEAP8[i5 + 4 >> 0] = HEAP8[35525] | 0;
 HEAP8[i5 + 5 >> 0] = HEAP8[35526] | 0;
 i9 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i10 >> 2] = i4;
 i5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i7, 20, i9, i5, i10) | 0;
 i9 = i7 + i5 | 0;
 i4 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i7, i9, i2) | 0;
 i13 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i12 >> 2] = i13;
 i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i12, 43120) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i13) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 48 >> 2] & 7](i12, i7, i9, i8) | 0;
 i5 = i8 + (i5 << 2) | 0;
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i8, (i4 | 0) == (i9 | 0) ? i5 : i8 + (i4 - i7 << 2) | 0, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEy(i11, i6, i7) {
 i11 = i11 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i12 + 16 | 0;
 i9 = i12 + 12 | 0;
 i10 = i12;
 i1 = i12 + 8 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i10, i11);
 if (HEAP8[i10 >> 0] | 0) {
  i8 = __ZNKSt3__18ios_base6getlocEv(i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  HEAP32[i1 >> 2] = i8;
  i8 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43144) | 0;
  __ZNSt3__16localeD2Ev(i1);
  i3 = i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i4 = HEAP32[i3 + 24 >> 2] | 0;
  i2 = i3 + 76 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   i1 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
   HEAP32[i5 >> 2] = i1;
   i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 43088) | 0;
   i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 32) | 0;
   __ZNSt3__16localeD2Ev(i5);
   i1 = i1 << 24 >> 24;
   HEAP32[i2 >> 2] = i1;
  }
  i2 = HEAP32[(HEAP32[i8 >> 2] | 0) + 28 >> 2] | 0;
  HEAP32[i9 >> 2] = i4;
  HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
  if (!(FUNCTION_TABLE_iiiiiii[i2 & 63](i8, i5, i3, i1 & 255, i6, i7) | 0)) {
   i9 = i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i10);
 STACKTOP = i12;
 return i11 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEx(i11, i6, i7) {
 i11 = i11 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i12 + 16 | 0;
 i9 = i12 + 12 | 0;
 i10 = i12;
 i1 = i12 + 8 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i10, i11);
 if (HEAP8[i10 >> 0] | 0) {
  i8 = __ZNKSt3__18ios_base6getlocEv(i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  HEAP32[i1 >> 2] = i8;
  i8 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43144) | 0;
  __ZNSt3__16localeD2Ev(i1);
  i3 = i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i4 = HEAP32[i3 + 24 >> 2] | 0;
  i2 = i3 + 76 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   i1 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
   HEAP32[i5 >> 2] = i1;
   i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 43088) | 0;
   i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 32) | 0;
   __ZNSt3__16localeD2Ev(i5);
   i1 = i1 << 24 >> 24;
   HEAP32[i2 >> 2] = i1;
  }
  i2 = HEAP32[(HEAP32[i8 >> 2] | 0) + 20 >> 2] | 0;
  HEAP32[i9 >> 2] = i4;
  HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
  if (!(FUNCTION_TABLE_iiiiiii[i2 & 63](i8, i5, i3, i1 & 255, i6, i7) | 0)) {
   i9 = i11 + (HEAP32[(HEAP32[i11 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i10);
 STACKTOP = i12;
 return i11 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv(i5, i3, i2, i1, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i10 = i6;
 i5 = i6 + 72 | 0;
 i7 = i6 + 52 | 0;
 i8 = i6 + 12 | 0;
 i12 = i6 + 8 | 0;
 i11 = i6 + 4 | 0;
 HEAP8[i5 >> 0] = HEAP8[35521] | 0;
 HEAP8[i5 + 1 >> 0] = HEAP8[35522] | 0;
 HEAP8[i5 + 2 >> 0] = HEAP8[35523] | 0;
 HEAP8[i5 + 3 >> 0] = HEAP8[35524] | 0;
 HEAP8[i5 + 4 >> 0] = HEAP8[35525] | 0;
 HEAP8[i5 + 5 >> 0] = HEAP8[35526] | 0;
 i9 = __ZNSt3__16__clocEv() | 0;
 HEAP32[i10 >> 2] = i4;
 i5 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i7, 20, i9, i5, i10) | 0;
 i9 = i7 + i5 | 0;
 i4 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i7, i9, i2) | 0;
 i13 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i12 >> 2] = i13;
 i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i12, 43088) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i13) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 32 >> 2] & 7](i12, i7, i9, i8) | 0;
 i5 = i8 + i5 | 0;
 HEAP32[i11 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 i5 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i8, (i4 | 0) == (i9 | 0) ? i5 : i8 + (i4 - i7) | 0, i5, i2, i1) | 0;
 STACKTOP = i6;
 return i5 | 0;
}

function __ZN4wasm10WasmWalkerINS_17RemoveUnusedNamesEvE9startWalkEPNS_6ModuleE(i7, i5) {
 i7 = i7 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i8 = 0;
 i4 = i7 + -4 | 0;
 i1 = HEAP32[i5 + 4 >> 2] | 0;
 i6 = i7 + 4 | 0;
 i2 = HEAP32[i5 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i6 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i8 = 5;
   break;
  }
 }
 if ((i8 | 0) == 5) ___assert_fail(30214, 30223, 1416, 30234);
 i1 = HEAP32[i5 + 16 >> 2] | 0;
 i2 = HEAP32[i5 + 12 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i6 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i8 = 9;
   break;
  }
 }
 if ((i8 | 0) == 9) ___assert_fail(30214, 30223, 1420, 30234);
 i1 = HEAP32[i5 + 28 >> 2] | 0;
 i2 = HEAP32[i5 + 24 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i6 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i8 = 13;
   break;
  }
 }
 if ((i8 | 0) == 13) ___assert_fail(30214, 30223, 1424, 30234);
 i3 = HEAP32[i5 + 40 >> 2] | 0;
 i2 = i4 + 12 | 0;
 i1 = HEAP32[i5 + 36 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i7 >> 2] | 0) + 12 >> 2] & 127](i7, HEAP32[i1 >> 2] | 0);
  __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE5clearEv(i2);
  if (!(HEAP32[i6 >> 2] | 0)) i1 = i1 + 4 | 0; else {
   i8 = 17;
   break;
  }
 }
 if ((i8 | 0) == 17) ___assert_fail(30214, 30223, 1429, 30234);
 if (!(HEAP32[i6 >> 2] | 0)) return; else ___assert_fail(30214, 30223, 1432, 30234);
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy(i6, i5, i4, i3, i1, i2) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i9 = i7 + 8 | 0;
 i13 = i7;
 i14 = i7 + 204 | 0;
 i8 = i7 + 32 | 0;
 i11 = i7 + 28 | 0;
 i6 = i7 + 20 | 0;
 i12 = i7 + 24 | 0;
 i10 = i7 + 16 | 0;
 i15 = i13;
 HEAP32[i15 >> 2] = 37;
 HEAP32[i15 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 38489, 0, HEAP32[i4 + 4 >> 2] | 0);
 i15 = __ZNSt3__16__clocEv() | 0;
 i16 = i9;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i16 + 4 >> 2] = i2;
 i1 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 23, i15, i13, i9) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i1, i4) | 0;
 i2 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i12 >> 2] = i2;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i14, i13, i1, i8, i11, i6, i12);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i5 >> 2];
 i5 = HEAP32[i11 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i8, i5, i6, i4, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx(i6, i5, i4, i3, i1, i2) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i9 = i7 + 8 | 0;
 i13 = i7;
 i14 = i7 + 196 | 0;
 i8 = i7 + 32 | 0;
 i11 = i7 + 28 | 0;
 i6 = i7 + 20 | 0;
 i12 = i7 + 24 | 0;
 i10 = i7 + 16 | 0;
 i15 = i13;
 HEAP32[i15 >> 2] = 37;
 HEAP32[i15 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 38489, 1, HEAP32[i4 + 4 >> 2] | 0);
 i15 = __ZNSt3__16__clocEv() | 0;
 i16 = i9;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i16 + 4 >> 2] = i2;
 i1 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 22, i15, i13, i9) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i1, i4) | 0;
 i2 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i12 >> 2] = i2;
 __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i14, i13, i1, i8, i11, i6, i12);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i5 >> 2];
 i5 = HEAP32[i11 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i8, i5, i6, i4, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy(i6, i5, i4, i3, i1, i2) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i9 = i7 + 8 | 0;
 i13 = i7;
 i14 = i7 + 75 | 0;
 i8 = i7 + 32 | 0;
 i11 = i7 + 28 | 0;
 i6 = i7 + 20 | 0;
 i12 = i7 + 24 | 0;
 i10 = i7 + 16 | 0;
 i15 = i13;
 HEAP32[i15 >> 2] = 37;
 HEAP32[i15 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 38489, 0, HEAP32[i4 + 4 >> 2] | 0);
 i15 = __ZNSt3__16__clocEv() | 0;
 i16 = i9;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i16 + 4 >> 2] = i2;
 i1 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 23, i15, i13, i9) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i1, i4) | 0;
 i2 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i12 >> 2] = i2;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i14, i13, i1, i8, i11, i6, i12);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i5 >> 2];
 i5 = HEAP32[i11 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i8, i5, i6, i4, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx(i6, i5, i4, i3, i1, i2) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i9 = i7 + 8 | 0;
 i13 = i7;
 i14 = i7 + 74 | 0;
 i8 = i7 + 32 | 0;
 i11 = i7 + 28 | 0;
 i6 = i7 + 20 | 0;
 i12 = i7 + 24 | 0;
 i10 = i7 + 16 | 0;
 i15 = i13;
 HEAP32[i15 >> 2] = 37;
 HEAP32[i15 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 38489, 1, HEAP32[i4 + 4 >> 2] | 0);
 i15 = __ZNSt3__16__clocEv() | 0;
 i16 = i9;
 HEAP32[i16 >> 2] = i1;
 HEAP32[i16 + 4 >> 2] = i2;
 i1 = i14 + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i14, 22, i15, i13, i9) | 0) | 0;
 i13 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i14, i1, i4) | 0;
 i2 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i12 >> 2] = i2;
 __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i14, i13, i1, i8, i11, i6, i12);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 HEAP32[i10 >> 2] = HEAP32[i5 >> 2];
 i5 = HEAP32[i11 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i9, i8, i5, i6, i4, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(i10, i8) {
 i10 = i10 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i11 + 16 | 0;
 i6 = i11 + 12 | 0;
 i9 = i11;
 i1 = i11 + 8 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i9, i10);
 if (HEAP8[i9 >> 0] | 0) {
  i7 = __ZNKSt3__18ios_base6getlocEv(i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  HEAP32[i1 >> 2] = i7;
  i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43144) | 0;
  __ZNSt3__16localeD2Ev(i1);
  i3 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i4 = HEAP32[i3 + 24 >> 2] | 0;
  i2 = i3 + 76 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   i1 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
   HEAP32[i5 >> 2] = i1;
   i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 43088) | 0;
   i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 32) | 0;
   __ZNSt3__16localeD2Ev(i5);
   i1 = i1 << 24 >> 24;
   HEAP32[i2 >> 2] = i1;
  }
  i2 = HEAP32[(HEAP32[i7 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i6 >> 2] = i4;
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[i2 & 31](i7, i5, i3, i1 & 255, i8) | 0)) {
   i8 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
 STACKTOP = i11;
 return i10 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(i10, i8) {
 i10 = i10 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i11 + 16 | 0;
 i6 = i11 + 12 | 0;
 i9 = i11;
 i1 = i11 + 8 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i9, i10);
 if (HEAP8[i9 >> 0] | 0) {
  i7 = __ZNKSt3__18ios_base6getlocEv(i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  HEAP32[i1 >> 2] = i7;
  i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43144) | 0;
  __ZNSt3__16localeD2Ev(i1);
  i3 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i4 = HEAP32[i3 + 24 >> 2] | 0;
  i2 = i3 + 76 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   i1 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
   HEAP32[i5 >> 2] = i1;
   i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 43088) | 0;
   i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 32) | 0;
   __ZNSt3__16localeD2Ev(i5);
   i1 = i1 << 24 >> 24;
   HEAP32[i2 >> 2] = i1;
  }
  i2 = HEAP32[(HEAP32[i7 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i6 >> 2] = i4;
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[i2 & 31](i7, i5, i3, i1 & 255, i8) | 0)) {
   i8 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
 STACKTOP = i11;
 return i10 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(i10, d8) {
 i10 = i10 | 0;
 d8 = +d8;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i11 + 16 | 0;
 i6 = i11 + 12 | 0;
 i9 = i11;
 i1 = i11 + 8 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i9, i10);
 if (HEAP8[i9 >> 0] | 0) {
  i7 = __ZNKSt3__18ios_base6getlocEv(i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  HEAP32[i1 >> 2] = i7;
  i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 43144) | 0;
  __ZNSt3__16localeD2Ev(i1);
  i3 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i4 = HEAP32[i3 + 24 >> 2] | 0;
  i2 = i3 + 76 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   i1 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
   HEAP32[i5 >> 2] = i1;
   i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 43088) | 0;
   i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 32) | 0;
   __ZNSt3__16localeD2Ev(i5);
   i1 = i1 << 24 >> 24;
   HEAP32[i2 >> 2] = i1;
  }
  i2 = HEAP32[(HEAP32[i7 >> 2] | 0) + 32 >> 2] | 0;
  HEAP32[i6 >> 2] = i4;
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  if (!(FUNCTION_TABLE_iiiiid[i2 & 7](i7, i5, i3, i1 & 255, d8) | 0)) {
   i7 = i10 + (HEAP32[(HEAP32[i10 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 5;
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
 STACKTOP = i11;
 return i10 | 0;
}

function __ZN4wasm10WasmWalkerINS_13ReorderLocalsEvE9startWalkEPNS_6ModuleE(i6, i3) {
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, i7 = 0;
 i4 = i6 + -4 | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 i5 = i6 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i5 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i7 = 5;
   break;
  }
 }
 if ((i7 | 0) == 5) ___assert_fail(30214, 30223, 1416, 30234);
 i1 = HEAP32[i3 + 16 >> 2] | 0;
 i2 = HEAP32[i3 + 12 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i5 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i7 = 9;
   break;
  }
 }
 if ((i7 | 0) == 9) ___assert_fail(30214, 30223, 1420, 30234);
 i1 = HEAP32[i3 + 28 >> 2] | 0;
 i2 = HEAP32[i3 + 24 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i5 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i7 = 13;
   break;
  }
 }
 if ((i7 | 0) == 13) ___assert_fail(30214, 30223, 1424, 30234);
 i2 = HEAP32[i3 + 40 >> 2] | 0;
 i1 = HEAP32[i3 + 36 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  i3 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] & 127](i6, i3);
  __ZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionE(i4, i3);
  if (!(HEAP32[i5 >> 2] | 0)) i1 = i1 + 4 | 0; else {
   i7 = 17;
   break;
  }
 }
 if ((i7 | 0) == 17) ___assert_fail(30214, 30223, 1429, 30234);
 if (!(HEAP32[i5 >> 2] | 0)) return; else ___assert_fail(30214, 30223, 1432, 30234);
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11truncSFloatEPNS_5UnaryES5_(i4, i5, i2, i1) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var d3 = 0.0, d6 = 0.0;
 d3 = +__ZN4wasm7Literal8getFloatEv(i1);
 d6 = +Math_abs(+d3);
 HEAPF64[tempDoublePtr >> 3] = d6;
 i1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 if (i1 >>> 0 > 2146435072 | (i1 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
  i1 = HEAP32[(HEAP32[i5 + 4 >> 2] | 0) + 12 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 127](i1, 21012);
 }
 if ((HEAP32[i2 + 4 >> 2] | 0) == 1) {
  if (d3 > 2147483647.0 | d3 < -2147483648.0) {
   i5 = HEAP32[(HEAP32[i5 + 4 >> 2] | 0) + 12 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 127](i5, 21031);
  }
  HEAP32[i4 >> 2] = 1;
  HEAP32[i4 + 8 >> 2] = ~~d3;
 } else {
  i1 = ~~d3 >>> 0;
  i2 = +Math_abs(d3) >= 1.0 ? (d3 > 0.0 ? ~~+Math_min(+Math_floor(d3 / 4294967296.0), 4294967295.0) >>> 0 : ~~+Math_ceil((d3 - +(~~d3 >>> 0)) / 4294967296.0) >>> 0) : 0;
  if (d3 < -9223372036854775808.0 | d3 >= 1.0 & ((i2 | 0) < 0 | (i2 | 0) == 0 & i1 >>> 0 < 1)) {
   i5 = HEAP32[(HEAP32[i5 + 4 >> 2] | 0) + 12 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 127](i5, 21031);
  }
  HEAP32[i4 >> 2] = 2;
  i5 = i4 + 8 | 0;
  HEAP32[i5 >> 2] = i1;
  HEAP32[i5 + 4 >> 2] = i2;
 }
 return;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner17generateArgumentsERKNS4_IPNS_10ExpressionENS6_ISC_EEEES9_(i7, i9, i1, i8) {
 i7 = i7 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0;
 i3 = i1 + 4 | 0;
 __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE7reserveEj(i8, (HEAP32[i3 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 2);
 i3 = HEAP32[i3 >> 2] | 0;
 i4 = i7 + 16 | 0;
 i5 = i8 + 4 | 0;
 i6 = i8 + 8 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) {
   i10 = 8;
   break;
  }
  __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i7, i9, HEAP32[i2 >> 2] | 0);
  if (HEAP32[i4 >> 2] | 0) break;
  i1 = HEAP32[i5 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i6 >> 2] | 0)) __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i8, i7); else {
   HEAP32[i1 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i1 + 4 >> 2] = HEAP32[i7 + 4 >> 2];
   HEAP32[i1 + 8 >> 2] = HEAP32[i7 + 8 >> 2];
   HEAP32[i1 + 12 >> 2] = HEAP32[i7 + 12 >> 2];
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 16;
  }
  i2 = i2 + 4 | 0;
 }
 if ((i10 | 0) == 8) {
  HEAP32[i7 >> 2] = 0;
  i10 = i7 + 8 | 0;
  HEAP32[i10 >> 2] = 0;
  HEAP32[i10 + 4 >> 2] = 0;
  HEAP32[i4 >> 2] = 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i3) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i2 = 0, i5 = 0;
 L1 : do if ((i1 | 0) != (i4 | 0)) switch (HEAP8[i1 >> 0] | 0) {
 case 88:
  {
   i5 = i1 + 1 | 0;
   i2 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_(i5, i4, i3) | 0;
   if ((i2 | 0) == (i5 | 0) | (i2 | 0) == (i4 | 0)) break L1;
   i1 = (HEAP8[i2 >> 0] | 0) == 69 ? i2 + 1 | 0 : i1;
   break L1;
  }
 case 74:
  {
   i2 = i1 + 1 | 0;
   if ((i2 | 0) == (i4 | 0)) break L1;
   while (1) {
    if ((HEAP8[i2 >> 0] | 0) == 69) {
     i1 = i2;
     break;
    }
    i5 = i2;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_(i2, i4, i3) | 0;
    if ((i2 | 0) == (i5 | 0)) break L1;
   }
   i1 = i1 + 1 | 0;
   break L1;
  }
 case 76:
  {
   i5 = i1 + 1 | 0;
   if ((i5 | 0) != (i4 | 0) ? (HEAP8[i5 >> 0] | 0) == 90 : 0) {
    i5 = i1 + 2 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_(i5, i4, i3) | 0;
    if ((i2 | 0) == (i5 | 0) | (i2 | 0) == (i4 | 0)) break L1;
    i1 = (HEAP8[i2 >> 0] | 0) == 69 ? i2 + 1 | 0 : i1;
    break L1;
   }
   i1 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i3) | 0;
   break L1;
  }
 default:
  {
   i1 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_(i1, i4, i3) | 0;
   break L1;
  }
 } while (0);
 return i1 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11truncUFloatEPNS_5UnaryES5_(i4, i5, i2, i1) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var d3 = 0.0, d6 = 0.0;
 d3 = +__ZN4wasm7Literal8getFloatEv(i1);
 d6 = +Math_abs(+d3);
 HEAPF64[tempDoublePtr >> 3] = d6;
 i1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 if (i1 >>> 0 > 2146435072 | (i1 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0) {
  i1 = HEAP32[(HEAP32[i5 + 4 >> 2] | 0) + 12 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 127](i1, 21056);
 }
 if ((HEAP32[i2 + 4 >> 2] | 0) == 1) {
  if (d3 > 4294967295.0 | d3 <= -1.0) {
   i5 = HEAP32[(HEAP32[i5 + 4 >> 2] | 0) + 12 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 127](i5, 21075);
  }
  HEAP32[i4 >> 2] = 1;
  HEAP32[i4 + 8 >> 2] = ~~d3 >>> 0;
 } else {
  i1 = ~~d3 >>> 0;
  i2 = +Math_abs(d3) >= 1.0 ? (d3 > 0.0 ? ~~+Math_min(+Math_floor(d3 / 4294967296.0), 4294967295.0) >>> 0 : ~~+Math_ceil((d3 - +(~~d3 >>> 0)) / 4294967296.0) >>> 0) : 0;
  if (d3 <= -1.0 ? 1 : +(i1 >>> 0) + 4294967296.0 * +(i2 >>> 0) < d3 + -1.0) {
   i5 = HEAP32[(HEAP32[i5 + 4 >> 2] | 0) + 12 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 127](i5, 21075);
  }
  HEAP32[i4 >> 2] = 2;
  i5 = i4 + 8 | 0;
  HEAP32[i5 >> 2] = i1;
  HEAP32[i5 + 4 >> 2] = i2;
 }
 return;
}

function __ZN4wasm10WasmWalkerIZZNS_15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizer10visitBlockEPNS_5BlockEE11BreakSeekervE9startWalkEPNS_6ModuleE(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 5;
   break;
  }
 }
 if ((i6 | 0) == 5) ___assert_fail(30214, 30223, 1416, 30234);
 i1 = HEAP32[i3 + 16 >> 2] | 0;
 i2 = HEAP32[i3 + 12 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 9;
   break;
  }
 }
 if ((i6 | 0) == 9) ___assert_fail(30214, 30223, 1420, 30234);
 i1 = HEAP32[i3 + 28 >> 2] | 0;
 i2 = HEAP32[i3 + 24 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 13;
   break;
  }
 }
 if ((i6 | 0) == 13) ___assert_fail(30214, 30223, 1424, 30234);
 i2 = HEAP32[i3 + 40 >> 2] | 0;
 i1 = HEAP32[i3 + 36 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] & 127](i5, HEAP32[i1 >> 2] | 0);
  if (!(HEAP32[i4 >> 2] | 0)) i1 = i1 + 4 | 0; else {
   i6 = 17;
   break;
  }
 }
 if ((i6 | 0) == 17) ___assert_fail(30214, 30223, 1429, 30234);
 if (!(HEAP32[i4 >> 2] | 0)) return; else ___assert_fail(30214, 30223, 1432, 30234);
}

function __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_(i4, i2, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i8;
 if ((i4 | 0) != (i2 | 0) ? (i1 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_(i4, i2, i3) | 0, (i1 | 0) != (i4 | 0)) : 0) {
  i6 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_(i1, i2, i3) | 0;
  if ((i6 | 0) != (i1 | 0)) {
   i5 = i3 + 4 | 0;
   i1 = HEAP32[i5 >> 2] | 0;
   if (((i1 - (HEAP32[i3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) i1 = i4; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i7, i1 + -24 | 0);
    i1 = HEAP32[i5 >> 2] | 0;
    i2 = i1 + -24 | 0;
    i3 = i1;
    while (1) {
     if ((i3 | 0) == (i2 | 0)) break;
     i4 = i3 + -24 | 0;
     HEAP32[i5 >> 2] = i4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i4);
     i3 = HEAP32[i5 >> 2] | 0;
    }
    i5 = HEAP8[i7 >> 0] | 0;
    i4 = (i5 & 1) == 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1 + -48 | 0, i4 ? i7 + 1 | 0 : HEAP32[i7 + 8 >> 2] | 0, i4 ? (i5 & 255) >>> 1 : HEAP32[i7 + 4 >> 2] | 0) | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i7);
    i1 = i6;
   }
  }
 } else i1 = i4;
 STACKTOP = i8;
 return i1 | 0;
}

function __ZN4wasm16PrintSExpression9visitHostEPNS_4HostE(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i2 = i5;
 switch (HEAP32[i3 + 8 >> 2] | 0) {
 case 0:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i4 + 4 >> 2] | 0, 26388, 0) | 0, 41) | 0;
   break;
  }
 case 1:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i4 + 4 >> 2] | 0, 26397, 0) | 0, 41) | 0;
   break;
  }
 case 2:
  {
   __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i4 + 4 >> 2] | 0, 26409, 0) | 0;
   __ZN4wasm16PrintSExpression9incIndentEv(i4);
   __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i4, HEAP32[HEAP32[i3 + 16 >> 2] >> 2] | 0);
   __ZN4wasm16PrintSExpression9decIndentEv(i4);
   break;
  }
 case 3:
  {
   i4 = __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i4 + 4 >> 2] | 0, 26421, 0) | 0;
   HEAP32[i2 >> 2] = HEAP32[i3 + 12 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i4, i1) | 0, 41) | 0;
   break;
  }
 default:
  _abort();
 }
 STACKTOP = i5;
 return;
}

function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i8, i10, i1) {
 i8 = i8 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i11 + 12 | 0;
 i9 = i11;
 i5 = i11 + 8 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i9, i8);
 if (HEAP8[i9 >> 0] | 0) {
  i7 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
  HEAP32[i5 >> 2] = HEAP32[i7 + 24 >> 2];
  i6 = HEAP32[i7 + 4 >> 2] | 0;
  i3 = i10 + i1 | 0;
  i2 = i7 + 76 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   i1 = __ZNKSt3__18ios_base6getlocEv(i7) | 0;
   HEAP32[i4 >> 2] = i1;
   i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i4, 43088) | 0;
   i1 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 31](i1, 32) | 0;
   __ZNSt3__16localeD2Ev(i4);
   i1 = i1 << 24 >> 24;
   HEAP32[i2 >> 2] = i1;
  }
  HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
  if (!(__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i4, i10, (i6 & 176 | 0) == 32 ? i3 : i10, i3, i7, i1 & 255) | 0)) {
   i10 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__18ios_base5clearEj(i10, HEAP32[i10 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i9);
 STACKTOP = i11;
 return i8 | 0;
}

function __ZNSt3__110__stdinbufIwE9pbackfailEj(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9 + 16 | 0;
 i6 = i9 + 8 | 0;
 i3 = i9 + 4 | 0;
 i4 = i9;
 i8 = i5 + 52 | 0;
 i2 = (HEAP8[i8 >> 0] | 0) != 0;
 L1 : do if ((i1 | 0) == -1) if (i2) i1 = -1; else {
  i1 = HEAP32[i5 + 48 >> 2] | 0;
  HEAP8[i8 >> 0] = (i1 | 0) != -1 & 1;
 } else {
  do if (i2) {
   i2 = i5 + 48 | 0;
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   i10 = HEAP32[i5 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 15](i10, HEAP32[i5 + 40 >> 2] | 0, i3, i3 + 4 | 0, i4, i7, i7 + 8 | 0, i6) | 0) {
   case 1:
   case 2:
    {
     i1 = -1;
     break L1;
    }
   case 3:
    {
     HEAP8[i7 >> 0] = HEAP32[i2 >> 2];
     HEAP32[i6 >> 2] = i7 + 1;
     break;
    }
   default:
    {}
   }
   i3 = i5 + 32 | 0;
   while (1) {
    i4 = HEAP32[i6 >> 2] | 0;
    if (i4 >>> 0 <= i7 >>> 0) {
     i3 = 13;
     break;
    }
    i10 = i4 + -1 | 0;
    HEAP32[i6 >> 2] = i10;
    if ((_ungetc(HEAP8[i10 >> 0] | 0, HEAP32[i3 >> 2] | 0) | 0) == -1) {
     i3 = 12;
     break;
    }
   }
   if ((i3 | 0) == 12) {
    i1 = -1;
    break L1;
   } else if ((i3 | 0) == 13) break;
  } else i2 = i5 + 48 | 0; while (0);
  HEAP32[i2 >> 2] = i1;
  HEAP8[i8 >> 0] = 1;
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__110__stdinbufIcE9pbackfailEi(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9 + 16 | 0;
 i6 = i9 + 4 | 0;
 i3 = i9 + 8 | 0;
 i4 = i9;
 i8 = i5 + 52 | 0;
 i2 = (HEAP8[i8 >> 0] | 0) != 0;
 L1 : do if ((i1 | 0) == -1) if (i2) i1 = -1; else {
  i1 = HEAP32[i5 + 48 >> 2] | 0;
  HEAP8[i8 >> 0] = (i1 | 0) != -1 & 1;
 } else {
  do if (i2) {
   i2 = i5 + 48 | 0;
   HEAP8[i3 >> 0] = HEAP32[i2 >> 2];
   i10 = HEAP32[i5 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 12 >> 2] & 15](i10, HEAP32[i5 + 40 >> 2] | 0, i3, i3 + 1 | 0, i4, i7, i7 + 8 | 0, i6) | 0) {
   case 1:
   case 2:
    {
     i1 = -1;
     break L1;
    }
   case 3:
    {
     HEAP8[i7 >> 0] = HEAP32[i2 >> 2];
     HEAP32[i6 >> 2] = i7 + 1;
     break;
    }
   default:
    {}
   }
   i3 = i5 + 32 | 0;
   while (1) {
    i4 = HEAP32[i6 >> 2] | 0;
    if (i4 >>> 0 <= i7 >>> 0) {
     i3 = 13;
     break;
    }
    i10 = i4 + -1 | 0;
    HEAP32[i6 >> 2] = i10;
    if ((_ungetc(HEAP8[i10 >> 0] | 0, HEAP32[i3 >> 2] | 0) | 0) == -1) {
     i3 = 12;
     break;
    }
   }
   if ((i3 | 0) == 12) {
    i1 = -1;
    break L1;
   } else if ((i3 | 0) == 13) break;
  } else i2 = i5 + 48 | 0; while (0);
  HEAP32[i2 >> 2] = i1;
  HEAP8[i8 >> 0] = 1;
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder16makeCallIndirectERNS_7ElementE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i1 = i7;
 i4 = __ZN10MixedArena5allocIN4wasm12CallIndirectEEEPT_v(HEAP32[i6 + 4 >> 2] | 0) | 0;
 i3 = __ZN4wasm7Element4listEv(i5) | 0;
 i3 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i3 >> 2] | 0) + 4 >> 2] | 0) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 HEAP32[i8 >> 2] = i3;
 if ((__ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i2 + 48 | 0, i8) | 0) == (i2 + 52 | 0)) ___assert_fail(17537, 17087, 858, 17601); else {
  HEAP32[i1 >> 2] = i3;
  i8 = __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixEOS2_(i2 + 48 | 0, i1) | 0;
  i8 = HEAP32[i8 >> 2] | 0;
  HEAP32[i4 + 20 >> 2] = i8;
  HEAP32[i4 + 4 >> 2] = HEAP32[i8 + 4 >> 2];
  i8 = __ZN4wasm7Element4listEv(i5) | 0;
  i8 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i6, HEAP32[(HEAP32[i8 >> 2] | 0) + 8 >> 2] | 0) | 0;
  HEAP32[i4 + 24 >> 2] = i8;
  __ZN4wasm22SExpressionWasmBuilder17parseCallOperandsINS_12CallIndirectEEEvRNS_7ElementEjPT_(i6, i5, 3, i4);
  STACKTOP = i7;
  return i4 | 0;
 }
 return 0;
}

function __ZN4wasm10WasmWalkerIZNS_15Asm2WasmBuilder8optimizeEvE19BlockBreakOptimizervE9startWalkEPNS_6ModuleE(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 5;
   break;
  }
 }
 if ((i6 | 0) == 5) ___assert_fail(30214, 30223, 1416, 30234);
 i1 = HEAP32[i3 + 16 >> 2] | 0;
 i2 = HEAP32[i3 + 12 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 9;
   break;
  }
 }
 if ((i6 | 0) == 9) ___assert_fail(30214, 30223, 1420, 30234);
 i1 = HEAP32[i3 + 28 >> 2] | 0;
 i2 = HEAP32[i3 + 24 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 13;
   break;
  }
 }
 if ((i6 | 0) == 13) ___assert_fail(30214, 30223, 1424, 30234);
 i2 = HEAP32[i3 + 40 >> 2] | 0;
 i1 = HEAP32[i3 + 36 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] & 127](i5, HEAP32[i1 >> 2] | 0);
  if (!(HEAP32[i4 >> 2] | 0)) i1 = i1 + 4 | 0; else {
   i6 = 17;
   break;
  }
 }
 if ((i6 | 0) == 17) ___assert_fail(30214, 30223, 1429, 30234);
 if (!(HEAP32[i4 >> 2] | 0)) return; else ___assert_fail(30214, 30223, 1432, 30234);
}

function __ZNSt3__19to_stringEj(i8, i6) {
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i10;
 i9 = i10 + 4 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i9 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 if (!(HEAP8[i9 >> 0] & 1)) i1 = 10; else i1 = (HEAP32[i9 >> 2] & -2) + -1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i9, i1, 0);
 i3 = HEAP8[i9 >> 0] | 0;
 i4 = i9 + 1 | 0;
 i5 = i9 + 8 | 0;
 i2 = i3;
 i3 = (i3 & 1) == 0 ? (i3 & 255) >>> 1 : HEAP32[i9 + 4 >> 2] | 0;
 while (1) {
  i1 = (i2 & 1) == 0 ? i4 : HEAP32[i5 >> 2] | 0;
  HEAP32[i7 >> 2] = i6;
  i1 = _snprintf(i1, i3 + 1 | 0, 34654, i7) | 0;
  if ((i1 | 0) > -1) {
   if (i1 >>> 0 <= i3 >>> 0) break;
  } else i1 = i3 << 1 | 1;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i9, i1, 0);
  i2 = HEAP8[i9 >> 0] | 0;
  i3 = i1;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i9, i1, 0);
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 + 4 >> 2] = HEAP32[i9 + 4 >> 2];
 HEAP32[i8 + 8 >> 2] = HEAP32[i9 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i9 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
 STACKTOP = i10;
 return;
}

function __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__8clENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i3 = i7 + 36 | 0;
 i4 = i7 + 24 | 0;
 i5 = i7 + 12 | 0;
 i6 = i7;
 __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_(i5, i1, 36);
 i2 = HEAP32[i2 >> 2] | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = i1 + 1;
 __ZNSt3__19to_stringEj(i6, i1);
 i1 = HEAP8[i6 >> 0] | 0;
 i2 = (i1 & 1) == 0;
 i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(i5, i2 ? i6 + 1 | 0 : HEAP32[i6 + 8 >> 2] | 0, i2 ? (i1 & 255) >>> 1 : HEAP32[i6 + 4 >> 2] | 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i4 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZN6cashew7IStringC2EPKcb(i3, (HEAP8[i4 >> 0] & 1) == 0 ? i4 + 1 | 0 : HEAP32[i4 + 8 >> 2] | 0, 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 STACKTOP = i7;
 return HEAP32[i3 >> 2] | 0;
}

function ___stdio_read(i8, i7, i9) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i3 = i10 + 16 | 0;
 i2 = i10;
 i1 = i10 + 32 | 0;
 HEAP32[i1 >> 2] = i7;
 i4 = i1 + 4 | 0;
 i6 = i8 + 48 | 0;
 i11 = HEAP32[i6 >> 2] | 0;
 HEAP32[i4 >> 2] = i9 - ((i11 | 0) != 0 & 1);
 i5 = i8 + 44 | 0;
 HEAP32[i1 + 8 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i1 + 12 >> 2] = i11;
 if (!(HEAP32[10372] | 0)) {
  HEAP32[i3 >> 2] = HEAP32[i8 + 60 >> 2];
  HEAP32[i3 + 4 >> 2] = i1;
  HEAP32[i3 + 8 >> 2] = 2;
  i1 = ___syscall_ret(___syscall145(145, i3 | 0) | 0) | 0;
 } else {
  _pthread_cleanup_push(208, i8 | 0);
  HEAP32[i2 >> 2] = HEAP32[i8 + 60 >> 2];
  HEAP32[i2 + 4 >> 2] = i1;
  HEAP32[i2 + 8 >> 2] = 2;
  i1 = ___syscall_ret(___syscall145(145, i2 | 0) | 0) | 0;
  _pthread_cleanup_pop(0);
 }
 if ((i1 | 0) >= 1) {
  i4 = HEAP32[i4 >> 2] | 0;
  if (i1 >>> 0 > i4 >>> 0) {
   i2 = HEAP32[i5 >> 2] | 0;
   i3 = i8 + 4 | 0;
   HEAP32[i3 >> 2] = i2;
   HEAP32[i8 + 8 >> 2] = i2 + (i1 - i4);
   if (!(HEAP32[i6 >> 2] | 0)) i1 = i9; else {
    HEAP32[i3 >> 2] = i2 + 1;
    HEAP8[i7 + (i9 + -1) >> 0] = HEAP8[i2 >> 0] | 0;
    i1 = i9;
   }
  }
 } else {
  HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | i1 & 48 ^ 16;
  HEAP32[i8 + 8 >> 2] = 0;
  HEAP32[i8 + 4 >> 2] = 0;
 }
 STACKTOP = i10;
 return i1 | 0;
}

function __ZN6cashew7IString3setEPKcb(i6, i1, i3) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i7 + 8 | 0;
 i5 = i7;
 HEAP32[i5 >> 2] = i1;
 if ((HEAP8[40048] | 0) == 0 ? ___cxa_guard_acquire(40048) | 0 : 0) {
  i2 = __Znwj(20) | 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i2 + 4 >> 2] = 0;
  HEAP32[i2 + 8 >> 2] = 0;
  HEAP32[i2 + 12 >> 2] = 0;
  HEAPF32[i2 + 16 >> 2] = 1.0;
  HEAP32[10256] = i2;
  ___cxa_guard_release(40048);
 }
 i2 = HEAP32[10256] | 0;
 if (i3) {
  __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(i4, i2, i5);
  HEAP32[i6 >> 2] = HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2];
 } else {
  i1 = __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(i2, i5) | 0;
  if (!i1) {
   i1 = HEAP32[i5 >> 2] | 0;
   i2 = _malloc((_strlen(i1) | 0) + 1 | 0) | 0;
   _strcpy(i2, i1) | 0;
   HEAP32[i5 >> 2] = i2;
   i1 = HEAP32[10256] | 0;
  } else {
   i3 = HEAP32[i1 + 8 >> 2] | 0;
   HEAP32[i5 >> 2] = i3;
   i1 = i2;
   i2 = i3;
  }
  __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(i4, i1, i5);
  HEAP32[i6 >> 2] = i2;
 }
 STACKTOP = i7;
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE23parseElementOrStatementERPcPKc(i4, i7, i3) {
 i4 = i4 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i9 + 4 | 0;
 i6 = i9;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i7);
 i1 = HEAP32[i7 >> 2] | 0;
 L1 : do switch (HEAP8[i1 >> 0] | 0) {
 case 59:
  {
   HEAP32[i7 >> 2] = i1 + 1;
   i1 = __ZN6cashew12ValueBuilder9makeBlockEv() | 0;
   break;
  }
 case 123:
  {
   HEAP32[i7 >> 2] = i1 + 1;
   __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i7);
   i2 = HEAP32[i7 >> 2] | 0;
   if ((HEAP8[i2 >> 0] | 0) == 125) {
    HEAP32[i7 >> 2] = i2 + 1;
    i1 = __ZN6cashew12ValueBuilder9makeBlockEv() | 0;
    break L1;
   } else {
    HEAP32[i7 >> 2] = i1;
    i8 = 6;
    break L1;
   }
  }
 default:
  i8 = 6;
 } while (0);
 if ((i8 | 0) == 6) {
  i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i4, i7, i3) | 0;
  __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i7);
  if ((HEAP8[HEAP32[i7 >> 2] >> 0] | 0) == 59) {
   HEAP32[i6 >> 2] = i1;
   HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
   i1 = __ZN6cashew12ValueBuilder13makeStatementENS_3RefE(i5) | 0;
   HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
  }
 }
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN4wasm10WasmWalkerINS_15RemoveUnusedBrsEvE9startWalkEPNS_6ModuleE(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 5;
   break;
  }
 }
 if ((i6 | 0) == 5) ___assert_fail(30214, 30223, 1416, 30234);
 i1 = HEAP32[i3 + 16 >> 2] | 0;
 i2 = HEAP32[i3 + 12 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 9;
   break;
  }
 }
 if ((i6 | 0) == 9) ___assert_fail(30214, 30223, 1420, 30234);
 i1 = HEAP32[i3 + 28 >> 2] | 0;
 i2 = HEAP32[i3 + 24 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 13;
   break;
  }
 }
 if ((i6 | 0) == 13) ___assert_fail(30214, 30223, 1424, 30234);
 i2 = HEAP32[i3 + 40 >> 2] | 0;
 i1 = HEAP32[i3 + 36 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] & 127](i5, HEAP32[i1 >> 2] | 0);
  if (!(HEAP32[i4 >> 2] | 0)) i1 = i1 + 4 | 0; else {
   i6 = 17;
   break;
  }
 }
 if ((i6 | 0) == 17) ___assert_fail(30214, 30223, 1429, 30234);
 if (!(HEAP32[i4 >> 2] | 0)) return; else ___assert_fail(30214, 30223, 1432, 30234);
}

function __ZN4wasm10WasmWalkerINS_14SimplifyLocalsEvE9startWalkEPNS_6ModuleE(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 5;
   break;
  }
 }
 if ((i6 | 0) == 5) ___assert_fail(30214, 30223, 1416, 30234);
 i1 = HEAP32[i3 + 16 >> 2] | 0;
 i2 = HEAP32[i3 + 12 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 9;
   break;
  }
 }
 if ((i6 | 0) == 9) ___assert_fail(30214, 30223, 1420, 30234);
 i1 = HEAP32[i3 + 28 >> 2] | 0;
 i2 = HEAP32[i3 + 24 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 13;
   break;
  }
 }
 if ((i6 | 0) == 13) ___assert_fail(30214, 30223, 1424, 30234);
 i2 = HEAP32[i3 + 40 >> 2] | 0;
 i1 = HEAP32[i3 + 36 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] & 127](i5, HEAP32[i1 >> 2] | 0);
  if (!(HEAP32[i4 >> 2] | 0)) i1 = i1 + 4 | 0; else {
   i6 = 17;
   break;
  }
 }
 if ((i6 | 0) == 17) ___assert_fail(30214, 30223, 1429, 30234);
 if (!(HEAP32[i4 >> 2] | 0)) return; else ___assert_fail(30214, 30223, 1432, 30234);
}

function __ZN4wasm10WasmWalkerINS_14PostEmscriptenEvE9startWalkEPNS_6ModuleE(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 5;
   break;
  }
 }
 if ((i6 | 0) == 5) ___assert_fail(30214, 30223, 1416, 30234);
 i1 = HEAP32[i3 + 16 >> 2] | 0;
 i2 = HEAP32[i3 + 12 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 9;
   break;
  }
 }
 if ((i6 | 0) == 9) ___assert_fail(30214, 30223, 1420, 30234);
 i1 = HEAP32[i3 + 28 >> 2] | 0;
 i2 = HEAP32[i3 + 24 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 13;
   break;
  }
 }
 if ((i6 | 0) == 13) ___assert_fail(30214, 30223, 1424, 30234);
 i2 = HEAP32[i3 + 40 >> 2] | 0;
 i1 = HEAP32[i3 + 36 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] & 127](i5, HEAP32[i1 >> 2] | 0);
  if (!(HEAP32[i4 >> 2] | 0)) i1 = i1 + 4 | 0; else {
   i6 = 17;
   break;
  }
 }
 if ((i6 | 0) == 17) ___assert_fail(30214, 30223, 1429, 30234);
 if (!(HEAP32[i4 >> 2] | 0)) return; else ___assert_fail(30214, 30223, 1432, 30234);
}

function __ZN4wasm10WasmWalkerINS_11MergeBlocksEvE9startWalkEPNS_6ModuleE(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 i4 = i5 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 5;
   break;
  }
 }
 if ((i6 | 0) == 5) ___assert_fail(30214, 30223, 1416, 30234);
 i1 = HEAP32[i3 + 16 >> 2] | 0;
 i2 = HEAP32[i3 + 12 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 9;
   break;
  }
 }
 if ((i6 | 0) == 9) ___assert_fail(30214, 30223, 1420, 30234);
 i1 = HEAP32[i3 + 28 >> 2] | 0;
 i2 = HEAP32[i3 + 24 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  if (!(HEAP32[i4 >> 2] | 0)) i2 = i2 + 4 | 0; else {
   i6 = 13;
   break;
  }
 }
 if ((i6 | 0) == 13) ___assert_fail(30214, 30223, 1424, 30234);
 i2 = HEAP32[i3 + 40 >> 2] | 0;
 i1 = HEAP32[i3 + 36 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] & 127](i5, HEAP32[i1 >> 2] | 0);
  if (!(HEAP32[i4 >> 2] | 0)) i1 = i1 + 4 | 0; else {
   i6 = 17;
   break;
  }
 }
 if ((i6 | 0) == 17) ___assert_fail(30214, 30223, 1429, 30234);
 if (!(HEAP32[i4 >> 2] | 0)) return; else ___assert_fail(30214, 30223, 1432, 30234);
}

function __ZNSt3__16vectorIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 3) + 1 | 0;
 if (i2 >>> 0 > 536870911) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 3 >>> 0 < 268435455) {
  i1 = i1 >> 2;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 536870911;
 __ZNSt3__114__split_bufferIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementERNS_9allocatorIS6_EEEC2EjjS9_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 3, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i1 = i6;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i6 = i3;
 HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i6 + 4 >> 2] = i2;
 HEAP32[i4 >> 2] = i3 + 8;
 __ZNSt3__16vectorIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE(i7, i5);
 __ZNSt3__114__split_bufferIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementERNS_9allocatorIS6_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i2 = HEAP32[i6 >> 2] | 0;
 i3 = i6 + 4 | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  i10 = HEAP32[i4 >> 2] | 0;
  i8 = i10 + -16 | 0;
  i7 = i1 + -16 | 0;
  HEAP32[i8 >> 2] = 0;
  i9 = i10 + -12 | 0;
  HEAP32[i9 >> 2] = 0;
  i11 = HEAP32[i1 + -4 >> 2] | 0;
  HEAP32[i10 + -8 >> 2] = 0;
  HEAP32[i10 + -4 >> 2] = i11;
  HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
  i8 = i1 + -12 | 0;
  HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
  i9 = i1 + -8 | 0;
  HEAP32[i10 + -8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i9 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + -16;
  i1 = i7;
 }
 i9 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i9;
 i9 = i5 + 8 | 0;
 i11 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i9 >> 2] = i11;
 i9 = i6 + 8 | 0;
 i11 = i5 + 12 | 0;
 i10 = HEAP32[i9 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i11 >> 2] = i10;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 return;
}

function __ZNSt3__16vectorIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 3) + 1 | 0;
 if (i2 >>> 0 > 536870911) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 3 >>> 0 < 268435455) {
  i1 = i1 >> 2;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 536870911;
 __ZNSt3__114__split_bufferIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementERNS_9allocatorIS6_EEEC2EjjS9_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 3, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i1 = i6;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i6 = i3;
 HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i6 + 4 >> 2] = i2;
 HEAP32[i4 >> 2] = i3 + 8;
 __ZNSt3__16vectorIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE(i7, i5);
 __ZNSt3__114__split_bufferIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementERNS_9allocatorIS6_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZN6cashew12ValueBuilder18appendCodeToSwitchENS_3RefES1_b(i6, i5, i2) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i7 + 8 | 0;
 i4 = i7 + 4 | 0;
 i1 = i7;
 if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i6, 0) | 0, 41128) | 0)) ___assert_fail(23952, 31233, 1610, 24014);
 if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i5, 0) | 0, 41044) | 0)) ___assert_fail(24033, 31233, 1611, 24014);
 L7 : do if (i2) {
  i6 = __ZN6cashew3RefixEj(i6, 2) | 0;
  i6 = __ZN6cashew5Value4backEv(__ZN6cashew5Value4backEv(HEAP32[i6 >> 2] | 0) | 0) | 0;
  HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
  __ZN6cashew5Value9push_backENS_3RefE(i6, i3) | 0;
 } else {
  i1 = 0;
  while (1) {
   i2 = __ZN6cashew3RefixEj(i5, 1) | 0;
   if (i1 >>> 0 >= (__ZN6cashew5Value4sizeEv(HEAP32[i2 >> 2] | 0) | 0) >>> 0) break L7;
   i2 = __ZN6cashew3RefixEj(i6, 2) | 0;
   i2 = __ZN6cashew5Value4backEv(__ZN6cashew5Value4backEv(HEAP32[i2 >> 2] | 0) | 0) | 0;
   i8 = __ZN6cashew3RefixEj(__ZN6cashew3RefixEj(i5, 1) | 0, i1) | 0;
   HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
   __ZN6cashew5Value9push_backENS_3RefE(i2, i3) | 0;
   i1 = i1 + 1 | 0;
  }
 } while (0);
 STACKTOP = i7;
 return;
}

function __ZNSt3__16vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i2 = HEAP32[i6 >> 2] | 0;
 i3 = i6 + 4 | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  i10 = HEAP32[i4 >> 2] | 0;
  i8 = i10 + -16 | 0;
  i7 = i1 + -16 | 0;
  HEAP32[i8 >> 2] = 0;
  i9 = i10 + -12 | 0;
  HEAP32[i9 >> 2] = 0;
  i11 = HEAP32[i1 + -4 >> 2] | 0;
  HEAP32[i10 + -8 >> 2] = 0;
  HEAP32[i10 + -4 >> 2] = i11;
  HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
  i8 = i1 + -12 | 0;
  HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
  i9 = i1 + -8 | 0;
  HEAP32[i10 + -8 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i9 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + -16;
  i1 = i7;
 }
 i9 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i9;
 i9 = i5 + 8 | 0;
 i11 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i9 >> 2] = i11;
 i9 = i6 + 8 | 0;
 i11 = i5 + 12 | 0;
 i10 = HEAP32[i9 >> 2] | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i11 >> 2] = i10;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 return;
}

function __ZN4wasm15Asm2WasmBuilder14allocateGlobalEN6cashew7IStringENS_8WasmTypeEbS2_S2_(i7, i6, i8, i4, i5, i3) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i9 = 0, i10 = 0, i11 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i9;
 i2 = i7 + 48 | 0;
 if ((__ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(i2, i6) | 0) != (i7 + 52 | 0)) ___assert_fail(15424, 13478, 178, 15472);
 i10 = i7 + 8 | 0;
 i11 = HEAP32[i5 >> 2] | 0;
 i5 = HEAP32[i3 >> 2] | 0;
 HEAP32[i1 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i1 + 4 >> 2] = i8;
 HEAP8[i1 + 8 >> 0] = i4 & 1;
 HEAP32[i1 + 12 >> 2] = i11;
 HEAP32[i1 + 16 >> 2] = i5;
 __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE7emplaceIJRS2_S5_EEENS9_INS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeIS2_S5_EEPNS_11__tree_nodeISJ_PvEEiEEEEbEEDpOT_(i9 + 24 | 0, i2, i6, i1);
 i8 = (HEAP32[i10 >> 2] | 0) + 8 | 0;
 HEAP32[i10 >> 2] = i8;
 if (i8 >>> 0 < (HEAP32[i7 + 12 >> 2] | 0) >>> 0) {
  STACKTOP = i9;
  return;
 } else ___assert_fail(15487, 13478, 181, 15472);
}

function _mbtowc(i2, i6, i4) {
 i2 = i2 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7;
 L1 : do if (!i6) i1 = 0; else {
  do if (i4 | 0) {
   i5 = (i2 | 0) == 0 ? i1 : i2;
   i1 = HEAP8[i6 >> 0] | 0;
   i2 = i1 & 255;
   if (i1 << 24 >> 24 > -1) {
    HEAP32[i5 >> 2] = i2;
    i1 = i1 << 24 >> 24 != 0 & 1;
    break L1;
   }
   i1 = i2 + -194 | 0;
   if (i1 >>> 0 <= 50) {
    i2 = i6 + 1 | 0;
    i3 = HEAP32[4884 + (i1 << 2) >> 2] | 0;
    if (i4 >>> 0 < 4 ? i3 & -2147483648 >>> ((i4 * 6 | 0) + -6 | 0) | 0 : 0) break;
    i1 = HEAPU8[i2 >> 0] | 0;
    i4 = i1 >>> 3;
    if ((i4 + -16 | i4 + (i3 >> 26)) >>> 0 <= 7) {
     i1 = i1 + -128 | i3 << 6;
     if ((i1 | 0) >= 0) {
      HEAP32[i5 >> 2] = i1;
      i1 = 2;
      break L1;
     }
     i2 = HEAPU8[i6 + 2 >> 0] | 0;
     if ((i2 & 192 | 0) == 128) {
      i2 = i2 + -128 | i1 << 6;
      if ((i2 | 0) >= 0) {
       HEAP32[i5 >> 2] = i2;
       i1 = 3;
       break L1;
      }
      i1 = HEAPU8[i6 + 3 >> 0] | 0;
      if ((i1 & 192 | 0) == 128) {
       HEAP32[i5 >> 2] = i1 + -128 | i2 << 6;
       i1 = 4;
       break L1;
      }
     }
    }
   }
  } while (0);
  i1 = ___errno_location() | 0;
  HEAP32[i1 >> 2] = 84;
  i1 = -1;
 } while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi(i9, i7) {
 i9 = i9 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i10 + 24 | 0;
 i1 = i10 + 20 | 0;
 i3 = i10 + 16 | 0;
 i4 = i10 + 12 | 0;
 i11 = i10 + 28 | 0;
 i6 = i10 + 8 | 0;
 i8 = i10 + 4 | 0;
 i5 = i10;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b(i11, i9, 0);
 if (HEAP8[i11 >> 0] | 0) {
  HEAP32[i6 >> 2] = 0;
  i12 = __ZNKSt3__18ios_base6getlocEv(i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  HEAP32[i5 >> 2] = i12;
  i12 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 43112) | 0;
  i11 = i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i13 = HEAP32[(HEAP32[i12 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i11 + 24 >> 2];
  HEAP32[i4 >> 2] = 0;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  FUNCTION_TABLE_iiiiiii[i13 & 63](i12, i1, i2, i11, i6, i8) | 0;
  __ZNSt3__16localeD2Ev(i5);
  HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
  i8 = i9 + (HEAP32[(HEAP32[i9 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i11 = i8 + 16 | 0;
  HEAP32[i11 >> 2] = HEAP32[i11 >> 2] | HEAP32[i6 >> 2] | (HEAP32[i8 + 24 >> 2] | 0) == 0;
 }
 STACKTOP = i10;
 return i9 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder14makeMaybeBlockERNS_7ElementEjj(i10, i8, i2, i9) {
 i10 = i10 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i11 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i12;
 if ((__ZN4wasm7Element4sizeEv(i8) | 0) == (i2 + 1 | 0)) i1 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i10, __ZN4wasm7ElementixEj(i8, i2) | 0) | 0; else {
  i1 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i10 + 4 >> 2] | 0) | 0;
  i11 = i1 + 12 | 0;
  i6 = i1 + 16 | 0;
  i7 = i1 + 20 | 0;
  while (1) {
   if (!(i2 >>> 0 < i9 >>> 0 & i2 >>> 0 < (__ZN4wasm7Element4sizeEv(i8) | 0) >>> 0)) break;
   i3 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i10, __ZN4wasm7ElementixEj(i8, i2) | 0) | 0;
   HEAP32[i5 >> 2] = i3;
   i4 = HEAP32[i6 >> 2] | 0;
   if (i4 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i4 >> 2] = i3;
    HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
   } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i11, i5);
   i2 = i2 + 1 | 0;
  }
  i2 = HEAP32[i6 >> 2] | 0;
  if ((i2 | 0) != (HEAP32[i11 >> 2] | 0)) HEAP32[i1 + 4 >> 2] = HEAP32[(HEAP32[i2 + -4 >> 2] | 0) + 4 >> 2];
 }
 STACKTOP = i12;
 return i1 | 0;
}

function __ZN4wasm15RemoveUnusedBrs10visitBlockEPNS_5BlockE(i2, i5) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i8 = i5 + 8 | 0;
 L1 : do if (HEAP32[i8 >> 2] | 0 ? (i9 = i5 + 12 | 0, i10 = i5 + 16 | 0, i4 = HEAP32[i10 >> 2] | 0, i3 = HEAP32[i9 >> 2] | 0, i6 = i3, i1 = i4, (i4 | 0) != (i3 | 0)) : 0) {
  i2 = (i4 - i3 >> 2) + -1 | 0;
  i3 = 0;
  while (1) {
   if (i3 >>> 0 >= i2 >>> 0) break;
   i5 = HEAP32[i6 + (i3 << 2) >> 2] | 0;
   if (!((i5 | 0) == 0 | (HEAP32[i5 >> 2] | 0) != 4) ? (HEAP32[i5 + 16 >> 2] | 0) == 0 : 0) {
    i1 = i3;
    i7 = 7;
    break;
   }
   i3 = i3 + 1 | 0;
  }
  if ((i7 | 0) == 7) {
   __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE6resizeEj(i9, i1 + 1 | 0);
   i4 = HEAP32[i10 >> 2] | 0;
   i1 = i4;
  }
  i3 = i1 + -4 | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  if ((!((i2 | 0) == 0 | (HEAP32[i2 >> 2] | 0) != 4) ? (HEAP32[i2 + 16 >> 2] | 0) == 0 : 0) ? (HEAP32[i2 + 8 >> 2] | 0) == (HEAP32[i8 >> 2] | 0) : 0) {
   i2 = HEAP32[i2 + 12 >> 2] | 0;
   if (i2) {
    i10 = HEAP32[i9 >> 2] | 0;
    HEAP32[i10 + ((i4 - i10 >> 2) + -1 << 2) >> 2] = i2;
    break;
   }
   while (1) {
    if ((i1 | 0) == (i3 | 0)) break L1;
    i9 = i1 + -4 | 0;
    HEAP32[i10 >> 2] = i9;
    i1 = i9;
   }
  }
 } while (0);
 return;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE6rehashEj(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if ((i1 | 0) != 1) {
  if (i1 + -1 & i1) i1 = __ZNSt3__112__next_primeEj(i1) | 0;
 } else i1 = 2;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 if (i1 >>> 0 <= i4 >>> 0) {
  if (i1 >>> 0 < i4 >>> 0) {
   if (i4 >>> 0 > 2) i3 = (i4 + -1 & i4 | 0) == 0; else i3 = 0;
   i2 = ~~+Math_ceil(+(+((HEAP32[i5 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i5 + 16 >> 2])) >>> 0;
   if (i3) i2 = 1 << 32 - (Math_clz32(i2 + -1 | 0) | 0); else i2 = __ZNSt3__112__next_primeEj(i2) | 0;
   i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
   if (i1 >>> 0 < i4 >>> 0) __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE8__rehashEj(i5, i1);
  }
 } else __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE8__rehashEj(i5, i1);
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj(i8, i2) {
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9;
 i5 = HEAP32[i8 + 8 >> 2] | 0;
 i3 = i8 + 4 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if (i5 - i1 >> 2 >>> 0 < i2 >>> 0) {
  i3 = HEAP32[i8 >> 2] | 0;
  i6 = i1 - i3 >> 2;
  i4 = i6 + i2 | 0;
  if (i4 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
  i1 = i5 - i3 | 0;
  if (i1 >> 2 >>> 0 < 536870911) {
   i1 = i1 >> 1;
   i1 = i1 >>> 0 < i4 >>> 0 ? i4 : i1;
  } else i1 = 1073741823;
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_(i7, i1, i6, i8 + 16 | 0);
  i6 = i7 + 8 | 0;
  i5 = HEAP32[i6 >> 2] | 0;
  _memset(i5 | 0, 0, i2 << 2 | 0) | 0;
  HEAP32[i6 >> 2] = i5 + (i2 << 2);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i8, i7);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev(i7);
 } else do {
  HEAP32[i1 >> 2] = 0;
  i1 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
  HEAP32[i3 >> 2] = i1;
  i2 = i2 + -1 | 0;
 } while ((i2 | 0) != 0);
 STACKTOP = i9;
 return;
}

function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(i8, i1, i3, i5, i4, i2) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i6 = 0, i7 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i7;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i6 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = HEAP8[i2 >> 0] | 0;
 i10 = (i9 & 1) == 0;
 i1 = i10 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0;
 i2 = i1 + (i10 ? (i9 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0) | 0;
 while (1) {
  if (i1 >>> 0 >= i2 >>> 0) break;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i6, HEAP8[i1 >> 0] | 0);
  i1 = i1 + 1 | 0;
 }
 i1 = _catgets((i3 | 0) == -1 ? -1 : i3 << 1, i5, i4, (HEAP8[i6 >> 0] & 1) == 0 ? i6 + 1 | 0 : HEAP32[i6 + 8 >> 2] | 0) | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i8 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = i1 + (_strlen(i1) | 0) | 0;
 while (1) {
  if (i1 >>> 0 >= i2 >>> 0) break;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i8, HEAP8[i1 >> 0] | 0);
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 STACKTOP = i7;
 return;
}

function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i5, i7, i4, i8) {
 i5 = i5 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0, i9 = 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i3 = i5 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 do if (((i1 & 1) == 0 ? (i1 & 255) >>> 1 : i2) | 0) {
  if ((i7 | 0) != (i4 | 0)) {
   i1 = i4;
   i2 = i7;
   while (1) {
    i1 = i1 + -4 | 0;
    if (i2 >>> 0 >= i1 >>> 0) break;
    i6 = HEAP32[i2 >> 2] | 0;
    HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
    HEAP32[i1 >> 2] = i6;
    i2 = i2 + 4 | 0;
   }
   i1 = HEAP8[i5 >> 0] | 0;
   i2 = HEAP32[i3 >> 2] | 0;
  }
  i3 = (i1 & 1) == 0;
  i5 = i3 ? i5 + 1 | 0 : HEAP32[i5 + 8 >> 2] | 0;
  i6 = i4 + -4 | 0;
  i4 = i5 + (i3 ? (i1 & 255) >>> 1 : i2) | 0;
  i2 = i7;
  while (1) {
   i1 = HEAP8[i5 >> 0] | 0;
   i3 = i1 << 24 >> 24 < 1 | i1 << 24 >> 24 == 127;
   if (i2 >>> 0 >= i6 >>> 0) break;
   if (!i3 ? (i1 << 24 >> 24 | 0) != (HEAP32[i2 >> 2] | 0) : 0) {
    i9 = 10;
    break;
   }
   i5 = (i4 - i5 | 0) > 1 ? i5 + 1 | 0 : i5;
   i2 = i2 + 4 | 0;
  }
  if ((i9 | 0) == 10) {
   HEAP32[i8 >> 2] = 4;
   break;
  }
  if (!i3 ? ((HEAP32[i6 >> 2] | 0) + -1 | 0) >>> 0 >= i1 << 24 >> 24 >>> 0 : 0) HEAP32[i8 >> 2] = 4;
 } while (0);
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE11parseReturnERPcPKc(i4, i9, i6) {
 i4 = i4 | 0;
 i9 = i9 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i11 + 4 | 0;
 i8 = i11;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i9);
 i2 = HEAP8[HEAP32[i9 >> 2] >> 0] | 0;
 i1 = i6;
 while (1) {
  i3 = HEAP8[i1 >> 0] | 0;
  if (!(i3 << 24 >> 24)) {
   i10 = 4;
   break;
  }
  if (i3 << 24 >> 24 == i2 << 24 >> 24) {
   i5 = 0;
   break;
  } else i1 = i1 + 1 | 0;
 }
 if ((i10 | 0) == 4) i5 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i4, i9, i6) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i9);
 i4 = HEAP32[i9 >> 2] | 0;
 i3 = HEAP8[i4 >> 0] | 0;
 i1 = i6;
 while (1) {
  i2 = HEAP8[i1 >> 0] | 0;
  if (!(i2 << 24 >> 24)) {
   i10 = 8;
   break;
  }
  if (i2 << 24 >> 24 == i3 << 24 >> 24) break; else i1 = i1 + 1 | 0;
 }
 if ((i10 | 0) == 8) ___assert_fail(23760, 23426, 460, 23780);
 if (i3 << 24 >> 24 == 59) HEAP32[i9 >> 2] = i4 + 1;
 HEAP32[i8 >> 2] = i5;
 HEAP32[i7 >> 2] = HEAP32[i8 >> 2];
 i10 = __ZN6cashew12ValueBuilder10makeReturnENS_3RefE(i7) | 0;
 STACKTOP = i11;
 return i10 | 0;
}

function __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE8__appendEj(i7, i2) {
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i6 = i9;
 i3 = HEAP32[i7 + 8 >> 2] | 0;
 i8 = i7 + 4 | 0;
 i1 = HEAP32[i8 >> 2] | 0;
 if (i3 - i1 >> 2 >>> 0 < i2 >>> 0) {
  i5 = HEAP32[i7 >> 2] | 0;
  i4 = (i1 - i5 >> 2) + i2 | 0;
  if (i4 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
  i1 = i3 - i5 | 0;
  if (i1 >> 2 >>> 0 < 536870911) {
   i1 = i1 >> 1;
   i1 = i1 >>> 0 < i4 >>> 0 ? i4 : i1;
  } else i1 = 1073741823;
  __ZNSt3__114__split_bufferIPN4wasm10ExpressionERNS_9allocatorIS3_EEEC2EjjS6_(i6, i1, (HEAP32[i8 >> 2] | 0) - i5 >> 2, i7 + 8 | 0);
  i8 = i6 + 8 | 0;
  i5 = HEAP32[i8 >> 2] | 0;
  _memset(i5 | 0, 0, i2 << 2 | 0) | 0;
  HEAP32[i8 >> 2] = i5 + (i2 << 2);
  __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i6);
  __ZNSt3__114__split_bufferIPN4wasm10ExpressionERNS_9allocatorIS3_EEED2Ev(i6);
 } else do {
  HEAP32[i1 >> 2] = 0;
  i1 = (HEAP32[i8 >> 2] | 0) + 4 | 0;
  HEAP32[i8 >> 2] = i1;
  i2 = i2 + -1 | 0;
 } while ((i2 | 0) != 0);
 STACKTOP = i9;
 return;
}

function __ZN4wasm22SExpressionWasmBuilder18parseModuleElementERNS_7ElementE(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 i1 = __ZN4wasm7Element4listEv(i2) | 0;
 i1 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i1 >> 2] >> 2] | 0) | 0;
 do if ((i1 | 0) != (HEAP32[10210] | 0)) {
  if ((i1 | 0) == (HEAP32[10211] | 0)) {
   __ZN4wasm22SExpressionWasmBuilder13parseFunctionERNS_7ElementE(i3, i2);
   break;
  }
  if ((i1 | 0) == (HEAP32[10214] | 0)) {
   __ZN4wasm22SExpressionWasmBuilder11parseMemoryERNS_7ElementE(i3, i2);
   break;
  }
  if ((i1 | 0) == (HEAP32[10216] | 0)) {
   __ZN4wasm22SExpressionWasmBuilder11parseExportERNS_7ElementE(i3, i2);
   break;
  }
  if ((i1 | 0) != (HEAP32[10217] | 0)) {
   if ((i1 | 0) == (HEAP32[10218] | 0)) {
    __ZN4wasm22SExpressionWasmBuilder10parseTableERNS_7ElementE(i3, i2);
    break;
   }
   if ((i1 | 0) != (HEAP32[10220] | 0)) {
    __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 17314) | 0, i1) | 0, 10) | 0;
    __ZNKSt3__18functionIFvvEEclEv(i3 + 8 | 0);
   }
  }
 } else __ZN4wasm22SExpressionWasmBuilder10parseStartERNS_7ElementE(i3, i2); while (0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i8, i2) {
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if (i2 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i8);
 i1 = HEAP8[i8 >> 0] | 0;
 if (!(i1 & 1)) i3 = 10; else {
  i1 = HEAP32[i8 >> 2] | 0;
  i3 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 if (!(i1 & 1)) i7 = (i1 & 255) >>> 1; else i7 = HEAP32[i8 + 4 >> 2] | 0;
 i2 = i7 >>> 0 > i2 >>> 0 ? i7 : i2;
 if (i2 >>> 0 < 11) i6 = 10; else i6 = (i2 + 16 & -16) + -1 | 0;
 do if ((i6 | 0) != (i3 | 0)) {
  do if ((i6 | 0) != 10) {
   i2 = __Znwj(i6 + 1 | 0) | 0;
   if (!(i1 & 1)) {
    i3 = 1;
    i4 = i8 + 1 | 0;
    i5 = 0;
    break;
   } else {
    i3 = 1;
    i4 = HEAP32[i8 + 8 >> 2] | 0;
    i5 = 1;
    break;
   }
  } else {
   i2 = i8 + 1 | 0;
   i3 = 0;
   i4 = HEAP32[i8 + 8 >> 2] | 0;
   i5 = 1;
  } while (0);
  if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i8 + 4 >> 2] | 0;
  _memcpy(i2 | 0, i4 | 0, i1 + 1 | 0) | 0;
  if (i5) __ZdlPv(i4);
  if (i3) {
   HEAP32[i8 >> 2] = i6 + 1 | 1;
   HEAP32[i8 + 4 >> 2] = i7;
   HEAP32[i8 + 8 >> 2] = i2;
   break;
  } else {
   HEAP8[i8 >> 0] = i7 << 1;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS9_RSA_EE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i2 = HEAP32[i6 >> 2] | 0;
 i3 = i6 + 4 | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  i10 = HEAP32[i4 >> 2] | 0;
  i8 = i10 + -12 | 0;
  i7 = i1 + -12 | 0;
  HEAP32[i8 >> 2] = 0;
  i9 = i10 + -8 | 0;
  HEAP32[i9 >> 2] = 0;
  HEAP32[i10 + -4 >> 2] = 0;
  HEAP32[i8 >> 2] = HEAP32[i7 >> 2];
  i8 = i1 + -8 | 0;
  HEAP32[i9 >> 2] = HEAP32[i8 >> 2];
  i9 = i1 + -4 | 0;
  HEAP32[i10 + -4 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i9 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + -12;
  i1 = i7;
 }
 i8 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i8;
 i8 = i5 + 8 | 0;
 i10 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i8 >> 2];
 HEAP32[i8 >> 2] = i10;
 i8 = i6 + 8 | 0;
 i10 = i5 + 12 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i10 >> 2] = i9;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i8, i2) {
 i8 = i8 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if (i2 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i8);
 i1 = HEAP8[i8 >> 0] | 0;
 if (!(i1 & 1)) i3 = 1; else {
  i1 = HEAP32[i8 >> 2] | 0;
  i3 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 if (!(i1 & 1)) i7 = (i1 & 255) >>> 1; else i7 = HEAP32[i8 + 4 >> 2] | 0;
 i2 = i7 >>> 0 > i2 >>> 0 ? i7 : i2;
 if (i2 >>> 0 < 2) i6 = 1; else i6 = (i2 + 4 & -4) + -1 | 0;
 do if ((i6 | 0) != (i3 | 0)) {
  do if ((i6 | 0) != 1) {
   i2 = __Znwj((i6 << 2) + 4 | 0) | 0;
   if (!(i1 & 1)) {
    i3 = 1;
    i4 = i8 + 4 | 0;
    i5 = 0;
    break;
   } else {
    i3 = 1;
    i4 = HEAP32[i8 + 8 >> 2] | 0;
    i5 = 1;
    break;
   }
  } else {
   i2 = i8 + 4 | 0;
   i3 = 0;
   i4 = HEAP32[i8 + 8 >> 2] | 0;
   i5 = 1;
  } while (0);
  if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i8 + 4 >> 2] | 0;
  _wmemcpy(i2, i4, i1 + 1 | 0) | 0;
  if (i5) __ZdlPv(i4);
  if (i3) {
   HEAP32[i8 >> 2] = i6 + 1 | 1;
   HEAP32[i8 + 4 >> 2] = i7;
   HEAP32[i8 + 8 >> 2] = i2;
   break;
  } else {
   HEAP8[i8 >> 0] = i7 << 1;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEE6rehashEj(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if ((i1 | 0) != 1) {
  if (i1 + -1 & i1) i1 = __ZNSt3__112__next_primeEj(i1) | 0;
 } else i1 = 2;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 if (i1 >>> 0 <= i4 >>> 0) {
  if (i1 >>> 0 < i4 >>> 0) {
   if (i4 >>> 0 > 2) i3 = (i4 + -1 & i4 | 0) == 0; else i3 = 0;
   i2 = ~~+Math_ceil(+(+((HEAP32[i5 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i5 + 16 >> 2])) >>> 0;
   if (i3) i2 = 1 << 32 - (Math_clz32(i2 + -1 | 0) | 0); else i2 = __ZNSt3__112__next_primeEj(i2) | 0;
   i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
   if (i1 >>> 0 < i4 >>> 0) __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEE8__rehashEj(i5, i1);
  }
 } else __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEE8__rehashEj(i5, i1);
 return;
}

function __ZN4wasm22SExpressionWasmBuilder9makeBreakERNS_7ElementE(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = __ZN10MixedArena5allocIN4wasm5BreakEEEPT_v(HEAP32[i4 + 4 >> 2] | 0) | 0;
 i2 = __ZN4wasm7Element4listEv(i3) | 0;
 i2 = __ZN4wasm22SExpressionWasmBuilder8getLabelERNS_7ElementE(i4, HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i1 + 8 >> 2] = i2;
 do if ((__ZN4wasm7Element4sizeEv(i3) | 0) != 2) {
  i2 = __ZN4wasm7Element4listEv(i3) | 0;
  i2 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i2 >> 2] >> 2] | 0) | 0;
  if ((i2 | 0) != (HEAP32[10224] | 0)) {
   i3 = __ZN4wasm7Element4listEv(i3) | 0;
   i4 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i4, HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] | 0) | 0;
   HEAP32[i1 + 12 >> 2] = i4;
   break;
  }
  if ((__ZN4wasm7Element4sizeEv(i3) | 0) >>> 0 > 3) {
   i2 = __ZN4wasm7Element4listEv(i3) | 0;
   i2 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i4, HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] | 0) | 0;
   HEAP32[i1 + 12 >> 2] = i2;
   i2 = 3;
  } else i2 = 2;
  i4 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i4, __ZN4wasm7ElementixEj(i3, i2) | 0) | 0;
  HEAP32[i1 + 16 >> 2] = i4;
 } while (0);
 return i1 | 0;
}

function __ZNSt3__16vectorIN4wasm6Memory7SegmentENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJiRPciEEEvDpOT_(i9, i5, i6, i7) {
 i9 = i9 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i8 = i10;
 i3 = i9 + 4 | 0;
 i4 = HEAP32[i9 >> 2] | 0;
 i2 = (((HEAP32[i3 >> 2] | 0) - i4 | 0) / 12 | 0) + 1 | 0;
 if (i2 >>> 0 > 357913941) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i9);
 i1 = ((HEAP32[i9 + 8 >> 2] | 0) - i4 | 0) / 12 | 0;
 if (i1 >>> 0 < 178956970) {
  i1 = i1 << 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 357913941;
 __ZNSt3__114__split_bufferIN4wasm6Memory7SegmentERNS_9allocatorIS3_EEEC2EjjS6_(i8, i1, ((HEAP32[i3 >> 2] | 0) - i4 | 0) / 12 | 0, i9 + 8 | 0);
 i4 = i8 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 i7 = HEAP32[i7 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i3 + 4 >> 2] = i6;
 HEAP32[i3 + 8 >> 2] = i7;
 HEAP32[i4 >> 2] = i3 + 12;
 __ZNSt3__16vectorIN4wasm6Memory7SegmentENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i9, i8);
 __ZNSt3__114__split_bufferIN4wasm6Memory7SegmentERNS_9allocatorIS3_EEED2Ev(i8);
 STACKTOP = i10;
 return;
}

function __ZN4wasm17SExpressionParser14parseInnerListEv(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i8;
 i1 = HEAP32[i7 >> 2] | 0;
 L1 : do if ((HEAP8[i1 >> 0] | 0) == 59) {
  i1 = i1 + 1 | 0;
  HEAP32[i7 >> 2] = i1;
  if ((HEAP8[i1 >> 0] | 0) == 59) {
   i2 = 59;
   while (1) {
    if (i2 << 24 >> 24 == 10) {
     i2 = 0;
     break L1;
    }
    i6 = i1 + 1 | 0;
    HEAP32[i7 >> 2] = i6;
    i2 = HEAP8[i6 >> 0] | 0;
    i1 = i6;
   }
  } else {
   i6 = _strstr(i1, 17078) | 0;
   HEAP32[i7 >> 2] = i6;
   if (i6 | 0) {
    i2 = 0;
    break;
   }
   ___assert_fail(17081, 17087, 144, 17107);
  }
 } else {
  i2 = __ZN10MixedArena5allocIN4wasm7ElementEEEPT_v(i7 + 4 | 0) | 0;
  while (1) {
   i1 = __ZN4wasm17SExpressionParser5parseEv(i7) | 0;
   HEAP32[i6 >> 2] = i1;
   if (!i1) break;
   i3 = __ZN4wasm7Element4listEv(i2) | 0;
   i4 = i3 + 4 | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i3 + 8 >> 2] | 0)) __ZNSt3__16vectorIPN4wasm7ElementENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i3, i6); else {
    HEAP32[i5 >> 2] = i1;
    HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 4;
   }
  }
 } while (0);
 STACKTOP = i8;
 return i2 | 0;
}

function __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_7LiteralE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i2, 40) | 0;
 i3 = HEAP32[i1 >> 2] | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i2, __ZN4wasm13printWasmTypeENS_8WasmTypeE(i3) | 0) | 0, 21666) | 0;
 switch (i3 | 0) {
 case 0:
  {
   __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i2, 30922) | 0;
   break;
  }
 case 1:
  {
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(i2, HEAP32[i1 + 8 >> 2] | 0) | 0;
   break;
  }
 case 2:
  {
   i3 = i1 + 8 | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEx(i2, HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0) | 0;
   break;
  }
 case 3:
  {
   __ZN4wasm7Literal10printFloatERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEf(i2, +__ZNK4wasm7Literal6getf32Ev(i1));
   break;
  }
 case 4:
  {
   __ZN4wasm7Literal11printDoubleERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEd(i2, +__ZNK4wasm7Literal6getf64Ev(i1));
   break;
  }
 default:
  {}
 }
 return __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i2, 41) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj(i7, i4, i2, i6) {
 i7 = i7 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i1 = 0, i3 = 0, i5 = 0;
 i1 = HEAP8[i7 >> 0] | 0;
 i3 = (i1 & 1) == 0;
 if (i3) i5 = (i1 & 255) >>> 1; else i5 = HEAP32[i7 + 4 >> 2] | 0;
 if (i5 >>> 0 < i4 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(i7);
 if (i3) i3 = 10; else {
  i1 = HEAP32[i7 >> 2] | 0;
  i3 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 if ((i3 - i5 | 0) >>> 0 >= i6 >>> 0) {
  if (i6 | 0) {
   if (!(i1 & 1)) i3 = i7 + 1 | 0; else i3 = HEAP32[i7 + 8 >> 2] | 0;
   if ((i5 | 0) == (i4 | 0)) i1 = i3 + i4 | 0; else {
    i1 = i3 + i4 | 0;
    _memmove(i1 + i6 | 0, i1 | 0, i5 - i4 | 0) | 0;
    i2 = i1 >>> 0 <= i2 >>> 0 & (i3 + i5 | 0) >>> 0 > i2 >>> 0 ? i2 + i6 | 0 : i2;
   }
   _memmove(i1 | 0, i2 | 0, i6 | 0) | 0;
   i1 = i5 + i6 | 0;
   if (!(HEAP8[i7 >> 0] & 1)) HEAP8[i7 >> 0] = i1 << 1; else HEAP32[i7 + 4 >> 2] = i1;
   HEAP8[i3 + i1 >> 0] = 0;
  }
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc(i7, i3, i5 + i6 - i3 | 0, i5, i4, 0, i6, i2);
 return i7 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i10, i5, i7, i8, i6) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i11 + 4 | 0;
 i4 = i11;
 i9 = i1 + 8 | 0;
 i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 8 >> 2] & 127](i9) | 0;
 i1 = HEAP8[i9 >> 0] | 0;
 if (!(i1 & 1)) i2 = (i1 & 255) >>> 1; else i2 = HEAP32[i9 + 4 >> 2] | 0;
 i1 = HEAP8[i9 + 12 >> 0] | 0;
 if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i9 + 16 >> 2] | 0;
 do if ((i2 | 0) != (0 - i1 | 0)) {
  HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
  i1 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i5, i3, i9, i9 + 24 | 0, i6, i8, 0) | 0;
  i2 = HEAP32[i10 >> 2] | 0;
  if ((i1 | 0) == (i9 | 0) & (i2 | 0) == 12) {
   HEAP32[i10 >> 2] = 0;
   break;
  }
  if ((i2 | 0) < 12 & (i1 - i9 | 0) == 12) HEAP32[i10 >> 2] = i2 + 12;
 } else HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 4; while (0);
 STACKTOP = i11;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i10, i5, i7, i8, i6) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i11 + 4 | 0;
 i4 = i11;
 i9 = i1 + 8 | 0;
 i9 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 8 >> 2] & 127](i9) | 0;
 i1 = HEAP8[i9 >> 0] | 0;
 if (!(i1 & 1)) i2 = (i1 & 255) >>> 1; else i2 = HEAP32[i9 + 4 >> 2] | 0;
 i1 = HEAP8[i9 + 12 >> 0] | 0;
 if (!(i1 & 1)) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i9 + 16 >> 2] | 0;
 do if ((i2 | 0) != (0 - i1 | 0)) {
  HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
  i1 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i5, i3, i9, i9 + 24 | 0, i6, i8, 0) | 0;
  i2 = HEAP32[i10 >> 2] | 0;
  if ((i1 | 0) == (i9 | 0) & (i2 | 0) == 12) {
   HEAP32[i10 >> 2] = 0;
   break;
  }
  if ((i2 | 0) < 12 & (i1 - i9 | 0) == 12) HEAP32[i10 >> 2] = i2 + 12;
 } else HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 4; while (0);
 STACKTOP = i11;
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERy(i8, i7) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i9 + 20 | 0;
 i1 = i9 + 16 | 0;
 i3 = i9 + 12 | 0;
 i4 = i9 + 8 | 0;
 i10 = i9 + 24 | 0;
 i6 = i9 + 4 | 0;
 i5 = i9;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b(i10, i8, 0);
 if (HEAP8[i10 >> 0] | 0) {
  HEAP32[i6 >> 2] = 0;
  i11 = __ZNKSt3__18ios_base6getlocEv(i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  HEAP32[i5 >> 2] = i11;
  i11 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 43112) | 0;
  i10 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i12 = HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i10 + 24 >> 2];
  HEAP32[i4 >> 2] = 0;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  FUNCTION_TABLE_iiiiiii[i12 & 63](i11, i1, i2, i10, i6, i7) | 0;
  __ZNSt3__16localeD2Ev(i5);
  i7 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i10 = i7 + 16 | 0;
  HEAP32[i10 >> 2] = HEAP32[i10 >> 2] | HEAP32[i6 >> 2] | (HEAP32[i7 + 24 >> 2] | 0) == 0;
 }
 STACKTOP = i9;
 return i8 | 0;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERx(i8, i7) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i9 + 20 | 0;
 i1 = i9 + 16 | 0;
 i3 = i9 + 12 | 0;
 i4 = i9 + 8 | 0;
 i10 = i9 + 24 | 0;
 i6 = i9 + 4 | 0;
 i5 = i9;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b(i10, i8, 0);
 if (HEAP8[i10 >> 0] | 0) {
  HEAP32[i6 >> 2] = 0;
  i11 = __ZNKSt3__18ios_base6getlocEv(i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  HEAP32[i5 >> 2] = i11;
  i11 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 43112) | 0;
  i10 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i12 = HEAP32[(HEAP32[i11 >> 2] | 0) + 20 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i10 + 24 >> 2];
  HEAP32[i4 >> 2] = 0;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  FUNCTION_TABLE_iiiiiii[i12 & 63](i11, i1, i2, i10, i6, i7) | 0;
  __ZNSt3__16localeD2Ev(i5);
  i7 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i10 = i7 + 16 | 0;
  HEAP32[i10 >> 2] = HEAP32[i10 >> 2] | HEAP32[i6 >> 2] | (HEAP32[i7 + 24 >> 2] | 0) == 0;
 }
 STACKTOP = i9;
 return i8 | 0;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERj(i8, i7) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i9 + 20 | 0;
 i1 = i9 + 16 | 0;
 i3 = i9 + 12 | 0;
 i4 = i9 + 8 | 0;
 i10 = i9 + 24 | 0;
 i6 = i9 + 4 | 0;
 i5 = i9;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC2ERS3_b(i10, i8, 0);
 if (HEAP8[i10 >> 0] | 0) {
  HEAP32[i6 >> 2] = 0;
  i11 = __ZNKSt3__18ios_base6getlocEv(i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
  HEAP32[i5 >> 2] = i11;
  i11 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 43112) | 0;
  i10 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i12 = HEAP32[(HEAP32[i11 >> 2] | 0) + 28 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i10 + 24 >> 2];
  HEAP32[i4 >> 2] = 0;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  FUNCTION_TABLE_iiiiiii[i12 & 63](i11, i1, i2, i10, i6, i7) | 0;
  __ZNSt3__16localeD2Ev(i5);
  i7 = i8 + (HEAP32[(HEAP32[i8 >> 2] | 0) + -12 >> 2] | 0) | 0;
  i10 = i7 + 16 | 0;
  HEAP32[i10 >> 2] = HEAP32[i10 >> 2] | HEAP32[i6 >> 2] | (HEAP32[i7 + 24 >> 2] | 0) == 0;
 }
 STACKTOP = i9;
 return i8 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner10visitBlockEPNS_5BlockE(i7, i9, i8) {
 i7 = i7 | 0;
 i9 = i9 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i11;
 HEAP32[i7 >> 2] = 0;
 i5 = i7 + 8 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 i5 = i7 + 16 | 0;
 HEAP32[i5 >> 2] = 0;
 i3 = HEAP32[i8 + 16 >> 2] | 0;
 i6 = HEAP32[i8 + 12 >> 2] | 0;
 while (1) {
  if ((i6 | 0) == (i3 | 0)) break;
  __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i2, i9, HEAP32[i6 >> 2] | 0);
  HEAP32[i7 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i7 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i7 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
  HEAP32[i7 + 12 >> 2] = HEAP32[i2 + 12 >> 2];
  HEAP32[i7 + 16 >> 2] = HEAP32[i2 + 16 >> 2];
  i4 = HEAP32[i5 >> 2] | 0;
  if (!i4) i6 = i6 + 4 | 0; else {
   i1 = i4;
   i10 = 4;
   break;
  }
 }
 if ((i10 | 0) == 4 ? (i1 | 0) == (HEAP32[i8 + 8 >> 2] | 0) : 0) HEAP32[i5 >> 2] = 0;
 STACKTOP = i11;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS7_E4typeESC_SC_(i9, i5, i8) {
 i9 = i9 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i3 = i5;
 i1 = HEAP8[i9 >> 0] | 0;
 if (!(i1 & 1)) {
  i7 = (i1 & 255) >>> 1;
  i2 = 10;
 } else {
  i1 = HEAP32[i9 >> 2] | 0;
  i7 = HEAP32[i9 + 4 >> 2] | 0;
  i2 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 i6 = i8 - i3 | 0;
 do if ((i8 | 0) != (i5 | 0)) {
  if ((i2 - i7 | 0) >>> 0 < i6 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj(i9, i2, i7 + i6 - i2 | 0, i7, i7, 0);
   i1 = HEAP8[i9 >> 0] | 0;
  }
  if (!(i1 & 1)) i4 = i9 + 1 | 0; else i4 = HEAP32[i9 + 8 >> 2] | 0;
  i3 = i8 + (i7 - i3) | 0;
  i1 = i5;
  i2 = i4 + i7 | 0;
  while (1) {
   if ((i1 | 0) == (i8 | 0)) break;
   HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
   i1 = i1 + 1 | 0;
   i2 = i2 + 1 | 0;
  }
  HEAP8[i4 + i3 >> 0] = 0;
  i1 = i7 + i6 | 0;
  if (!(HEAP8[i9 >> 0] & 1)) {
   HEAP8[i9 >> 0] = i1 << 1;
   break;
  } else {
   HEAP32[i9 + 4 >> 2] = i1;
   break;
  }
 } while (0);
 return;
}

function __ZL25default_terminate_handlerv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i7 = i5 + 32 | 0;
 i3 = i5 + 24 | 0;
 i8 = i5 + 16 | 0;
 i6 = i5;
 i5 = i5 + 36 | 0;
 i1 = ___cxa_get_globals_fast() | 0;
 if (i1 | 0 ? (i4 = HEAP32[i1 >> 2] | 0, i4 | 0) : 0) {
  i1 = i4 + 48 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  i1 = HEAP32[i1 + 4 >> 2] | 0;
  if (!((i2 & -256 | 0) == 1126902528 & (i1 | 0) == 1129074247)) {
   HEAP32[i3 >> 2] = HEAP32[3027];
   _abort_message(37876, i3);
  }
  if ((i2 | 0) == 1126902529 & (i1 | 0) == 1129074247) i1 = HEAP32[i4 + 44 >> 2] | 0; else i1 = i4 + 80 | 0;
  HEAP32[i5 >> 2] = i1;
  i4 = HEAP32[i4 >> 2] | 0;
  i1 = HEAP32[i4 + 4 >> 2] | 0;
  if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[690] | 0) + 16 >> 2] & 31](2760, i4, i5) | 0) {
   i8 = HEAP32[i5 >> 2] | 0;
   i5 = HEAP32[3027] | 0;
   i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 8 >> 2] & 127](i8) | 0;
   HEAP32[i6 >> 2] = i5;
   HEAP32[i6 + 4 >> 2] = i1;
   HEAP32[i6 + 8 >> 2] = i8;
   _abort_message(37790, i6);
  } else {
   HEAP32[i8 >> 2] = HEAP32[3027];
   HEAP32[i8 + 4 >> 2] = i1;
   _abort_message(37835, i8);
  }
 }
 _abort_message(37914, i7);
}

function __ZN4wasm14ModuleInstance15getFinalAddressINS_5StoreEEEjPT_NS_7LiteralE(i4, i3, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i6;
 HEAP32[i5 >> 2] = i4;
 if ((HEAP32[i1 >> 2] | 0) == 1) {
  i2 = __ZNK4wasm7Literal6geti32Ev(i1) | 0;
  i1 = i2;
  i2 = ((i2 | 0) < 0) << 31 >> 31;
 } else {
  i1 = __ZNK4wasm7Literal6geti64Ev(i1) | 0;
  i2 = tempRet0;
 }
 i8 = i3 + 12 | 0;
 i7 = i4 + 8 | 0;
 __ZZN4wasm14ModuleInstance15getFinalAddressINS_5StoreEEEjPT_NS_7LiteralEENKUljjPKcE_clEjjS7_(i5, HEAP32[i8 >> 2] | 0, HEAP32[i7 >> 2] | 0, 20833);
 __ZZN4wasm14ModuleInstance15getFinalAddressINS_5StoreEEEjPT_NS_7LiteralEENKUljjPKcE_clEjjS7_(i5, i1, (HEAP32[i7 >> 2] | 0) - (HEAP32[i8 >> 2] | 0) | 0, 20849);
 i4 = _i64Add(HEAP32[i8 >> 2] | 0, 0, i1 | 0, i2 | 0) | 0;
 i3 = i3 + 8 | 0;
 __ZZN4wasm14ModuleInstance15getFinalAddressINS_5StoreEEEjPT_NS_7LiteralEENKUljjPKcE_clEjjS7_(i5, HEAP32[i3 >> 2] | 0, HEAP32[i7 >> 2] | 0, 20864);
 __ZZN4wasm14ModuleInstance15getFinalAddressINS_5StoreEEEjPT_NS_7LiteralEENKUljjPKcE_clEjjS7_(i5, i4, (HEAP32[i7 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0, 20879);
 STACKTOP = i6;
 return i4 | 0;
}

function __ZN4wasm14ModuleInstance15getFinalAddressINS_4LoadEEEjPT_NS_7LiteralE(i4, i3, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i6;
 HEAP32[i5 >> 2] = i4;
 if ((HEAP32[i1 >> 2] | 0) == 1) {
  i2 = __ZNK4wasm7Literal6geti32Ev(i1) | 0;
  i1 = i2;
  i2 = ((i2 | 0) < 0) << 31 >> 31;
 } else {
  i1 = __ZNK4wasm7Literal6geti64Ev(i1) | 0;
  i2 = tempRet0;
 }
 i8 = i3 + 16 | 0;
 i7 = i4 + 8 | 0;
 __ZZN4wasm14ModuleInstance15getFinalAddressINS_4LoadEEEjPT_NS_7LiteralEENKUljjPKcE_clEjjS7_(i5, HEAP32[i8 >> 2] | 0, HEAP32[i7 >> 2] | 0, 20833);
 __ZZN4wasm14ModuleInstance15getFinalAddressINS_4LoadEEEjPT_NS_7LiteralEENKUljjPKcE_clEjjS7_(i5, i1, (HEAP32[i7 >> 2] | 0) - (HEAP32[i8 >> 2] | 0) | 0, 20849);
 i4 = _i64Add(HEAP32[i8 >> 2] | 0, 0, i1 | 0, i2 | 0) | 0;
 i3 = i3 + 8 | 0;
 __ZZN4wasm14ModuleInstance15getFinalAddressINS_4LoadEEEjPT_NS_7LiteralEENKUljjPKcE_clEjjS7_(i5, HEAP32[i3 >> 2] | 0, HEAP32[i7 >> 2] | 0, 20864);
 __ZZN4wasm14ModuleInstance15getFinalAddressINS_4LoadEEEjPT_NS_7LiteralEENKUljjPKcE_clEjjS7_(i5, i4, (HEAP32[i7 >> 2] | 0) - (HEAP32[i3 >> 2] | 0) | 0, 20879);
 STACKTOP = i6;
 return i4 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i2 = HEAP32[i4 >> 2] | 0;
 while (1) {
  i1 = HEAP8[i2 >> 0] | 0;
  if (!(i1 << 24 >> 24)) break;
  if (__ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE7isSpaceEc(i1) | 0) {
   i3 = i2 + 1 | 0;
   HEAP32[i4 >> 2] = i3;
   i2 = i3;
   continue;
  }
  if (i1 << 24 >> 24 != 47) break;
  if ((HEAP8[i2 + 1 >> 0] | 0) == 47) {
   i3 = i2 + 2 | 0;
   while (1) {
    HEAP32[i4 >> 2] = i3;
    i5 = HEAP8[i3 >> 0] | 0;
    i1 = i5 << 24 >> 24 == 0;
    i2 = i3 + 1 | 0;
    if (i5 << 24 >> 24 != 10 & (i1 ^ 1)) i3 = i2; else break;
   }
   if (i1) {
    i2 = i3;
    continue;
   }
   HEAP32[i4 >> 2] = i2;
   continue;
  }
  if ((HEAP8[i2 + 1 >> 0] | 0) != 42) break;
  i1 = i2 + 2 | 0;
  L16 : while (1) {
   HEAP32[i4 >> 2] = i1;
   switch (HEAP8[i1 >> 0] | 0) {
   case 0:
    break L16;
   case 42:
    {
     i2 = i1 + 1 | 0;
     if ((HEAP8[i2 >> 0] | 0) == 47) break L16; else {
      i1 = i2;
      continue L16;
     }
    }
   default:
    {
     i1 = i1 + 1 | 0;
     continue L16;
    }
   }
  }
  i2 = i1 + 2 | 0;
  HEAP32[i4 >> 2] = i2;
 }
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(i9, i5, i8) {
 i9 = i9 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i3 = i5;
 i1 = HEAP8[i9 >> 0] | 0;
 if (!(i1 & 1)) {
  i7 = (i1 & 255) >>> 1;
  i2 = 1;
 } else {
  i1 = HEAP32[i9 >> 2] | 0;
  i7 = HEAP32[i9 + 4 >> 2] | 0;
  i2 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 i6 = i8 - i3 >> 2;
 do if (i6 | 0) {
  if ((i2 - i7 | 0) >>> 0 < i6 >>> 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(i9, i2, i7 + i6 - i2 | 0, i7, i7, 0, 0);
   i1 = HEAP8[i9 >> 0] | 0;
  }
  if (!(i1 & 1)) i4 = i9 + 4 | 0; else i4 = HEAP32[i9 + 8 >> 2] | 0;
  i3 = i7 + ((i8 - i3 | 0) >>> 2) | 0;
  i1 = i5;
  i2 = i4 + (i7 << 2) | 0;
  while (1) {
   if ((i1 | 0) == (i8 | 0)) break;
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i1 = i1 + 4 | 0;
   i2 = i2 + 4 | 0;
  }
  HEAP32[i4 + (i3 << 2) >> 2] = 0;
  i1 = i7 + i6 | 0;
  if (!(HEAP8[i9 >> 0] & 1)) {
   HEAP8[i9 >> 0] = i1 << 1;
   break;
  } else {
   HEAP32[i9 + 4 >> 2] = i1;
   break;
  }
 } while (0);
 return i9 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE15parseAfterParenERPc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i4 = i1 + 4 | 0;
 __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE6resizeEj(i1, (((HEAP32[i4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) | 0) / 12 | 0) + 1 | 0);
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i2);
 i3 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i1, i2, 38469) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i2);
 i1 = HEAP32[i2 >> 2] | 0;
 if ((HEAP8[i1 >> 0] | 0) != 41) ___assert_fail(23806, 23426, 659, 24385);
 HEAP32[i2 >> 2] = i1 + 1;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = i1 + -12 | 0;
 if ((HEAP32[i1 + -8 >> 2] | 0) == (HEAP32[i2 >> 2] | 0)) i5 = i1; else ___assert_fail(24089, 23426, 661, 24385);
 while (1) {
  if ((i5 | 0) == (i2 | 0)) break;
  i1 = i5 + -12 | 0;
  HEAP32[i4 >> 2] = i1;
  __ZNSt3__113__vector_baseIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEED2Ev(i1);
  i5 = HEAP32[i4 >> 2] | 0;
 }
 return i3 | 0;
}

function _memchr(i1, i5, i2) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = i5 & 255;
 i3 = (i2 | 0) != 0;
 L1 : do if (i3 & (i1 & 3 | 0) != 0) {
  i4 = i5 & 255;
  while (1) {
   if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) {
    i7 = 6;
    break L1;
   }
   i1 = i1 + 1 | 0;
   i2 = i2 + -1 | 0;
   i3 = (i2 | 0) != 0;
   if (!(i3 & (i1 & 3 | 0) != 0)) {
    i7 = 5;
    break;
   }
  }
 } else i7 = 5; while (0);
 if ((i7 | 0) == 5) if (i3) i7 = 6; else i2 = 0;
 L8 : do if ((i7 | 0) == 6) {
  i4 = i5 & 255;
  if ((HEAP8[i1 >> 0] | 0) != i4 << 24 >> 24) {
   i3 = Math_imul(i6, 16843009) | 0;
   L11 : do if (i2 >>> 0 > 3) while (1) {
    i6 = HEAP32[i1 >> 2] ^ i3;
    if ((i6 & -2139062144 ^ -2139062144) & i6 + -16843009 | 0) break;
    i1 = i1 + 4 | 0;
    i2 = i2 + -4 | 0;
    if (i2 >>> 0 <= 3) {
     i7 = 11;
     break L11;
    }
   } else i7 = 11; while (0);
   if ((i7 | 0) == 11) if (!i2) {
    i2 = 0;
    break;
   }
   while (1) {
    if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) break L8;
    i1 = i1 + 1 | 0;
    i2 = i2 + -1 | 0;
    if (!i2) {
     i2 = 0;
     break;
    }
   }
  }
 } while (0);
 return (i2 | 0 ? i1 : 0) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj(i7, i4, i2, i6) {
 i7 = i7 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i1 = 0, i3 = 0, i5 = 0;
 i1 = HEAP8[i7 >> 0] | 0;
 i3 = (i1 & 1) == 0;
 if (i3) i5 = (i1 & 255) >>> 1; else i5 = HEAP32[i7 + 4 >> 2] | 0;
 if (i5 >>> 0 < i4 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(i7);
 if (i3) i3 = 10; else {
  i1 = HEAP32[i7 >> 2] | 0;
  i3 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 if ((i3 - i5 | 0) >>> 0 >= i6 >>> 0) {
  if (i6 | 0) {
   if (!(i1 & 1)) i3 = i7 + 1 | 0; else i3 = HEAP32[i7 + 8 >> 2] | 0;
   if ((i5 | 0) == (i4 | 0)) i1 = i3 + i4 | 0; else {
    i1 = i3 + i4 | 0;
    _memmove(i1 + i6 | 0, i1 | 0, i5 - i4 | 0) | 0;
    i2 = i1 >>> 0 <= i2 >>> 0 & (i3 + i5 | 0) >>> 0 > i2 >>> 0 ? i2 + i6 | 0 : i2;
   }
   _memmove(i1 | 0, i2 | 0, i6 | 0) | 0;
   i1 = i5 + i6 | 0;
   if (!(HEAP8[i7 >> 0] & 1)) HEAP8[i7 >> 0] = i1 << 1; else HEAP32[i7 + 4 >> 2] = i1;
   HEAP8[i3 + i1 >> 0] = 0;
  }
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(i7, i3, i5 + i6 - i3 | 0, i5, i4, 0, i6, i2);
 return i7 | 0;
}

function __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE8__appendEj(i8, i6) {
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9;
 i2 = HEAP32[i8 + 8 >> 2] | 0;
 i5 = i8 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 if (i2 - i1 >> 2 >>> 0 < i6 >>> 0) {
  i4 = HEAP32[i8 >> 2] | 0;
  i3 = (i1 - i4 >> 2) + i6 | 0;
  if (i3 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
  i1 = i2 - i4 | 0;
  if (i1 >> 2 >>> 0 < 536870911) {
   i1 = i1 >> 1;
   i1 = i1 >>> 0 < i3 >>> 0 ? i3 : i1;
  } else i1 = 1073741823;
  __ZNSt3__114__split_bufferIN4wasm4NameERNS_9allocatorIS2_EEEC2EjjS5_(i7, i1, (HEAP32[i5 >> 2] | 0) - i4 >> 2, i8 + 8 | 0);
  i5 = i7 + 8 | 0;
  i4 = HEAP32[i5 >> 2] | 0;
  _memset(i4 | 0, 0, i6 << 2 | 0) | 0;
  HEAP32[i5 >> 2] = i4 + (i6 << 2);
  __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i8, i7);
  __ZNSt3__114__split_bufferIN4wasm4NameERNS_9allocatorIS2_EEED2Ev(i7);
 } else {
  _memset(i1 | 0, 0, i6 << 2 | 0) | 0;
  HEAP32[i5 >> 2] = i1 + (i6 << 2);
 }
 STACKTOP = i9;
 return;
}

function ___stpncpy(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i5 = i3;
 do if (!((i5 ^ i2) & 3)) {
  i4 = (i1 | 0) != 0;
  L3 : do if (i4 & (i5 & 3 | 0) != 0) while (1) {
   i5 = HEAP8[i3 >> 0] | 0;
   HEAP8[i2 >> 0] = i5;
   if (!(i5 << 24 >> 24)) break L3;
   i1 = i1 + -1 | 0;
   i3 = i3 + 1 | 0;
   i2 = i2 + 1 | 0;
   i4 = (i1 | 0) != 0;
   if (!(i4 & (i3 & 3 | 0) != 0)) {
    i6 = 5;
    break;
   }
  } else i6 = 5; while (0);
  if ((i6 | 0) == 5) if (!i4) {
   i1 = 0;
   break;
  }
  if (HEAP8[i3 >> 0] | 0) {
   L11 : do if (i1 >>> 0 > 3) do {
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 & -2139062144 ^ -2139062144) & i4 + -16843009 | 0) break L11;
    HEAP32[i2 >> 2] = i4;
    i1 = i1 + -4 | 0;
    i3 = i3 + 4 | 0;
    i2 = i2 + 4 | 0;
   } while (i1 >>> 0 > 3); while (0);
   i6 = 11;
  }
 } else i6 = 11; while (0);
 L16 : do if ((i6 | 0) == 11) if (!i1) i1 = 0; else while (1) {
  i6 = HEAP8[i3 >> 0] | 0;
  HEAP8[i2 >> 0] = i6;
  if (!(i6 << 24 >> 24)) break L16;
  i1 = i1 + -1 | 0;
  i2 = i2 + 1 | 0;
  if (!i1) {
   i1 = 0;
   break;
  } else i3 = i3 + 1 | 0;
 } while (0);
 _memset(i2 | 0, 0, i1 | 0) | 0;
 return i2 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder15getPrefixedNameENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i6 + 24 | 0;
 i4 = i6 + 12 | 0;
 i5 = i6;
 i7 = i2 + 88 | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = i2 + 1;
 __ZNSt3__19to_stringEj(i5, i2);
 i2 = HEAP8[i1 >> 0] | 0;
 i7 = (i2 & 1) == 0;
 i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj(i5, 0, i7 ? i1 + 1 | 0 : HEAP32[i1 + 8 >> 2] | 0, i7 ? (i2 & 255) >>> 1 : HEAP32[i1 + 4 >> 2] | 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i4 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZN6cashew7IStringC2EPKcb(i3, (HEAP8[i4 >> 0] & 1) == 0 ? i4 + 1 | 0 : HEAP32[i4 + 8 >> 2] | 0, 0);
 i7 = HEAP32[i3 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 STACKTOP = i6;
 return i7 | 0;
}

function __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 4) + 1 | 0;
 if (i2 >>> 0 > 268435455) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 4 >>> 0 < 134217727) {
  i1 = i1 >> 3;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 268435455;
 __ZNSt3__114__split_bufferIN4wasm7LiteralERNS_9allocatorIS2_EEEC2EjjS5_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 4, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
 HEAP32[i3 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
 HEAP32[i4 >> 2] = i3 + 16;
 __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i7, i5);
 __ZNSt3__114__split_bufferIN4wasm7LiteralERNS_9allocatorIS2_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_(i9, i5, i8) {
 i9 = i9 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i3 = i5;
 i1 = HEAP8[i9 >> 0] | 0;
 if (!(i1 & 1)) {
  i7 = (i1 & 255) >>> 1;
  i2 = 10;
 } else {
  i1 = HEAP32[i9 >> 2] | 0;
  i7 = HEAP32[i9 + 4 >> 2] | 0;
  i2 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 i6 = i8 - i3 | 0;
 do if ((i8 | 0) != (i5 | 0)) {
  if ((i2 - i7 | 0) >>> 0 < i6 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i9, i2, i7 + i6 - i2 | 0, i7, i7, 0, 0);
   i1 = HEAP8[i9 >> 0] | 0;
  }
  if (!(i1 & 1)) i4 = i9 + 1 | 0; else i4 = HEAP32[i9 + 8 >> 2] | 0;
  i3 = i8 + (i7 - i3) | 0;
  i1 = i5;
  i2 = i4 + i7 | 0;
  while (1) {
   if ((i1 | 0) == (i8 | 0)) break;
   HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
   i1 = i1 + 1 | 0;
   i2 = i2 + 1 | 0;
  }
  HEAP8[i4 + i3 >> 0] = 0;
  i1 = i7 + i6 | 0;
  if (!(HEAP8[i9 >> 0] & 1)) {
   HEAP8[i9 >> 0] = i1 << 1;
   break;
  } else {
   HEAP32[i9 + 4 >> 2] = i1;
   break;
  }
 } while (0);
 return i9 | 0;
}

function __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 4) + 1 | 0;
 if (i2 >>> 0 > 268435455) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 4 >>> 0 < 134217727) {
  i1 = i1 >> 3;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 268435455;
 __ZNSt3__114__split_bufferIN4wasm7LiteralERNS_9allocatorIS2_EEEC2EjjS5_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 4, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
 HEAP32[i3 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
 HEAP32[i4 >> 2] = i3 + 16;
 __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i7, i5);
 __ZNSt3__114__split_bufferIN4wasm7LiteralERNS_9allocatorIS2_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i1 = i2 + 4 | 0;
 i2 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE13__lower_boundIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_SN_SN_(i2, i3, HEAP32[i1 >> 2] | 0, i1) | 0;
 if ((i2 | 0) != (i1 | 0) ? (i6 = i2 + 16 | 0, i5 = HEAP8[i3 >> 0] | 0, i8 = (i5 & 1) == 0, i5 = i8 ? (i5 & 255) >>> 1 : HEAP32[i3 + 4 >> 2] | 0, i4 = HEAP8[i6 >> 0] | 0, i7 = (i4 & 1) == 0, i4 = i7 ? (i4 & 255) >>> 1 : HEAP32[i2 + 20 >> 2] | 0, i3 = _memcmp(i8 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0, i7 ? i6 + 1 | 0 : HEAP32[i2 + 24 >> 2] | 0, i4 >>> 0 < i5 >>> 0 ? i4 : i5) | 0, (((i3 | 0) == 0 ? (i5 >>> 0 < i4 >>> 0 ? -2147483648 : 0) : i3) | 0) >= 0) : 0) i1 = i2;
 return i1 | 0;
}

function __ZNSt3__16vectorIN4wasm6Switch4CaseENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJN6cashew7IStringEPNS1_10ExpressionEEEEvDpOT_(i8, i5, i6) {
 i8 = i8 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9;
 i3 = i8 + 4 | 0;
 i4 = HEAP32[i8 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 3) + 1 | 0;
 if (i2 >>> 0 > 536870911) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
 i1 = (HEAP32[i8 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 3 >>> 0 < 268435455) {
  i1 = i1 >> 2;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 536870911;
 __ZNSt3__114__split_bufferIN4wasm6Switch4CaseERNS_9allocatorIS3_EEEC2EjjS6_(i7, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 3, i8 + 8 | 0);
 i4 = i7 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i3 + 4 >> 2] = i6;
 HEAP32[i4 >> 2] = i3 + 8;
 __ZNSt3__16vectorIN4wasm6Switch4CaseENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i8, i7);
 __ZNSt3__114__split_bufferIN4wasm6Switch4CaseERNS_9allocatorIS3_EEED2Ev(i7);
 STACKTOP = i9;
 return;
}

function __ZN6cashew12ValueBuilder7makeForENS_3RefES1_S1_S1_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i6 = i5 + 20 | 0;
 i12 = i5 + 16 | 0;
 i11 = i5 + 12 | 0;
 i9 = i5 + 8 | 0;
 i8 = i5 + 4 | 0;
 i7 = i5;
 i10 = __ZN6cashew12ValueBuilder12makeRawArrayEi(5) | 0;
 i13 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41096) | 0;
 HEAP32[i12 >> 2] = i13;
 HEAP32[i6 >> 2] = HEAP32[i12 >> 2];
 i10 = __ZN6cashew5Value9push_backENS_3RefE(i10, i6) | 0;
 HEAP32[i11 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i6 >> 2] = HEAP32[i11 >> 2];
 i4 = __ZN6cashew5Value9push_backENS_3RefE(i10, i6) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i6 >> 2] = HEAP32[i9 >> 2];
 i4 = __ZN6cashew5Value9push_backENS_3RefE(i4, i6) | 0;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i6 >> 2] = HEAP32[i8 >> 2];
 i4 = __ZN6cashew5Value9push_backENS_3RefE(i4, i6) | 0;
 HEAP32[i7 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i6 >> 2] = HEAP32[i7 >> 2];
 i4 = __ZN6cashew5Value9push_backENS_3RefE(i4, i6) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function ___cxx_global_array_dtor_46(i1) {
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44128);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44116);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44104);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44092);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44080);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44068);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44056);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44044);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44032);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44020);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(44008);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(43996);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(43984);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(43972);
 return;
}

function __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN6cashew7IStringERNS1_8WasmTypeEEEEvDpOT_(i8, i5, i6) {
 i8 = i8 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9;
 i3 = i8 + 4 | 0;
 i4 = HEAP32[i8 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 3) + 1 | 0;
 if (i2 >>> 0 > 536870911) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
 i1 = (HEAP32[i8 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 3 >>> 0 < 268435455) {
  i1 = i1 >> 2;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 536870911;
 __ZNSt3__114__split_bufferIN4wasm8NameTypeERNS_9allocatorIS2_EEEC2EjjS5_(i7, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 3, i8 + 8 | 0);
 i4 = i7 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i3 + 4 >> 2] = i6;
 HEAP32[i4 >> 2] = i3 + 8;
 __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i8, i7);
 __ZNSt3__114__split_bufferIN4wasm8NameTypeERNS_9allocatorIS2_EEED2Ev(i7);
 STACKTOP = i9;
 return;
}

function __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN6cashew7IStringENS1_8WasmTypeEEEEvDpOT_(i8, i5, i6) {
 i8 = i8 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i9;
 i3 = i8 + 4 | 0;
 i4 = HEAP32[i8 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 3) + 1 | 0;
 if (i2 >>> 0 > 536870911) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i8);
 i1 = (HEAP32[i8 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 3 >>> 0 < 268435455) {
  i1 = i1 >> 2;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 536870911;
 __ZNSt3__114__split_bufferIN4wasm8NameTypeERNS_9allocatorIS2_EEEC2EjjS5_(i7, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 3, i8 + 8 | 0);
 i4 = i7 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i3 + 4 >> 2] = i6;
 HEAP32[i4 >> 2] = i3 + 8;
 __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i8, i7);
 __ZNSt3__114__split_bufferIN4wasm8NameTypeERNS_9allocatorIS2_EEED2Ev(i7);
 STACKTOP = i9;
 return;
}

function ___cxx_global_array_dtor(i1) {
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43316);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43304);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43292);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43280);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43268);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43256);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43244);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43232);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43220);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43208);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43196);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43184);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43172);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(43160);
 return;
}

function __ZNSt3__114__num_put_base14__format_floatEPcPKcj(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if (i2 & 2048) {
  HEAP8[i1 >> 0] = 43;
  i1 = i1 + 1 | 0;
 }
 if (i2 & 1024) {
  HEAP8[i1 >> 0] = 35;
  i1 = i1 + 1 | 0;
 }
 i6 = i2 & 260;
 i4 = i2 >>> 14;
 i7 = (i6 | 0) == 260;
 if (i7) i5 = 0; else {
  HEAP8[i1 >> 0] = 46;
  HEAP8[i1 + 1 >> 0] = 42;
  i1 = i1 + 2 | 0;
  i5 = 1;
 }
 while (1) {
  i2 = HEAP8[i3 >> 0] | 0;
  if (!(i2 << 24 >> 24)) break;
  HEAP8[i1 >> 0] = i2;
  i3 = i3 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 L14 : do switch (i6 | 0) {
 case 4:
  if (!(i4 & 1)) {
   HEAP8[i1 >> 0] = 102;
   break L14;
  } else {
   HEAP8[i1 >> 0] = 70;
   break L14;
  }
 case 256:
  if (!(i4 & 1)) {
   HEAP8[i1 >> 0] = 101;
   break L14;
  } else {
   HEAP8[i1 >> 0] = 69;
   break L14;
  }
 default:
  {
   i2 = (i4 & 1 | 0) != 0;
   if (i7) if (i2) {
    HEAP8[i1 >> 0] = 65;
    break L14;
   } else {
    HEAP8[i1 >> 0] = 97;
    break L14;
   } else if (i2) {
    HEAP8[i1 >> 0] = 71;
    break L14;
   } else {
    HEAP8[i1 >> 0] = 103;
    break L14;
   }
  }
 } while (0);
 return i5 | 0;
}

function __ZNSt3__16vectorIN4wasm6Switch4CaseENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 3) + 1 | 0;
 if (i2 >>> 0 > 536870911) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 3 >>> 0 < 268435455) {
  i1 = i1 >> 2;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 536870911;
 __ZNSt3__114__split_bufferIN4wasm6Switch4CaseERNS_9allocatorIS3_EEEC2EjjS6_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 3, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 i1 = i6;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 i6 = i3;
 HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i6 + 4 >> 2] = i2;
 HEAP32[i4 >> 2] = i3 + 8;
 __ZNSt3__16vectorIN4wasm6Switch4CaseENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i5);
 __ZNSt3__114__split_bufferIN4wasm6Switch4CaseERNS_9allocatorIS3_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__113unordered_mapIN6cashew7IStringEN7AsmData5LocalENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERSB_(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i6 + 8 | 0;
 i2 = i6;
 i1 = __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(i5, i4) | 0;
 if (!i1) {
  __ZNSt3__113unordered_mapIN6cashew7IStringEN7AsmData5LocalENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERSB_(i3, i5, i4);
  __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS6_PvEE(i2, i5, HEAP32[i3 >> 2] | 0);
  i1 = HEAP32[i2 >> 2] | 0;
 }
 STACKTOP = i6;
 return i1 + 12 | 0;
}

function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i1 = 0;
 } else {
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoll_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  L7 : do if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) {
   do if ((i3 | 0) == 34) {
    HEAP32[i7 >> 2] = 4;
    if ((i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 0) {
     i1 = 2147483647;
     break L7;
    }
   } else {
    if ((i2 | 0) < -1 | (i2 | 0) == -1 & i1 >>> 0 < 2147483648) {
     HEAP32[i7 >> 2] = 4;
     break;
    }
    if ((i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 2147483647) {
     HEAP32[i7 >> 2] = 4;
     i1 = 2147483647;
     break L7;
    } else break L7;
   } while (0);
   i1 = -2147483648;
  } else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
  } while (0);
 }
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN4wasm16PrintSExpression11visitImportEPNS_6ImportE(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4 + 4 | 0;
 i7 = i4;
 i2 = i3 + 4 | 0;
 i6 = __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i2 >> 2] | 0, 25748, 0) | 0;
 HEAP32[i7 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i6, i5) | 0, 32) | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__Z9printTextRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(HEAP32[i2 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0) | 0, 32) | 0;
 __Z9printTextRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(HEAP32[i2 >> 2] | 0, HEAP32[i1 + 8 >> 2] | 0) | 0;
 i1 = HEAP32[i1 + 12 >> 2] | 0;
 if (i1 | 0) __ZN4wasm16PrintSExpression17visitFunctionTypeEPNS_12FunctionTypeEb(i3, i1, 0);
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i2 >> 2] | 0, 41) | 0;
 STACKTOP = i4;
 return;
}

function __ZN4wasm6Module15addFunctionTypeEPNS_12FunctionTypeE(i6, i2) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i7;
 i5 = i7 + 4 | 0;
 HEAP32[i3 >> 2] = i2;
 i4 = i6 + 132 | 0;
 i1 = __ZN4wasm4Name7fromIntEj(HEAP32[i4 >> 2] | 0) | 0;
 HEAP32[i5 >> 2] = i1;
 if (!(HEAP32[i2 >> 2] | 0)) HEAP32[i2 >> 2] = i1;
 i1 = i6 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i6 + 8 >> 2] | 0)) {
  __ZNSt3__16vectorIPN4wasm12FunctionTypeENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i6, i3);
  i1 = HEAP32[i3 >> 2] | 0;
 } else {
  i3 = HEAP32[i3 >> 2] | 0;
  HEAP32[i2 >> 2] = i3;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 4;
  i1 = i3;
 }
 i6 = i6 + 48 | 0;
 i3 = __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i1) | 0;
 HEAP32[i3 >> 2] = i1;
 i6 = __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i5) | 0;
 HEAP32[i6 >> 2] = i1;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 STACKTOP = i7;
 return;
}

function __ZN10MixedArena5allocIN4wasm6SwitchEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 48 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 48;
 HEAP32[i7 >> 2] = 5;
 HEAP32[i7 + 4 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 i6 = i7 + 16 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 0;
 HEAP32[i6 + 16 >> 2] = 0;
 HEAP32[i6 + 20 >> 2] = 0;
 HEAP32[i6 + 24 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNSt3__16vectorIPNS0_IN6cashew3RefENS_9allocatorIS2_EEEENS3_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPNS_6vectorIN6cashew3RefENS_9allocatorIS3_EEEERNS4_IS7_EEEC2EjjS9_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPNS0_IN6cashew3RefENS_9allocatorIS2_EEEENS3_IS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i7, i5);
 __ZNSt3__114__split_bufferIPNS_6vectorIN6cashew3RefENS_9allocatorIS3_EEEERNS4_IS7_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE7parseDoERPcPKc(i8, i7, i1) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i9 + 28 | 0;
 i2 = i9 + 24 | 0;
 i6 = i9;
 i4 = i9 + 20 | 0;
 i5 = i9 + 16 | 0;
 i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE19parseMaybeBracketedERPcPKc(i8, i7, i1) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i7);
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i6, HEAP32[i7 >> 2] | 0);
 if ((HEAP32[i6 + 12 >> 2] | 0) == 0 ? (HEAP32[i6 >> 2] | 0) == (HEAP32[10272] | 0) : 0) {
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + (HEAP32[i6 + 8 >> 2] | 0);
  i8 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseParennedERPc(i8, i7) | 0;
  HEAP32[i4 >> 2] = i1;
  HEAP32[i5 >> 2] = i8;
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
  i8 = __ZN6cashew12ValueBuilder6makeDoENS_3RefES1_(i2, i3) | 0;
  STACKTOP = i9;
  return i8 | 0;
 }
 ___assert_fail(23818, 23426, 484, 23860);
 return 0;
}

function __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = (((HEAP32[i3 >> 2] | 0) - i4 | 0) / 28 | 0) + 1 | 0;
 if (i2 >>> 0 > 153391689) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = ((HEAP32[i7 + 8 >> 2] | 0) - i4 | 0) / 28 | 0;
 if (i1 >>> 0 < 76695844) {
  i1 = i1 << 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 153391689;
 __ZNSt3__114__split_bufferIN6cashew13OperatorClassERNS_9allocatorIS2_EEEC2EjjS5_(i5, i1, ((HEAP32[i3 >> 2] | 0) - i4 | 0) / 28 | 0, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 __ZN6cashew13OperatorClassC2EOS0_(i3, i6);
 HEAP32[i4 >> 2] = i3 + 28;
 __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i7, i5);
 __ZNSt3__114__split_bufferIN6cashew13OperatorClassERNS_9allocatorIS2_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE25__construct_node_with_keyERSD_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSL_SL_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 32 | 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixEOS6_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE25__construct_node_with_keyEOS6_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSL_SL_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 32 | 0;
}

function __ZN6cashew5Arena10allocArrayEv(i9) {
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i10;
 i6 = i9 + 16 | 0;
 i7 = i9 + 20 | 0;
 i8 = HEAP32[i7 >> 2] | 0;
 i1 = i8;
 if (!((i8 | 0) != (HEAP32[i6 >> 2] | 0) ? (i3 = i9 + 28 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 | 0) != 1e3) : 0)) {
  i3 = __Znaj(12004) | 0;
  HEAP32[i3 >> 2] = 1e3;
  i2 = i3 + 4 | 0;
  i3 = i3 + 12004 | 0;
  i4 = i2;
  do {
   HEAP32[i4 >> 2] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
   HEAP32[i4 + 8 >> 2] = 0;
   i4 = i4 + 12 | 0;
  } while ((i4 | 0) != (i3 | 0));
  HEAP32[i5 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i9 + 24 >> 2] | 0) >>> 0) {
   HEAP32[i8 >> 2] = i2;
   i1 = (HEAP32[i7 >> 2] | 0) + 4 | 0;
   HEAP32[i7 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPNS0_IN6cashew3RefENS_9allocatorIS2_EEEENS3_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(i6, i5);
   i1 = HEAP32[i7 >> 2] | 0;
  }
  i3 = i9 + 28 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 HEAP32[i3 >> 2] = i2 + 1;
 STACKTOP = i10;
 return (HEAP32[i1 + -4 >> 2] | 0) + (i2 * 12 | 0) | 0;
}

function __ZN4wasm6Module11addFunctionEPNS_8FunctionE(i6, i2) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i7;
 i5 = i7 + 4 | 0;
 HEAP32[i3 >> 2] = i2;
 i4 = i6 + 144 | 0;
 i1 = __ZN4wasm4Name7fromIntEj(HEAP32[i4 >> 2] | 0) | 0;
 HEAP32[i5 >> 2] = i1;
 if (!(HEAP32[i2 >> 2] | 0)) HEAP32[i2 >> 2] = i1;
 i1 = i6 + 40 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i6 + 44 >> 2] | 0)) {
  __ZNSt3__16vectorIPN4wasm8FunctionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i6 + 36 | 0, i3);
  i1 = HEAP32[i3 >> 2] | 0;
 } else {
  i3 = HEAP32[i3 >> 2] | 0;
  HEAP32[i2 >> 2] = i3;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 4;
  i1 = i3;
 }
 i6 = i6 + 84 | 0;
 i3 = __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i1) | 0;
 HEAP32[i3 >> 2] = i1;
 i6 = __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i5) | 0;
 HEAP32[i6 >> 2] = i1;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 STACKTOP = i7;
 return;
}

function __ZNSt3__16vectorINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEENS8_ISD_EEE26__swap_out_circular_bufferERNS_14__split_bufferISD_RSE_EE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i6 >> 2] | 0;
 i3 = i6 + 4 | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  i7 = i1 + -20 | 0;
  __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEEC2EOSF_((HEAP32[i4 >> 2] | 0) + -20 | 0, i7);
  HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + -20;
  i1 = i7;
 }
 i7 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i7;
 i7 = i5 + 8 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i2;
 i3 = i6 + 8 | 0;
 i7 = i5 + 12 | 0;
 i6 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i6;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 return;
}

function __ZN6cashew12ValueBuilder6makeIfENS_3RefES1_S1_(i1, i2, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i6 + 16 | 0;
 i10 = i6 + 12 | 0;
 i9 = i6 + 8 | 0;
 i7 = i6 + 4 | 0;
 i4 = i6;
 i8 = __ZN6cashew12ValueBuilder12makeRawArrayEi(4) | 0;
 i11 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41080) | 0;
 HEAP32[i10 >> 2] = i11;
 HEAP32[i3 >> 2] = HEAP32[i10 >> 2];
 i8 = __ZN6cashew5Value9push_backENS_3RefE(i8, i3) | 0;
 HEAP32[i9 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i8, i3) | 0;
 HEAP32[i7 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i1, i3) | 0;
 if (__ZN6cashew3RefntEv(i5) | 0) {
  i11 = __ZN6cashew12ValueBuilder8makeNullEv() | 0;
  HEAP32[i4 >> 2] = i11;
 } else HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 i11 = __ZN6cashew5Value9push_backENS_3RefE(i1, i3) | 0;
 STACKTOP = i6;
 return i11 | 0;
}

function __ZN4wasm6Module9addImportEPNS_6ImportE(i6, i2) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i7;
 i5 = i7 + 4 | 0;
 HEAP32[i3 >> 2] = i2;
 i4 = i6 + 136 | 0;
 i1 = __ZN4wasm4Name7fromIntEj(HEAP32[i4 >> 2] | 0) | 0;
 HEAP32[i5 >> 2] = i1;
 if (!(HEAP32[i2 >> 2] | 0)) HEAP32[i2 >> 2] = i1;
 i1 = i6 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i6 + 20 >> 2] | 0)) {
  __ZNSt3__16vectorIPN4wasm6ImportENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i6 + 12 | 0, i3);
  i1 = HEAP32[i3 >> 2] | 0;
 } else {
  i3 = HEAP32[i3 >> 2] | 0;
  HEAP32[i2 >> 2] = i3;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 4;
  i1 = i3;
 }
 i6 = i6 + 60 | 0;
 i3 = __ZNSt3__13mapIN4wasm4NameEPNS1_6ImportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i1) | 0;
 HEAP32[i3 >> 2] = i1;
 i6 = __ZNSt3__13mapIN4wasm4NameEPNS1_6ImportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i5) | 0;
 HEAP32[i6 >> 2] = i1;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 STACKTOP = i7;
 return;
}

function __ZN4wasm6Module9addExportEPNS_6ExportE(i6, i2) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i7;
 i5 = i7 + 4 | 0;
 HEAP32[i3 >> 2] = i2;
 i4 = i6 + 140 | 0;
 i1 = __ZN4wasm4Name7fromIntEj(HEAP32[i4 >> 2] | 0) | 0;
 HEAP32[i5 >> 2] = i1;
 if (!(HEAP32[i2 >> 2] | 0)) HEAP32[i2 >> 2] = i1;
 i1 = i6 + 28 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i6 + 32 >> 2] | 0)) {
  __ZNSt3__16vectorIPN4wasm6ExportENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i6 + 24 | 0, i3);
  i1 = HEAP32[i3 >> 2] | 0;
 } else {
  i3 = HEAP32[i3 >> 2] | 0;
  HEAP32[i2 >> 2] = i3;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 4;
  i1 = i3;
 }
 i6 = i6 + 72 | 0;
 i3 = __ZNSt3__13mapIN4wasm4NameEPNS1_6ExportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i1) | 0;
 HEAP32[i3 >> 2] = i1;
 i6 = __ZNSt3__13mapIN4wasm4NameEPNS1_6ExportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i5) | 0;
 HEAP32[i6 >> 2] = i1;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 STACKTOP = i7;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw(i11, i10, i1, i4, i8, i9, i7, i5) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i7 = i7 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0;
 if ((1073741806 - i10 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i11);
 if (!(HEAP8[i11 >> 0] & 1)) i6 = i11 + 4 | 0; else i6 = HEAP32[i11 + 8 >> 2] | 0;
 if (i10 >>> 0 < 536870887) {
  i2 = i1 + i10 | 0;
  i3 = i10 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 2 ? 2 : i2 + 4 & -4;
 } else i2 = 1073741807;
 i3 = __Znwj(i2 << 2) | 0;
 if (i8 | 0) _wmemcpy(i3, i6, i8) | 0;
 if (i7 | 0) _wmemcpy(i3 + (i8 << 2) | 0, i5, i7) | 0;
 i1 = i4 - i9 | 0;
 if ((i1 | 0) != (i8 | 0)) _wmemcpy(i3 + (i8 << 2) + (i7 << 2) | 0, i6 + (i8 << 2) + (i9 << 2) | 0, i1 - i8 | 0) | 0;
 if ((i10 | 0) != 1) __ZdlPv(i6);
 HEAP32[i11 + 8 >> 2] = i3;
 HEAP32[i11 >> 2] = i2 | 1;
 i10 = i1 + i7 | 0;
 HEAP32[i11 + 4 >> 2] = i10;
 HEAP32[i3 + (i10 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE7emplaceIJRS2_S5_EEENS9_INS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeIS2_S5_EEPNS_11__tree_nodeISJ_PvEEiEEEEbEEDpOT_(i4, i5, i2, i3) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i6;
 i1 = __Znwj(40) | 0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i2 >> 2];
 i2 = i1 + 20 | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 HEAP32[i2 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
 HEAP32[i2 + 16 >> 2] = HEAP32[i3 + 16 >> 2];
 __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE20__node_insert_uniqueEPNS_11__tree_nodeIS7_PvEE(i7, i5, i1);
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 i5 = HEAP8[i7 + 4 >> 0] | 0;
 HEAP8[i4 + 4 >> 0] = i5;
 if (!(i5 << 24 >> 24)) __ZdlPv(i1);
 STACKTOP = i6;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc(i11, i10, i1, i4, i8, i9, i7, i5) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i7 = i7 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0;
 if ((-18 - i10 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i11);
 if (!(HEAP8[i11 >> 0] & 1)) i6 = i11 + 1 | 0; else i6 = HEAP32[i11 + 8 >> 2] | 0;
 if (i10 >>> 0 < 2147483623) {
  i2 = i1 + i10 | 0;
  i3 = i10 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 11 ? 11 : i2 + 16 & -16;
 } else i2 = -17;
 i3 = _malloc(i2) | 0;
 if (i8 | 0) _memcpy(i3 | 0, i6 | 0, i8 | 0) | 0;
 if (i7 | 0) _memcpy(i3 + i8 | 0, i5 | 0, i7 | 0) | 0;
 i1 = i4 - i9 | 0;
 if ((i1 | 0) != (i8 | 0)) _memcpy(i3 + i8 + i7 | 0, i6 + i8 + i9 | 0, i1 - i8 | 0) | 0;
 if ((i10 | 0) != 10) _free(i6);
 HEAP32[i11 + 8 >> 2] = i3;
 HEAP32[i11 >> 2] = i2 | 1;
 i10 = i1 + i7 | 0;
 HEAP32[i11 + 4 >> 2] = i10;
 HEAP8[i3 + i10 >> 0] = 0;
 return;
}

function __ZN6cashew12ValueBuilder12makeFunctionENS_7IStringE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i2 + 16 | 0;
 i8 = i2 + 12 | 0;
 i7 = i2 + 8 | 0;
 i5 = i2 + 4 | 0;
 i4 = i2;
 i6 = __ZN6cashew12ValueBuilder12makeRawArrayEi(4) | 0;
 i9 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41040) | 0;
 HEAP32[i8 >> 2] = i9;
 HEAP32[i3 >> 2] = HEAP32[i8 >> 2];
 i6 = __ZN6cashew5Value9push_backENS_3RefE(i6, i3) | 0;
 i1 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i1) | 0;
 HEAP32[i7 >> 2] = i1;
 HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i6, i3) | 0;
 i6 = __ZN6cashew12ValueBuilder12makeRawArrayEi(0) | 0;
 HEAP32[i5 >> 2] = i6;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i1, i3) | 0;
 i5 = __ZN6cashew12ValueBuilder12makeRawArrayEi(0) | 0;
 HEAP32[i4 >> 2] = i5;
 HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i1, i3) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function _instantiate() {
 var i1 = 0, i2 = 0, i3 = 0;
 if (HEAP8[45016] | 0 ? (i2 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 14810) | 0, __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZN4wasm9printWasmEPNS_6ModuleERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(HEAP32[10255] | 0, i2) | 0, 10) | 0, HEAP8[45016] | 0) : 0) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 14834) | 0;
 _emscripten_asm_const_v(6);
 i2 = HEAP32[10255] | 0;
 i1 = i2 + 76 | 0;
 i2 = HEAP32[i2 + 72 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  _emscripten_asm_const_ii(7, HEAP32[HEAP32[i2 + 20 >> 2] >> 2] | 0) | 0;
  i2 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(i2) | 0;
 }
 if (HEAP8[45016] | 0) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 15094) | 0;
 i2 = __Znwj(16) | 0;
 i3 = HEAP32[10255] | 0;
 i1 = __Znwj(4) | 0;
 HEAP32[i1 >> 2] = 3132;
 __ZN4wasm14ModuleInstanceC2ERNS_6ModuleEPNS0_17ExternalInterfaceE(i2, i3, i1);
 HEAP32[10254] = i2;
 return;
}

function __ZN4wasm7Literal10printFloatERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEf(i3, d2) {
 i3 = i3 | 0;
 d2 = +d2;
 var i1 = 0, d4 = 0.0, i5 = 0;
 d4 = +Math_abs(+d2);
 if ((HEAPF32[tempDoublePtr >> 2] = d4, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 2139095040) {
  i1 = (HEAPF32[tempDoublePtr >> 2] = d2, HEAP32[tempDoublePtr >> 2] | 0);
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i3, (i1 | 0) < 0 ? 39539 : 49108) | 0, 34343) | 0;
  i1 = i1 & 8388607;
  if (i1 | 0) {
   i3 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i3, 21674) | 0;
   i5 = i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = HEAP32[i5 >> 2] & -75 | 8;
   i3 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(i3, i1) | 0;
   i3 = i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0;
   HEAP32[i3 >> 2] = HEAP32[i3 >> 2] & -75 | 2;
  }
 } else __ZN4wasm7Literal11printDoubleERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEd(i3, d2);
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE10makeBinaryES1_NS_7IStringES1_(i1, i11, i2, i12) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i13 + 28 | 0;
 i4 = i13 + 24 | 0;
 i3 = i13 + 20 | 0;
 i6 = i13 + 16 | 0;
 i7 = i13 + 12 | 0;
 i8 = i13 + 8 | 0;
 i9 = i13 + 4 | 0;
 i10 = i13;
 i2 = HEAP32[i2 >> 2] | 0;
 i1 = HEAP32[i11 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[10336] | 0)) {
  HEAP32[i6 >> 2] = i1;
  HEAP32[i7 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
  i1 = __ZN6cashew12ValueBuilder7makeDotENS_3RefES1_(i4, i5) | 0;
 } else {
  HEAP32[i8 >> 2] = i1;
  HEAP32[i9 >> 2] = i2;
  HEAP32[i10 >> 2] = HEAP32[i12 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i8 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
  i1 = __ZN6cashew12ValueBuilder10makeBinaryENS_3RefENS_7IStringES1_(i3, i4, i5) | 0;
 }
 STACKTOP = i13;
 return i1 | 0;
}

function __ZNSt3__16vectorIPN4wasm12FunctionTypeENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPN4wasm12FunctionTypeERNS_9allocatorIS3_EEEC2EjjS6_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPN4wasm12FunctionTypeENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i5);
 __ZNSt3__114__split_bufferIPN4wasm12FunctionTypeERNS_9allocatorIS3_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__113unordered_mapIN6cashew7IStringEiNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorINS_4pairIKS2_iEEEEEixERS9_(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i6 + 8 | 0;
 i2 = i6;
 i1 = __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(i5, i4) | 0;
 if (!i1) {
  __ZNSt3__113unordered_mapIN6cashew7IStringEiNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorINS_4pairIKS2_iEEEEE25__construct_node_with_keyERS9_(i3, i5, i4);
  __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS4_PvEE(i2, i5, HEAP32[i3 >> 2] | 0);
  i1 = HEAP32[i2 >> 2] | 0;
 }
 STACKTOP = i6;
 return i1 + 12 | 0;
}

function __ZN4wasm20Asm2WasmPreProcessor7processEPc(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 L1 : do if ((HEAP8[i1 >> 0] | 0) == 77) {
  i2 = i1;
  i3 = 77;
  i1 = _strlen(i1) | 0;
  while (1) {
   if (i3 << 24 >> 24 == 102) break;
   i3 = i2 + 1 | 0;
   i2 = i3;
   i3 = HEAP8[i3 >> 0] | 0;
   i1 = i1 + -1 | 0;
  }
  i1 = i2 + i1 | 0;
  while (1) {
   i1 = i1 + -1 | 0;
   if ((HEAP8[i1 >> 0] | 0) == 125) {
    i1 = i2;
    break L1;
   }
   HEAP8[i1 >> 0] = 0;
  }
 } while (0);
 i5 = _strstr(i1, 16939) | 0;
 if (i5 | 0) {
  HEAP8[i5 >> 0] = 0;
  i2 = _strstr(i1, 16965) | 0;
  do if (i2 | 0) {
   HEAP8[i4 >> 0] = 1;
   i3 = _strstr(i1, 16978) | 0;
   i4 = i3 + 1 | 0;
   if (_strstr(i4, 16978) | 0) ___assert_fail(16988, 13478, 109, 17034);
   i2 = _strchr(i2, 125) | 0;
   if (i2 >>> 0 > (i3 + 5 | 0) >>> 0) {
    HEAP8[i3 >> 0] = 47;
    HEAP8[i4 >> 0] = 42;
    HEAP8[i2 + -1 >> 0] = 42;
    HEAP8[i2 >> 0] = 47;
    break;
   } else ___assert_fail(17042, 13478, 111, 17034);
  } while (0);
  HEAP8[i5 >> 0] = 47;
 }
 return i1 | 0;
}

function __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPN4wasm10ExpressionERNS_9allocatorIS3_EEEC2EjjS6_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i5);
 __ZNSt3__114__split_bufferIPN4wasm10ExpressionERNS_9allocatorIS3_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPN4wasm10ExpressionERNS_9allocatorIS3_EEEC2EjjS6_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i5);
 __ZNSt3__114__split_bufferIPN4wasm10ExpressionERNS_9allocatorIS3_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function ___fwritex(i3, i4, i6) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i7 = 0;
 i1 = i6 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!i2) if (!(___towrite(i6) | 0)) {
  i2 = HEAP32[i1 >> 2] | 0;
  i5 = 5;
 } else i1 = 0; else i5 = 5;
 L5 : do if ((i5 | 0) == 5) {
  i7 = i6 + 20 | 0;
  i1 = HEAP32[i7 >> 2] | 0;
  i5 = i1;
  if ((i2 - i1 | 0) >>> 0 < i4 >>> 0) {
   i1 = FUNCTION_TABLE_iiii[HEAP32[i6 + 36 >> 2] & 31](i6, i3, i4) | 0;
   break;
  }
  L10 : do if ((HEAP8[i6 + 75 >> 0] | 0) > -1) {
   i1 = i4;
   while (1) {
    if (!i1) {
     i2 = i5;
     i1 = 0;
     break L10;
    }
    i2 = i1 + -1 | 0;
    if ((HEAP8[i3 + i2 >> 0] | 0) == 10) break; else i1 = i2;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[i6 + 36 >> 2] & 31](i6, i3, i1) | 0) >>> 0 < i1 >>> 0) break L5;
   i4 = i4 - i1 | 0;
   i3 = i3 + i1 | 0;
   i2 = HEAP32[i7 >> 2] | 0;
  } else {
   i2 = i5;
   i1 = 0;
  } while (0);
  _memcpy(i2 | 0, i3 | 0, i4 | 0) | 0;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i4;
  i1 = i1 + i4 | 0;
 } while (0);
 return i1 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner13visitSetLocalEPNS_8SetLocalE(i1, i4, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i5;
 HEAP32[i3 >> 2] = HEAP32[i2 + 8 >> 2];
 __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i1, i4, HEAP32[i2 + 12 >> 2] | 0);
 do if (!(HEAP32[i1 + 16 >> 2] | 0)) if ((HEAP32[i1 >> 2] | 0) == (HEAP32[i2 + 4 >> 2] | 0)) {
  i4 = __ZNSt3__13mapIN6cashew7IStringEN4wasm7LiteralENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(HEAP32[i4 + 8 >> 2] | 0, i3) | 0;
  HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
  HEAP32[i4 + 12 >> 2] = HEAP32[i1 + 12 >> 2];
  break;
 } else ___assert_fail(20789, 20213, 354, 20819); while (0);
 STACKTOP = i5;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(i11, i10, i1, i4, i8, i9, i7, i5) {
 i11 = i11 | 0;
 i10 = i10 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i7 = i7 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0;
 if ((-18 - i10 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i11);
 if (!(HEAP8[i11 >> 0] & 1)) i6 = i11 + 1 | 0; else i6 = HEAP32[i11 + 8 >> 2] | 0;
 if (i10 >>> 0 < 2147483623) {
  i2 = i1 + i10 | 0;
  i3 = i10 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 11 ? 11 : i2 + 16 & -16;
 } else i2 = -17;
 i3 = __Znwj(i2) | 0;
 if (i8 | 0) _memcpy(i3 | 0, i6 | 0, i8 | 0) | 0;
 if (i7 | 0) _memcpy(i3 + i8 | 0, i5 | 0, i7 | 0) | 0;
 i1 = i4 - i9 | 0;
 if ((i1 | 0) != (i8 | 0)) _memcpy(i3 + i8 + i7 | 0, i6 + i8 + i9 | 0, i1 - i8 | 0) | 0;
 if ((i10 | 0) != 10) __ZdlPv(i6);
 HEAP32[i11 + 8 >> 2] = i3;
 HEAP32[i11 >> 2] = i2 | 1;
 i10 = i1 + i7 | 0;
 HEAP32[i11 + 4 >> 2] = i10;
 HEAP8[i3 + i10 >> 0] = 0;
 return;
}

function __ZNSt3__16vectorIPN4wasm8FunctionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPN4wasm8FunctionERNS_9allocatorIS3_EEEC2EjjS6_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPN4wasm8FunctionENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i5);
 __ZNSt3__114__split_bufferIPN4wasm8FunctionERNS_9allocatorIS3_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIN6cashew7IStringERNS_9allocatorIS2_EEEC2EjjS5_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i7, i5);
 __ZNSt3__114__split_bufferIN6cashew7IStringERNS_9allocatorIS2_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorIPN4wasm7ElementENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPN4wasm7ElementERNS_9allocatorIS3_EEEC2EjjS6_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPN4wasm7ElementENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i5);
 __ZNSt3__114__split_bufferIPN4wasm7ElementERNS_9allocatorIS3_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIN4wasm8WasmTypeERNS_9allocatorIS2_EEEC2EjjS5_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i7, i5);
 __ZNSt3__114__split_bufferIN4wasm8WasmTypeERNS_9allocatorIS2_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorIPN6cashew5ValueENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPN6cashew5ValueERNS_9allocatorIS3_EEEC2EjjS6_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPN6cashew5ValueENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i5);
 __ZNSt3__114__split_bufferIPN6cashew5ValueERNS_9allocatorIS3_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIN4wasm8WasmTypeERNS_9allocatorIS2_EEEC2EjjS5_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i7, i5);
 __ZNSt3__114__split_bufferIN4wasm8WasmTypeERNS_9allocatorIS2_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorIPN4wasm6ImportENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPN4wasm6ImportERNS_9allocatorIS3_EEEC2EjjS6_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPN4wasm6ImportENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i5);
 __ZNSt3__114__split_bufferIPN4wasm6ImportERNS_9allocatorIS3_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorIPN4wasm6ExportENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPN4wasm6ExportERNS_9allocatorIS3_EEEC2EjjS6_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPN4wasm6ExportENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i5);
 __ZNSt3__114__split_bufferIPN4wasm6ExportERNS_9allocatorIS3_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 5;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 10;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 9;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 5) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 10) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZN4wasm15Asm2WasmBuilderC2ERNS_16AllocatingModuleEbi(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i3 >> 2] = i4;
 HEAP32[i3 + 4 >> 2] = i4 + 148;
 HEAP32[i3 + 8 >> 2] = 8;
 HEAP32[i3 + 12 >> 2] = 1e3;
 HEAP32[i3 + 20 >> 2] = 0;
 HEAP32[i3 + 24 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = i3 + 20;
 HEAP32[i3 + 32 >> 2] = 0;
 HEAP32[i3 + 36 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = i3 + 32;
 HEAP8[i3 + 40 >> 0] = i2 & 1;
 HEAP32[i3 + 44 >> 2] = i1;
 HEAP32[i3 + 52 >> 2] = 0;
 HEAP32[i3 + 56 >> 2] = 0;
 HEAP32[i3 + 48 >> 2] = i3 + 52;
 HEAP32[i3 + 64 >> 2] = 0;
 HEAP32[i3 + 68 >> 2] = 0;
 HEAP32[i3 + 60 >> 2] = i3 + 64;
 i4 = i3 + 72 | 0;
 HEAP32[i3 + 104 >> 2] = 0;
 HEAP32[i3 + 108 >> 2] = 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = 0;
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i4 + 24 >> 2] = 0;
 HEAP32[i3 + 100 >> 2] = i3 + 104;
 HEAP32[i3 + 116 >> 2] = 0;
 HEAP32[i3 + 120 >> 2] = 0;
 HEAP32[i3 + 112 >> 2] = i3 + 116;
 return;
}

function __ZN4wasm14SimplifyLocals10visitBlockEPNS_5BlockE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i7 = i2 + 12 | 0;
 i6 = i2 + 16 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 L1 : do if ((i1 | 0) != (i2 | 0)) {
  i3 = 0;
  while (1) {
   i5 = i2;
   if (i3 >>> 0 >= ((i1 - i2 >> 2) + -1 | 0) >>> 0) break L1;
   i2 = i5 + (i3 << 2) | 0;
   i4 = HEAP32[i2 >> 2] | 0;
   if ((!((i4 | 0) == 0 | (HEAP32[i4 >> 2] | 0) != 10) ? (i8 = HEAP32[i5 + (i3 + 1 << 2) >> 2] | 0, !((i8 | 0) == 0 | (HEAP32[i8 >> 2] | 0) != 9)) : 0) ? (HEAP32[i4 + 8 >> 2] | 0) == (HEAP32[i8 + 8 >> 2] | 0) : 0) {
    i5 = i2 + 4 | 0;
    i4 = i5 + 4 | 0;
    i2 = i1 - i4 | 0;
    _memmove(i5 | 0, i4 | 0, i2 | 0) | 0;
    i2 = i5 + (i2 >> 2 << 2) | 0;
    i1 = HEAP32[i6 >> 2] | 0;
    while (1) {
     if ((i1 | 0) == (i2 | 0)) break;
     i5 = i1 + -4 | 0;
     HEAP32[i6 >> 2] = i5;
     i1 = i5;
    }
    i3 = i3 + -1 | 0;
   }
   i2 = HEAP32[i7 >> 2] | 0;
   i3 = i3 + 1 | 0;
  }
 } while (0);
 return;
}

function _vsnprintf(i3, i1, i10, i8) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i10 = i10 | 0;
 i8 = i8 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i2 = i11 + 112 | 0;
 i9 = i11;
 i4 = i9;
 i5 = 5120;
 i6 = i4 + 112 | 0;
 do {
  HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
  i4 = i4 + 4 | 0;
  i5 = i5 + 4 | 0;
 } while ((i4 | 0) < (i6 | 0));
 if ((i1 + -1 | 0) >>> 0 > 2147483646) if (!i1) {
  i1 = 1;
  i7 = 4;
 } else {
  i1 = ___errno_location() | 0;
  HEAP32[i1 >> 2] = 75;
  i1 = -1;
 } else {
  i2 = i3;
  i7 = 4;
 }
 if ((i7 | 0) == 4) {
  i7 = -2 - i2 | 0;
  i7 = i1 >>> 0 > i7 >>> 0 ? i7 : i1;
  HEAP32[i9 + 48 >> 2] = i7;
  i3 = i9 + 20 | 0;
  HEAP32[i3 >> 2] = i2;
  HEAP32[i9 + 44 >> 2] = i2;
  i1 = i2 + i7 | 0;
  i2 = i9 + 16 | 0;
  HEAP32[i2 >> 2] = i1;
  HEAP32[i9 + 28 >> 2] = i1;
  i1 = _vfprintf(i9, i10, i8) | 0;
  if (i7) {
   i10 = HEAP32[i3 >> 2] | 0;
   HEAP8[i10 + (((i10 | 0) == (HEAP32[i2 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
  }
 }
 STACKTOP = i11;
 return i1 | 0;
}

function __ZNSt3__16vectorIPN4wasm4PassENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPN4wasm4PassERNS_9allocatorIS3_EEEC2EjjS6_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPN4wasm4PassENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i5);
 __ZNSt3__114__split_bufferIPN4wasm4PassERNS_9allocatorIS3_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIN6cashew3RefERNS_9allocatorIS2_EEEC2EjjS5_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i7, i5);
 __ZNSt3__114__split_bufferIN6cashew3RefERNS_9allocatorIS2_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16vectorIPN4wasm4PassENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPN4wasm4PassERNS_9allocatorIS3_EEEC2EjjS6_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPN4wasm4PassENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i7, i5);
 __ZNSt3__114__split_bufferIPN4wasm4PassERNS_9allocatorIS3_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 5;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 10;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 9;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 5) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 10) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIN4wasm4NameERNS_9allocatorIS2_EEEC2EjjS5_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i7, i5);
 __ZNSt3__114__split_bufferIN4wasm4NameERNS_9allocatorIS2_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 i14 = i6 + 8 | 0;
 i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i14 >> 2] | 0) + 20 >> 2] & 127](i14) | 0;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 i12 = HEAP8[i14 >> 0] | 0;
 i13 = (i12 & 1) == 0;
 i2 = i14 + 4 | 0;
 i1 = i13 ? i2 : HEAP32[i14 + 8 >> 2] | 0;
 i2 = i1 + ((i13 ? (i12 & 255) >>> 1 : HEAP32[i2 >> 2] | 0) << 2) | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i6, i9, i8, i4, i3, i5, i1, i2) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIN4wasm4NameERNS_9allocatorIS2_EEEC2EjjS5_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i7, i5);
 __ZNSt3__114__split_bufferIN4wasm4NameERNS_9allocatorIS2_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZN6cashew5Arena5allocEv(i8) {
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i9;
 i6 = i8 + 4 | 0;
 i7 = HEAP32[i6 >> 2] | 0;
 i1 = i7;
 if (!((i7 | 0) != (HEAP32[i8 >> 2] | 0) ? (i3 = i8 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 | 0) != 1e3) : 0)) {
  i3 = __Znaj(16008) | 0;
  HEAP32[i3 + 4 >> 2] = 1e3;
  i2 = i3 + 8 | 0;
  i3 = i3 + 16008 | 0;
  i4 = i2;
  do {
   HEAP32[i4 >> 2] = 3;
   HEAPF64[i4 + 8 >> 3] = 0.0;
   i4 = i4 + 16 | 0;
  } while ((i4 | 0) != (i3 | 0));
  HEAP32[i5 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i8 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i7 >> 2] = i2;
   i1 = (HEAP32[i6 >> 2] | 0) + 4 | 0;
   HEAP32[i6 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPN6cashew5ValueENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i8, i5);
   i1 = HEAP32[i6 >> 2] | 0;
  }
  i3 = i8 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 HEAP32[i3 >> 2] = i2 + 1;
 STACKTOP = i9;
 return (HEAP32[i1 + -4 >> 2] | 0) + (i2 << 4) | 0;
}

function __ZN6cashew12ValueBuilder11appendToVarENS_3RefENS_7IStringES1_(i7, i2, i6) {
 i7 = i7 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i8 + 12 | 0;
 i1 = i8 + 8 | 0;
 i4 = i8 + 4 | 0;
 i5 = i8;
 if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i7, 0) | 0, 41060) | 0)) ___assert_fail(23734, 31233, 1518, 23748);
 i9 = __ZN6cashew12ValueBuilder12makeRawArrayEi(1) | 0;
 i2 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i2) | 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i9, i3) | 0;
 if (!(__ZN6cashew3RefntEv(i6) | 0)) {
  HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
  __ZN6cashew5Value9push_backENS_3RefE(i1, i3) | 0;
 }
 i9 = __ZN6cashew3RefixEj(i7, 1) | 0;
 i9 = HEAP32[i9 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 __ZN6cashew5Value9push_backENS_3RefE(i9, i3) | 0;
 STACKTOP = i8;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE20__node_insert_uniqueEPNS_11__tree_nodeIS7_PvEE(i6, i4, i5) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i7;
 i2 = __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_(i4, i3, i5 + 16 | 0) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(i4, HEAP32[i3 >> 2] | 0, i2, i5);
  i2 = 1;
  i1 = i5;
 } else i2 = 0;
 HEAP32[i6 >> 2] = i1;
 HEAP8[i6 + 4 >> 0] = i2;
 STACKTOP = i7;
 return;
}

function __ZNK4wasm7Literal3negEv(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i5 + 16 | 0;
 i2 = i5;
 switch (HEAP32[i4 >> 2] | 0) {
 case 1:
  {
   i4 = HEAP32[i4 + 8 >> 2] ^ -2147483648;
   HEAP32[i3 >> 2] = 1;
   HEAP32[i3 + 8 >> 2] = i4;
   break;
  }
 case 2:
  {
   i2 = i4 + 8 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   i2 = HEAP32[i2 + 4 >> 2] ^ -2147483648;
   HEAP32[i3 >> 2] = 2;
   i4 = i3 + 8 | 0;
   HEAP32[i4 >> 2] = i1;
   HEAP32[i4 + 4 >> 2] = i2;
   break;
  }
 case 3:
  {
   i4 = HEAP32[i4 + 8 >> 2] ^ -2147483648;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i4;
   __ZN4wasm7Literal9castToF32Ev(i3, i1);
   break;
  }
 case 4:
  {
   i1 = i4 + 8 | 0;
   i6 = HEAP32[i1 >> 2] | 0;
   i1 = HEAP32[i1 + 4 >> 2] ^ -2147483648;
   HEAP32[i2 >> 2] = 2;
   i4 = i2 + 8 | 0;
   HEAP32[i4 >> 2] = i6;
   HEAP32[i4 + 4 >> 2] = i1;
   __ZN4wasm7Literal9castToF64Ev(i3, i2);
   break;
  }
 default:
  {}
 }
 STACKTOP = i5;
 return;
}

function __ZN10MixedArena5allocIN4wasm10CallImportEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 24 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 24;
 i6 = i7 + 4 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 0;
 HEAP32[i6 + 16 >> 2] = 0;
 HEAP32[i7 >> 2] = 7;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE4findIS2_EENS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = HEAP32[i1 >> 2] | 0;
 i1 = i8;
 i3 = 5381;
 while (1) {
  i2 = HEAP8[i1 >> 0] | 0;
  if (!(i2 << 24 >> 24)) break;
  i1 = i1 + 1 | 0;
  i3 = i2 << 24 >> 24 ^ i3 * 33;
 }
 i7 = HEAP32[i4 + 4 >> 2] | 0;
 L5 : do if (i7) {
  i5 = i7 + -1 | 0;
  i6 = (i5 & i7 | 0) == 0;
  if (i6) i3 = i5 & i3; else i3 = (i3 >>> 0) % (i7 >>> 0) | 0;
  i1 = HEAP32[(HEAP32[i4 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i1) do {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = 0;
    break L5;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if (i6) i2 = i2 & i5; else i2 = (i2 >>> 0) % (i7 >>> 0) | 0;
   if ((i2 | 0) != (i3 | 0)) {
    i1 = 0;
    break L5;
   }
  } while ((_strcmp(HEAP32[i1 + 8 >> 2] | 0, i8) | 0) != 0); else i1 = 0;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZNK4wasm7Literal3absEv(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i5 + 16 | 0;
 i2 = i5;
 switch (HEAP32[i4 >> 2] | 0) {
 case 1:
  {
   i4 = HEAP32[i4 + 8 >> 2] & 2147483647;
   HEAP32[i3 >> 2] = 1;
   HEAP32[i3 + 8 >> 2] = i4;
   break;
  }
 case 2:
  {
   i2 = i4 + 8 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   i2 = HEAP32[i2 + 4 >> 2] & 2147483647;
   HEAP32[i3 >> 2] = 2;
   i4 = i3 + 8 | 0;
   HEAP32[i4 >> 2] = i1;
   HEAP32[i4 + 4 >> 2] = i2;
   break;
  }
 case 3:
  {
   i4 = HEAP32[i4 + 8 >> 2] & 2147483647;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i4;
   __ZN4wasm7Literal9castToF32Ev(i3, i1);
   break;
  }
 case 4:
  {
   i1 = i4 + 8 | 0;
   i6 = HEAP32[i1 >> 2] | 0;
   i1 = HEAP32[i1 + 4 >> 2] & 2147483647;
   HEAP32[i2 >> 2] = 2;
   i4 = i2 + 8 | 0;
   HEAP32[i4 >> 2] = i6;
   HEAP32[i4 + 4 >> 2] = i1;
   __ZN4wasm7Literal9castToF64Ev(i3, i2);
   break;
  }
 default:
  {}
 }
 STACKTOP = i5;
 return;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEEixERSA_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE25__construct_node_with_keyERSA_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 20 | 0;
}

function __ZN6cashew12ValueBuilder14appendToObjectENS_3RefENS_7IStringES1_(i5, i6, i7) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i8 + 12 | 0;
 i2 = i8 + 8 | 0;
 i3 = i8 + 4 | 0;
 i4 = i8;
 if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i5, 0) | 0, 41356) | 0) {
  i5 = __ZN6cashew3RefixEj(i5, 1) | 0;
  i5 = HEAP32[i5 >> 2] | 0;
  i9 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
  i6 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i6) | 0;
  HEAP32[i3 >> 2] = i6;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  i6 = __ZN6cashew5Value9push_backENS_3RefE(i9, i1) | 0;
  HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
  i7 = __ZN6cashew5Value9push_backENS_3RefE(i6, i1) | 0;
  HEAP32[i2 >> 2] = i7;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  __ZN6cashew5Value9push_backENS_3RefE(i5, i1) | 0;
  STACKTOP = i8;
  return;
 } else ___assert_fail(24516, 31233, 1653, 24535);
}

function __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 24 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 24;
 HEAP32[i7 >> 2] = 1;
 i6 = i7 + 4 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 0;
 HEAP32[i6 + 16 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN10MixedArena5allocIN4wasm4HostEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 32 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 32;
 HEAP32[i7 >> 2] = 18;
 HEAP32[i7 + 4 >> 2] = 0;
 i6 = i7 + 12 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN10MixedArena5allocIN4wasm4CallEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 24 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 24;
 HEAP32[i7 >> 2] = 6;
 i6 = i7 + 4 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 0;
 HEAP32[i6 + 16 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 i12 = i6 + 8 | 0;
 i12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 127](i12) | 0;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 i2 = HEAP8[i12 >> 0] | 0;
 i13 = (i2 & 1) == 0;
 i1 = i13 ? i12 + 1 | 0 : HEAP32[i12 + 8 >> 2] | 0;
 i2 = i1 + (i13 ? (i2 & 255) >>> 1 : HEAP32[i12 + 4 >> 2] | 0) | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i6, i9, i8, i4, i3, i5, i1, i2) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZN10MixedArena5allocIN4wasm5BreakEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 24 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 24;
 HEAP32[i7 >> 2] = 4;
 i6 = i7 + 4 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 0;
 HEAP32[i6 >> 2] = 5;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder10parseTableERNS_7ElementE(i9, i8) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i10;
 i5 = i9 + 32 | 0;
 i6 = 1;
 while (1) {
  if (i6 >>> 0 >= (__ZN4wasm7Element4sizeEv(i8) | 0) >>> 0) break;
  i1 = __ZN4wasm7Element3strEv(__ZN4wasm7ElementixEj(i8, i6) | 0) | 0;
  i2 = i1;
  HEAP32[i7 >> 2] = i2;
  i4 = (__ZN4wasm7ElementixEj(i8, i6) | 0) + 20 | 0;
  if (!(HEAP8[i4 >> 0] | 0)) {
   i2 = _atoi(i1) | 0;
   i2 = HEAP32[(HEAP32[i5 >> 2] | 0) + (i2 << 2) >> 2] | 0;
   HEAP32[i7 >> 2] = i2;
  }
  i1 = HEAP32[i9 >> 2] | 0;
  i3 = i1 + 100 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if ((i4 | 0) == (HEAP32[i1 + 104 >> 2] | 0)) __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i1 + 96 | 0, i7); else {
   HEAP32[i4 >> 2] = i2;
   HEAP32[i3 >> 2] = (HEAP32[i3 >> 2] | 0) + 4;
  }
  i6 = i6 + 1 | 0;
 }
 STACKTOP = i10;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE13__lower_boundIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_SN_SN_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 i5 = HEAP8[i4 >> 0] | 0;
 i3 = (i5 & 1) == 0;
 i5 = i3 ? (i5 & 255) >>> 1 : HEAP32[i4 + 4 >> 2] | 0;
 i3 = i3 ? i4 + 1 | 0 : HEAP32[i4 + 8 >> 2] | 0;
 L1 : while (1) {
  while (1) {
   if (!i2) break L1;
   i4 = i2 + 16 | 0;
   i6 = HEAP8[i4 >> 0] | 0;
   i7 = (i6 & 1) == 0;
   i6 = i7 ? (i6 & 255) >>> 1 : HEAP32[i2 + 20 >> 2] | 0;
   i4 = _memcmp(i7 ? i4 + 1 | 0 : HEAP32[i2 + 24 >> 2] | 0, i3, i5 >>> 0 < i6 >>> 0 ? i5 : i6) | 0;
   if ((((i4 | 0) == 0 ? (i6 >>> 0 < i5 >>> 0 ? -2147483648 : 0) : i4) | 0) >= 0) break;
   i2 = HEAP32[i2 + 4 >> 2] | 0;
  }
  i1 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZN6cashew12ValueBuilder21appendDefaultToSwitchENS_3RefE(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i6 + 12 | 0;
 i2 = i6 + 8 | 0;
 i3 = i6 + 4 | 0;
 i4 = i6;
 if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i5, 0) | 0, 41128) | 0) {
  i5 = __ZN6cashew3RefixEj(i5, 2) | 0;
  i5 = HEAP32[i5 >> 2] | 0;
  i7 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
  i8 = __ZN6cashew12ValueBuilder8makeNullEv() | 0;
  HEAP32[i3 >> 2] = i8;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  i3 = __ZN6cashew5Value9push_backENS_3RefE(i7, i1) | 0;
  i7 = __ZN6cashew12ValueBuilder12makeRawArrayEi(0) | 0;
  HEAP32[i4 >> 2] = i7;
  HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
  i4 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
  HEAP32[i2 >> 2] = i4;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  __ZN6cashew5Value9push_backENS_3RefE(i5, i1) | 0;
  STACKTOP = i6;
  return;
 } else ___assert_fail(23952, 31233, 1604, 23992);
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE20__node_insert_uniqueEPNS_11__tree_nodeIS7_PvEE(i6, i4, i5) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i7;
 i2 = __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEESK_RKT_(i4, i3, i5 + 16 | 0) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(i4, HEAP32[i3 >> 2] | 0, i2, i5);
  i2 = 1;
  i1 = i5;
 } else i2 = 0;
 HEAP32[i6 >> 2] = i1;
 HEAP8[i6 + 4 >> 0] = i2;
 STACKTOP = i7;
 return;
}

function __ZNKSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i1 = i5 * 33 ^ 5381;
 i4 = HEAP32[i2 + 4 >> 2] | 0;
 L1 : do if (i4) {
  i6 = i4 + -1 | 0;
  i7 = (i6 & i4 | 0) == 0;
  if (i7) i3 = i6 & i1; else i3 = (i1 >>> 0) % (i4 >>> 0) | 0;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i1) do {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = 0;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if (i7) i2 = i2 & i6; else i2 = (i2 >>> 0) % (i4 >>> 0) | 0;
   if ((i2 | 0) != (i3 | 0)) {
    i1 = 0;
    break L1;
   }
  } while ((HEAP32[i1 + 8 >> 2] | 0) != (i5 | 0)); else i1 = 0;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 4;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 9;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 8;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 4) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 8) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZN10MixedArena5allocIN4wasm12CallIndirectEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 32 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 32;
 HEAP32[i7 >> 2] = 8;
 i6 = i7 + 4 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i6) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i8;
 i3 = i7 + 4 | 0;
 i4 = HEAP32[i7 >> 2] | 0;
 i2 = ((HEAP32[i3 >> 2] | 0) - i4 >> 2) + 1 | 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i7);
 i1 = (HEAP32[i7 + 8 >> 2] | 0) - i4 | 0;
 if (i1 >> 2 >>> 0 < 536870911) {
  i1 = i1 >> 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
 } else i1 = 1073741823;
 __ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEEC2EjjS4_(i5, i1, (HEAP32[i3 >> 2] | 0) - i4 >> 2, i7 + 8 | 0);
 i4 = i5 + 8 | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i4 >> 2] = i3 + 4;
 __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE(i7, i5);
 __ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEED2Ev(i5);
 STACKTOP = i8;
 return;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i1 = i5 * 33 ^ 5381;
 i4 = HEAP32[i2 + 4 >> 2] | 0;
 L1 : do if (i4) {
  i6 = i4 + -1 | 0;
  i7 = (i6 & i4 | 0) == 0;
  if (i7) i3 = i6 & i1; else i3 = (i1 >>> 0) % (i4 >>> 0) | 0;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i1) do {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = 0;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if (i7) i2 = i2 & i6; else i2 = (i2 >>> 0) % (i4 >>> 0) | 0;
   if ((i2 | 0) != (i3 | 0)) {
    i1 = 0;
    break L1;
   }
  } while ((HEAP32[i1 + 8 >> 2] | 0) != (i5 | 0)); else i1 = 0;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc(i6, i7, i1, i2, i5, i3, i4) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i1 = i8 + 4 | 0;
 i2 = i8;
 HEAP32[i2 >> 2] = i1 + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc(i6 + 8 | 0, i1, i2, i5, i3, i4);
 i6 = HEAP32[i2 >> 2] | 0;
 i5 = i1;
 i1 = HEAP32[i7 >> 2] | 0;
 while (1) {
  if ((i5 | 0) == (i6 | 0)) break;
  i3 = HEAP8[i5 >> 0] | 0;
  do if (i1) {
   i4 = i1 + 24 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 28 >> 2] | 0)) {
    i7 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] & 31](i1, i3 & 255) | 0) == -1;
    i1 = i7 ? 0 : i1;
    break;
   } else {
    HEAP32[i4 >> 2] = i2 + 1;
    HEAP8[i2 >> 0] = i3;
    break;
   }
  } else i1 = 0; while (0);
  i5 = i5 + 1 | 0;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function __ZN4wasm16PrintSExpression10visitBlockEPNS_5BlockE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7 + 4 | 0;
 i2 = i7;
 i3 = i6 + 4 | 0;
 __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i3 >> 2] | 0, 30578, 0) | 0;
 i4 = i5 + 8 | 0;
 if (HEAP32[i4 >> 2] | 0) {
  i3 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i3 >> 2] | 0, 32) | 0;
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i3, i1) | 0;
 }
 __ZN4wasm16PrintSExpression9incIndentEv(i6);
 i2 = HEAP32[i5 + 16 >> 2] | 0;
 i1 = HEAP32[i5 + 12 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i6, HEAP32[i1 >> 2] | 0);
  i1 = i1 + 4 | 0;
 }
 __ZN4wasm16PrintSExpression9decIndentEv(i6);
 STACKTOP = i7;
 return;
}

function __ZN6cashew12ValueBuilder15makeConditionalENS_3RefES1_S1_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i5 = i4 + 16 | 0;
 i10 = i4 + 12 | 0;
 i9 = i4 + 8 | 0;
 i7 = i4 + 4 | 0;
 i6 = i4;
 i8 = __ZN6cashew12ValueBuilder12makeRawArrayEi(4) | 0;
 i11 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41068) | 0;
 HEAP32[i10 >> 2] = i11;
 HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
 i8 = __ZN6cashew5Value9push_backENS_3RefE(i8, i5) | 0;
 HEAP32[i9 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i8, i5) | 0;
 HEAP32[i7 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
 i3 = __ZN6cashew5Value9push_backENS_3RefE(i1, i5) | 0;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 i3 = __ZN6cashew5Value9push_backENS_3RefE(i3, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner11visitReturnEPNS_6ReturnE(i4, i5, i1) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i6;
 HEAP32[i4 >> 2] = 0;
 i3 = i4 + 8 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i3 + 4 >> 2] = 0;
 i3 = i4 + 16 | 0;
 HEAP32[i3 >> 2] = 0;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 if (!((i1 | 0) != 0 ? (__ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i2, i5, i1), HEAP32[i4 >> 2] = HEAP32[i2 >> 2], HEAP32[i4 + 4 >> 2] = HEAP32[i2 + 4 >> 2], HEAP32[i4 + 8 >> 2] = HEAP32[i2 + 8 >> 2], HEAP32[i4 + 12 >> 2] = HEAP32[i2 + 12 >> 2], HEAP32[i4 + 16 >> 2] = HEAP32[i2 + 16 >> 2], (HEAP32[i3 >> 2] | 0) != 0) : 0)) HEAP32[i4 + 16 >> 2] = HEAP32[10249];
 STACKTOP = i6;
 return;
}

function __ZN10MixedArena5allocIN4wasm7ElementEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 24 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 24;
 HEAP8[i7 >> 0] = 1;
 i6 = i7 + 4 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN10MixedArena5allocIN4wasm5ConstEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 24 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 24;
 HEAP32[i7 >> 2] = 13;
 HEAP32[i7 + 4 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 i6 = i7 + 16 | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE7emplaceIJRS2_S5_EEENS9_INS_14__map_iteratorINS_15__tree_iteratorINS_12__value_typeIS2_S5_EEPNS_11__tree_nodeISJ_PvEEiEEEEbEEDpOT_(i4, i5, i2, i3) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i6;
 i1 = __Znwj(32) | 0;
 HEAP32[i1 + 16 >> 2] = HEAP32[i2 >> 2];
 i2 = i1 + 20 | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE20__node_insert_uniqueEPNS_11__tree_nodeIS7_PvEE(i7, i5, i1);
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 i5 = HEAP8[i7 + 4 >> 0] | 0;
 HEAP8[i4 + 4 >> 0] = i5;
 if (!(i5 << 24 >> 24)) __ZdlPv(i1);
 STACKTOP = i6;
 return;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 4;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 9;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 8;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 4) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 8) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function ___shgetc(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i2 = i6 + 104 | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 if ((i5 | 0) != 0 ? (HEAP32[i6 + 108 >> 2] | 0) >= (i5 | 0) : 0) i7 = 4; else {
  i1 = ___uflow(i6) | 0;
  if ((i1 | 0) >= 0) {
   i2 = HEAP32[i2 >> 2] | 0;
   i5 = HEAP32[i6 + 8 >> 2] | 0;
   if (i2) {
    i4 = HEAP32[i6 + 4 >> 2] | 0;
    i2 = i2 - (HEAP32[i6 + 108 >> 2] | 0) | 0;
    i3 = i5;
    if ((i5 - i4 | 0) < (i2 | 0)) i7 = 9; else HEAP32[i6 + 100 >> 2] = i4 + (i2 + -1);
   } else {
    i3 = i5;
    i7 = 9;
   }
   if ((i7 | 0) == 9) HEAP32[i6 + 100 >> 2] = i5;
   i2 = i6 + 4 | 0;
   if (!i3) i2 = HEAP32[i2 >> 2] | 0; else {
    i2 = HEAP32[i2 >> 2] | 0;
    i6 = i6 + 108 | 0;
    HEAP32[i6 >> 2] = i3 + 1 - i2 + (HEAP32[i6 >> 2] | 0);
   }
   i2 = i2 + -1 | 0;
   if ((HEAPU8[i2 >> 0] | 0 | 0) != (i1 | 0)) HEAP8[i2 >> 0] = i1;
  } else i7 = 4;
 }
 if ((i7 | 0) == 4) {
  HEAP32[i6 + 100 >> 2] = 0;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__7clENS1_7IStringE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i6 + 24 | 0;
 i4 = i6 + 12 | 0;
 i5 = i6;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i5, 22777, 15);
 i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(i5, HEAP32[i1 >> 2] | 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i4 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZN6cashew7IStringC2EPKcb(i3, (HEAP8[i4 >> 0] & 1) == 0 ? i4 + 1 | 0 : HEAP32[i4 + 8 >> 2] | 0, 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 STACKTOP = i6;
 return HEAP32[i3 >> 2] | 0;
}

function __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__6clENS1_7IStringE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i6 + 24 | 0;
 i4 = i6 + 12 | 0;
 i5 = i6;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i5, 22764, 12);
 i1 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(i5, HEAP32[i1 >> 2] | 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i4 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZN6cashew7IStringC2EPKcb(i3, (HEAP8[i4 >> 0] & 1) == 0 ? i4 + 1 | 0 : HEAP32[i4 + 8 >> 2] | 0, 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
 STACKTOP = i6;
 return HEAP32[i3 >> 2] | 0;
}

function __ZN10MixedArena5allocIN4wasm12FunctionTypeEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 24 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 24;
 HEAP32[i7 >> 2] = 0;
 HEAP32[i7 + 4 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 HEAP32[i7 + 12 >> 2] = 0;
 HEAP32[i7 + 16 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder10makeSelectERNS_7ElementE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = __ZN10MixedArena5allocIN4wasm6SelectEEEPT_v(HEAP32[i2 + 4 >> 2] | 0) | 0;
 i6 = __ZN4wasm7Element4listEv(i1) | 0;
 i6 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i2, HEAP32[(HEAP32[i6 >> 2] | 0) + 4 >> 2] | 0) | 0;
 i5 = i3 + 8 | 0;
 HEAP32[i5 >> 2] = i6;
 i6 = __ZN4wasm7Element4listEv(i1) | 0;
 i6 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i2, HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] | 0) | 0;
 i4 = i3 + 12 | 0;
 HEAP32[i4 >> 2] = i6;
 i1 = __ZN4wasm7Element4listEv(i1) | 0;
 i2 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i2, HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] | 0) | 0;
 HEAP32[i3 + 16 >> 2] = i2;
 i2 = HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] | 0;
 HEAP32[i3 + 4 >> 2] = (i2 | 0) != 5 ? i2 : HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] | 0;
 return i3 | 0;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEEixERSA_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE25__construct_node_with_keyERSA_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 20 | 0;
}

function __ZNSt3__13mapIPN4wasm12CallIndirectEN6cashew7IStringENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_(i1, i5, i3) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  i4 = HEAP32[i3 >> 2] | 0;
  while (1) {
   i1 = HEAP32[i2 + 16 >> 2] | 0;
   if (i4 >>> 0 < i1 >>> 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 5;
     break;
    }
   } else {
    if (i1 >>> 0 >= i4 >>> 0) {
     i1 = i2;
     i3 = 10;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 9;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 5) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 10) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 4;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 9;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 8;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 4) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 8) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i1 = i5 * 33 ^ 5381;
 i4 = HEAP32[i2 + 4 >> 2] | 0;
 L1 : do if (i4) {
  i6 = i4 + -1 | 0;
  i7 = (i6 & i4 | 0) == 0;
  if (i7) i3 = i6 & i1; else i3 = (i1 >>> 0) % (i4 >>> 0) | 0;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i1) do {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = 0;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if (i7) i2 = i2 & i6; else i2 = (i2 >>> 0) % (i4 >>> 0) | 0;
   if ((i2 | 0) != (i3 | 0)) {
    i1 = 0;
    break L1;
   }
  } while ((HEAP32[i1 + 8 >> 2] | 0) != (i5 | 0)); else i1 = 0;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 5;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 10;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 9;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 5) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 10) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZN6cashew12ValueBuilder18appendCaseToSwitchENS_3RefES1_(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7 + 12 | 0;
 i2 = i7 + 8 | 0;
 i3 = i7 + 4 | 0;
 i4 = i7;
 if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i6, 0) | 0, 41128) | 0) {
  i6 = __ZN6cashew3RefixEj(i6, 2) | 0;
  i6 = HEAP32[i6 >> 2] | 0;
  i8 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
  HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  i5 = __ZN6cashew5Value9push_backENS_3RefE(i8, i1) | 0;
  i3 = __ZN6cashew12ValueBuilder12makeRawArrayEi(0) | 0;
  HEAP32[i4 >> 2] = i3;
  HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
  i5 = __ZN6cashew5Value9push_backENS_3RefE(i5, i1) | 0;
  HEAP32[i2 >> 2] = i5;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  __ZN6cashew5Value9push_backENS_3RefE(i6, i1) | 0;
  STACKTOP = i7;
  return;
 } else ___assert_fail(23952, 31233, 1598, 23973);
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm7LiteralENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 4;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 9;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 8;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 4) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 8) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZNSt3__16vectorINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEENS8_ISD_EEE6resizeEj(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i6 = i5 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 i2 = (i1 - i3 | 0) / 20 | 0;
 L1 : do if (i2 >>> 0 >= i4 >>> 0) {
  if (i2 >>> 0 > i4 >>> 0) {
   i2 = i3 + (i4 * 20 | 0) | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break L1;
    i5 = i1 + -20 | 0;
    HEAP32[i6 >> 2] = i5;
    __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEED2Ev(i5);
    i1 = HEAP32[i6 >> 2] | 0;
   }
  }
 } else __ZNSt3__16vectorINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEENS8_ISD_EEE8__appendEj(i5, i4 - i2 | 0); while (0);
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseDottingES1_RPc(i1, i9, i8) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i7 + 28 | 0;
 i1 = i7 + 24 | 0;
 i6 = i7;
 i3 = i7 + 20 | 0;
 i4 = i7 + 16 | 0;
 i5 = HEAP32[i8 >> 2] | 0;
 if ((HEAP8[i5 >> 0] | 0) != 46) ___assert_fail(24196, 23426, 646, 24208);
 i5 = i5 + 1 | 0;
 HEAP32[i8 >> 2] = i5;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i6, i5);
 if ((HEAP32[i6 + 12 >> 2] | 0) == 2) {
  HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + (HEAP32[i6 + 8 >> 2] | 0);
  HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  i9 = __ZN6cashew12ValueBuilder7makeDotENS_3RefENS_7IStringE(i1, i2) | 0;
  STACKTOP = i7;
  return i9 | 0;
 } else ___assert_fail(24221, 23426, 649, 24208);
 return 0;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 5;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 10;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 9;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 5) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 10) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseToplevelEPc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i3 + 24 | 0;
 i5 = i3 + 20 | 0;
 i8 = i3 + 16 | 0;
 i7 = i3 + 12 | 0;
 i6 = i3 + 8 | 0;
 i10 = i3 + 4 | 0;
 i9 = i3;
 HEAP32[i8 >> 2] = i1;
 HEAP32[i2 + 12 >> 2] = i1;
 i1 = _strlen(i1) | 0;
 HEAP32[i2 + 16 >> 2] = i1;
 i1 = __ZN6cashew12ValueBuilder12makeToplevelEv() | 0;
 HEAP32[i7 >> 2] = i1;
 HEAP32[i10 >> 2] = 0;
 HEAP32[i9 >> 2] = 0;
 HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
 i2 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE10parseBlockERPcPKcNS_7IStringES8_(i2, i8, 23393, i5, i4) | 0;
 HEAP32[i6 >> 2] = i2;
 HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
 __ZN6cashew12ValueBuilder15setBlockContentENS_3RefES1_(i5, i4);
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS8_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 5;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 10;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 9;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 5) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 10) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZN4wasm6Module12removeImportENS_4NameE(i10, i9) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = i10 + 16 | 0;
 i6 = HEAP32[i8 >> 2] | 0;
 i4 = HEAP32[i10 + 12 >> 2] | 0;
 i2 = i6 - i4 >> 2;
 i3 = HEAP32[i9 >> 2] | 0;
 i5 = 0;
 while (1) {
  if (i5 >>> 0 >= i2 >>> 0) break;
  i1 = i4 + (i5 << 2) | 0;
  if ((HEAP32[HEAP32[i1 >> 2] >> 2] | 0) == (i3 | 0)) {
   i7 = 4;
   break;
  } else i5 = i5 + 1 | 0;
 }
 L4 : do if ((i7 | 0) == 4) {
  i7 = i1 + 4 | 0;
  i2 = i6 - i7 | 0;
  _memmove(i1 | 0, i7 | 0, i2 | 0) | 0;
  i1 = i1 + (i2 >> 2 << 2) | 0;
  i2 = HEAP32[i8 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i1 | 0)) break L4;
   i7 = i2 + -4 | 0;
   HEAP32[i8 >> 2] = i7;
   i2 = i7;
  }
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ImportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE14__erase_uniqueIS3_EEjRKT_(i10 + 60 | 0, i9) | 0;
 return;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_6ImportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 5;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 10;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 9;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 5) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 10) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_6ExportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 5;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 10;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 9;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 5) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 10) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(i7, i5) {
 i7 = i7 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i8;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i6, i7);
 L1 : do if (HEAP8[i6 >> 0] | 0) {
  i3 = HEAP32[i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  i4 = i3;
  do if (i3 | 0) {
   i1 = i4 + 24 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i4 + 28 >> 2] | 0)) if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 52 >> 2] & 31](i4, i5 & 255) | 0) == -1) break; else break L1; else {
    HEAP32[i1 >> 2] = i2 + 1;
    HEAP8[i2 >> 0] = i5;
    break L1;
   }
  } while (0);
  i5 = i7 + (HEAP32[(HEAP32[i7 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
  HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | 1;
 } while (0);
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i6);
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN4wasm16PrintSExpression13printCallBodyEPNS_4CallE(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i5 + 4 | 0;
 i7 = i5;
 i2 = i4 + 4 | 0;
 i6 = HEAP32[i2 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i1 + 20 >> 2];
 HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
 __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i6, i3) | 0;
 i3 = i1 + 8 | 0;
 i1 = i1 + 12 | 0;
 if ((HEAP32[i1 >> 2] | 0) == (HEAP32[i3 >> 2] | 0)) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i2 >> 2] | 0, 41) | 0; else {
  __ZN4wasm16PrintSExpression9incIndentEv(i4);
  i2 = HEAP32[i1 >> 2] | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) break;
   __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i4, HEAP32[i1 >> 2] | 0);
   i1 = i1 + 4 | 0;
  }
  __ZN4wasm16PrintSExpression9decIndentEv(i4);
 }
 STACKTOP = i5;
 return;
}

function __ZN10MixedArena5allocIN4wasm8FunctionEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i4 = i7 + 12 | 0, i2 = HEAP32[i4 >> 2] | 0, (i2 + 40 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i3 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i3);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i4 = i7 + 12 | 0;
  HEAP32[i4 >> 2] = 0;
  i2 = 0;
 }
 i3 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i4 >> 2] = i2 + 40;
 i1 = i3;
 i2 = i1 + 36 | 0;
 do {
  HEAP32[i1 >> 2] = 0;
  i1 = i1 + 4 | 0;
 } while ((i1 | 0) < (i2 | 0));
 STACKTOP = i8;
 return i3 | 0;
}

function __ZN4wasm6ModuleC2Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0;
 i1 = i3 + 48 | 0;
 HEAP32[i3 + 52 >> 2] = 0;
 HEAP32[i3 + 56 >> 2] = 0;
 i2 = i3 + 52 | 0;
 i4 = i3;
 i5 = i4 + 48 | 0;
 do {
  HEAP32[i4 >> 2] = 0;
  i4 = i4 + 4 | 0;
 } while ((i4 | 0) < (i5 | 0));
 HEAP32[i1 >> 2] = i2;
 HEAP32[i3 + 64 >> 2] = 0;
 HEAP32[i3 + 68 >> 2] = 0;
 HEAP32[i3 + 60 >> 2] = i3 + 64;
 HEAP32[i3 + 76 >> 2] = 0;
 HEAP32[i3 + 80 >> 2] = 0;
 HEAP32[i3 + 72 >> 2] = i3 + 76;
 HEAP32[i3 + 88 >> 2] = 0;
 HEAP32[i3 + 92 >> 2] = 0;
 HEAP32[i3 + 84 >> 2] = i3 + 88;
 i5 = i3 + 96 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 HEAP32[i5 + 12 >> 2] = 0;
 HEAP32[i3 + 112 >> 2] = -1;
 i5 = i3 + 116 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 HEAP32[i5 + 12 >> 2] = 0;
 HEAP32[i5 + 16 >> 2] = 0;
 HEAP32[i5 + 20 >> 2] = 0;
 HEAP32[i5 + 24 >> 2] = 0;
 HEAP32[i5 + 28 >> 2] = 0;
 return;
}

function __ZNSt3__13mapIN6cashew7IStringEiNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_iEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS7_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 4;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 9;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 8;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 4) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 8) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS7_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 5;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 10;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 9;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 5) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 10) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE6rehashEj(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if ((i1 | 0) != 1) {
  if (i1 + -1 & i1) i1 = __ZNSt3__112__next_primeEj(i1) | 0;
 } else i1 = 2;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 if (i1 >>> 0 <= i4 >>> 0) {
  if (i1 >>> 0 < i4 >>> 0) {
   if (i4 >>> 0 > 2) i3 = (i4 + -1 & i4 | 0) == 0; else i3 = 0;
   i2 = ~~+Math_ceil(+(+((HEAP32[i5 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i5 + 16 >> 2])) >>> 0;
   if (i3) i2 = 1 << 32 - (Math_clz32(i2 + -1 | 0) | 0); else i2 = __ZNSt3__112__next_primeEj(i2) | 0;
   i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
   if (i1 >>> 0 < i4 >>> 0) __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE8__rehashEj(i5, i1);
  }
 } else __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE8__rehashEj(i5, i1);
 return;
}

function __ZN6cashew12ValueBuilder13makeStatementENS_3RefE(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 8 | 0;
 i2 = i5 + 4 | 0;
 i3 = i5;
 i6 = __ZN6cashew3RefixEj(i4, 0) | 0;
 if (!(__ZNKSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(41444, __ZN6cashew5Value10getIStringEv(HEAP32[i6 >> 2] | 0) | 0) | 0)) i1 = HEAP32[i4 >> 2] | 0; else {
  i6 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
  i7 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41048) | 0;
  HEAP32[i2 >> 2] = i7;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i6 = __ZN6cashew5Value9push_backENS_3RefE(i6, i1) | 0;
  HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  i1 = __ZN6cashew5Value9push_backENS_3RefE(i6, i1) | 0;
 }
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNSt3__13mapIPN4wasm12CallIndirectEN6cashew7IStringENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEEixERSA_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIPN4wasm12CallIndirectEN6cashew7IStringENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIPN4wasm12CallIndirectEN6cashew7IStringENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE25__construct_node_with_keyERSA_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPN4wasm12CallIndirectEN6cashew7IStringEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 20 | 0;
}

function __ZN10MixedArena5allocIN4wasm6ExportEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 8 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 8;
 i6 = i7;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i7 >> 2] = 0;
 HEAP32[i7 + 4 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN10MixedArena5allocIN4wasm6ImportEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 16 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 16;
 HEAP32[i7 >> 2] = 0;
 HEAP32[i7 + 4 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 HEAP32[i7 + 12 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIN6cashew7IStringEN4wasm12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIN6cashew7IStringEN4wasm12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 20 | 0;
}

function __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  while (1) {
   i1 = i2 + 16 | 0;
   if (__ZNK6cashew7IStringltERKS0_(i4, i1) | 0) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = i2;
     i3 = 5;
     break;
    }
   } else {
    if (!(__ZNK6cashew7IStringltERKS0_(i1, i4) | 0)) {
     i1 = i2;
     i3 = 10;
     break;
    }
    i1 = i2 + 4 | 0;
    i3 = HEAP32[i1 >> 2] | 0;
    if (!i3) {
     i3 = 9;
     break;
    } else i1 = i3;
   }
   i2 = i1;
  }
  if ((i3 | 0) == 5) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 9) {
   HEAP32[i5 >> 2] = i2;
   break;
  } else if ((i3 | 0) == 10) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else HEAP32[i5 >> 2] = i1; while (0);
 return i1 | 0;
}

function __ZN10MixedArena5allocIN4wasm4LoopEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 24 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 24;
 HEAP32[i7 >> 2] = 3;
 HEAP32[i7 + 4 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 HEAP32[i7 + 12 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN4wasm16PrintSExpression17visitCallIndirectEPNS_12CallIndirectE(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i4 + 4 | 0;
 i6 = i4;
 i5 = __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i3 + 4 >> 2] | 0, 25920, 0) | 0;
 HEAP32[i6 >> 2] = HEAP32[HEAP32[i1 + 20 >> 2] >> 2];
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i5, i2) | 0;
 __ZN4wasm16PrintSExpression9incIndentEv(i3);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i3, HEAP32[i1 + 24 >> 2] | 0);
 i2 = HEAP32[i1 + 12 >> 2] | 0;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i3, HEAP32[i1 >> 2] | 0);
  i1 = i1 + 4 | 0;
 }
 __ZN4wasm16PrintSExpression9decIndentEv(i3);
 STACKTOP = i4;
 return;
}

function __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE6rehashEj(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 if ((i1 | 0) != 1) {
  if (i1 + -1 & i1) i1 = __ZNSt3__112__next_primeEj(i1) | 0;
 } else i1 = 2;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 if (i1 >>> 0 <= i4 >>> 0) {
  if (i1 >>> 0 < i4 >>> 0) {
   if (i4 >>> 0 > 2) i3 = (i4 + -1 & i4 | 0) == 0; else i3 = 0;
   i2 = ~~+Math_ceil(+(+((HEAP32[i5 + 12 >> 2] | 0) >>> 0) / +HEAPF32[i5 + 16 >> 2])) >>> 0;
   if (i3) i2 = 1 << 32 - (Math_clz32(i2 + -1 | 0) | 0); else i2 = __ZNSt3__112__next_primeEj(i2) | 0;
   i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
   if (i1 >>> 0 < i4 >>> 0) __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEj(i5, i1);
  }
 } else __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE8__rehashEj(i5, i1);
 return;
}

function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc(i6, i7, i1, i2, i5, i3, i4) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 i1 = i8 + 8 | 0;
 i2 = i8;
 HEAP32[i2 >> 2] = i1 + 400;
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc(i6 + 8 | 0, i1, i2, i5, i3, i4);
 i6 = HEAP32[i2 >> 2] | 0;
 i5 = i1;
 i1 = HEAP32[i7 >> 2] | 0;
 while (1) {
  if ((i5 | 0) == (i6 | 0)) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if (!i1) i1 = 0; else {
   i4 = i1 + 24 | 0;
   i3 = HEAP32[i4 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i1 + 28 >> 2] | 0)) i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] & 31](i1, i2) | 0; else {
    HEAP32[i4 >> 2] = i3 + 4;
    HEAP32[i3 >> 2] = i2;
   }
   i1 = (i2 | 0) == -1 ? 0 : i1;
  }
  i5 = i5 + 4 | 0;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function __ZN4wasm10PassRunner3addENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i6 + 12 | 0;
 i3 = i6;
 i2 = __ZN4wasm12PassRegistry3getEv() | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i1);
 i1 = __ZN4wasm12PassRegistry10createPassENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i2, i3) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 HEAP32[i4 >> 2] = i1;
 if (!i1) ___assert_fail(16550, 16555, 76, 26243);
 i2 = i5 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i3 | 0) == (HEAP32[i5 + 12 >> 2] | 0)) __ZNSt3__16vectorIPN4wasm4PassENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i5 + 4 | 0, i4); else {
  HEAP32[i3 >> 2] = i1;
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
 }
 STACKTOP = i6;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 L1 : do if ((i1 | 0) != (i4 | 0)) {
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 != 95) {
   if (((i2 << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
   while (1) {
    i1 = i1 + 1 | 0;
    if ((i1 | 0) == (i4 | 0)) {
     i1 = i4;
     break L1;
    }
    if (((HEAP8[i1 >> 0] | 0) + -48 | 0) >>> 0 >= 10) break L1;
   }
  }
  i2 = i1 + 1 | 0;
  if ((i2 | 0) != (i4 | 0)) {
   i2 = HEAP8[i2 >> 0] | 0;
   if (((i2 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
    i1 = i1 + 2 | 0;
    break;
   }
   if (i2 << 24 >> 24 == 95) {
    i2 = i1 + 2 | 0;
    while (1) {
     if ((i2 | 0) == (i4 | 0)) break L1;
     i3 = HEAP8[i2 >> 0] | 0;
     if (((i3 << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
     i2 = i2 + 1 | 0;
    }
    return (i3 << 24 >> 24 == 95 ? i2 + 1 | 0 : i1) | 0;
   }
  }
 } while (0);
 return i1 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 do if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
   break;
  }
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoull_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  do if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 65535 | (i3 | 0) == 34) {
   HEAP32[i7 >> 2] = 4;
   i1 = -1;
   break;
  } else {
   i1 = i1 & 65535;
   break;
  } else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 48 >> 2] | 0;
 L1 : do if (!(i1 & 16)) {
  if (i1 & 8 | 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(i5, HEAP32[i4 + 8 >> 2] | 0, HEAP32[i4 + 16 >> 2] | 0);
   break;
  }
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break L1;
   HEAP32[i5 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
 } else {
  i2 = i4 + 44 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  i3 = HEAP32[i4 + 24 >> 2] | 0;
  if (i1 >>> 0 < i3 >>> 0) {
   HEAP32[i2 >> 2] = i3;
   i1 = i3;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(i5, HEAP32[i4 + 20 >> 2] | 0, i1);
 } while (0);
 return;
}

function __ZN10MixedArena5allocIN4wasm8SetLocalEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 16 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 16;
 HEAP32[i7 >> 2] = 10;
 HEAP32[i7 + 4 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm7LiteralENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIN6cashew7IStringEN4wasm7LiteralENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIN6cashew7IStringEN4wasm7LiteralENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm7LiteralEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 24 | 0;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 20 | 0;
}

function __ZN10MixedArena5allocIN4wasm8GetLocalEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 16 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 16;
 HEAP32[i7 >> 2] = 9;
 HEAP32[i7 + 4 >> 2] = 0;
 HEAP32[i7 + 8 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN10MixedArena5allocIN4wasm6ReturnEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 16 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 16;
 HEAP32[i7 >> 2] = 17;
 HEAP32[i7 + 8 >> 2] = 0;
 HEAP32[i7 + 4 >> 2] = 5;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNK4wasm7Literal3mulERKS0_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var d4 = 0.0;
 switch (HEAP32[i3 >> 2] | 0) {
 case 1:
  {
   i3 = Math_imul(HEAP32[i2 + 8 >> 2] | 0, HEAP32[i3 + 8 >> 2] | 0) | 0;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i3;
   break;
  }
 case 2:
  {
   i3 = i3 + 8 | 0;
   i2 = i2 + 8 | 0;
   i2 = ___muldi3(HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0, HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0) | 0;
   HEAP32[i1 >> 2] = 2;
   i3 = i1 + 8 | 0;
   HEAP32[i3 >> 2] = i2;
   HEAP32[i3 + 4 >> 2] = tempRet0;
   break;
  }
 case 3:
  {
   d4 = +__ZNK4wasm7Literal6getf32Ev(i3) * +__ZNK4wasm7Literal6getf32Ev(i2);
   HEAP32[i1 >> 2] = 3;
   HEAPF32[i1 + 8 >> 2] = d4;
   break;
  }
 case 4:
  {
   d4 = +__ZNK4wasm7Literal6getf64Ev(i3) * +__ZNK4wasm7Literal6getf64Ev(i2);
   HEAP32[i1 >> 2] = 4;
   HEAPF64[i1 + 8 >> 3] = d4;
   break;
  }
 default:
  {}
 }
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(i2, i5, i3, i1, i4) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 HEAP8[i5 + 53 >> 0] = 1;
 do if ((HEAP32[i5 + 4 >> 2] | 0) == (i1 | 0)) {
  HEAP8[i5 + 52 >> 0] = 1;
  i1 = i5 + 16 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (!i2) {
   HEAP32[i1 >> 2] = i3;
   HEAP32[i5 + 24 >> 2] = i4;
   HEAP32[i5 + 36 >> 2] = 1;
   if (!((i4 | 0) == 1 ? (HEAP32[i5 + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[i5 + 54 >> 0] = 1;
   break;
  }
  if ((i2 | 0) != (i3 | 0)) {
   i4 = i5 + 36 | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
   HEAP8[i5 + 54 >> 0] = 1;
   break;
  }
  i2 = i5 + 24 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == 2) {
   HEAP32[i2 >> 2] = i4;
   i1 = i4;
  }
  if ((i1 | 0) == 1 ? (HEAP32[i5 + 48 >> 2] | 0) == 1 : 0) HEAP8[i5 + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZNK4wasm7Literal3subERKS0_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var d4 = 0.0;
 switch (HEAP32[i3 >> 2] | 0) {
 case 1:
  {
   i3 = (HEAP32[i3 + 8 >> 2] | 0) - (HEAP32[i2 + 8 >> 2] | 0) | 0;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i3;
   break;
  }
 case 2:
  {
   i3 = i3 + 8 | 0;
   i2 = i2 + 8 | 0;
   i2 = _i64Subtract(HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0, HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0) | 0;
   HEAP32[i1 >> 2] = 2;
   i3 = i1 + 8 | 0;
   HEAP32[i3 >> 2] = i2;
   HEAP32[i3 + 4 >> 2] = tempRet0;
   break;
  }
 case 3:
  {
   d4 = +__ZNK4wasm7Literal6getf32Ev(i3) - +__ZNK4wasm7Literal6getf32Ev(i2);
   HEAP32[i1 >> 2] = 3;
   HEAPF32[i1 + 8 >> 2] = d4;
   break;
  }
 case 4:
  {
   d4 = +__ZNK4wasm7Literal6getf64Ev(i3) - +__ZNK4wasm7Literal6getf64Ev(i2);
   HEAP32[i1 >> 2] = 4;
   HEAPF64[i1 + 8 >> 3] = d4;
   break;
  }
 default:
  {}
 }
 return;
}

function __ZN10MixedArena5allocIN4wasm2IfEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 24 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 24;
 HEAP32[i7 >> 2] = 2;
 HEAP32[i7 + 16 >> 2] = 0;
 HEAP32[i7 + 4 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEEC2EOSF_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 i6 = i1 + 4 | 0;
 i5 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i5;
 i6 = i2 + 8 | 0;
 i7 = i1 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i6 >> 2] = i3;
 i8 = i1 + 12 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 HEAP32[i2 + 12 >> 2] = i9;
 HEAP32[i2 + 16 >> 2] = HEAP32[i1 + 16 >> 2];
 if (i9 | 0) {
  i1 = HEAP32[i3 + 4 >> 2] | 0;
  i2 = i5 + -1 | 0;
  if (!(i2 & i5)) i1 = i2 & i1; else i1 = (i1 >>> 0) % (i5 >>> 0) | 0;
  HEAP32[i4 + (i1 << 2) >> 2] = i6;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
 }
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE19parseBracketedBlockERPc(i6, i7) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i8 + 12 | 0;
 i1 = i8 + 8 | 0;
 i3 = i8 + 4 | 0;
 i4 = i8;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i7);
 i5 = HEAP32[i7 >> 2] | 0;
 if ((HEAP8[i5 >> 0] | 0) != 123) ___assert_fail(23656, 23426, 856, 23668);
 HEAP32[i7 >> 2] = i5 + 1;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
 i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE10parseBlockERPcPKcNS_7IStringES8_(i6, i7, 23688, i1, i2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((HEAP8[i2 >> 0] | 0) == 125) {
  HEAP32[i7 >> 2] = i2 + 1;
  STACKTOP = i8;
  return i1 | 0;
 } else ___assert_fail(23691, 23426, 859, 23668);
 return 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(i10, i9, i1, i4, i7, i8, i6) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 if ((1073741807 - i9 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i10);
 if (!(HEAP8[i10 >> 0] & 1)) i5 = i10 + 4 | 0; else i5 = HEAP32[i10 + 8 >> 2] | 0;
 if (i9 >>> 0 < 536870887) {
  i2 = i1 + i9 | 0;
  i3 = i9 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 2 ? 2 : i2 + 4 & -4;
 } else i2 = 1073741807;
 i3 = __Znwj(i2 << 2) | 0;
 if (i7 | 0) _wmemcpy(i3, i5, i7) | 0;
 i1 = i4 - i8 | 0;
 if ((i1 | 0) != (i7 | 0)) _wmemcpy(i3 + (i7 << 2) + (i6 << 2) | 0, i5 + (i7 << 2) + (i8 << 2) | 0, i1 - i7 | 0) | 0;
 if ((i9 | 0) != 1) __ZdlPv(i5);
 HEAP32[i10 + 8 >> 2] = i3;
 HEAP32[i10 >> 2] = i2 | 1;
 return;
}

function ___strchrnul(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 i3 = i4 & 255;
 L1 : do if (!i3) i1 = i1 + (_strlen(i1) | 0) | 0; else {
  if (i1 & 3) {
   i2 = i4 & 255;
   do {
    i5 = HEAP8[i1 >> 0] | 0;
    if (i5 << 24 >> 24 == 0 ? 1 : i5 << 24 >> 24 == i2 << 24 >> 24) break L1;
    i1 = i1 + 1 | 0;
   } while ((i1 & 3 | 0) != 0);
  }
  i3 = Math_imul(i3, 16843009) | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  L10 : do if (!((i2 & -2139062144 ^ -2139062144) & i2 + -16843009)) do {
   i5 = i2 ^ i3;
   if ((i5 & -2139062144 ^ -2139062144) & i5 + -16843009 | 0) break L10;
   i1 = i1 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
  } while (!((i2 & -2139062144 ^ -2139062144) & i2 + -16843009 | 0)); while (0);
  i2 = i4 & 255;
  while (1) {
   i5 = HEAP8[i1 >> 0] | 0;
   if (i5 << 24 >> 24 == 0 ? 1 : i5 << 24 >> 24 == i2 << 24 >> 24) break; else i1 = i1 + 1 | 0;
  }
 } while (0);
 return i1 | 0;
}

function __ZNK4wasm7Literal3addERKS0_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var d4 = 0.0;
 switch (HEAP32[i3 >> 2] | 0) {
 case 1:
  {
   i3 = (HEAP32[i2 + 8 >> 2] | 0) + (HEAP32[i3 + 8 >> 2] | 0) | 0;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i3;
   break;
  }
 case 2:
  {
   i3 = i3 + 8 | 0;
   i2 = i2 + 8 | 0;
   i2 = _i64Add(HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0, HEAP32[i3 >> 2] | 0, HEAP32[i3 + 4 >> 2] | 0) | 0;
   HEAP32[i1 >> 2] = 2;
   i3 = i1 + 8 | 0;
   HEAP32[i3 >> 2] = i2;
   HEAP32[i3 + 4 >> 2] = tempRet0;
   break;
  }
 case 3:
  {
   d4 = +__ZNK4wasm7Literal6getf32Ev(i3) + +__ZNK4wasm7Literal6getf32Ev(i2);
   HEAP32[i1 >> 2] = 3;
   HEAPF32[i1 + 8 >> 2] = d4;
   break;
  }
 case 4:
  {
   d4 = +__ZNK4wasm7Literal6getf64Ev(i3) + +__ZNK4wasm7Literal6getf64Ev(i2);
   HEAP32[i1 >> 2] = 4;
   HEAPF64[i1 + 8 >> 3] = d4;
   break;
  }
 default:
  {}
 }
 return;
}

function __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i6 >> 2] | 0;
 i3 = i6 + 4 | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  i7 = i1 + -24 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_((HEAP32[i4 >> 2] | 0) + -24 | 0, i7);
  HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + -24;
  i1 = i7;
 }
 i7 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i7;
 i7 = i5 + 8 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i2;
 i3 = i6 + 8 | 0;
 i7 = i5 + 12 | 0;
 i6 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i6;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i6, i5, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) i2 = 10; else {
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 if (!(i1 & 1)) i3 = (i1 & 255) >>> 1; else i3 = HEAP32[i6 + 4 >> 2] | 0;
 if ((i2 - i3 | 0) >>> 0 >= i4 >>> 0) {
  if (i4 | 0) {
   if (!(i1 & 1)) i2 = i6 + 1 | 0; else i2 = HEAP32[i6 + 8 >> 2] | 0;
   _memcpy(i2 + i3 | 0, i5 | 0, i4 | 0) | 0;
   i1 = i3 + i4 | 0;
   if (!(HEAP8[i6 >> 0] & 1)) HEAP8[i6 >> 0] = i1 << 1; else HEAP32[i6 + 4 >> 2] = i1;
   HEAP8[i2 + i1 >> 0] = 0;
  }
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc(i6, i2, i4 - i2 + i3 | 0, i3, i3, 0, i4, i5);
 return i6 | 0;
}

function __ZN4wasm15Asm2WasmBuilder15getFunctionTypeEN6cashew3RefERNSt3__16vectorIPNS_10ExpressionENS3_9allocatorIS6_EEEE(i6, i3, i5) {
 i6 = i6 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i7 + 16 | 0;
 i2 = i7 + 12 | 0;
 i4 = i7;
 if (__ZN6cashew3RefntEv(i3) | 0) i1 = 0; else {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i1 = __ZN4wasm15Asm2WasmBuilder14detectWasmTypeEN6cashew3RefEP7AsmData(i6, i1, 0) | 0;
 }
 __ZN4wasm6getSigENS_8WasmTypeERNSt3__16vectorIPNS_10ExpressionENS1_9allocatorIS4_EEEE(i4, i1, i5);
 i6 = __ZN4wasm18ensureFunctionTypeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_6ModuleER10MixedArena(i4, HEAP32[i6 >> 2] | 0, HEAP32[i6 + 4 >> 2] | 0) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 do if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
   break;
  }
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoull_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  do if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 4294967295 | (i3 | 0) == 34) {
   HEAP32[i7 >> 2] = 4;
   i1 = -1;
   break;
  } else break; else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 do if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
   break;
  }
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoull_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  do if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 4294967295 | (i3 | 0) == 34) {
   HEAP32[i7 >> 2] = 4;
   i1 = -1;
   break;
  } else break; else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function _atoll(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 while (1) {
  i2 = i1 + 1 | 0;
  if (!(_isspace(HEAP8[i1 >> 0] | 0) | 0)) break; else i1 = i2;
 }
 i3 = HEAP8[i1 >> 0] | 0;
 switch (i3 << 24 >> 24 | 0) {
 case 45:
  {
   i4 = 1;
   i5 = 5;
   break;
  }
 case 43:
  {
   i4 = 0;
   i5 = 5;
   break;
  }
 default:
  i4 = 0;
 }
 if ((i5 | 0) == 5) {
  i1 = i2;
  i3 = HEAP8[i2 >> 0] | 0;
 }
 i5 = (i3 << 24 >> 24) + -48 | 0;
 if (i5 >>> 0 < 10) {
  i3 = 0;
  i2 = 0;
  do {
   i2 = ___muldi3(i2 | 0, i3 | 0, 10, 0) | 0;
   i1 = i1 + 1 | 0;
   i2 = _i64Subtract(i2 | 0, tempRet0 | 0, i5 | 0, ((i5 | 0) < 0) << 31 >> 31 | 0) | 0;
   i3 = tempRet0;
   i5 = (HEAP8[i1 >> 0] | 0) + -48 | 0;
  } while (i5 >>> 0 < 10);
  i1 = i3;
 } else {
  i2 = 0;
  i1 = 0;
 }
 i4 = (i4 | 0) != 0;
 i5 = _i64Subtract(0, 0, i2 | 0, i1 | 0) | 0;
 tempRet0 = i4 ? i1 : tempRet0;
 return (i4 ? i2 : i5) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj(i6, i5, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) i3 = 10; else {
  i1 = HEAP32[i6 >> 2] | 0;
  i3 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 i2 = (i1 & 1) == 0;
 do if (i3 >>> 0 >= i4 >>> 0) {
  if (i2) i1 = i6 + 1 | 0; else i1 = HEAP32[i6 + 8 >> 2] | 0;
  _memmove(i1 | 0, i5 | 0, i4 | 0) | 0;
  HEAP8[i1 + i4 >> 0] = 0;
  if (!(HEAP8[i6 >> 0] & 1)) {
   HEAP8[i6 >> 0] = i4 << 1;
   break;
  } else {
   HEAP32[i6 + 4 >> 2] = i4;
   break;
  }
 } else {
  if (i2) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i6 + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc(i6, i3, i4 - i3 | 0, i1, 0, i1, i4, i5);
 } while (0);
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9parseFragERNS3_4FragE(i1, i6) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i4 + 8 | 0;
 i2 = i4 + 4 | 0;
 i3 = i4;
 switch (HEAP32[i6 + 12 >> 2] | 0) {
 case 2:
  {
   HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
   i5 = __ZN6cashew12ValueBuilder8makeNameENS_7IStringE(i1) | 0;
   break;
  }
 case 3:
  {
   HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
   i5 = __ZN6cashew12ValueBuilder10makeStringENS_7IStringE(i1) | 0;
   break;
  }
 case 4:
  {
   i5 = __ZN6cashew12ValueBuilder10makeDoubleEd(+(~~+HEAPF64[i6 >> 3] >>> 0 >>> 0)) | 0;
   break;
  }
 case 5:
  {
   i5 = __ZN6cashew19DotZeroValueBuilder10makeDoubleEd(+HEAPF64[i6 >> 3]) | 0;
   break;
  }
 default:
  _abort();
 }
 STACKTOP = i4;
 return i5 | 0;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_8FunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 20 | 0;
}

function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i5, i3, i1, i2, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i6;
 i3 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 HEAP32[i7 >> 2] = i3;
 i8 = __ZNKSt3__16locale9use_facetERNS0_2idE(i7, 43120) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 48 >> 2] & 7](i8, 35270, 35302, i1) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i7, 43128) | 0;
 i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP32[i2 >> 2] = i7;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
 HEAP32[i4 >> 2] = i2;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 127](i5, i1);
 __ZNSt3__114__shared_count16__release_sharedEv(i3) | 0;
 STACKTOP = i6;
 return;
}

function __ZN10MixedArena5allocIN4wasm11UnreachableEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 8 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 8;
 HEAP32[i7 >> 2] = 20;
 HEAP32[i7 + 4 >> 2] = 5;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ImportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE14__erase_uniqueIS3_EEjRKT_(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i5 + 4 | 0;
 i3 = i5;
 i1 = __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ImportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i4, i1) | 0;
 if ((i1 | 0) == (i4 + 4 | 0)) i1 = 0; else {
  HEAP32[i3 >> 2] = i1;
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ImportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE5eraseENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEE(i4, i2) | 0;
  i1 = 1;
 }
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS8_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEE25__construct_node_with_keyERS8_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameENS2_8WasmTypeEEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSG_SG_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 20 | 0;
}

function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i5, i3, i1, i2, i4) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i6;
 i3 = __ZNKSt3__18ios_base6getlocEv(i3) | 0;
 HEAP32[i7 >> 2] = i3;
 i8 = __ZNKSt3__16locale9use_facetERNS0_2idE(i7, 43088) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i8 >> 2] | 0) + 32 >> 2] & 7](i8, 35270, 35302, i1) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i7, 43100) | 0;
 i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 127](i1) | 0;
 HEAP8[i2 >> 0] = i7;
 i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
 HEAP8[i4 >> 0] = i2;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 127](i5, i1);
 __ZNSt3__114__shared_count16__release_sharedEv(i3) | 0;
 STACKTOP = i6;
 return;
}

function __ZN6cashew12ValueBuilder12makeContinueENS_7IStringE(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i6 + 8 | 0;
 i7 = i6 + 4 | 0;
 i2 = i6;
 i3 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i8 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41124) | 0;
 HEAP32[i7 >> 2] = i8;
 HEAP32[i1 >> 2] = HEAP32[i7 >> 2];
 i3 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 i7 = HEAP32[i4 >> 2] | 0;
 if ((i7 | 0) != 0 ? (HEAP8[i7 >> 0] | 0) != 0 : 0) {
  i8 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i4) | 0;
  HEAP32[i2 >> 2] = i8;
 } else i5 = 4;
 if ((i5 | 0) == 4) {
  i8 = __ZN6cashew12ValueBuilder8makeNullEv() | 0;
  HEAP32[i2 >> 2] = i8;
 };
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 i8 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 STACKTOP = i6;
 return i8 | 0;
}

function __ZN4wasm14ModuleInstance10callExportEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEE(i4, i6, i1, i5) {
 i4 = i4 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i7 + 8 | 0;
 i8 = i7 + 4 | 0;
 i3 = i7;
 i9 = (HEAP32[i6 >> 2] | 0) + 72 | 0;
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 i1 = __ZNSt3__13mapIN4wasm4NameEPNS1_6ExportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixEOS2_(i9, i8) | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 if (!i1) {
  i9 = HEAP32[i6 + 12 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i9 >> 2] | 0) + 20 >> 2] & 127](i9, 21645);
 }
 HEAP32[i3 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 __ZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEE(i4, i6, i2, i5);
 STACKTOP = i7;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 L1 : do if ((i1 | 0) != (i4 | 0)) {
  switch (HEAP8[i1 >> 0] | 0) {
  case 104:
   {
    i3 = i1 + 1 | 0;
    i2 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i3, i4) | 0;
    if ((i2 | 0) == (i3 | 0) | (i2 | 0) == (i4 | 0)) break L1;
    return ((HEAP8[i2 >> 0] | 0) == 95 ? i2 + 1 | 0 : i1) | 0;
   }
  case 118:
   break;
  default:
   break L1;
  }
  i5 = i1 + 1 | 0;
  i2 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i5, i4) | 0;
  if ((!((i2 | 0) == (i5 | 0) | (i2 | 0) == (i4 | 0)) ? (HEAP8[i2 >> 0] | 0) == 95 : 0) ? (i5 = i2 + 1 | 0, i3 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i5, i4) | 0, !((i3 | 0) == (i5 | 0) | (i3 | 0) == (i4 | 0))) : 0) i1 = (HEAP8[i3 >> 0] | 0) == 95 ? i3 + 1 | 0 : i1;
 } while (0);
 return i1 | 0;
}

function __ZN10MixedArena5allocIN4wasm6SelectEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 24 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 24;
 HEAP32[i7 >> 2] = 16;
 HEAP32[i7 + 4 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN10MixedArena5allocIN4wasm6BinaryEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 24 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 24;
 HEAP32[i7 >> 2] = 15;
 HEAP32[i7 + 4 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE25__construct_node_with_keyEOS6_(i4, i1, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i5 = 0;
 i2 = __Znwj(72) | 0;
 HEAP32[i4 >> 2] = i2;
 HEAP32[i4 + 4 >> 2] = i1 + 4;
 i1 = i4 + 8 | 0;
 HEAP8[i1 >> 0] = 0;
 i5 = i4 + 9 | 0;
 HEAP8[i5 >> 0] = 0;
 i2 = i2 + 16 | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i3 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 HEAP8[i1 >> 0] = 1;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = i1 + 32 | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) == 3) break;
  HEAP32[i2 + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 }
 HEAP32[i1 + 64 >> 2] = 0;
 HEAP8[i5 >> 0] = 1;
 return;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_6ImportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIN4wasm4NameEPNS1_6ImportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIN4wasm4NameEPNS1_6ImportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ImportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 20 | 0;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_6ExportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIN4wasm4NameEPNS1_6ExportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIN4wasm4NameEPNS1_6ExportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ExportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 20 | 0;
}

function __ZN10MixedArena5allocIN4wasm5UnaryEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 16 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 16;
 HEAP32[i7 >> 2] = 14;
 HEAP32[i7 + 4 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN10MixedArena5allocIN4wasm5StoreEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 32 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 32;
 HEAP32[i7 >> 2] = 12;
 HEAP32[i7 + 4 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN10MixedArena5allocIN4wasm4LoadEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 32 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 32;
 HEAP32[i7 >> 2] = 11;
 HEAP32[i7 + 4 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZN6cashew5Value4freeEv(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 switch (HEAP32[i5 >> 2] | 0) {
 case 2:
  {
   i1 = i5 + 8 | 0;
   i3 = HEAP32[i1 >> 2] | 0;
   i2 = HEAP32[i3 >> 2] | 0;
   i3 = i3 + 4 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   while (1) {
    if ((i4 | 0) == (i2 | 0)) break;
    i6 = i4 + -4 | 0;
    HEAP32[i3 >> 2] = i6;
    i4 = i6;
   }
   __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE13shrink_to_fitEv(HEAP32[i1 >> 2] | 0);
   break;
  }
 case 5:
  {
   i1 = HEAP32[i5 + 8 >> 2] | 0;
   if (i1 | 0) {
    __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringENS2_3RefEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_NS_8equal_toIS3_EELb1EEENS_9allocatorIS5_EEED2Ev(i1);
    __ZdlPv(i1);
   }
   break;
  }
 default:
  {}
 }
 HEAP32[i5 >> 2] = 3;
 HEAPF64[i5 + 8 >> 3] = 0.0;
 return;
}

function __ZN6cashew12ValueBuilder9makeBreakENS_7IStringE(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i6 + 8 | 0;
 i7 = i6 + 4 | 0;
 i2 = i6;
 i3 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i8 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41120) | 0;
 HEAP32[i7 >> 2] = i8;
 HEAP32[i1 >> 2] = HEAP32[i7 >> 2];
 i3 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 i7 = HEAP32[i4 >> 2] | 0;
 if ((i7 | 0) != 0 ? (HEAP8[i7 >> 0] | 0) != 0 : 0) {
  i8 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i4) | 0;
  HEAP32[i2 >> 2] = i8;
 } else i5 = 4;
 if ((i5 | 0) == 4) {
  i8 = __ZN6cashew12ValueBuilder8makeNullEv() | 0;
  HEAP32[i2 >> 2] = i8;
 };
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 i8 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 STACKTOP = i6;
 return i8 | 0;
}

function __ZN10MixedArena5allocIN4wasm3NopEEEPT_v(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i8;
 i5 = i7 + 4 | 0;
 i6 = HEAP32[i5 >> 2] | 0;
 i1 = i6;
 if (!((i6 | 0) != (HEAP32[i7 >> 2] | 0) ? (i3 = i7 + 12 | 0, i2 = HEAP32[i3 >> 2] | 0, (i2 + 8 | 0) >>> 0 <= 9999) : 0)) {
  i2 = __Znaj(1e4) | 0;
  HEAP32[i4 >> 2] = i2;
  if (i1 >>> 0 < (HEAP32[i7 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2;
   i1 = (HEAP32[i5 >> 2] | 0) + 4 | 0;
   HEAP32[i5 >> 2] = i1;
  } else {
   __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(i7, i4);
   i1 = HEAP32[i5 >> 2] | 0;
  }
  i3 = i7 + 12 | 0;
  HEAP32[i3 >> 2] = 0;
  i2 = 0;
 }
 i7 = (HEAP32[i1 + -4 >> 2] | 0) + i2 | 0;
 HEAP32[i3 >> 2] = i2 + 8;
 HEAP32[i7 >> 2] = 19;
 HEAP32[i7 + 4 >> 2] = 0;
 STACKTOP = i8;
 return i7 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 do if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i2 = 0;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i7 >> 2] = 4;
   i2 = 0;
   i1 = 0;
   break;
  }
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoull_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) {
   if ((i3 | 0) == 34) {
    HEAP32[i7 >> 2] = 4;
    i1 = -1;
    i2 = -1;
   }
  } else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
   i2 = 0;
  }
 } while (0);
 tempRet0 = i2;
 STACKTOP = i9;
 return i1 | 0;
}

function ___stpcpy(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = i2;
 L1 : do if (!((i3 ^ i1) & 3)) {
  if (i3 & 3) do {
   i3 = HEAP8[i2 >> 0] | 0;
   HEAP8[i1 >> 0] = i3;
   if (!(i3 << 24 >> 24)) break L1;
   i2 = i2 + 1 | 0;
   i1 = i1 + 1 | 0;
  } while ((i2 & 3 | 0) != 0);
  i3 = HEAP32[i2 >> 2] | 0;
  if (!((i3 & -2139062144 ^ -2139062144) & i3 + -16843009)) {
   i4 = i1;
   while (1) {
    i2 = i2 + 4 | 0;
    i1 = i4 + 4 | 0;
    HEAP32[i4 >> 2] = i3;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i3 & -2139062144 ^ -2139062144) & i3 + -16843009 | 0) break; else i4 = i1;
   }
  }
  i4 = 8;
 } else i4 = 8; while (0);
 if ((i4 | 0) == 8) {
  i4 = HEAP8[i2 >> 0] | 0;
  HEAP8[i1 >> 0] = i4;
  if (i4 << 24 >> 24) do {
   i2 = i2 + 1 | 0;
   i1 = i1 + 1 | 0;
   i4 = HEAP8[i2 >> 0] | 0;
   HEAP8[i1 >> 0] = i4;
  } while (i4 << 24 >> 24 != 0);
 }
 return i1 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i10, i9, i1, i4, i7, i8, i6) {
 i10 = i10 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i5 = 0;
 if ((-17 - i9 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i10);
 if (!(HEAP8[i10 >> 0] & 1)) i5 = i10 + 1 | 0; else i5 = HEAP32[i10 + 8 >> 2] | 0;
 if (i9 >>> 0 < 2147483623) {
  i2 = i1 + i9 | 0;
  i3 = i9 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 11 ? 11 : i2 + 16 & -16;
 } else i2 = -17;
 i3 = __Znwj(i2) | 0;
 if (i7 | 0) _memcpy(i3 | 0, i5 | 0, i7 | 0) | 0;
 i1 = i4 - i8 | 0;
 if ((i1 | 0) != (i7 | 0)) _memcpy(i3 + i7 + i6 | 0, i5 + i7 + i8 | 0, i1 - i7 | 0) | 0;
 if ((i9 | 0) != 10) __ZdlPv(i5);
 HEAP32[i10 + 8 >> 2] = i3;
 HEAP32[i10 >> 2] = i2 | 1;
 return;
}

function __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE6resizeEj(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i6 = i5 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 i2 = (i1 - i3 | 0) / 12 | 0;
 L1 : do if (i2 >>> 0 >= i4 >>> 0) {
  if (i2 >>> 0 > i4 >>> 0) {
   i2 = i3 + (i4 * 12 | 0) | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break L1;
    i5 = i1 + -12 | 0;
    HEAP32[i6 >> 2] = i5;
    __ZNSt3__113__vector_baseIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEED2Ev(i5);
    i1 = HEAP32[i6 >> 2] | 0;
   }
  }
 } else __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE8__appendEj(i5, i4 - i2 | 0); while (0);
 return;
}

function __ZNKSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = HEAP32[i1 >> 2] | 0;
 i1 = i5 * 33 ^ 5381;
 i4 = HEAP32[i2 + 4 >> 2] | 0;
 L1 : do if (i4) {
  i6 = i4 + -1 | 0;
  i7 = (i6 & i4 | 0) == 0;
  if (i7) i3 = i6 & i1; else i3 = (i1 >>> 0) % (i4 >>> 0) | 0;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i3 << 2) >> 2] | 0;
  if (i1) do {
   i1 = HEAP32[i1 >> 2] | 0;
   if (!i1) {
    i1 = 0;
    break L1;
   }
   i2 = HEAP32[i1 + 4 >> 2] | 0;
   if (i7) i2 = i2 & i6; else i2 = (i2 >>> 0) % (i4 >>> 0) | 0;
   if ((i2 | 0) != (i3 | 0)) {
    i1 = 0;
    break L1;
   }
  } while ((HEAP32[i1 + 8 >> 2] | 0) != (i5 | 0)); else i1 = 0;
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZNK4wasm7Literal2neERKS0_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0;
 switch (HEAP32[i3 >> 2] | 0) {
 case 1:
  {
   i3 = (HEAP32[i3 + 8 >> 2] | 0) != (HEAP32[i2 + 8 >> 2] | 0) & 1;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i3;
   break;
  }
 case 2:
  {
   i4 = i3 + 8 | 0;
   i3 = i2 + 8 | 0;
   i3 = ((HEAP32[i4 >> 2] | 0) != (HEAP32[i3 >> 2] | 0) ? 1 : (HEAP32[i4 + 4 >> 2] | 0) != (HEAP32[i3 + 4 >> 2] | 0)) & 1;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i3;
   break;
  }
 case 3:
  {
   i4 = +__ZNK4wasm7Literal6getf32Ev(i3) != +__ZNK4wasm7Literal6getf32Ev(i2) & 1;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i4;
   break;
  }
 case 4:
  {
   i4 = +__ZNK4wasm7Literal6getf64Ev(i3) != +__ZNK4wasm7Literal6getf64Ev(i2) & 1;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i4;
   break;
  }
 default:
  {}
 }
 return;
}

function __ZNK4wasm7Literal2eqERKS0_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0;
 switch (HEAP32[i3 >> 2] | 0) {
 case 1:
  {
   i3 = (HEAP32[i3 + 8 >> 2] | 0) == (HEAP32[i2 + 8 >> 2] | 0) & 1;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i3;
   break;
  }
 case 2:
  {
   i4 = i3 + 8 | 0;
   i3 = i2 + 8 | 0;
   i3 = ((HEAP32[i4 >> 2] | 0) == (HEAP32[i3 >> 2] | 0) ? (HEAP32[i4 + 4 >> 2] | 0) == (HEAP32[i3 + 4 >> 2] | 0) : 0) & 1;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i3;
   break;
  }
 case 3:
  {
   i4 = +__ZNK4wasm7Literal6getf32Ev(i3) == +__ZNK4wasm7Literal6getf32Ev(i2) & 1;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i4;
   break;
  }
 case 4:
  {
   i4 = +__ZNK4wasm7Literal6getf64Ev(i3) == +__ZNK4wasm7Literal6getf64Ev(i2) & 1;
   HEAP32[i1 >> 2] = 1;
   HEAP32[i1 + 8 >> 2] = i4;
   break;
  }
 default:
  {}
 }
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i5, i4, i6) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0;
 L1 : do if ((i1 | 0) != (HEAP32[i5 + 8 >> 2] | 0)) {
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  i2 = i1 + 16 + (i3 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1 + 16 | 0, i5, i4, i6);
  if ((i3 | 0) > 1) {
   i3 = i5 + 54 | 0;
   i1 = i1 + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i5, i4, i6);
    if (HEAP8[i3 >> 0] | 0) break L1;
    i1 = i1 + 8 | 0;
   } while (i1 >>> 0 < i2 >>> 0);
  }
 } else __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i5, i4, i6); while (0);
 return;
}

function __ZN4wasm22SExpressionWasmBuilder8getLabelERNS_7ElementE(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i6;
 do if (!(HEAP8[i1 + 20 >> 0] | 0)) {
  i3 = _atol(__ZN4wasm7Element5c_strEv(i1) | 0) | 0;
  i1 = HEAP32[i5 + 92 >> 2] | 0;
  i2 = (HEAP32[i5 + 96 >> 2] | 0) - i1 >> 2;
  if (i3 >>> 0 < i2 >>> 0) {
   i1 = HEAP32[i1 + (i2 + ~i3 << 2) >> 2] | 0;
   break;
  } else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i4, 17529, 7);
   i1 = __ZN4wasm22SExpressionWasmBuilder15getPrefixedNameENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i5, i4) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
   break;
  }
 } else i1 = __ZN4wasm7Element3strEv(i1) | 0; while (0);
 STACKTOP = i6;
 return i1 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder6makeIfERNS_7ElementE(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0, i4 = 0;
 i1 = __ZN10MixedArena5allocIN4wasm2IfEEEPT_v(HEAP32[i3 + 4 >> 2] | 0) | 0;
 i4 = __ZN4wasm7Element4listEv(i2) | 0;
 i4 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i3, HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i1 + 8 >> 2] = i4;
 i4 = __ZN4wasm7Element4listEv(i2) | 0;
 i4 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i3, HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] | 0) | 0;
 HEAP32[i1 + 12 >> 2] = i4;
 if ((__ZN4wasm7Element4sizeEv(i2) | 0) == 4) {
  i4 = __ZN4wasm7Element4listEv(i2) | 0;
  i4 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i3, HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] | 0) | 0;
  HEAP32[i1 + 16 >> 2] = i4;
  __ZN4wasm2If8finalizeEv(i1);
 }
 return i1 | 0;
}

function __ZN4wasm16PrintSExpression10visitTableEPNS_5TableE(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 4 | 0;
 i6 = i7;
 i2 = i1 + 4 | 0;
 __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i2 >> 2] | 0, 25770, 0) | 0;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i8 = HEAP32[i1 >> 2] | 0;
  i4 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i2 >> 2] | 0, 32) | 0;
  HEAP32[i6 >> 2] = i8;
  HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
  __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i4, i5) | 0;
  i1 = i1 + 4 | 0;
 }
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i2 >> 2] | 0, 41) | 0;
 STACKTOP = i7;
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i6, i4, i3, i5, i7) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0;
 do if ((i6 | 0) == (HEAP32[i4 + 8 >> 2] | 0)) {
  if ((HEAP32[i4 + 4 >> 2] | 0) == (i3 | 0) ? (i2 = i4 + 28 | 0, (HEAP32[i2 >> 2] | 0) != 1) : 0) HEAP32[i2 >> 2] = i5;
 } else if ((i6 | 0) == (HEAP32[i4 >> 2] | 0)) {
  if ((HEAP32[i4 + 16 >> 2] | 0) != (i3 | 0) ? (i1 = i4 + 20 | 0, (HEAP32[i1 >> 2] | 0) != (i3 | 0)) : 0) {
   HEAP32[i4 + 32 >> 2] = i5;
   HEAP32[i1 >> 2] = i3;
   i7 = i4 + 40 | 0;
   HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
   if ((HEAP32[i4 + 36 >> 2] | 0) == 1 ? (HEAP32[i4 + 24 >> 2] | 0) == 2 : 0) HEAP8[i4 + 54 >> 0] = 1;
   HEAP32[i4 + 44 >> 2] = 4;
   break;
  }
  if ((i5 | 0) == 1) HEAP32[i4 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN4wasm14ModuleInstanceC2ERNS_6ModuleEPNS0_17ExternalInterfaceE(i6, i2, i1) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i3 = i7 + 32 | 0;
 i5 = i7 + 20 | 0;
 i4 = i7 + 16 | 0;
 HEAP32[i6 >> 2] = i2;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = i1;
 HEAP32[i6 + 8 >> 2] = HEAP32[i2 + 108 >> 2];
 FUNCTION_TABLE_vii[HEAP32[HEAP32[i1 >> 2] >> 2] & 127](i1, i2);
 i1 = HEAP32[i2 + 128 >> 2] | 0;
 if (i1 | 0) {
  HEAP32[i5 >> 2] = 0;
  HEAP32[i5 + 4 >> 2] = 0;
  HEAP32[i5 + 8 >> 2] = 0;
  HEAP32[i4 >> 2] = i1;
  HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
  __ZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEE(i7, i6, i3, i5);
  __ZNSt3__113__vector_baseIN4wasm7LiteralENS_9allocatorIS2_EEED2Ev(i5);
 }
 STACKTOP = i7;
 return;
}

function __ZN4wasm22SExpressionWasmBuilder17parseCallOperandsINS_12CallIndirectEEEvRNS_7ElementEjPT_(i9, i8, i2, i1) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i10;
 i6 = i1 + 12 | 0;
 i7 = i1 + 16 | 0;
 i4 = i1 + 8 | 0;
 while (1) {
  if (i2 >>> 0 >= (__ZN4wasm7Element4sizeEv(i8) | 0) >>> 0) break;
  i1 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i9, __ZN4wasm7ElementixEj(i8, i2) | 0) | 0;
  HEAP32[i5 >> 2] = i1;
  i3 = HEAP32[i6 >> 2] | 0;
  if (i3 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
   HEAP32[i3 >> 2] = i1;
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
  } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i10;
 return;
}

function __ZN4wasm14PostEmscripten13visitMemoryOpINS_5StoreEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = i2 + 12 | 0;
 do if (((HEAP32[i5 >> 2] | 0) == 0 ? (i6 = i2 + 20 | 0, i7 = HEAP32[i6 >> 2] | 0, !((i7 | 0) == 0 | (HEAP32[i7 >> 2] | 0) != 15)) : 0) ? (HEAP32[i7 + 8 >> 2] | 0) == 0 : 0) {
  if ((HEAP32[i7 + 4 >> 2] | 0) != 1) ___assert_fail(29023, 29040, 49, 29070);
  i3 = i7 + 16 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  i4 = i1;
  if ((i1 | 0) == 0 | (HEAP32[i1 >> 2] | 0) != 13) {
   i2 = i7 + 12 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 | 0) == 0 | (HEAP32[i1 >> 2] | 0) != 13) break;
   HEAP32[i2 >> 2] = i4;
   HEAP32[i3 >> 2] = i1;
  }
  i1 = __ZNK4wasm7Literal6geti32Ev(i1 + 8 | 0) | 0;
  if (i1 >>> 0 < 1024) {
   HEAP32[i6 >> 2] = HEAP32[i7 + 12 >> 2];
   HEAP32[i5 >> 2] = i1;
  }
 } while (0);
 return;
}

function __ZN6cashew12ValueBuilder10makePrefixENS_7IStringENS_3RefE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 12 | 0;
 i8 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i5 = i3;
 i6 = __ZN6cashew12ValueBuilder12makeRawArrayEi(3) | 0;
 i9 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41148) | 0;
 HEAP32[i8 >> 2] = i9;
 HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
 i6 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 i1 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i1) | 0;
 HEAP32[i7 >> 2] = i1;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i1, i4) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZN4wasm14PostEmscripten13visitMemoryOpINS_4LoadEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = i2 + 16 | 0;
 do if (((HEAP32[i5 >> 2] | 0) == 0 ? (i6 = i2 + 24 | 0, i7 = HEAP32[i6 >> 2] | 0, !((i7 | 0) == 0 | (HEAP32[i7 >> 2] | 0) != 15)) : 0) ? (HEAP32[i7 + 8 >> 2] | 0) == 0 : 0) {
  if ((HEAP32[i7 + 4 >> 2] | 0) != 1) ___assert_fail(29023, 29040, 49, 29070);
  i3 = i7 + 16 | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  i4 = i1;
  if ((i1 | 0) == 0 | (HEAP32[i1 >> 2] | 0) != 13) {
   i2 = i7 + 12 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 | 0) == 0 | (HEAP32[i1 >> 2] | 0) != 13) break;
   HEAP32[i2 >> 2] = i4;
   HEAP32[i3 >> 2] = i1;
  }
  i1 = __ZNK4wasm7Literal6geti32Ev(i1 + 8 | 0) | 0;
  if (i1 >>> 0 < 1024) {
   HEAP32[i6 >> 2] = HEAP32[i7 + 12 >> 2];
   HEAP32[i5 >> 2] = i1;
  }
 } while (0);
 return;
}

function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji(i1, i6, i7, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i9;
 if ((i1 | 0) == (i6 | 0)) {
  HEAP32[i7 >> 2] = 4;
  i2 = 0;
  i1 = 0;
 } else {
  i4 = ___errno_location() | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  HEAP32[i4 >> 2] = 0;
  i1 = _strtoll_l(i1, i8, i2, __ZNSt3__16__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i4 >> 2] | 0;
  if (!i3) HEAP32[i4 >> 2] = i5;
  if ((HEAP32[i8 >> 2] | 0) == (i6 | 0)) {
   if ((i3 | 0) == 34) {
    HEAP32[i7 >> 2] = 4;
    i2 = (i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 0;
    i1 = i2 ? -1 : 0;
    i2 = i2 ? 2147483647 : -2147483648;
   }
  } else {
   HEAP32[i7 >> 2] = 4;
   i1 = 0;
   i2 = 0;
  }
 }
 tempRet0 = i2;
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder17parseCallOperandsINS_10CallImportEEEvRNS_7ElementEjPT_(i9, i8, i2, i1) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i10;
 i6 = i1 + 12 | 0;
 i7 = i1 + 16 | 0;
 i4 = i1 + 8 | 0;
 while (1) {
  if (i2 >>> 0 >= (__ZN4wasm7Element4sizeEv(i8) | 0) >>> 0) break;
  i1 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i9, __ZN4wasm7ElementixEj(i8, i2) | 0) | 0;
  HEAP32[i5 >> 2] = i1;
  i3 = HEAP32[i6 >> 2] | 0;
  if (i3 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
   HEAP32[i3 >> 2] = i1;
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
  } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i10;
 return;
}

function __ZNSt3__16vectorIN6cashew13OperatorClassENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i6 >> 2] | 0;
 i3 = i6 + 4 | 0;
 i4 = i5 + 4 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  i7 = i1 + -28 | 0;
  __ZN6cashew13OperatorClassC2EOS0_((HEAP32[i4 >> 2] | 0) + -28 | 0, i7);
  HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + -28;
  i1 = i7;
 }
 i7 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i7;
 i7 = i5 + 8 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i2;
 i3 = i6 + 8 | 0;
 i7 = i5 + 12 | 0;
 i6 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i6;
 HEAP32[i5 >> 2] = HEAP32[i4 >> 2];
 return;
}

function __ZN6cashew12ValueBuilder9makeLabelENS_7IStringENS_3RefE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 12 | 0;
 i8 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i5 = i3;
 i6 = __ZN6cashew12ValueBuilder12makeRawArrayEi(3) | 0;
 i9 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41116) | 0;
 HEAP32[i8 >> 2] = i9;
 HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
 i6 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 i2 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i2) | 0;
 HEAP32[i7 >> 2] = i2;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i2, i4) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZN6cashew12ValueBuilder7makeDotENS_3RefENS_7IStringE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 12 | 0;
 i8 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i5 = i3;
 i6 = __ZN6cashew12ValueBuilder12makeRawArrayEi(3) | 0;
 i9 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41340) | 0;
 HEAP32[i8 >> 2] = i9;
 HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
 i6 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 HEAP32[i7 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 i1 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i1) | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i2, i4) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i2 = (i1 & 1) != 0;
 if (i2) {
  i3 = (HEAP32[i5 >> 2] & -2) + -1 | 0;
  i4 = HEAP32[i5 + 4 >> 2] | 0;
 } else {
  i3 = 10;
  i4 = (i1 & 255) >>> 1;
 }
 if ((i4 | 0) == (i3 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj(i5, i3, 1, i3, i3, 0);
  if (!(HEAP8[i5 >> 0] & 1)) i2 = 7; else i2 = 8;
 } else if (i2) i2 = 8; else i2 = 7;
 if ((i2 | 0) == 7) {
  HEAP8[i5 >> 0] = (i4 << 1) + 2;
  i1 = i5 + 1 | 0;
 } else if ((i2 | 0) == 8) {
  i1 = HEAP32[i5 + 8 >> 2] | 0;
  HEAP32[i5 + 4 >> 2] = i4 + 1;
 }
 i5 = i1 + i4 | 0;
 HEAP8[i5 >> 0] = i6;
 HEAP8[i5 + 1 >> 0] = 0;
 return;
}

function __ZNSt3__111__stdoutbufIwE4syncEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i10 + 8 | 0;
 i7 = i10;
 i3 = i1 + 36 | 0;
 i4 = i1 + 40 | 0;
 i5 = i8 + 8 | 0;
 i6 = i8;
 i2 = i1 + 32 | 0;
 L1 : while (1) {
  i1 = HEAP32[i3 >> 2] | 0;
  i1 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 31](i1, HEAP32[i4 >> 2] | 0, i8, i5, i7) | 0;
  i11 = (HEAP32[i7 >> 2] | 0) - i6 | 0;
  if ((_fwrite(i8, 1, i11, HEAP32[i2 >> 2] | 0) | 0) != (i11 | 0)) {
   i1 = -1;
   break;
  }
  switch (i1 | 0) {
  case 1:
   break;
  case 2:
   {
    i1 = -1;
    break L1;
   }
  default:
   {
    i9 = 4;
    break L1;
   }
  }
 }
 if ((i9 | 0) == 4) i1 = ((_fflush(HEAP32[i2 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__111__stdoutbufIcE4syncEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i10 + 8 | 0;
 i7 = i10;
 i3 = i1 + 36 | 0;
 i4 = i1 + 40 | 0;
 i5 = i8 + 8 | 0;
 i6 = i8;
 i2 = i1 + 32 | 0;
 L1 : while (1) {
  i1 = HEAP32[i3 >> 2] | 0;
  i1 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 31](i1, HEAP32[i4 >> 2] | 0, i8, i5, i7) | 0;
  i11 = (HEAP32[i7 >> 2] | 0) - i6 | 0;
  if ((_fwrite(i8, 1, i11, HEAP32[i2 >> 2] | 0) | 0) != (i11 | 0)) {
   i1 = -1;
   break;
  }
  switch (i1 | 0) {
  case 1:
   break;
  case 2:
   {
    i1 = -1;
    break L1;
   }
  default:
   {
    i9 = 4;
    break L1;
   }
  }
 }
 if ((i9 | 0) == 4) i1 = ((_fflush(HEAP32[i2 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__13mapIN6cashew7IStringEiNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_iEEEEEixERS7_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIN6cashew7IStringEiNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_iEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS7_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIN6cashew7IStringEiNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_iEEEEE25__construct_node_with_keyERS7_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSF_SF_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 20 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder17parseCallOperandsINS_4HostEEEvRNS_7ElementEjPT_(i9, i8, i2, i1) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i10;
 i6 = i1 + 20 | 0;
 i7 = i1 + 24 | 0;
 i4 = i1 + 16 | 0;
 while (1) {
  if (i2 >>> 0 >= (__ZN4wasm7Element4sizeEv(i8) | 0) >>> 0) break;
  i1 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i9, __ZN4wasm7ElementixEj(i8, i2) | 0) | 0;
  HEAP32[i5 >> 2] = i1;
  i3 = HEAP32[i6 >> 2] | 0;
  if (i3 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
   HEAP32[i3 >> 2] = i1;
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
  } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i10;
 return;
}

function __ZN4wasm22SExpressionWasmBuilder17parseCallOperandsINS_4CallEEEvRNS_7ElementEjPT_(i9, i8, i2, i1) {
 i9 = i9 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i10;
 i6 = i1 + 12 | 0;
 i7 = i1 + 16 | 0;
 i4 = i1 + 8 | 0;
 while (1) {
  if (i2 >>> 0 >= (__ZN4wasm7Element4sizeEv(i8) | 0) >>> 0) break;
  i1 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i9, __ZN4wasm7ElementixEj(i8, i2) | 0) | 0;
  HEAP32[i5 >> 2] = i1;
  i3 = HEAP32[i6 >> 2] | 0;
  if (i3 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
   HEAP32[i3 >> 2] = i1;
   HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + 4;
  } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i4, i5);
  i2 = i2 + 1 | 0;
 }
 STACKTOP = i10;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc(i6, i5, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 if (i5 | 0) {
  i1 = HEAP8[i6 >> 0] | 0;
  if (!(i1 & 1)) i2 = 10; else {
   i1 = HEAP32[i6 >> 2] | 0;
   i2 = (i1 & -2) + -1 | 0;
   i1 = i1 & 255;
  }
  if (!(i1 & 1)) i3 = (i1 & 255) >>> 1; else i3 = HEAP32[i6 + 4 >> 2] | 0;
  if ((i2 - i3 | 0) >>> 0 < i5 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i6, i2, i5 - i2 + i3 | 0, i3, i3, 0, 0);
   i1 = HEAP8[i6 >> 0] | 0;
  }
  if (!(i1 & 1)) i2 = i6 + 1 | 0; else i2 = HEAP32[i6 + 8 >> 2] | 0;
  _memset(i2 + i3 | 0, i4 | 0, i5 | 0) | 0;
  i1 = i3 + i5 | 0;
  if (!(HEAP8[i6 >> 0] & 1)) HEAP8[i6 >> 0] = i1 << 1; else HEAP32[i6 + 4 >> 2] = i1;
  HEAP8[i2 + i1 >> 0] = 0;
 }
 return i6 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj(i6, i5, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) i3 = 10; else {
  i1 = HEAP32[i6 >> 2] | 0;
  i3 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 i2 = (i1 & 1) == 0;
 do if (i3 >>> 0 >= i4 >>> 0) {
  if (i2) i1 = i6 + 1 | 0; else i1 = HEAP32[i6 + 8 >> 2] | 0;
  _memmove(i1 | 0, i5 | 0, i4 | 0) | 0;
  HEAP8[i1 + i4 >> 0] = 0;
  if (!(HEAP8[i6 >> 0] & 1)) {
   HEAP8[i6 >> 0] = i4 << 1;
   break;
  } else {
   HEAP32[i6 + 4 >> 2] = i4;
   break;
  }
 } else {
  if (i2) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i6 + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(i6, i3, i4 - i3 | 0, i1, 0, i1, i4, i5);
 } while (0);
 return i6 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(i6, i5, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) i2 = 10; else {
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 if (!(i1 & 1)) i3 = (i1 & 255) >>> 1; else i3 = HEAP32[i6 + 4 >> 2] | 0;
 if ((i2 - i3 | 0) >>> 0 >= i4 >>> 0) {
  if (i4 | 0) {
   if (!(i1 & 1)) i2 = i6 + 1 | 0; else i2 = HEAP32[i6 + 8 >> 2] | 0;
   _memcpy(i2 + i3 | 0, i5 | 0, i4 | 0) | 0;
   i1 = i3 + i4 | 0;
   if (!(HEAP8[i6 >> 0] & 1)) HEAP8[i6 >> 0] = i1 << 1; else HEAP32[i6 + 4 >> 2] = i1;
   HEAP8[i2 + i1 >> 0] = 0;
  }
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(i6, i2, i4 - i2 + i3 | 0, i3, i3, 0, i4, i5);
 return i6 | 0;
}

function __ZZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionEENKUlNS_8NameTypeES3_E_clES3_S3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i1 = (HEAP32[i1 >> 2] | 0) + 12 | 0;
 i5 = __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEEixERS7_(i1, i2) | 0;
 i5 = HEAP32[i5 >> 2] | 0;
 i4 = __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEEixERS7_(i1, i3) | 0;
 if ((i5 | 0) == (HEAP32[i4 >> 2] | 0)) i1 = (_strcmp(HEAP32[i2 >> 2] | 0, HEAP32[i3 >> 2] | 0) | 0) > 0; else {
  i5 = __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEEixERS7_(i1, i2) | 0;
  i5 = HEAP32[i5 >> 2] | 0;
  i1 = __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEEixERS7_(i1, i3) | 0;
  i1 = i5 >>> 0 > (HEAP32[i1 >> 2] | 0) >>> 0;
 }
 return i1 | 0;
}

function _wcrtomb(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 do if (i1) {
  if (i3 >>> 0 < 128) {
   HEAP8[i1 >> 0] = i3;
   i1 = 1;
   break;
  }
  if (i3 >>> 0 < 2048) {
   HEAP8[i1 >> 0] = i3 >>> 6 | 192;
   HEAP8[i1 + 1 >> 0] = i3 & 63 | 128;
   i1 = 2;
   break;
  }
  if (i3 >>> 0 < 55296 | (i3 & -8192 | 0) == 57344) {
   HEAP8[i1 >> 0] = i3 >>> 12 | 224;
   HEAP8[i1 + 1 >> 0] = i3 >>> 6 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i3 & 63 | 128;
   i1 = 3;
   break;
  }
  if ((i3 + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[i1 >> 0] = i3 >>> 18 | 240;
   HEAP8[i1 + 1 >> 0] = i3 >>> 12 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i3 >>> 6 & 63 | 128;
   HEAP8[i1 + 3 >> 0] = i3 & 63 | 128;
   i1 = 4;
   break;
  } else {
   i1 = ___errno_location() | 0;
   HEAP32[i1 >> 2] = 84;
   i1 = -1;
   break;
  }
 } else i1 = 1; while (0);
 return i1 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(i6, i5, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) i3 = 1; else {
  i1 = HEAP32[i6 >> 2] | 0;
  i3 = (i1 & -2) + -1 | 0;
  i1 = i1 & 255;
 }
 i2 = (i1 & 1) == 0;
 do if (i3 >>> 0 >= i4 >>> 0) {
  if (i2) i1 = i6 + 4 | 0; else i1 = HEAP32[i6 + 8 >> 2] | 0;
  _wmemmove(i1, i5, i4) | 0;
  HEAP32[i1 + (i4 << 2) >> 2] = 0;
  if (!(HEAP8[i6 >> 0] & 1)) {
   HEAP8[i6 >> 0] = i4 << 1;
   break;
  } else {
   HEAP32[i6 + 4 >> 2] = i4;
   break;
  }
 } else {
  if (i2) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i6 + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw(i6, i3, i4 - i3 | 0, i1, 0, i1, i4, i5);
 } while (0);
 return i6 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj(i8, i6, i1, i7, i5, i4) {
 i8 = i8 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 if ((-17 - i6 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i8);
 if (!(HEAP8[i8 >> 0] & 1)) i3 = i8 + 1 | 0; else i3 = HEAP32[i8 + 8 >> 2] | 0;
 if (i6 >>> 0 < 2147483623) {
  i1 = i1 + i6 | 0;
  i2 = i6 << 1;
  i1 = i1 >>> 0 < i2 >>> 0 ? i2 : i1;
  i1 = i1 >>> 0 < 11 ? 11 : i1 + 16 & -16;
 } else i1 = -17;
 i2 = _malloc(i1) | 0;
 if (i5 | 0) _memcpy(i2 | 0, i3 | 0, i5 | 0) | 0;
 if ((i7 | 0) != (i5 | 0)) _memcpy(i2 + i5 + i4 | 0, i3 + i5 | 0, i7 - i5 | 0) | 0;
 if ((i6 | 0) != 10) _free(i3);
 HEAP32[i8 + 8 >> 2] = i2;
 HEAP32[i8 >> 2] = i1 | 1;
 return;
}

function __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE15__insert_uniqueIS2_EENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEEOT_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4;
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISE_EEEEEEDpOT_(i5, i3, i1);
 i1 = HEAP32[i5 >> 2] | 0;
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE20__node_insert_uniqueEPNS_11__hash_nodeIS2_PvEE(i2, i3, i1);
 i3 = (HEAP8[i2 + 4 >> 0] | 0) != 0;
 HEAP32[i5 >> 2] = 0;
 if (!(i3 | (i1 | 0) == 0)) __ZdlPv(i1);
 STACKTOP = i4;
 return;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv(i6, i1, i4) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i5 = i7;
 if ((i6 | 0) != (i1 | 0)) if ((i1 | 0) != 0 ? (i3 = ___dynamic_cast(i1, 2800, 2768, 0) | 0, (i3 | 0) != 0) : 0) {
  i1 = i5;
  i2 = i1 + 56 | 0;
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = i1 + 4 | 0;
  } while ((i1 | 0) < (i2 | 0));
  HEAP32[i5 >> 2] = i3;
  HEAP32[i5 + 8 >> 2] = i6;
  HEAP32[i5 + 12 >> 2] = -1;
  HEAP32[i5 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 15](i3, i5, HEAP32[i4 >> 2] | 0, 1);
  if ((HEAP32[i5 + 24 >> 2] | 0) == 1) {
   HEAP32[i4 >> 2] = HEAP32[i5 + 16 >> 2];
   i1 = 1;
  } else i1 = 0;
 } else i1 = 0; else i1 = 1;
 STACKTOP = i7;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 HEAP8[i2 >> 0] = 16;
 i3 = i1;
 i5 = i3;
 i5 = HEAPU8[i5 >> 0] | HEAPU8[i5 + 1 >> 0] << 8 | HEAPU8[i5 + 2 >> 0] << 16 | HEAPU8[i5 + 3 >> 0] << 24;
 i3 = i3 + 4 | 0;
 i3 = HEAPU8[i3 >> 0] | HEAPU8[i3 + 1 >> 0] << 8 | HEAPU8[i3 + 2 >> 0] << 16 | HEAPU8[i3 + 3 >> 0] << 24;
 i1 = i2 + 1 | 0;
 i4 = i1;
 HEAP8[i4 >> 0] = i5;
 HEAP8[i4 + 1 >> 0] = i5 >> 8;
 HEAP8[i4 + 2 >> 0] = i5 >> 16;
 HEAP8[i4 + 3 >> 0] = i5 >> 24;
 i1 = i1 + 4 | 0;
 HEAP8[i1 >> 0] = i3;
 HEAP8[i1 + 1 >> 0] = i3 >> 8;
 HEAP8[i1 + 2 >> 0] = i3 >> 16;
 HEAP8[i1 + 3 >> 0] = i3 >> 24;
 HEAP8[i2 + 9 >> 0] = 0;
 i1 = i2 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi(i6, i1) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = i6 + 44 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 i4 = HEAP32[i6 + 24 >> 2] | 0;
 if (i2 >>> 0 < i4 >>> 0) {
  HEAP32[i3 >> 2] = i4;
  i2 = i4;
 }
 i5 = i6 + 12 | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 do if ((HEAP32[i6 + 8 >> 2] | 0) >>> 0 < i3 >>> 0) {
  if ((i1 | 0) == -1) {
   HEAP32[i5 >> 2] = i3 + -1;
   HEAP32[i6 + 16 >> 2] = i2;
   i1 = 0;
   break;
  }
  if (!(HEAP32[i6 + 48 >> 2] & 16)) {
   i4 = i1 & 255;
   i3 = i3 + -1 | 0;
   if (i4 << 24 >> 24 != (HEAP8[i3 >> 0] | 0)) {
    i1 = -1;
    break;
   }
  } else {
   i4 = i1 & 255;
   i3 = i3 + -1 | 0;
  }
  HEAP32[i5 >> 2] = i3;
  HEAP32[i6 + 16 >> 2] = i2;
  HEAP8[i3 >> 0] = i4;
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEEixERS7_(i6, i4) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7 + 12 | 0;
 i3 = i7;
 i2 = __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS7_(i6, i5, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEE25__construct_node_with_keyERS7_(i3, i6, i4);
  i1 = HEAP32[i3 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSF_SF_(i6, HEAP32[i5 >> 2] | 0, i2, i1);
 }
 STACKTOP = i7;
 return i1 + 20 | 0;
}

function __ZNSt3__16vectorIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS8_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 3) << 3) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 43120) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i6, i5 + 16 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 43120) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i6, i5 + 24 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 43088) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i6, i5 + 16 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 43088) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i6, i5 + 24 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN6cashew12ValueBuilder15setBlockContentENS_3RefES1_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 do if (!(__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i2, 0) | 0, 41036) | 0)) if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i2, 0) | 0, 41040) | 0) {
  i3 = __ZN6cashew3RefixEj(i2, 3) | 0;
  i3 = HEAP32[i3 >> 2] | 0;
  i2 = __ZN6cashew3RefixEj(i1, 1) | 0;
  __ZN6cashew5Value8setArrayERNSt3__16vectorINS_3RefENS1_9allocatorIS3_EEEE(i3, __ZN6cashew5Value8getArrayEv(HEAP32[i2 >> 2] | 0) | 0) | 0;
  break;
 } else _abort(); else {
  i2 = __ZN6cashew3RefixEj(i2, 1) | 0;
  i2 = HEAP32[i2 >> 2] | 0;
  i3 = __ZN6cashew3RefixEj(i1, 1) | 0;
  __ZN6cashew5Value8setArrayERNSt3__16vectorINS_3RefENS1_9allocatorIS3_EEEE(i2, __ZN6cashew5Value8getArrayEv(HEAP32[i3 >> 2] | 0) | 0) | 0;
 } while (0);
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i2, i4, i3, i5, i6) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7;
 HEAP32[i6 >> 2] = i3;
 i3 = _uselocale(HEAP32[i2 + 8 >> 2] | 0) | 0;
 i2 = _wcrtomb(i1, 0, i4) | 0;
 if (i3 | 0) _uselocale(i3) | 0;
 L4 : do switch (i2 | 0) {
 case 0:
 case -1:
  {
   i1 = 2;
   break;
  }
 default:
  {
   i2 = i2 + -1 | 0;
   if (i2 >>> 0 > (i5 - (HEAP32[i6 >> 2] | 0) | 0) >>> 0) i1 = 1; else while (1) {
    if (!i2) {
     i1 = 0;
     break L4;
    }
    i4 = HEAP8[i1 >> 0] | 0;
    i5 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i5 + 1;
    HEAP8[i5 >> 0] = i4;
    i2 = i2 + -1 | 0;
    i1 = i1 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 43120) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i6, i5 + 20 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i9 = i7;
 i10 = __ZNKSt3__18ios_base6getlocEv(i4) | 0;
 HEAP32[i11 >> 2] = i10;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i11, 43088) | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(i10) | 0;
 HEAP32[i9 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i6, i5 + 20 | 0, i1, i8, i3, i4);
 STACKTOP = i7;
 return HEAP32[i1 >> 2] | 0;
}

function __ZN6cashew12ValueBuilder10makeSwitchENS_3RefE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i2 + 12 | 0;
 i7 = i2 + 8 | 0;
 i6 = i2 + 4 | 0;
 i4 = i2;
 i5 = __ZN6cashew12ValueBuilder12makeRawArrayEi(3) | 0;
 i8 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41128) | 0;
 HEAP32[i7 >> 2] = i8;
 HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
 i5 = __ZN6cashew5Value9push_backENS_3RefE(i5, i3) | 0;
 HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i5, i3) | 0;
 i5 = __ZN6cashew12ValueBuilder12makeRawArrayEi(0) | 0;
 HEAP32[i4 >> 2] = i5;
 HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i1, i3) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i5, i6, i1, i3, i4, i2) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i5 = i5 + 8 | 0;
 i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] & 127](i5) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i1, i8, i5, i5 + 288 | 0, i2, i4, 0) | 0) - i5 | 0;
 if ((i1 | 0) < 288) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = i7;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i5, i6, i1, i3, i4, i2) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i5 = i5 + 8 | 0;
 i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] & 127](i5) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i1, i8, i5, i5 + 288 | 0, i2, i4, 0) | 0) - i5 | 0;
 if ((i1 | 0) < 288) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = i7;
 return;
}

function __ZN6cashew12ValueBuilder8makeCallENS_3RefE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i2 + 12 | 0;
 i7 = i2 + 8 | 0;
 i6 = i2 + 4 | 0;
 i4 = i2;
 i5 = __ZN6cashew12ValueBuilder12makeRawArrayEi(3) | 0;
 i8 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41108) | 0;
 HEAP32[i7 >> 2] = i8;
 HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
 i5 = __ZN6cashew5Value9push_backENS_3RefE(i5, i3) | 0;
 HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i5, i3) | 0;
 i5 = __ZN6cashew12ValueBuilder12makeRawArrayEi(0) | 0;
 HEAP32[i4 >> 2] = i5;
 HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i1, i3) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZN6cashew10IStringSetC2EPKc(i6, i1) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i7 + 8 | 0;
 i5 = i7;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 HEAP32[i6 + 12 >> 2] = 0;
 HEAPF32[i6 + 16 >> 2] = 1.0;
 i3 = _strlen(i1) | 0;
 i3 = __Znaj((i3 | 0) < -1 ? -1 : i3 + 1 | 0) | 0;
 _strcpy(i3, i1) | 0;
 while (1) {
  i1 = _strchr(i3, 32) | 0;
  i2 = (i1 | 0) != 0;
  if (i2) HEAP8[i1 >> 0] = 0;
  __ZN6cashew7IStringC2EPKcb(i5, i3, 1);
  __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE15__insert_uniqueIS2_EENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEEOT_(i4, i6, i5);
  if (i2) i3 = i1 + 1 | 0; else break;
 }
 STACKTOP = i7;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i2 = (i1 & 1) != 0;
 if (i2) {
  i3 = (HEAP32[i5 >> 2] & -2) + -1 | 0;
  i4 = HEAP32[i5 + 4 >> 2] | 0;
 } else {
  i3 = 1;
  i4 = (i1 & 255) >>> 1;
 }
 if ((i4 | 0) == (i3 | 0)) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(i5, i3, 1, i3, i3, 0, 0);
  if (!(HEAP8[i5 >> 0] & 1)) i2 = 7; else i2 = 8;
 } else if (i2) i2 = 8; else i2 = 7;
 if ((i2 | 0) == 7) {
  HEAP8[i5 >> 0] = (i4 << 1) + 2;
  i1 = i5 + 4 | 0;
 } else if ((i2 | 0) == 8) {
  i1 = HEAP32[i5 + 8 >> 2] | 0;
  HEAP32[i5 + 4 >> 2] = i4 + 1;
 }
 i5 = i1 + (i4 << 2) | 0;
 HEAP32[i5 >> 2] = i6;
 HEAP32[i5 + 4 >> 2] = 0;
 return;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixEOS2_(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i6;
 i2 = __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i5, i4, i3) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  i1 = __Znwj(24) | 0;
  HEAP32[i1 + 16 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 20 >> 2] = 0;
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i5, HEAP32[i4 >> 2] | 0, i2, i1);
 }
 STACKTOP = i6;
 return i1 + 20 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i4, i1, i6) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i5 = i1;
 i2 = i6 - i5 | 0;
 i3 = i2 >> 2;
 if (i3 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i4);
 if (i3 >>> 0 < 2) {
  HEAP8[i4 >> 0] = i2 >>> 1;
  i4 = i4 + 4 | 0;
 } else {
  i7 = i3 + 4 & -4;
  i2 = __Znwj(i7 << 2) | 0;
  HEAP32[i4 + 8 >> 2] = i2;
  HEAP32[i4 >> 2] = i7 | 1;
  HEAP32[i4 + 4 >> 2] = i3;
  i4 = i2;
 }
 i3 = (i6 - i5 | 0) >>> 2;
 i2 = i4;
 while (1) {
  if ((i1 | 0) == (i6 | 0)) break;
  HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 }
 HEAP32[i4 + (i3 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEEC2EOS9_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = HEAP32[i1 >> 2] | 0;
 HEAP32[i1 >> 2] = 0;
 i6 = i1 + 4 | 0;
 i5 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i5;
 i6 = i2 + 8 | 0;
 i7 = i1 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i6 >> 2] = i3;
 i8 = i1 + 12 | 0;
 i9 = HEAP32[i8 >> 2] | 0;
 HEAP32[i2 + 12 >> 2] = i9;
 HEAP32[i2 + 16 >> 2] = HEAP32[i1 + 16 >> 2];
 if (i9 | 0) {
  i1 = HEAP32[i3 + 4 >> 2] | 0;
  i2 = i5 + -1 | 0;
  if (!(i2 & i5)) i1 = i2 & i1; else i1 = (i1 >>> 0) % (i5 >>> 0) | 0;
  HEAP32[i4 + (i1 << 2) >> 2] = i6;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i8 >> 2] = 0;
 }
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i5, i6, i1, i3, i4, i2) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i5 = i5 + 8 | 0;
 i5 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i5 >> 2] >> 2] & 127](i5) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i1, i8, i5, i5 + 168 | 0, i2, i4, 0) | 0) - i5 | 0;
 if ((i1 | 0) < 168) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = i7;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i5, i6, i1, i3, i4, i2) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i5 = i5 + 8 | 0;
 i5 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i5 >> 2] >> 2] & 127](i5) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i1, i8, i5, i5 + 168 | 0, i2, i4, 0) | 0) - i5 | 0;
 if ((i1 | 0) < 168) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = i7;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i2 = (i1 & 1) != 0;
 if (i2) {
  i3 = (HEAP32[i5 >> 2] & -2) + -1 | 0;
  i4 = HEAP32[i5 + 4 >> 2] | 0;
 } else {
  i3 = 10;
  i4 = (i1 & 255) >>> 1;
 }
 if ((i4 | 0) == (i3 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i5, i3, 1, i3, i3, 0, 0);
  if (!(HEAP8[i5 >> 0] & 1)) i2 = 7; else i2 = 8;
 } else if (i2) i2 = 8; else i2 = 7;
 if ((i2 | 0) == 7) {
  HEAP8[i5 >> 0] = (i4 << 1) + 2;
  i1 = i5 + 1 | 0;
 } else if ((i2 | 0) == 8) {
  i1 = HEAP32[i5 + 8 >> 2] | 0;
  HEAP32[i5 + 4 >> 2] = i4 + 1;
 }
 i5 = i1 + i4 | 0;
 HEAP8[i5 >> 0] = i6;
 HEAP8[i5 + 1 >> 0] = 0;
 return;
}

function __ZN4wasm17SExpressionParser14skipWhitespaceEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0;
 i1 = HEAP32[i3 >> 2] | 0;
 L1 : while (1) {
  i2 = (_isspace(HEAP8[i1 >> 0] | 0) | 0) == 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (!i2) {
   i1 = i1 + 1 | 0;
   HEAP32[i3 >> 2] = i1;
   continue;
  }
  switch (HEAP8[i1 >> 0] | 0) {
  case 59:
   break;
  case 40:
   {
    if ((HEAP8[i1 + 1 >> 0] | 0) != 59) break L1;
    i1 = (_strstr(i1, 17078) | 0) + 2 | 0;
    HEAP32[i3 >> 2] = i1;
    continue L1;
   }
  default:
   break L1;
  }
  if ((HEAP8[i1 + 1 >> 0] | 0) == 59) i2 = 59; else break;
  while (1) {
   switch (i2 << 24 >> 24) {
   case 10:
   case 0:
    continue L1;
   default:
    {}
   }
   i4 = i1 + 1 | 0;
   HEAP32[i3 >> 2] = i4;
   i2 = HEAP8[i4 >> 0] | 0;
   i1 = i4;
  }
 }
 return;
}

function __ZN6cashew12ValueBuilder12makeIndexingENS_3RefES1_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 12 | 0;
 i8 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i5 = i3;
 i6 = __ZN6cashew12ValueBuilder12makeRawArrayEi(3) | 0;
 i9 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41104) | 0;
 HEAP32[i8 >> 2] = i9;
 HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
 i6 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 HEAP32[i7 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i2, i4) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixEOS2_(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i6;
 i2 = __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i5, i4, i3) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  i1 = __Znwj(24) | 0;
  HEAP32[i1 + 16 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 20 >> 2] = 0;
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_8FunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i5, HEAP32[i4 >> 2] | 0, i2, i1);
 }
 STACKTOP = i6;
 return i1 + 20 | 0;
}

function __ZN4wasm15Asm2WasmBuilder8blockifyEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i6;
 HEAP32[i4 >> 2] = i1;
 i5 = i1;
 do if (!(__ZN4wasm10Expression2isINS_5BlockEEEbv(i1) | 0)) {
  i1 = __ZN10MixedArena5allocIN4wasm5BlockEEEPT_v(HEAP32[i2 + 4 >> 2] | 0) | 0;
  i2 = i1 + 16 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 20 >> 2] | 0)) {
   __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(i1 + 12 | 0, i4);
   break;
  } else {
   HEAP32[i3 >> 2] = i5;
   HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
   break;
  }
 } else i1 = __ZN4wasm10Expression8dyn_castINS_5BlockEEEPT_v(i1) | 0; while (0);
 STACKTOP = i6;
 return i1 | 0;
}

function __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixEOS2_(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i6;
 i2 = __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS8_(i5, i4, i3) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  i1 = __Znwj(24) | 0;
  HEAP32[i1 + 16 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 20 >> 2] = 0;
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameENS2_8WasmTypeEEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSG_SG_(i5, HEAP32[i4 >> 2] | 0, i2, i1);
 }
 STACKTOP = i6;
 return i1 + 20 | 0;
}

function __ZN6cashew12ValueBuilder9makeWhileENS_3RefES1_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 12 | 0;
 i8 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i5 = i3;
 i6 = __ZN6cashew12ValueBuilder12makeRawArrayEi(3) | 0;
 i9 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41088) | 0;
 HEAP32[i8 >> 2] = i9;
 HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
 i6 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 HEAP32[i7 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i2, i4) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNSt3__16vectorIN4wasm6Memory7SegmentENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (((i5 | 0) / -12 | 0) * 12 | 0) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_6ExportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixEOS2_(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i6;
 i2 = __ZNSt3__13mapIN4wasm4NameEPNS1_6ExportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS9_(i5, i4, i3) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  i1 = __Znwj(24) | 0;
  HEAP32[i1 + 16 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 + 20 >> 2] = 0;
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ExportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i5, HEAP32[i4 >> 2] | 0, i2, i1);
 }
 STACKTOP = i6;
 return i1 + 20 | 0;
}

function __ZN6cashew12ValueBuilder6makeDoENS_3RefES1_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 12 | 0;
 i8 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i5 = i3;
 i6 = __ZN6cashew12ValueBuilder12makeRawArrayEi(3) | 0;
 i9 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41092) | 0;
 HEAP32[i8 >> 2] = i9;
 HEAP32[i4 >> 2] = HEAP32[i8 >> 2];
 i6 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 HEAP32[i7 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i6, i4) | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i2, i4) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNSt3__16vectorIPNS0_IN6cashew3RefENS_9allocatorIS2_EEEENS3_IS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[40176] | 0) == 0 ? ___cxa_guard_acquire(40176) | 0 : 0) {
  if ((HEAP8[40184] | 0) == 0 ? ___cxa_guard_acquire(40184) | 0 : 0) {
   i1 = 44436;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 44724);
   ___cxa_atexit(218, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(40184);
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44436, 10776) | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(44448, 10788) | 0;
  HEAP32[11181] = 44436;
  ___cxa_guard_release(40176);
 }
 return HEAP32[11181] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP8[40096] | 0) == 0 ? ___cxa_guard_acquire(40096) | 0 : 0) {
  if ((HEAP8[40104] | 0) == 0 ? ___cxa_guard_acquire(40104) | 0 : 0) {
   i1 = 43624;
   do {
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i1 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    i1 = i1 + 12 | 0;
   } while ((i1 | 0) != 43912);
   ___cxa_atexit(214, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(40104);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43624, 36002) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(43636, 36005) | 0;
  HEAP32[10978] = 43624;
  ___cxa_guard_release(40096);
 }
 return HEAP32[10978] | 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERNS_7ElementE(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0;
 if (!(HEAP8[i1 >> 0] | 0)) __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i3, HEAP32[i1 + 16 >> 2] | 0) | 0; else {
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i3, 40) | 0;
  i2 = HEAP32[i1 + 8 >> 2] | 0;
  i1 = HEAP32[i1 + 4 >> 2] | 0;
  while (1) {
   if ((i1 | 0) == (i2 | 0)) break;
   i4 = HEAP32[i1 >> 2] | 0;
   __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERNS_7ElementE(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i3, 32) | 0, i4) | 0;
   i1 = i1 + 4 | 0;
  }
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i3, 17157) | 0;
 }
 return i3 | 0;
}

function __ZNSt3__16vectorIPN4wasm12FunctionTypeENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function ___remdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i5 | 0;
 i7 = i2 >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i6 = ((i2 | 0) < 0 ? -1 : 0) >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i10 = i4 >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i9 = ((i4 | 0) < 0 ? -1 : 0) >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i1 = _i64Subtract(i7 ^ i1 | 0, i6 ^ i2 | 0, i7 | 0, i6 | 0) | 0;
 i2 = tempRet0;
 ___udivmoddi4(i1, i2, _i64Subtract(i10 ^ i3 | 0, i9 ^ i4 | 0, i10 | 0, i9 | 0) | 0, tempRet0, i8) | 0;
 i4 = _i64Subtract(HEAP32[i8 >> 2] ^ i7 | 0, HEAP32[i8 + 4 >> 2] ^ i6 | 0, i7 | 0, i6 | 0) | 0;
 i3 = tempRet0;
 STACKTOP = i5;
 return (tempRet0 = i3, i4) | 0;
}

function __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__16vectorIN4wasm6Switch4CaseENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 3) << 3) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__16vectorIPN4wasm8FunctionENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__16vectorIPN6cashew5ValueENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__16vectorIPN4wasm7ElementENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 3) << 3) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__114__num_put_base12__format_intEPcPKcbj(i1, i2, i5, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i3 = 0;
 if (i4 & 2048) {
  HEAP8[i1 >> 0] = 43;
  i1 = i1 + 1 | 0;
 }
 if (!(i4 & 512)) i3 = i2; else {
  HEAP8[i1 >> 0] = 35;
  i3 = i2;
  i1 = i1 + 1 | 0;
 }
 while (1) {
  i2 = HEAP8[i3 >> 0] | 0;
  if (!(i2 << 24 >> 24)) break;
  HEAP8[i1 >> 0] = i2;
  i3 = i3 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 L10 : do switch (i4 & 74 | 0) {
 case 64:
  {
   HEAP8[i1 >> 0] = 111;
   break;
  }
 case 8:
  if (!(i4 & 16384)) {
   HEAP8[i1 >> 0] = 120;
   break L10;
  } else {
   HEAP8[i1 >> 0] = 88;
   break L10;
  }
 default:
  if (i5) {
   HEAP8[i1 >> 0] = 100;
   break L10;
  } else {
   HEAP8[i1 >> 0] = 117;
   break L10;
  }
 } while (0);
 return;
}

function __ZN4wasm22SExpressionWasmBuilder12makeSetLocalERNS_7ElementE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i3 = __ZN10MixedArena5allocIN4wasm8SetLocalEEEPT_v(HEAP32[i2 + 4 >> 2] | 0) | 0;
 i4 = __ZN4wasm7Element4listEv(i1) | 0;
 i4 = __ZN4wasm22SExpressionWasmBuilder12getLocalNameERNS_7ElementE(i2, HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i3 + 8 >> 2] = i4;
 i1 = __ZN4wasm7Element4listEv(i1) | 0;
 i1 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i2, HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] | 0) | 0;
 HEAP32[i3 + 12 >> 2] = i1;
 i2 = __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(i2 + 72 | 0, i3 + 8 | 0) | 0;
 HEAP32[i3 + 4 >> 2] = HEAP32[i2 >> 2];
 return i3 | 0;
}

function __ZNSt3__16vectorIPN4wasm6ImportENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__16vectorIPN4wasm6ExportENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 4) << 4) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__16vectorIPN4wasm4PassENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZN4wasm16PrintSExpression11visitExportEPNS_6ExportE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 4 | 0;
 i5 = i3;
 i2 = i2 + 4 | 0;
 __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i2 >> 2] | 0, 25762, 0) | 0;
 i2 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__Z9printTextRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(HEAP32[i2 >> 2] | 0, HEAP32[i1 >> 2] | 0) | 0, 32) | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i2, i4) | 0, 41) | 0;
 STACKTOP = i3;
 return;
}

function __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function __ZN4wasm16PrintSExpression11visitSelectEPNS_6SelectE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i3 = i2 + 4 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i3 >> 2] | 0, 40) | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__Z12prepareColorRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEE(HEAP32[i3 >> 2] | 0) | 0, 26381) | 0;
 __ZN4wasm16PrintSExpression9incIndentEv(i2);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i2, HEAP32[i1 + 8 >> 2] | 0);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i2, HEAP32[i1 + 12 >> 2] | 0);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i2, HEAP32[i1 + 16 >> 2] | 0);
 __ZN4wasm16PrintSExpression9decIndentEv(i2);
 return;
}

function _fputc(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 if ((HEAP32[i6 + 76 >> 2] | 0) >= 0 ? (___lockfile(i6) | 0) != 0 : 0) {
  if ((HEAP8[i6 + 75 >> 0] | 0) != (i5 | 0) ? (i2 = i6 + 20 | 0, i3 = HEAP32[i2 >> 2] | 0, i3 >>> 0 < (HEAP32[i6 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i2 >> 2] = i3 + 1;
   HEAP8[i3 >> 0] = i5;
   i1 = i5 & 255;
  } else i1 = ___overflow(i6, i5) | 0;
  ___unlockfile(i6);
 } else i7 = 3;
 do if ((i7 | 0) == 3) {
  if ((HEAP8[i6 + 75 >> 0] | 0) != (i5 | 0) ? (i4 = i6 + 20 | 0, i1 = HEAP32[i4 >> 2] | 0, i1 >>> 0 < (HEAP32[i6 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i4 >> 2] = i1 + 1;
   HEAP8[i1 >> 0] = i5;
   i1 = i5 & 255;
   break;
  }
  i1 = ___overflow(i6, i5) | 0;
 } while (0);
 return i1 | 0;
}

function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i4, i2, i1, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 i2 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i6 >> 2] = i2;
 i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43120) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 48 >> 2] & 7](i7, 35270, 35296, i1) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43128) | 0;
 i6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
 HEAP32[i3 >> 2] = i6;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 127](i4, i1);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 STACKTOP = i5;
 return;
}

function __ZNSt3__16vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 HEAP32[i3 >> 2] = 0;
 i4 = i3 + 4 | 0;
 HEAP32[i4 >> 2] = 0;
 i1 = HEAP32[i1 >> 2] | 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = i1;
 i1 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj(i1, 24) | 0;
 HEAP32[i4 >> 2] = i1;
 HEAP32[i3 >> 2] = i1;
 HEAP32[i3 + 8 >> 2] = i1 + 24;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1, i2);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i1 + 12 | 0, i2 + 12 | 0);
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 24;
 return;
}

function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i6, i8, i7) {
 i6 = i6 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = i6 + 4 | 0;
 i2 = (HEAP32[i4 >> 2] | 0) != 220;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i1 | 0;
 i3 = i3 >>> 0 < 2147483647 ? i3 << 1 : -1;
 i5 = (HEAP32[i8 >> 2] | 0) - i1 >> 2;
 i1 = _realloc(i2 ? i1 : 0, i3) | 0;
 if (!i1) __ZSt17__throw_bad_allocv();
 if (!i2) {
  i2 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i1;
  if (i2) {
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i2);
   i1 = HEAP32[i6 >> 2] | 0;
  }
 } else HEAP32[i6 >> 2] = i1;
 HEAP32[i4 >> 2] = 221;
 HEAP32[i8 >> 2] = i1 + (i5 << 2);
 HEAP32[i7 >> 2] = (HEAP32[i6 >> 2] | 0) + (i3 >>> 2 << 2);
 return;
}

function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i6, i8, i7) {
 i6 = i6 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = i6 + 4 | 0;
 i2 = (HEAP32[i4 >> 2] | 0) != 220;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i1 | 0;
 i3 = i3 >>> 0 < 2147483647 ? i3 << 1 : -1;
 i5 = (HEAP32[i8 >> 2] | 0) - i1 >> 2;
 i1 = _realloc(i2 ? i1 : 0, i3) | 0;
 if (!i1) __ZSt17__throw_bad_allocv();
 if (!i2) {
  i2 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i1;
  if (i2) {
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i2);
   i1 = HEAP32[i6 >> 2] | 0;
  }
 } else HEAP32[i6 >> 2] = i1;
 HEAP32[i4 >> 2] = 221;
 HEAP32[i8 >> 2] = i1 + (i5 << 2);
 HEAP32[i7 >> 2] = (HEAP32[i6 >> 2] | 0) + (i3 >>> 2 << 2);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i3, i1, i6) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i7 = 0;
 i4 = i1;
 i2 = i6 - i4 | 0;
 if (i2 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i3);
 if (i2 >>> 0 < 11) {
  HEAP8[i3 >> 0] = i2 << 1;
  i5 = i3 + 1 | 0;
 } else {
  i7 = i2 + 16 & -16;
  i5 = __Znwj(i7) | 0;
  HEAP32[i3 + 8 >> 2] = i5;
  HEAP32[i3 >> 2] = i7 | 1;
  HEAP32[i3 + 4 >> 2] = i2;
 }
 i3 = i6 - i4 | 0;
 i2 = i5;
 while (1) {
  if ((i1 | 0) == (i6 | 0)) break;
  HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
  i1 = i1 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 HEAP8[i5 + i3 >> 0] = 0;
 return;
}

function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i4, i2, i1, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 i2 = __ZNKSt3__18ios_base6getlocEv(i2) | 0;
 HEAP32[i6 >> 2] = i2;
 i7 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43088) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 32 >> 2] & 7](i7, 35270, 35296, i1) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i6, 43100) | 0;
 i6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 127](i1) | 0;
 HEAP8[i3 >> 0] = i6;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 127](i4, i1);
 __ZNSt3__114__shared_count16__release_sharedEv(i2) | 0;
 STACKTOP = i5;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_(i3, i1, i6) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i7 = 0;
 i4 = i1;
 i2 = i6 - i4 | 0;
 if (i2 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i3);
 if (i2 >>> 0 < 11) {
  HEAP8[i3 >> 0] = i2 << 1;
  i5 = i3 + 1 | 0;
 } else {
  i7 = i2 + 16 & -16;
  i5 = __Znwj(i7) | 0;
  HEAP32[i3 + 8 >> 2] = i5;
  HEAP32[i3 >> 2] = i7 | 1;
  HEAP32[i3 + 4 >> 2] = i2;
 }
 i3 = i6 - i4 | 0;
 i2 = i5;
 while (1) {
  if ((i1 | 0) == (i6 | 0)) break;
  HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
  i1 = i1 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 HEAP8[i5 + i3 >> 0] = 0;
 return;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner9visitLoopEPNS_4LoopE(i6, i8, i7) {
 i6 = i6 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i9 = 0;
 i2 = i7 + 16 | 0;
 i3 = i6 + 16 | 0;
 i4 = i7 + 12 | 0;
 while (1) {
  __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEE5visitEPNS_10ExpressionE(i6, i8, HEAP32[i2 >> 2] | 0);
  i5 = HEAP32[i3 >> 2] | 0;
  if (!i5) break;
  if ((i5 | 0) != (HEAP32[i4 >> 2] | 0)) {
   i1 = i5;
   i9 = 4;
   break;
  }
 }
 if ((i9 | 0) == 4 ? (i1 | 0) == (HEAP32[i7 + 8 >> 2] | 0) : 0) HEAP32[i3 >> 2] = 0;
 return;
}

function __ZNSt3__16vectorIPcNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i6 = i2 + 4 | 0;
 i3 = i1 + 4 | 0;
 i5 = (HEAP32[i6 >> 2] | 0) - i4 | 0;
 i7 = (HEAP32[i3 >> 2] | 0) + (0 - (i5 >> 2) << 2) | 0;
 HEAP32[i3 >> 2] = i7;
 _memcpy(i7 | 0, i4 | 0, i5 | 0) | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i3 >> 2] = i5;
 i5 = i1 + 8 | 0;
 i4 = HEAP32[i6 >> 2] | 0;
 HEAP32[i6 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i5 >> 2] = i4;
 i5 = i2 + 8 | 0;
 i2 = i1 + 12 | 0;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i2 >> 2] = i4;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 return;
}

function ___overflow(i8, i6) {
 i8 = i8 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i9;
 i5 = i6 & 255;
 HEAP8[i7 >> 0] = i5;
 i2 = i8 + 16 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (!i3) if (!(___towrite(i8) | 0)) {
  i3 = HEAP32[i2 >> 2] | 0;
  i4 = 4;
 } else i1 = -1; else i4 = 4;
 do if ((i4 | 0) == 4) {
  i2 = i8 + 20 | 0;
  i4 = HEAP32[i2 >> 2] | 0;
  if (i4 >>> 0 < i3 >>> 0 ? (i1 = i6 & 255, (i1 | 0) != (HEAP8[i8 + 75 >> 0] | 0)) : 0) {
   HEAP32[i2 >> 2] = i4 + 1;
   HEAP8[i4 >> 0] = i5;
   break;
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[i8 + 36 >> 2] & 31](i8, i7, 1) | 0) == 1) i1 = HEAPU8[i7 >> 0] | 0; else i1 = -1;
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZN6cashew12ValueBuilder7makeDotENS_3RefES1_(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i7 + 12 | 0;
 i1 = i7 + 8 | 0;
 i3 = i7 + 4 | 0;
 i4 = i7;
 if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i5, 0) | 0, 41056) | 0) {
  HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
  i6 = __ZN6cashew3RefixEj(i5, 1) | 0;
  i6 = __ZN6cashew5Value10getIStringEv(HEAP32[i6 >> 2] | 0) | 0;
  HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  i6 = __ZN6cashew12ValueBuilder7makeDotENS_3RefENS_7IStringE(i1, i2) | 0;
  STACKTOP = i7;
  return i6 | 0;
 } else ___assert_fail(24362, 31233, 1628, 24377);
 return 0;
}

function __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_(i4, i2, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i5 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i4 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i5 = _strlen(i2) | 0;
 i1 = HEAP8[i3 >> 0] | 0;
 i1 = (i1 & 1) == 0 ? (i1 & 255) >>> 1 : HEAP32[i3 + 4 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj(i4, i2, i5, i1 + i5 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i4, (HEAP8[i3 >> 0] & 1) == 0 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0, i1) | 0;
 return;
}

function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i6, i8, i7) {
 i6 = i6 | 0;
 i8 = i8 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = i6 + 4 | 0;
 i2 = (HEAP32[i4 >> 2] | 0) != 220;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i1 | 0;
 i3 = i3 >>> 0 < 2147483647 ? i3 << 1 : -1;
 i5 = (HEAP32[i8 >> 2] | 0) - i1 | 0;
 i1 = _realloc(i2 ? i1 : 0, i3) | 0;
 if (!i1) __ZSt17__throw_bad_allocv();
 if (!i2) {
  i2 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = i1;
  if (i2) {
   FUNCTION_TABLE_vi[HEAP32[i4 >> 2] & 255](i2);
   i1 = HEAP32[i6 >> 2] | 0;
  }
 } else HEAP32[i6 >> 2] = i1;
 HEAP32[i4 >> 2] = 221;
 HEAP32[i8 >> 2] = i1 + i5;
 HEAP32[i7 >> 2] = (HEAP32[i6 >> 2] | 0) + i3;
 return;
}

function __ZNSt3__1plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_(i4, i2, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i5 = 0, i6 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i4 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i5 = HEAP8[i2 >> 0] | 0;
 i6 = (i5 & 1) == 0;
 i5 = i6 ? (i5 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0;
 i1 = _strlen(i3) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj(i4, i6 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0, i5, i5 + i1 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i4, i3, i1) | 0;
 return;
}

function __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(i6, i5, i4) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i7;
 i2 = __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_(i5, i3, i4) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  i1 = __Znwj(20) | 0;
  HEAP32[i1 + 16 >> 2] = HEAP32[i4 >> 2];
  __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(i5, HEAP32[i3 >> 2] | 0, i2, i1);
  i2 = 1;
 } else i2 = 0;
 HEAP32[i6 >> 2] = i1;
 HEAP8[i6 + 4 >> 0] = i2;
 STACKTOP = i7;
 return;
}

function _fflush(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 do if (i2) {
  if ((HEAP32[i2 + 76 >> 2] | 0) <= -1) {
   i1 = ___fflush_unlocked(i2) | 0;
   break;
  }
  i3 = (___lockfile(i2) | 0) == 0;
  i1 = ___fflush_unlocked(i2) | 0;
  if (!i3) ___unlockfile(i2);
 } else {
  if (!(HEAP32[1191] | 0)) i1 = 0; else i1 = _fflush(HEAP32[1191] | 0) | 0;
  ___lock(41516);
  i2 = HEAP32[10378] | 0;
  if (i2) do {
   if ((HEAP32[i2 + 76 >> 2] | 0) > -1) i3 = ___lockfile(i2) | 0; else i3 = 0;
   if ((HEAP32[i2 + 20 >> 2] | 0) >>> 0 > (HEAP32[i2 + 28 >> 2] | 0) >>> 0) i1 = ___fflush_unlocked(i2) | 0 | i1;
   if (i3 | 0) ___unlockfile(i2);
   i2 = HEAP32[i2 + 56 >> 2] | 0;
  } while ((i2 | 0) != 0);
  ___unlock(41516);
 } while (0);
 return i1 | 0;
}

function __ZN6cashew12ValueBuilder10makeReturnENS_3RefE(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 8 | 0;
 i6 = i5 + 4 | 0;
 i2 = i5;
 i3 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i7 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41076) | 0;
 HEAP32[i6 >> 2] = i7;
 HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
 i3 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 if (__ZN6cashew3RefntEv(i4) | 0) {
  i7 = __ZN6cashew12ValueBuilder8makeNullEv() | 0;
  HEAP32[i2 >> 2] = i7;
 } else HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 i7 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 STACKTOP = i5;
 return i7 | 0;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i3;
 if (HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_(i1, i2);
  if (HEAP8[i1 >> 0] | 0 ? (i4 = HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0, (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0) == -1) : 0) {
   i4 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 1;
  }
  __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev(i1);
 }
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i3;
 if (HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i1, i2);
  if (HEAP8[i1 >> 0] | 0 ? (i4 = HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0, (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0) == -1) : 0) {
   i4 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
   HEAP32[i4 >> 2] = HEAP32[i4 >> 2] | 1;
  }
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i1);
 }
 STACKTOP = i3;
 return i2 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder14makeCallImportERNS_7ElementE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = __ZN10MixedArena5allocIN4wasm10CallImportEEEPT_v(HEAP32[i2 + 4 >> 2] | 0) | 0;
 i4 = i3 + 20 | 0;
 i5 = __ZN4wasm7Element4listEv(i1) | 0;
 i5 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i4 >> 2] = i5;
 i4 = __ZNSt3__13mapIN4wasm4NameEPNS1_6ImportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_((HEAP32[i2 >> 2] | 0) + 60 | 0, i4) | 0;
 HEAP32[i3 + 4 >> 2] = HEAP32[(HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] | 0) + 4 >> 2];
 __ZN4wasm22SExpressionWasmBuilder17parseCallOperandsINS_10CallImportEEEvRNS_7ElementEjPT_(i2, i1, 2, i3);
 return i3 | 0;
}

function _pad(i6, i2, i5, i4, i1) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i3 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 i7 = i8;
 do if ((i5 | 0) > (i4 | 0) & (i1 & 73728 | 0) == 0) {
  i1 = i5 - i4 | 0;
  _memset(i7 | 0, i2 | 0, (i1 >>> 0 > 256 ? 256 : i1) | 0) | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  i3 = (i2 & 32 | 0) == 0;
  if (i1 >>> 0 > 255) {
   i4 = i5 - i4 | 0;
   do {
    if (i3) {
     ___fwritex(i7, 256, i6) | 0;
     i2 = HEAP32[i6 >> 2] | 0;
    }
    i1 = i1 + -256 | 0;
    i3 = (i2 & 32 | 0) == 0;
   } while (i1 >>> 0 > 255);
   if (i3) i1 = i4 & 255; else break;
  } else if (!i3) break;
  ___fwritex(i7, i1, i6) | 0;
 } while (0);
 STACKTOP = i8;
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseContinueERPcPKc(i2, i5, i1) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i4 + 20 | 0;
 i3 = i4;
 i2 = i4 + 16 | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i5);
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i3, HEAP32[i5 >> 2] | 0);
 if ((HEAP32[i3 + 12 >> 2] | 0) == 2) {
  HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + (HEAP32[i3 + 8 >> 2] | 0);
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 } else HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 i5 = __ZN6cashew12ValueBuilder12makeContinueENS_7IStringE(i1) | 0;
 STACKTOP = i4;
 return i5 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i6, i9, i8, i4, i3, i5, 35739, 35747) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc(i4, i5, i6, i3, i1, i2) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i10 = i7 + 16 | 0;
 i11 = i7 + 12 | 0;
 i8 = i7;
 i9 = i7 + 8 | 0;
 HEAP32[i11 >> 2] = i10 + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc(i4, i10, i11, i3, i1, i2);
 i2 = i8;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i9 >> 2] = i10;
 i2 = (HEAP32[i6 >> 2] | 0) - i5 >> 2;
 i1 = _uselocale(HEAP32[i4 >> 2] | 0) | 0;
 i2 = _mbsrtowcs(i5, i9, i2, i8) | 0;
 if (i1 | 0) _uselocale(i1) | 0;
 HEAP32[i6 >> 2] = i5 + (i2 << 2);
 STACKTOP = i7;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i5, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i6 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i6 + 4 | 0;
 i8 = i6;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i5, i3, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) {
  if ((i1 | 0) < 69) i1 = i1 + 2e3 | 0; else i1 = (i1 + -69 | 0) >>> 0 < 31 ? i1 + 1900 | 0 : i1;
  HEAP32[i7 >> 2] = i1 + -1900;
 }
 STACKTOP = i6;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i5, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i6 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i6 + 4 | 0;
 i8 = i6;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i5, i3, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) {
  if ((i1 | 0) < 69) i1 = i1 + 2e3 | 0; else i1 = (i1 + -69 | 0) >>> 0 < 31 ? i1 + 1900 | 0 : i1;
  HEAP32[i7 >> 2] = i1 + -1900;
 }
 STACKTOP = i6;
 return;
}

function __ZN6cashew12ValueBuilder10makeDoubleEd(d1) {
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i3 + 8 | 0;
 i6 = i3 + 4 | 0;
 i5 = i3;
 i4 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i7 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41112) | 0;
 HEAP32[i6 >> 2] = i7;
 HEAP32[i2 >> 2] = HEAP32[i6 >> 2];
 i4 = __ZN6cashew5Value9push_backENS_3RefE(i4, i2) | 0;
 i6 = __ZN6cashew5Arena5allocEv(41412) | 0;
 __ZN6cashew5Value4freeEv(i6);
 HEAP32[i6 >> 2] = 1;
 HEAPF64[i6 + 8 >> 3] = d1;
 HEAP32[i5 >> 2] = i6;
 HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
 i2 = __ZN6cashew5Value9push_backENS_3RefE(i4, i2) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i6, i9, i8, i4, i3, i5, 9724, 9756) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE10parseBreakERPcPKc(i2, i5, i1) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i4 + 20 | 0;
 i3 = i4;
 i2 = i4 + 16 | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i5);
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4FragC2EPc(i3, HEAP32[i5 >> 2] | 0);
 if ((HEAP32[i3 + 12 >> 2] | 0) == 2) {
  HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + (HEAP32[i3 + 8 >> 2] | 0);
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 } else HEAP32[i2 >> 2] = 0;
 HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
 i5 = __ZN6cashew12ValueBuilder9makeBreakENS_7IStringE(i1) | 0;
 STACKTOP = i4;
 return i5 | 0;
}

function __ZNSt3__18functionIFPN4wasm4PassEvEEaSEOS5_(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i3 = i5 + 16 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((i1 | 0) != (i5 | 0)) {
  if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 255](i1);
 } else FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 255](i1);
 HEAP32[i3 >> 2] = 0;
 i1 = i4 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) if ((i2 | 0) == (i4 | 0)) {
  HEAP32[i3 >> 2] = i5;
  i4 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] & 127](i4, i5);
  break;
 } else {
  HEAP32[i3 >> 2] = i2;
  HEAP32[i1 >> 2] = 0;
  break;
 } else HEAP32[i3 >> 2] = 0; while (0);
 return i5 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSL_SL_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNSt3__16vectorIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEE5eraseENS_11__wrap_iterIPKS6_EESD_(i4, i1, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i5 = 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i5 = i5 + (i2 - i5 >> 3 << 3) | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 L1 : do if ((i2 | 0) != (i1 | 0)) {
  i3 = i5 + (i1 - i2 >> 3 << 3) | 0;
  i1 = i4 + 4 | 0;
  i2 = (HEAP32[i1 >> 2] | 0) - i3 | 0;
  _memmove(i5 | 0, i3 | 0, i2 | 0) | 0;
  i2 = i5 + (i2 >> 3 << 3) | 0;
  i3 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i3 | 0) == (i2 | 0)) break L1;
   i4 = i3 + -8 | 0;
   HEAP32[i1 >> 2] = i4;
   i3 = i4;
  }
 } while (0);
 return i5 | 0;
}

function __ZNK4wasm7Literal8copysignERKS0_(i4, i6, i5) {
 i4 = i4 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i7 + 16 | 0;
 i2 = i7;
 i3 = i6 + 8 | 0;
 if ((HEAP32[i6 >> 2] | 0) == 3) {
  i6 = HEAP32[i5 + 8 >> 2] & -2147483648 | HEAP32[i3 >> 2] & 2147483647;
  HEAP32[i1 >> 2] = 1;
  HEAP32[i1 + 8 >> 2] = i6;
  __ZN4wasm7Literal9castToF32Ev(i4, i1);
 } else {
  i6 = i3;
  i3 = HEAP32[i6 >> 2] | 0;
  i5 = HEAP32[i5 + 8 + 4 >> 2] & -2147483648 | HEAP32[i6 + 4 >> 2] & 2147483647;
  HEAP32[i2 >> 2] = 2;
  i6 = i2 + 8 | 0;
  HEAP32[i6 >> 2] = i3;
  HEAP32[i6 + 4 >> 2] = i5;
  __ZN4wasm7Literal9castToF64Ev(i4, i2);
 }
 STACKTOP = i7;
 return;
}

function __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 while (1) {
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (i1 | 0)) break;
  i3 = i3 + -16 | 0;
  HEAP32[i2 >> 2] = i3;
  __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev(i3);
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[HEAP32[i4 + 16 >> 2] >> 2] | 0, i1, (HEAP32[i4 + 12 >> 2] | 0) - i1 | 0);
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNSt3__113__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEENS5_IS9_Lj4096EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) {
  i2 = i4 + 4 | 0;
  while (1) {
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 | 0) == (i1 | 0)) break;
   i3 = i3 + -16 | 0;
   HEAP32[i2 >> 2] = i3;
   __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev(i3);
  }
  i3 = HEAP32[i4 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[i4 + 12 >> 2] | 0, i3, (HEAP32[i4 + 8 >> 2] | 0) - i3 | 0);
 }
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(i6, i1, i2, i4, i3, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i6, i9, i8, i4, i3, i5) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE10parseWhileERPcPKc(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4 + 12 | 0;
 i6 = i4 + 8 | 0;
 i8 = i4 + 4 | 0;
 i7 = i4;
 i9 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseParennedERPc(i3, i2) | 0;
 i3 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE19parseMaybeBracketedERPcPKc(i3, i2, i1) | 0;
 HEAP32[i8 >> 2] = i9;
 HEAP32[i7 >> 2] = i3;
 HEAP32[i6 >> 2] = HEAP32[i8 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
 i3 = __ZN6cashew12ValueBuilder9makeWhileENS_3RefES1_(i6, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function _scalbn(d1, i3) {
 d1 = +d1;
 i3 = i3 | 0;
 var i2 = 0;
 if ((i3 | 0) > 1023) {
  d1 = d1 * 8988465674311579538646525.0e283;
  i2 = i3 + -1023 | 0;
  if ((i2 | 0) > 1023) {
   i2 = i3 + -2046 | 0;
   i2 = (i2 | 0) > 1023 ? 1023 : i2;
   d1 = d1 * 8988465674311579538646525.0e283;
  }
 } else if ((i3 | 0) < -1022) {
  d1 = d1 * 2.2250738585072014e-308;
  i2 = i3 + 1022 | 0;
  if ((i2 | 0) < -1022) {
   i2 = i3 + 2044 | 0;
   i2 = (i2 | 0) < -1022 ? -1022 : i2;
   d1 = d1 * 2.2250738585072014e-308;
  }
 } else i2 = i3;
 i2 = _bitshift64Shl(i2 + 1023 | 0, 0, 52) | 0;
 i3 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = i2;
 HEAP32[tempDoublePtr + 4 >> 2] = i3;
 return +(d1 * +HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = i2 + 4 | 0;
 i2 = __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_SK_SK_(i2, i3, HEAP32[i1 >> 2] | 0, i1) | 0;
 if ((i2 | 0) != (i1 | 0) ? !(__ZNK6cashew7IStringltERKS0_(i3, i2 + 16 | 0) | 0) : 0) i1 = i2;
 return i1 | 0;
}

function __ZN4wasm17SExpressionParser5parseEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 __ZN4wasm17SExpressionParser14skipWhitespaceEv(i4);
 i1 = HEAP32[i4 >> 2] | 0;
 L1 : do switch (HEAP8[i1 >> 0] | 0) {
 case 41:
 case 0:
  {
   i3 = 0;
   break;
  }
 case 40:
  {
   HEAP32[i4 >> 2] = i1 + 1;
   i1 = __ZN4wasm17SExpressionParser14parseInnerListEv(i4) | 0;
   __ZN4wasm17SExpressionParser14skipWhitespaceEv(i4);
   i2 = HEAP32[i4 >> 2] | 0;
   if ((HEAP8[i2 >> 0] | 0) == 41) {
    HEAP32[i4 >> 2] = i2 + 1;
    i3 = i1;
    break L1;
   } else ___assert_fail(17122, 17087, 163, 17138);
   break;
  }
 default:
  i3 = __ZN4wasm17SExpressionParser11parseStringEv(i4) | 0;
 } while (0);
 return i3 | 0;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i2 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if ((((HEAP32[i2 + 24 >> 2] | 0 ? (HEAP32[i2 + 16 >> 2] | 0) == 0 : 0) ? HEAP32[i2 + 4 >> 2] & 8192 | 0 : 0) ? !(__ZSt18uncaught_exceptionv() | 0) : 0) ? (i2 = HEAP32[i1 >> 2] | 0, i2 = HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0, (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i2) | 0) == -1) : 0) {
  i2 = HEAP32[i1 >> 2] | 0;
  i2 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
  HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1;
 }
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i2 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if ((((HEAP32[i2 + 24 >> 2] | 0 ? (HEAP32[i2 + 16 >> 2] | 0) == 0 : 0) ? HEAP32[i2 + 4 >> 2] & 8192 | 0 : 0) ? !(__ZSt18uncaught_exceptionv() | 0) : 0) ? (i2 = HEAP32[i1 >> 2] | 0, i2 = HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0, (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i2) | 0) == -1) : 0) {
  i2 = HEAP32[i1 >> 2] | 0;
  i2 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 16 | 0;
  HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1;
 }
 return;
}

function __ZN4wasm22SExpressionWasmBuilder10makeBinaryERNS_7ElementENS_8BinaryOpENS_8WasmTypeE(i3, i2, i1, i4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i4 = __ZN10MixedArena5allocIN4wasm6BinaryEEEPT_v(HEAP32[i3 + 4 >> 2] | 0) | 0;
 HEAP32[i4 + 8 >> 2] = i1;
 i1 = __ZN4wasm7Element4listEv(i2) | 0;
 i1 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i3, HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i4 + 12 >> 2] = i1;
 i2 = __ZN4wasm7Element4listEv(i2) | 0;
 i3 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i3, HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] | 0) | 0;
 HEAP32[i4 + 16 >> 2] = i3;
 __ZN4wasm6Binary8finalizeEv(i4);
 return i4 | 0;
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunner13visitGetLocalEPNS_8GetLocalE(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4;
 HEAP32[i5 >> 2] = HEAP32[i2 + 8 >> 2];
 i3 = __ZNSt3__13mapIN6cashew7IStringEN4wasm7LiteralENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERS9_(HEAP32[i3 + 8 >> 2] | 0, i5) | 0;
 HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 + 4 >> 2] = HEAP32[i3 + 4 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i3 + 8 >> 2];
 HEAP32[i1 + 12 >> 2] = HEAP32[i3 + 12 >> 2];
 HEAP32[i1 + 16 >> 2] = 0;
 STACKTOP = i4;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZN4wasm16PrintSExpression13visitSetLocalEPNS_8SetLocalE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 4 | 0;
 i6 = i3;
 i5 = __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i2 + 4 >> 2] | 0, 25946, 0) | 0;
 HEAP32[i6 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
 __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i5, i4) | 0;
 __ZN4wasm16PrintSExpression9incIndentEv(i2);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i2, HEAP32[i1 + 12 >> 2] | 0);
 __ZN4wasm16PrintSExpression9decIndentEv(i2);
 STACKTOP = i3;
 return;
}

function __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i4 + 4 | 0;
 i5 = i4;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev(i3);
 HEAP32[i3 >> 2] = 8516;
 HEAP32[i3 + 32 >> 2] = i1;
 __ZNSt3__16localeC2ERKS0_(i6, i3 + 4 | 0);
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 44888) | 0;
 __ZNSt3__16localeD2Ev(i5);
 HEAP32[i3 + 36 >> 2] = i1;
 HEAP32[i3 + 40 >> 2] = i2;
 i2 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 127](i1) | 0) & 1;
 HEAP8[i3 + 44 >> 0] = i2;
 STACKTOP = i4;
 return;
}

function __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i4 + 4 | 0;
 i5 = i4;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i3);
 HEAP32[i3 >> 2] = 8388;
 HEAP32[i3 + 32 >> 2] = i1;
 __ZNSt3__16localeC2ERKS0_(i6, i3 + 4 | 0);
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i5, 44880) | 0;
 __ZNSt3__16localeD2Ev(i5);
 HEAP32[i3 + 36 >> 2] = i1;
 HEAP32[i3 + 40 >> 2] = i2;
 i2 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 127](i1) | 0) & 1;
 HEAP8[i3 + 44 >> 0] = i2;
 STACKTOP = i4;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 12 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 12 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0;
 L1 : do switch (HEAP32[i2 + 4 >> 2] & 176 | 0) {
 case 16:
  {
   i2 = HEAP8[i1 >> 0] | 0;
   switch (i2 << 24 >> 24) {
   case 43:
   case 45:
    {
     i1 = i1 + 1 | 0;
     break L1;
    }
   default:
    {}
   }
   if ((i3 - i1 | 0) > 1 & i2 << 24 >> 24 == 48) {
    switch (HEAP8[i1 + 1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      i4 = 7;
      break L1;
     }
    }
    i1 = i1 + 2 | 0;
   } else i4 = 7;
   break;
  }
 case 32:
  {
   i1 = i3;
   break;
  }
 default:
  i4 = 7;
 } while (0);
 return i1 | 0;
}

function __ZN4wasm12PassRegistry10createPassENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_(i2, i1) | 0) == (i2 + 4 | 0)) i1 = 0; else i1 = __ZNKSt3__18functionIFPN4wasm4PassEvEEclEv((__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_(i2, i1) | 0) + 16 | 0) | 0;
 return i1 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE4findIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = i2 + 4 | 0;
 i2 = __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_SK_SK_(i2, i3, HEAP32[i1 >> 2] | 0, i1) | 0;
 if ((i2 | 0) != (i1 | 0) ? !(__ZNK6cashew7IStringltERKS0_(i3, i2 + 16 | 0) | 0) : 0) i1 = i2;
 return i1 | 0;
}

function __ZN4wasm6getSigENS_8WasmTypeERNSt3__16vectorIPNS_10ExpressionENS1_9allocatorIS4_EEEE(i4, i2, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i4 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i4, __ZN4wasm6getSigENS_8WasmTypeE(i2) | 0);
 i2 = HEAP32[i3 + 4 >> 2] | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i4, __ZN4wasm6getSigENS_8WasmTypeE(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0) | 0);
  i1 = i1 + 4 | 0;
 }
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i4, i7, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i3, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 31 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i4, i7, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i3, 3) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 366 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i4, i7, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i3, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 31 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i4, i7, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i3, 3) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 366 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 13 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1 + -1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 13 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1 + -1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function _frexp(d1, i5) {
 d1 = +d1;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i4 = _bitshift64Lshr(i2 | 0, i3 | 0, 52) | 0;
 i4 = i4 & 2047;
 switch (i4 | 0) {
 case 0:
  {
   if (d1 != 0.0) {
    d1 = +_frexp(d1 * 18446744073709551616.0, i5);
    i2 = (HEAP32[i5 >> 2] | 0) + -64 | 0;
   } else i2 = 0;
   HEAP32[i5 >> 2] = i2;
   break;
  }
 case 2047:
  break;
 default:
  {
   HEAP32[i5 >> 2] = i4 + -1022;
   HEAP32[tempDoublePtr >> 2] = i2;
   HEAP32[tempDoublePtr + 4 >> 2] = i3 & -2146435073 | 1071644672;
   d1 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +d1;
}

function __ZN6cashew12ValueBuilder10makeStringENS_7IStringE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i2 + 8 | 0;
 i6 = i2 + 4 | 0;
 i5 = i2;
 i4 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i7 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41132) | 0;
 HEAP32[i6 >> 2] = i7;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 i4 = __ZN6cashew5Value9push_backENS_3RefE(i4, i3) | 0;
 i1 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i1) | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i4, i3) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm7LiteralEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) return; else {
  __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm7LiteralEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(i2, HEAP32[i1 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm7LiteralEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(i2, HEAP32[i1 + 4 >> 2] | 0);
  __ZdlPv(i1);
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 1) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 7 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 61 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 60 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 1) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 7 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 61 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 60 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPN4wasm12CallIndirectEN6cashew7IStringEEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSI_SI_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZN6cashew12ValueBuilder8makeNameENS_7IStringE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i2 + 8 | 0;
 i6 = i2 + 4 | 0;
 i5 = i2;
 i4 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i7 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41056) | 0;
 HEAP32[i6 >> 2] = i7;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 i4 = __ZN6cashew5Value9push_backENS_3RefE(i4, i3) | 0;
 i1 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i1) | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i4, i3) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZN4wasm12FunctionTypeeqERS0_(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0, i4 = 0, i5 = 0;
 L1 : do if (((HEAP32[i3 >> 2] | 0) == (HEAP32[i2 >> 2] | 0) ? (HEAP32[i3 + 4 >> 2] | 0) == (HEAP32[i2 + 4 >> 2] | 0) : 0) ? (i5 = HEAP32[i3 + 8 >> 2] | 0, i1 = (HEAP32[i3 + 12 >> 2] | 0) - i5 | 0, i3 = HEAP32[i2 + 8 >> 2] | 0, i4 = i3, i5, (i1 | 0) == ((HEAP32[i2 + 12 >> 2] | 0) - i3 | 0)) : 0) {
  i1 = i1 >> 2;
  i2 = 0;
  while (1) {
   if (i2 >>> 0 >= i1 >>> 0) {
    i1 = 1;
    break L1;
   }
   if ((HEAP32[i5 + (i2 << 2) >> 2] | 0) == (HEAP32[i4 + (i2 << 2) >> 2] | 0)) i2 = i2 + 1 | 0; else {
    i1 = 0;
    break;
   }
  }
 } else i1 = 0; while (0);
 return i1 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 24 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 2) | 0;
 i2 = HEAP32[i6 >> 2] | 0;
 if ((i1 | 0) < 24 & (i2 & 4 | 0) == 0) HEAP32[i7 >> 2] = i1; else HEAP32[i6 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function _ungetc(i1, i5) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 do if ((i1 | 0) != -1) {
  if ((HEAP32[i5 + 76 >> 2] | 0) > -1) i4 = ___lockfile(i5) | 0; else i4 = 0;
  if (!((HEAP32[i5 + 8 >> 2] | 0) == 0 ? (___toread(i5) | 0) != 0 : 0)) i6 = 6;
  if ((i6 | 0) == 6 ? (i2 = i5 + 4 | 0, i3 = HEAP32[i2 >> 2] | 0, i3 >>> 0 > ((HEAP32[i5 + 44 >> 2] | 0) + -8 | 0) >>> 0) : 0) {
   i6 = i3 + -1 | 0;
   HEAP32[i2 >> 2] = i6;
   HEAP8[i6 >> 0] = i1;
   HEAP32[i5 >> 2] = HEAP32[i5 >> 2] & -17;
   if (!i4) break;
   ___unlockfile(i5);
   break;
  }
  if (i4) {
   ___unlockfile(i5);
   i1 = -1;
  } else i1 = -1;
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm7LiteralEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = i2 + 4 | 0;
 i2 = __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_SJ_SJ_(i2, i3, HEAP32[i1 >> 2] | 0, i1) | 0;
 if ((i2 | 0) != (i1 | 0) ? !(__ZNK6cashew7IStringltERKS0_(i3, i2 + 16 | 0) | 0) : 0) i1 = i2;
 return i1 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE13parseParennedERPc(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i3);
 i1 = HEAP32[i3 >> 2] | 0;
 if ((HEAP8[i1 >> 0] | 0) != 40) ___assert_fail(23584, 23426, 896, 23792);
 HEAP32[i3 >> 2] = i1 + 1;
 i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i2, i3, 38469) | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i3);
 i2 = HEAP32[i3 >> 2] | 0;
 if ((HEAP8[i2 >> 0] | 0) == 41) {
  HEAP32[i3 >> 2] = i2 + 1;
  return i1 | 0;
 } else ___assert_fail(23806, 23426, 900, 23792);
 return 0;
}

function __ZZN4wasm15RemoveUnusedBrs7visitIfEPNS_2IfEENKUlPNS_10ExpressionEbE_clES4_b(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i1 = __ZZN4wasm15RemoveUnusedBrs7visitIfEPNS_2IfEENKUlPNS_10ExpressionEE_clES4_(HEAP32[i1 >> 2] | 0, i5) | 0;
 if ((((i1 | 0) != 0 ? (i2 = __ZN4wasm10Expression4castINS_5BlockEEEPT_v(i5) | 0, (HEAP32[i1 >> 2] | 0) == 4) : 0) ? (HEAP32[i1 + 16 >> 2] | 0) == 0 : 0) ? (i3 = HEAP32[i1 + 12 >> 2] | 0, (i3 | 0) != 0) : 0) {
  if (i4) {
   i5 = HEAP32[i2 + 12 >> 2] | 0;
   HEAP32[i5 + (((HEAP32[i2 + 16 >> 2] | 0) - i5 >> 2) + -1 << 2) >> 2] = i3;
  }
  i1 = HEAP32[i1 + 8 >> 2] | 0;
 } else i1 = 0;
 return i1 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_8FunctionEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function _atol(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 while (1) {
  i2 = i1 + 1 | 0;
  if (!(_isspace(HEAP8[i1 >> 0] | 0) | 0)) break; else i1 = i2;
 }
 i3 = HEAP8[i1 >> 0] | 0;
 switch (i3 << 24 >> 24 | 0) {
 case 45:
  {
   i4 = 1;
   i5 = 5;
   break;
  }
 case 43:
  {
   i4 = 0;
   i5 = 5;
   break;
  }
 default:
  i4 = 0;
 }
 if ((i5 | 0) == 5) {
  i1 = i2;
  i3 = HEAP8[i2 >> 0] | 0;
 }
 i2 = (i3 << 24 >> 24) + -48 | 0;
 if (i2 >>> 0 < 10) {
  i3 = i1;
  i1 = 0;
  do {
   i3 = i3 + 1 | 0;
   i1 = (i1 * 10 | 0) - i2 | 0;
   i2 = (HEAP8[i3 >> 0] | 0) + -48 | 0;
  } while (i2 >>> 0 < 10);
 } else i1 = 0;
 return (i4 | 0 ? i1 : 0 - i1 | 0) | 0;
}

function _atoi(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 while (1) {
  i2 = i1 + 1 | 0;
  if (!(_isspace(HEAP8[i1 >> 0] | 0) | 0)) break; else i1 = i2;
 }
 i3 = HEAP8[i1 >> 0] | 0;
 switch (i3 << 24 >> 24 | 0) {
 case 45:
  {
   i4 = 1;
   i5 = 5;
   break;
  }
 case 43:
  {
   i4 = 0;
   i5 = 5;
   break;
  }
 default:
  i4 = 0;
 }
 if ((i5 | 0) == 5) {
  i1 = i2;
  i3 = HEAP8[i2 >> 0] | 0;
 }
 i2 = (i3 << 24 >> 24) + -48 | 0;
 if (i2 >>> 0 < 10) {
  i3 = i1;
  i1 = 0;
  do {
   i3 = i3 + 1 | 0;
   i1 = (i1 * 10 | 0) - i2 | 0;
   i2 = (HEAP8[i3 >> 0] | 0) + -48 | 0;
  } while (i2 >>> 0 < 10);
 } else i1 = 0;
 return (i4 | 0 ? i1 : 0 - i1 | 0) | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameENS2_8WasmTypeEEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSG_SG_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ImportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ExportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSH_SH_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(i4, i2, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i5 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i4 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i5 = _strlen(i2) | 0;
 i1 = HEAP8[i3 >> 0] | 0;
 i1 = (i1 & 1) == 0 ? (i1 & 255) >>> 1 : HEAP32[i3 + 4 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj(i4, i2, i5, i1 + i5 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(i4, (HEAP8[i3 >> 0] & 1) == 0 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0, i1) | 0;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameENS2_8WasmTypeEEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) return; else {
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameENS2_8WasmTypeEEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(i2, HEAP32[i1 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameENS2_8WasmTypeEEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(i2, HEAP32[i1 + 4 >> 2] | 0);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 while (1) {
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (i1 | 0)) break;
  i3 = i3 + -16 | 0;
  HEAP32[i2 >> 2] = i3;
  __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i3);
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[HEAP32[i4 + 16 >> 2] >> 2] | 0, i1, (HEAP32[i4 + 12 >> 2] | 0) - i1 | 0);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = i2 + 4 | 0;
 i2 = __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_SJ_SJ_(i2, i3, HEAP32[i1 >> 2] | 0, i1) | 0;
 if ((i2 | 0) != (i1 | 0) ? !(__ZNK6cashew7IStringltERKS0_(i3, i2 + 16 | 0) | 0) : 0) i1 = i2;
 return i1 | 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN4wasm12PassRegistry8PassInfoENS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE25__construct_node_with_keyERSD_(i6, i2, i1) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i4 = __Znwj(72) | 0;
 i5 = i4;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i4 + 16 | 0, i1);
 i1 = i2 + 4 | 0;
 i2 = i4 + 32 | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) == 3) break;
  HEAP32[i2 + (i3 << 2) >> 2] = 0;
  i3 = i3 + 1 | 0;
 }
 HEAP32[i4 + 64 >> 2] = 0;
 HEAP32[i6 >> 2] = i5;
 i6 = i6 + 4 | 0;
 HEAP32[i6 >> 2] = i1;
 HEAP32[i6 + 4 >> 2] = 257;
 return;
}

function ___divdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = i2 >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i9 = ((i2 | 0) < 0 ? -1 : 0) >> 31 | ((i2 | 0) < 0 ? -1 : 0) << 1;
 i6 = i4 >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i5 = ((i4 | 0) < 0 ? -1 : 0) >> 31 | ((i4 | 0) < 0 ? -1 : 0) << 1;
 i8 = _i64Subtract(i10 ^ i1 | 0, i9 ^ i2 | 0, i10 | 0, i9 | 0) | 0;
 i7 = tempRet0;
 i1 = i6 ^ i10;
 i2 = i5 ^ i9;
 return _i64Subtract((___udivmoddi4(i8, i7, _i64Subtract(i6 ^ i3 | 0, i5 ^ i4 | 0, i6 | 0, i5 | 0) | 0, tempRet0, 0) | 0) ^ i1 | 0, tempRet0 ^ i2 | 0, i1 | 0, i2 | 0) | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSF_SF_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZN4wasm12PassRegistry8PassInfoaSEOS1_(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 if (!(HEAP8[i3 >> 0] & 1)) {
  HEAP8[i3 + 1 >> 0] = 0;
  HEAP8[i3 >> 0] = 0;
 } else {
  HEAP8[HEAP32[i3 + 8 >> 2] >> 0] = 0;
  HEAP32[i3 + 4 >> 2] = 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i3, 0);
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__18functionIFPN4wasm4PassEvEEaSEOS5_(i3 + 16 | 0, i1 + 16 | 0) | 0;
 return i3 | 0;
}

function __ZN4wasm10WasmWalkerINS_17RemoveUnusedNamesEvE4walkERPNS_10ExpressionE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7;
 i2 = HEAP32[i5 >> 2] | 0;
 if (i2 | 0 ? (HEAP32[i1 >> 2] = 4120, HEAP32[i1 + 4 >> 2] = i6, __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEEEvE5visitEPNS_10ExpressionE(i1, i2), __ZN4wasm11WasmVisitorINS_17RemoveUnusedNamesEvE5visitEPNS_10ExpressionE(i6, HEAP32[i5 >> 2] | 0), i3 = i6 + 4 | 0, i4 = HEAP32[i3 >> 2] | 0, i4 | 0) : 0) {
  HEAP32[i5 >> 2] = i4;
  HEAP32[i3 >> 2] = 0;
 }
 STACKTOP = i7;
 return;
}

function __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) {
  i2 = i4 + 4 | 0;
  while (1) {
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 | 0) == (i1 | 0)) break;
   i3 = i3 + -16 | 0;
   HEAP32[i2 >> 2] = i3;
   __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i3);
  }
  i3 = HEAP32[i4 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[i4 + 12 >> 2] | 0, i3, (HEAP32[i4 + 8 >> 2] | 0) - i3 | 0);
 }
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j(i1, i10, i2, i8, i9) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = i8;
 i6 = i1 + 8 | 0;
 i1 = 0;
 i5 = 0;
 L1 : while (1) {
  if ((i2 | 0) == (i8 | 0) | i5 >>> 0 >= i9 >>> 0) break;
  i4 = _uselocale(HEAP32[i6 >> 2] | 0) | 0;
  i3 = _mbrlen(i2, i7 - i2 | 0, i10) | 0;
  if (i4 | 0) _uselocale(i4) | 0;
  switch (i3 | 0) {
  case -2:
  case -1:
   break L1;
  case 0:
   {
    i2 = i2 + 1 | 0;
    i3 = 1;
    break;
   }
  default:
   i2 = i2 + i3 | 0;
  }
  i1 = i3 + i1 | 0;
  i5 = i5 + 1 | 0;
 }
 return i1 | 0;
}

function __ZN4wasm11WasmVisitorINS_14PostEmscriptenEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 20:
 case 19:
 case 18:
 case 17:
 case 16:
 case 15:
 case 14:
 case 13:
 case 10:
 case 9:
 case 8:
 case 7:
 case 6:
 case 5:
 case 4:
 case 3:
 case 2:
 case 1:
  break;
 case 11:
  {
   __ZN4wasm14PostEmscripten13visitMemoryOpINS_4LoadEEEvPT_(i2 + -4 | 0, i1);
   break;
  }
 case 12:
  {
   __ZN4wasm14PostEmscripten13visitMemoryOpINS_5StoreEEEvPT_(i2 + -4 | 0, i1);
   break;
  }
 default:
  {}
 }
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSF_SF_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZN4wasm16PrintSExpression7visitIfEPNS_2IfE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i3 = i1 + 16 | 0;
 __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i2 + 4 >> 2] | 0, HEAP32[i3 >> 2] | 0 ? 25803 : 30637, 0) | 0;
 __ZN4wasm16PrintSExpression9incIndentEv(i2);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i2, HEAP32[i1 + 8 >> 2] | 0);
 __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i2, HEAP32[i1 + 12 >> 2] | 0);
 i1 = HEAP32[i3 >> 2] | 0;
 if (i1 | 0) __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i2, i1);
 __ZN4wasm16PrintSExpression9decIndentEv(i2);
 return;
}

function __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE13shrink_to_fitEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i4;
 i5 = HEAP32[i3 >> 2] | 0;
 i1 = (HEAP32[i3 + 4 >> 2] | 0) - i5 | 0;
 if (((HEAP32[i3 + 8 >> 2] | 0) - i5 | 0) >>> 0 > i1 >>> 0) {
  i5 = i1 >> 2;
  __ZNSt3__114__split_bufferIN6cashew3RefERNS_9allocatorIS2_EEEC2EjjS5_(i2, i5, i5, i3 + 8 | 0);
  __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i3, i2);
  __ZNSt3__114__split_bufferIN6cashew3RefERNS_9allocatorIS2_EEED2Ev(i2);
 }
 STACKTOP = i4;
 return;
}

function __ZN4wasm10WasmWalkerINS_15RemoveUnusedBrsEvE4walkERPNS_10ExpressionE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7;
 i2 = HEAP32[i5 >> 2] | 0;
 if (i2 | 0 ? (HEAP32[i1 >> 2] = 3992, HEAP32[i1 + 4 >> 2] = i6, __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEEEvE5visitEPNS_10ExpressionE(i1, i2), __ZN4wasm11WasmVisitorINS_15RemoveUnusedBrsEvE5visitEPNS_10ExpressionE(i6, HEAP32[i5 >> 2] | 0), i3 = i6 + 4 | 0, i4 = HEAP32[i3 >> 2] | 0, i4 | 0) : 0) {
  HEAP32[i5 >> 2] = i4;
  HEAP32[i3 >> 2] = 0;
 }
 STACKTOP = i7;
 return;
}

function ___fflush_unlocked(i7) {
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i1 = i7 + 20 | 0;
 i5 = i7 + 28 | 0;
 if ((HEAP32[i1 >> 2] | 0) >>> 0 > (HEAP32[i5 >> 2] | 0) >>> 0 ? (FUNCTION_TABLE_iiii[HEAP32[i7 + 36 >> 2] & 31](i7, 0, 0) | 0, (HEAP32[i1 >> 2] | 0) == 0) : 0) i1 = -1; else {
  i6 = i7 + 4 | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  i3 = i7 + 8 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  if (i2 >>> 0 < i4 >>> 0) FUNCTION_TABLE_iiii[HEAP32[i7 + 40 >> 2] & 31](i7, i2 - i4 | 0, 1) | 0;
  HEAP32[i7 + 16 >> 2] = 0;
  HEAP32[i5 >> 2] = 0;
  HEAP32[i1 >> 2] = 0;
  HEAP32[i3 >> 2] = 0;
  HEAP32[i6 >> 2] = 0;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZN4wasm11WasmVisitorINS_17RemoveUnusedNamesEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZN4wasm17RemoveUnusedNames10visitBlockEPNS_5BlockE(i2 + -4 | 0, i1);
   break;
  }
 case 20:
 case 19:
 case 18:
 case 17:
 case 16:
 case 15:
 case 14:
 case 13:
 case 12:
 case 11:
 case 10:
 case 9:
 case 8:
 case 7:
 case 6:
 case 5:
 case 3:
 case 2:
  break;
 case 4:
  {
   __ZN4wasm17RemoveUnusedNames10visitBreakEPNS_5BreakE(i2 + -4 | 0, i1);
   break;
  }
 default:
  {}
 }
 return;
}

function __ZN4wasm11WasmVisitorINS_13ReorderLocalsEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 20:
 case 19:
 case 18:
 case 17:
 case 16:
 case 15:
 case 14:
 case 13:
 case 12:
 case 11:
 case 8:
 case 7:
 case 6:
 case 5:
 case 4:
 case 3:
 case 2:
 case 1:
  break;
 case 9:
  {
   __ZN4wasm13ReorderLocals13visitGetLocalEPNS_8GetLocalE(i2 + -4 | 0, i1);
   break;
  }
 case 10:
  {
   __ZN4wasm13ReorderLocals13visitSetLocalEPNS_8SetLocalE(i2 + -4 | 0, i1);
   break;
  }
 default:
  {}
 }
 return;
}

function __ZN4wasm10WasmWalkerINS_14SimplifyLocalsEvE4walkERPNS_10ExpressionE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7;
 i2 = HEAP32[i5 >> 2] | 0;
 if (i2 | 0 ? (HEAP32[i1 >> 2] = 4376, HEAP32[i1 + 4 >> 2] = i6, __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEEEvE5visitEPNS_10ExpressionE(i1, i2), __ZN4wasm11WasmVisitorINS_14SimplifyLocalsEvE5visitEPNS_10ExpressionE(i6, HEAP32[i5 >> 2] | 0), i3 = i6 + 4 | 0, i4 = HEAP32[i3 >> 2] | 0, i4 | 0) : 0) {
  HEAP32[i5 >> 2] = i4;
  HEAP32[i3 >> 2] = 0;
 }
 STACKTOP = i7;
 return;
}

function __ZN4wasm10WasmWalkerINS_14PostEmscriptenEvE4walkERPNS_10ExpressionE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7;
 i2 = HEAP32[i5 >> 2] | 0;
 if (i2 | 0 ? (HEAP32[i1 >> 2] = 4248, HEAP32[i1 + 4 >> 2] = i6, __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEEEvE5visitEPNS_10ExpressionE(i1, i2), __ZN4wasm11WasmVisitorINS_14PostEmscriptenEvE5visitEPNS_10ExpressionE(i6, HEAP32[i5 >> 2] | 0), i3 = i6 + 4 | 0, i4 = HEAP32[i3 >> 2] | 0, i4 | 0) : 0) {
  HEAP32[i5 >> 2] = i4;
  HEAP32[i3 >> 2] = 0;
 }
 STACKTOP = i7;
 return;
}

function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj(i2, i5, i6) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i8;
 if ((i2 | 0) == (i5 | 0)) {
  HEAP32[i6 >> 2] = 4;
  d1 = 0.0;
 } else {
  i3 = ___errno_location() | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = 0;
  d1 = +_strtold_l(i2, i7, __ZNSt3__16__clocEv() | 0);
  i2 = HEAP32[i3 >> 2] | 0;
  if (!i2) HEAP32[i3 >> 2] = i4;
  if ((HEAP32[i7 >> 2] | 0) == (i5 | 0)) {
   if ((i2 | 0) == 34) HEAP32[i6 >> 2] = 4;
  } else {
   HEAP32[i6 >> 2] = 4;
   d1 = 0.0;
  }
 }
 STACKTOP = i8;
 return +d1;
}

function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj(i2, i5, i6) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i8;
 if ((i2 | 0) == (i5 | 0)) {
  HEAP32[i6 >> 2] = 4;
  d1 = 0.0;
 } else {
  i3 = ___errno_location() | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = 0;
  d1 = +_strtold_l(i2, i7, __ZNSt3__16__clocEv() | 0);
  i2 = HEAP32[i3 >> 2] | 0;
  if (!i2) HEAP32[i3 >> 2] = i4;
  if ((HEAP32[i7 >> 2] | 0) == (i5 | 0)) {
   if ((i2 | 0) == 34) HEAP32[i6 >> 2] = 4;
  } else {
   HEAP32[i6 >> 2] = 4;
   d1 = 0.0;
  }
 }
 STACKTOP = i8;
 return +d1;
}

function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj(i2, i5, i6) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var d1 = 0.0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i8;
 if ((i2 | 0) == (i5 | 0)) {
  HEAP32[i6 >> 2] = 4;
  d1 = 0.0;
 } else {
  i3 = ___errno_location() | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = 0;
  d1 = +_strtold_l(i2, i7, __ZNSt3__16__clocEv() | 0);
  i2 = HEAP32[i3 >> 2] | 0;
  if (!i2) HEAP32[i3 >> 2] = i4;
  if ((HEAP32[i7 >> 2] | 0) == (i5 | 0)) {
   if ((i2 | 0) == 34) HEAP32[i6 >> 2] = 4;
  } else {
   HEAP32[i6 >> 2] = 4;
   d1 = 0.0;
  }
 }
 STACKTOP = i8;
 return +d1;
}

function __ZN4wasm22SExpressionWasmBuilder8makeCallERNS_7ElementE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = __ZN10MixedArena5allocIN4wasm4CallEEEPT_v(HEAP32[i2 + 4 >> 2] | 0) | 0;
 i4 = i3 + 20 | 0;
 i5 = __ZN4wasm7Element4listEv(i1) | 0;
 i5 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i5 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i4 >> 2] = i5;
 i4 = __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(i2 + 52 | 0, i4) | 0;
 HEAP32[i3 + 4 >> 2] = HEAP32[i4 >> 2];
 __ZN4wasm22SExpressionWasmBuilder17parseCallOperandsINS_4CallEEEvRNS_7ElementEjPT_(i2, i1, 2, i3);
 return i3 | 0;
}

function _strtox_17(i7, i6, i1) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 var d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i5 = i8;
 i3 = i5;
 i4 = i3 + 112 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 i3 = i5 + 4 | 0;
 HEAP32[i3 >> 2] = i7;
 i4 = i5 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i5 + 44 >> 2] = i7;
 HEAP32[i5 + 76 >> 2] = -1;
 ___shlim(i5, 0);
 d2 = +___floatscan(i5, i1, 1);
 i1 = (HEAP32[i3 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) + (HEAP32[i5 + 108 >> 2] | 0) | 0;
 if (i6 | 0) HEAP32[i6 >> 2] = i1 | 0 ? i7 + i1 | 0 : i7;
 STACKTOP = i8;
 return +d2;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ImportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = i2 + 4 | 0;
 i2 = __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ImportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_SJ_SJ_(i2, i3, HEAP32[i1 >> 2] | 0, i1) | 0;
 if ((i2 | 0) != (i1 | 0) ? !(__ZNK6cashew7IStringltERKS0_(i3, i2 + 16 | 0) | 0) : 0) i1 = i2;
 return i1 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ExportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = i2 + 4 | 0;
 i2 = __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ExportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_SJ_SJ_(i2, i3, HEAP32[i1 >> 2] | 0, i1) | 0;
 if ((i2 | 0) != (i1 | 0) ? !(__ZNK6cashew7IStringltERKS0_(i3, i2 + 16 | 0) | 0) : 0) i1 = i2;
 return i1 | 0;
}

function __ZN4wasm10WasmWalkerINS_13ReorderLocalsEvE4walkERPNS_10ExpressionE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7;
 i2 = HEAP32[i5 >> 2] | 0;
 if (i2 | 0 ? (HEAP32[i1 >> 2] = 4504, HEAP32[i1 + 4 >> 2] = i6, __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEEEvE5visitEPNS_10ExpressionE(i1, i2), __ZN4wasm11WasmVisitorINS_13ReorderLocalsEvE5visitEPNS_10ExpressionE(i6, HEAP32[i5 >> 2] | 0), i3 = i6 + 4 | 0, i4 = HEAP32[i3 >> 2] | 0, i4 | 0) : 0) {
  HEAP32[i5 >> 2] = i4;
  HEAP32[i3 >> 2] = 0;
 }
 STACKTOP = i7;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0;
 i5 = i1 + 12 | 0;
 i2 = HEAP8[i5 >> 0] | 0;
 i4 = (i2 & 1) == 0;
 i2 = __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i1, i4 ? i5 + 1 | 0 : HEAP32[i1 + 20 >> 2] | 0, i4 ? (i2 & 255) >>> 1 : HEAP32[i1 + 16 >> 2] | 0) | 0;
 HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__114__split_bufferINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEERNS8_ISD_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 while (1) {
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (i1 | 0)) break;
  i3 = i3 + -20 | 0;
  HEAP32[i2 >> 2] = i3;
  __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEED2Ev(i3);
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZN6cashew12ValueBuilder7makeVarEb(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i2 + 8 | 0;
 i5 = i2 + 4 | 0;
 i4 = i2;
 i3 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i6 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41060) | 0;
 HEAP32[i5 >> 2] = i6;
 HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
 i3 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 i5 = __ZN6cashew12ValueBuilder12makeRawArrayEi(0) | 0;
 HEAP32[i4 >> 2] = i5;
 HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZNSt3__113__vector_baseINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEENS8_ISD_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) {
  i2 = i4 + 4 | 0;
  while (1) {
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 | 0) == (i1 | 0)) break;
   i3 = i3 + -20 | 0;
   HEAP32[i2 >> 2] = i3;
   __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEED2Ev(i3);
  }
  __ZdlPv(HEAP32[i4 >> 2] | 0);
 }
 return;
}

function __ZN6cashew12ValueBuilder12makeToplevelEv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i2 + 8 | 0;
 i5 = i2 + 4 | 0;
 i4 = i2;
 i3 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i6 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41036) | 0;
 HEAP32[i5 >> 2] = i6;
 HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
 i3 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 i5 = __ZN6cashew12ValueBuilder12makeRawArrayEi(0) | 0;
 HEAP32[i4 >> 2] = i5;
 HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE4dumpEPKcPc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i6;
 i5 = HEAP32[1133] | 0;
 HEAP32[i3 >> 2] = i2;
 _fprintf(i5, 23506, i3) | 0;
 i3 = 200;
 i2 = 2;
 L1 : while (1) {
  i4 = HEAP8[i1 >> 0] | 0;
  switch (i4 << 24 >> 24) {
  case 0:
   break L1;
  case 10:
   {
    i2 = i2 + -1 | 0;
    if (!i2) break L1;
    break;
   }
  default:
   {}
  }
  i3 = i3 + -1 | 0;
  if (!i3) break;
  _fputc(i4 << 24 >> 24, i5) | 0;
  i1 = i1 + 1 | 0;
 }
 _fwrite(23522, 2, 1, i5) | 0;
 STACKTOP = i6;
 return;
}

function __ZN6cashew12ValueBuilder10makeObjectEv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i2 + 8 | 0;
 i5 = i2 + 4 | 0;
 i4 = i2;
 i3 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i6 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41356) | 0;
 HEAP32[i5 >> 2] = i6;
 HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
 i3 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 i5 = __ZN6cashew12ValueBuilder12makeRawArrayEi(0) | 0;
 HEAP32[i4 >> 2] = i5;
 HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZN4wasm16PrintSExpression11visitReturnEPNS_6ReturnE(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0;
 i2 = i3 + 4 | 0;
 __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i2 >> 2] | 0, 30630, 0) | 0;
 i1 = i1 + 8 | 0;
 i4 = HEAP32[i1 >> 2] | 0;
 if ((i4 | 0) != 0 ? (HEAP32[i4 >> 2] | 0) != 19 : 0) {
  __ZN4wasm16PrintSExpression9incIndentEv(i3);
  __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i3, HEAP32[i1 >> 2] | 0);
  __ZN4wasm16PrintSExpression9decIndentEv(i3);
 } else __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i2 >> 2] | 0, 38469) | 0;
 return;
}

function __ZN4wasm10WasmWalkerINS_11MergeBlocksEvE4walkERPNS_10ExpressionE(i6, i5) {
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i7;
 i2 = HEAP32[i5 >> 2] | 0;
 if (i2 | 0 ? (HEAP32[i1 >> 2] = 3704, HEAP32[i1 + 4 >> 2] = i6, __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEEEvE5visitEPNS_10ExpressionE(i1, i2), __ZN4wasm11WasmVisitorINS_11MergeBlocksEvE5visitEPNS_10ExpressionE(i6, HEAP32[i5 >> 2] | 0), i3 = i6 + 4 | 0, i4 = HEAP32[i3 >> 2] | 0, i4 | 0) : 0) {
  HEAP32[i5 >> 2] = i4;
  HEAP32[i3 >> 2] = 0;
 }
 STACKTOP = i7;
 return;
}

function __ZN6cashew12ValueBuilder9makeBlockEv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i2 + 8 | 0;
 i5 = i2 + 4 | 0;
 i4 = i2;
 i3 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i6 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41044) | 0;
 HEAP32[i5 >> 2] = i6;
 HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
 i3 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 i5 = __ZN6cashew12ValueBuilder12makeRawArrayEi(0) | 0;
 HEAP32[i4 >> 2] = i5;
 HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZN6cashew12ValueBuilder9makeArrayEv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i2 + 8 | 0;
 i5 = i2 + 4 | 0;
 i4 = i2;
 i3 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i6 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41352) | 0;
 HEAP32[i5 >> 2] = i6;
 HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
 i3 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 i5 = __ZN6cashew12ValueBuilder12makeRawArrayEi(0) | 0;
 HEAP32[i4 >> 2] = i5;
 HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE7reserveEj(i4, i2) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i5;
 i1 = HEAP32[i4 >> 2] | 0;
 if ((HEAP32[i4 + 8 >> 2] | 0) - i1 >> 4 >>> 0 < i2 >>> 0) {
  __ZNSt3__114__split_bufferIN4wasm7LiteralERNS_9allocatorIS2_EEEC2EjjS5_(i3, i2, (HEAP32[i4 + 4 >> 2] | 0) - i1 >> 4, i4 + 8 | 0);
  __ZNSt3__16vectorIN4wasm7LiteralENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i4, i3);
  __ZNSt3__114__split_bufferIN4wasm7LiteralERNS_9allocatorIS2_EEED2Ev(i3);
 }
 STACKTOP = i5;
 return;
}

function __ZN4wasm11WasmVisitorINS_15RemoveUnusedBrsEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZN4wasm15RemoveUnusedBrs10visitBlockEPNS_5BlockE(i2 + -4 | 0, i1);
   break;
  }
 case 2:
  {
   __ZN4wasm15RemoveUnusedBrs7visitIfEPNS_2IfE(i2 + -4 | 0, i1);
   break;
  }
 case 20:
 case 19:
 case 18:
 case 17:
 case 16:
 case 15:
 case 14:
 case 13:
 case 12:
 case 11:
 case 10:
 case 9:
 case 8:
 case 7:
 case 6:
 case 5:
 case 4:
 case 3:
  break;
 default:
  {}
 }
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE4findIS3_EENS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEiEERKT_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = i2 + 4 | 0;
 i2 = __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEiEERKT_SH_SH_(i2, i3, HEAP32[i1 >> 2] | 0, i1) | 0;
 if ((i2 | 0) != (i1 | 0) ? !(__ZNK6cashew7IStringltERKS0_(i3, i2 + 16 | 0) | 0) : 0) i1 = i2;
 return i1 | 0;
}

function __ZN4wasm6getSigEPNS_12FunctionTypeE(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i4 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i4, __ZN4wasm6getSigENS_8WasmTypeE(HEAP32[i3 + 4 >> 2] | 0) | 0);
 i2 = HEAP32[i3 + 12 >> 2] | 0;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i4, __ZN4wasm6getSigENS_8WasmTypeE(HEAP32[i1 >> 2] | 0) | 0);
  i1 = i1 + 4 | 0;
 }
 return;
}

function __ZN6cashew12ValueBuilder24appendArgumentToFunctionENS_3RefENS_7IStringE(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i2 = i5;
 if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i4, 0) | 0, 41040) | 0) {
  i4 = __ZN6cashew3RefixEj(i4, 2) | 0;
  i4 = HEAP32[i4 >> 2] | 0;
  i3 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i3) | 0;
  HEAP32[i2 >> 2] = i3;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  __ZN6cashew5Value9push_backENS_3RefE(i4, i1) | 0;
  STACKTOP = i5;
  return;
 } else ___assert_fail(23614, 31233, 1508, 23631);
}

function _vasprintf(i7, i6, i5) {
 i7 = i7 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i8;
 i2 = _malloc(240) | 0;
 do if (i2) {
  HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
  i1 = _vsnprintf(i2, 240, i6, i1) | 0;
  if (i1 >>> 0 < 240) {
   i6 = _realloc(i2, i1 + 1 | 0) | 0;
   HEAP32[i7 >> 2] = i6 | 0 ? i6 : i2;
   break;
  }
  _free(i2);
  if ((i1 | 0) >= 0 ? (i4 = i1 + 1 | 0, i3 = _malloc(i4) | 0, HEAP32[i7 >> 2] = i3, (i3 | 0) != 0) : 0) i1 = _vsnprintf(i3, i4, i6, i5) | 0; else i1 = -1;
 } else i1 = -1; while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function _getc(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 if ((HEAP32[i4 + 76 >> 2] | 0) >= 0 ? (___lockfile(i4) | 0) != 0 : 0) {
  i1 = i4 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i1 >> 2] = i2 + 1;
   i1 = HEAPU8[i2 >> 0] | 0;
  } else i1 = ___uflow(i4) | 0;
  ___unlockfile(i4);
 } else i3 = 3;
 do if ((i3 | 0) == 3) {
  i1 = i4 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i1 >> 2] = i2 + 1;
   i1 = HEAPU8[i2 >> 0] | 0;
   break;
  } else {
   i1 = ___uflow(i4) | 0;
   break;
  }
 } while (0);
 return i1 | 0;
}

function __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE7reserveEj(i4, i2) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i5;
 i1 = HEAP32[i4 >> 2] | 0;
 if ((HEAP32[i4 + 8 >> 2] | 0) - i1 >> 2 >>> 0 < i2 >>> 0) {
  __ZNSt3__114__split_bufferIN6cashew3RefERNS_9allocatorIS2_EEEC2EjjS5_(i3, i2, (HEAP32[i4 + 4 >> 2] | 0) - i1 >> 2, i4 + 8 | 0);
  __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE(i4, i3);
  __ZNSt3__114__split_bufferIN6cashew3RefERNS_9allocatorIS2_EEED2Ev(i3);
 }
 STACKTOP = i5;
 return;
}

function _realloc(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0, i4 = 0;
 if (!i3) {
  i3 = _malloc(i2) | 0;
  return i3 | 0;
 }
 if (i2 >>> 0 > 4294967231) {
  i3 = ___errno_location() | 0;
  HEAP32[i3 >> 2] = 12;
  i3 = 0;
  return i3 | 0;
 }
 i1 = _try_realloc_chunk(i3 + -8 | 0, i2 >>> 0 < 11 ? 16 : i2 + 11 & -8) | 0;
 if (i1 | 0) {
  i3 = i1 + 8 | 0;
  return i3 | 0;
 }
 i1 = _malloc(i2) | 0;
 if (!i1) {
  i3 = 0;
  return i3 | 0;
 }
 i4 = HEAP32[i3 + -4 >> 2] | 0;
 i4 = (i4 & -8) - ((i4 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy(i1 | 0, i3 | 0, (i4 >>> 0 < i2 >>> 0 ? i4 : i2) | 0) | 0;
 _free(i3);
 i3 = i1;
 return i3 | 0;
}

function __ZN4wasm10PassRunner3addINS_7PrinterENSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEEEvRT0_(i5, i1) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i6;
 i4 = __Znwj(8) | 0;
 HEAP32[i4 >> 2] = 3732;
 HEAP32[i4 + 4 >> 2] = i1;
 HEAP32[i3 >> 2] = i4;
 i1 = i5 + 8 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i2 >>> 0 < (HEAP32[i5 + 12 >> 2] | 0) >>> 0) {
  HEAP32[i2 >> 2] = i4;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 4;
 } else __ZNSt3__16vectorIPN4wasm4PassENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(i5 + 4 | 0, i3);
 STACKTOP = i6;
 return;
}

function _memcpy(i1, i4, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((i2 | 0) >= 4096) return _emscripten_memcpy_big(i1 | 0, i4 | 0, i2 | 0) | 0;
 i3 = i1 | 0;
 if ((i1 & 3) == (i4 & 3)) {
  while (i1 & 3) {
   if (!i2) return i3 | 0;
   HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
   i1 = i1 + 1 | 0;
   i4 = i4 + 1 | 0;
   i2 = i2 - 1 | 0;
  }
  while ((i2 | 0) >= 4) {
   HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
   i1 = i1 + 4 | 0;
   i4 = i4 + 4 | 0;
   i2 = i2 - 4 | 0;
  }
 }
 while ((i2 | 0) > 0) {
  HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
  i1 = i1 + 1 | 0;
  i4 = i4 + 1 | 0;
  i2 = i2 - 1 | 0;
 }
 return i3 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) return; else {
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(i2, HEAP32[i1 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(i2, HEAP32[i1 + 4 >> 2] | 0);
  __ZdlPv(i1);
  return;
 }
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE12__deallocateEPNS_11__hash_nodeIS6_PvEE(i2, HEAP32[i2 + 8 >> 2] | 0);
 i1 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZN7AsmData8addParamEN6cashew7IStringE7AsmType(i4, i3, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __ZNSt3__113unordered_mapIN6cashew7IStringEN7AsmData5LocalENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERSB_(i4, i3) | 0;
 HEAP32[i2 >> 2] = i1;
 HEAP8[i2 + 4 >> 0] = 1;
 i1 = i4 + 24 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i4 + 28 >> 2] | 0)) __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i4 + 20 | 0, i3); else {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 4;
 }
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE4findIS3_EENS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEiEERKT_(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 i1 = i2 + 4 | 0;
 i2 = __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEiEERKT_SH_SH_(i2, i3, HEAP32[i1 >> 2] | 0, i1) | 0;
 if ((i2 | 0) != (i1 | 0) ? !(__ZNK6cashew7IStringltERKS0_(i3, i2 + 16 | 0) | 0) : 0) i1 = i2;
 return i1 | 0;
}

function __ZN7AsmData6addVarEN6cashew7IStringE7AsmType(i4, i3, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __ZNSt3__113unordered_mapIN6cashew7IStringEN7AsmData5LocalENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEEixERSB_(i4, i3) | 0;
 HEAP32[i2 >> 2] = i1;
 HEAP8[i2 + 4 >> 0] = 0;
 i1 = i4 + 36 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) == (HEAP32[i4 + 40 >> 2] | 0)) __ZNSt3__16vectorIN6cashew7IStringENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i4 + 32 | 0, i3); else {
  HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 4;
 }
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi(i7, i1, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i4 = i7 + 24 | 0;
 i5 = i7 + 28 | 0;
 i2 = i1;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i6 | 0)) break;
  i3 = HEAP32[i4 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i5 >> 2] | 0) >>> 0) {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 52 >> 2] & 31](i7, HEAP32[i2 >> 2] | 0) | 0) == -1) break;
  } else {
   i8 = HEAP32[i2 >> 2] | 0;
   HEAP32[i4 >> 2] = i3 + 4;
   HEAP32[i3 >> 2] = i8;
  }
  i2 = i2 + 4 | 0;
  i1 = i1 + 1 | 0;
 }
 return i1 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci(i7, i1, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = i7 + 12 | 0;
 i5 = i7 + 16 | 0;
 i3 = i1;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i6 | 0)) break;
  i2 = HEAP32[i4 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i5 >> 2] | 0) >>> 0) {
   HEAP32[i4 >> 2] = i2 + 1;
   i2 = HEAP8[i2 >> 0] | 0;
  } else {
   i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] & 127](i7) | 0;
   if ((i2 | 0) == -1) break;
   i2 = i2 & 255;
  }
  HEAP8[i3 >> 0] = i2;
  i3 = i3 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i1 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci(i7, i1, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i4 = i7 + 24 | 0;
 i5 = i7 + 28 | 0;
 i2 = i1;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i6 | 0)) break;
  i3 = HEAP32[i4 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i5 >> 2] | 0) >>> 0) {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i7 >> 2] | 0) + 52 >> 2] & 31](i7, HEAPU8[i2 >> 0] | 0) | 0) == -1) break;
  } else {
   i8 = HEAP8[i2 >> 0] | 0;
   HEAP32[i4 >> 2] = i3 + 1;
   HEAP8[i3 >> 0] = i8;
  }
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i1 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 4) | 0;
 if (!(HEAP32[i6 >> 2] & 4)) HEAP32[i7 >> 2] = i1 + -1900;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i4, i6, i3) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i3 = i3 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i6, i3, 4) | 0;
 if (!(HEAP32[i6 >> 2] & 4)) HEAP32[i7 >> 2] = i1 + -1900;
 STACKTOP = i5;
 return;
}

function __ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_(i4, i2, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i5 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i4 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = HEAP8[i2 >> 0] | 0;
 i5 = (i1 & 1) == 0;
 i1 = i5 ? (i1 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj(i4, i5 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0, i1, i1 + 1 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i4, i3);
 return;
}

function __ZN4wasm22SExpressionWasmBuilder9makeConstERNS_7ElementENS_8WasmTypeE(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4 + 4 | 0;
 i6 = i4;
 i1 = __ZN4wasm7Element4listEv(i1) | 0;
 i1 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i6 >> 2] = i1;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 i1 = __ZN4wasm10parseConstEN6cashew7IStringENS_8WasmTypeER10MixedArena(i5, i2, i1) | 0;
 if (!i1) __ZNKSt3__18functionIFvvEEclEv(i3 + 8 | 0);
 STACKTOP = i4;
 return i1 | 0;
}

function __ZN6cashew12ValueBuilder7makeNewENS_3RefE(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i2 + 8 | 0;
 i6 = i2 + 4 | 0;
 i5 = i2;
 i4 = __ZN6cashew12ValueBuilder12makeRawArrayEi(2) | 0;
 i7 = __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(41348) | 0;
 HEAP32[i6 >> 2] = i7;
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 i4 = __ZN6cashew5Value9push_backENS_3RefE(i4, i3) | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 i1 = __ZN6cashew5Value9push_backENS_3RefE(i4, i3) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc(i9, i5, i6, i7, i3, i4) {
 i9 = i9 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i10;
 HEAP8[i8 >> 0] = 37;
 i1 = i8 + 1 | 0;
 HEAP8[i1 >> 0] = i3;
 i2 = i8 + 2 | 0;
 HEAP8[i2 >> 0] = i4;
 HEAP8[i8 + 3 >> 0] = 0;
 if (i4 << 24 >> 24) {
  HEAP8[i1 >> 0] = i4;
  HEAP8[i2 >> 0] = i3;
 }
 i9 = i5 + (_strftime_l(i5 | 0, (HEAP32[i6 >> 2] | 0) - i5 | 0, i8 | 0, i7 | 0, HEAP32[i9 >> 2] | 0) | 0) | 0;
 HEAP32[i6 >> 2] = i9;
 STACKTOP = i10;
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE17visitCallIndirectEPNS_12CallIndirectE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i4 = i1 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i2 + 24 | 0);
 i5 = i2 + 8 | 0;
 i1 = i2 + 12 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i1 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i4 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 i2 = i3 + 12 | 0;
 i1 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
 HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ImportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE5eraseENS_21__tree_const_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEE(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0;
 i1 = HEAP32[i1 >> 2] | 0;
 i2 = __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(i1) | 0;
 if ((HEAP32[i3 >> 2] | 0) == (i1 | 0)) HEAP32[i3 >> 2] = i2;
 i4 = i3 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + -1;
 __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i3 + 4 >> 2] | 0, i1);
 __ZdlPv(i1);
 return i2 | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE17visitCallIndirectEPNS_12CallIndirectE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i4 = i1 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i2 + 24 | 0);
 i5 = i2 + 8 | 0;
 i1 = i2 + 12 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i1 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i4 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE17visitCallIndirectEPNS_12CallIndirectE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i4 = i1 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i2 + 24 | 0);
 i5 = i2 + 8 | 0;
 i1 = i2 + 12 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i1 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i4 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE17visitCallIndirectEPNS_12CallIndirectE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i4 = i1 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i2 + 24 | 0);
 i5 = i2 + 8 | 0;
 i1 = i2 + 12 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i1 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i4 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringENS2_3RefEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_NS_8equal_toIS3_EELb1EEENS_9allocatorIS5_EEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringENS2_3RefEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_NS_8equal_toIS3_EELb1EEENS_9allocatorIS5_EEE12__deallocateEPNS_11__hash_nodeIS5_PvEE(i2, HEAP32[i2 + 8 >> 2] | 0);
 i1 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE17visitCallIndirectEPNS_12CallIndirectE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i4 = i1 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i2 + 24 | 0);
 i5 = i2 + 8 | 0;
 i1 = i2 + 12 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i1 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i4 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE17visitCallIndirectEPNS_12CallIndirectE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i4 = i1 + 4 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 8 >> 2] & 127](i5, i2 + 24 | 0);
 i5 = i2 + 8 | 0;
 i1 = i2 + 12 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i1 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i4 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function ___toread(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = i3 + 74 | 0;
 i2 = HEAP8[i1 >> 0] | 0;
 HEAP8[i1 >> 0] = i2 + 255 | i2;
 i1 = i3 + 20 | 0;
 i2 = i3 + 44 | 0;
 if ((HEAP32[i1 >> 2] | 0) >>> 0 > (HEAP32[i2 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[i3 + 36 >> 2] & 31](i3, 0, 0) | 0;
 HEAP32[i3 + 16 >> 2] = 0;
 HEAP32[i3 + 28 >> 2] = 0;
 HEAP32[i1 >> 2] = 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if (i1 & 20) if (!(i1 & 4)) i1 = -1; else {
  HEAP32[i3 >> 2] = i1 | 32;
  i1 = -1;
 } else {
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i3 + 8 >> 2] = i1;
  HEAP32[i3 + 4 >> 2] = i1;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i4, i5) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i3 = 0;
 __ZNSt3__114__shared_count12__add_sharedEv(i4);
 i3 = i2 + 8 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((HEAP32[i2 + 12 >> 2] | 0) - i1 >> 2 >>> 0 > i5 >>> 0) i2 = i3; else {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj(i3, i5 + 1 | 0);
  i2 = i3;
  i1 = HEAP32[i3 >> 2] | 0;
 }
 i1 = HEAP32[i1 + (i5 << 2) >> 2] | 0;
 if (i1 | 0) __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
 HEAP32[(HEAP32[i2 >> 2] | 0) + (i5 << 2) >> 2] = i4;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi(i7, i1, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i4 = i7 + 12 | 0;
 i5 = i7 + 16 | 0;
 i3 = i1;
 i1 = 0;
 while (1) {
  if ((i1 | 0) >= (i6 | 0)) break;
  i2 = HEAP32[i4 >> 2] | 0;
  if (i2 >>> 0 >= (HEAP32[i5 >> 2] | 0) >>> 0) {
   i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] & 127](i7) | 0;
   if ((i2 | 0) == -1) break;
  } else {
   HEAP32[i4 >> 2] = i2 + 4;
   i2 = HEAP32[i2 >> 2] | 0;
  }
  HEAP32[i3 >> 2] = i2;
  i3 = i3 + 4 | 0;
  i1 = i1 + 1 | 0;
 }
 return i1 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i5, i4, i3) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i2 = (i1 & 1) == 0;
 if (i2) i1 = (i1 & 255) >>> 1; else i1 = HEAP32[i5 + 4 >> 2] | 0;
 do if (i1 >>> 0 >= i4 >>> 0) if (i2) {
  HEAP8[i5 + 1 + i4 >> 0] = 0;
  HEAP8[i5 >> 0] = i4 << 1;
  break;
 } else {
  HEAP8[(HEAP32[i5 + 8 >> 2] | 0) + i4 >> 0] = 0;
  HEAP32[i5 + 4 >> 2] = i4;
  break;
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc(i5, i4 - i1 | 0, i3) | 0; while (0);
 return;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(i1, i4, i3, i5) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i2 = 0;
 i1 = i4 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  if ((i2 | 0) != (i3 | 0)) {
   i5 = i4 + 36 | 0;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
   HEAP32[i4 + 24 >> 2] = 2;
   HEAP8[i4 + 54 >> 0] = 1;
   break;
  }
  i1 = i4 + 24 | 0;
  if ((HEAP32[i1 >> 2] | 0) == 2) HEAP32[i1 >> 2] = i5;
 } else {
  HEAP32[i1 >> 2] = i3;
  HEAP32[i4 + 24 >> 2] = i5;
  HEAP32[i4 + 36 >> 2] = 1;
 } while (0);
 return;
}

function _strtox(i8, i7, i3, i1, i2) {
 i8 = i8 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i6 = i9;
 HEAP32[i6 >> 2] = 0;
 i4 = i6 + 4 | 0;
 HEAP32[i4 >> 2] = i8;
 HEAP32[i6 + 44 >> 2] = i8;
 i5 = i6 + 8 | 0;
 HEAP32[i5 >> 2] = (i8 | 0) < 0 ? -1 : i8 + 2147483647 | 0;
 HEAP32[i6 + 76 >> 2] = -1;
 ___shlim(i6, 0);
 i1 = ___intscan(i6, i3, 1, i1, i2) | 0;
 if (i7 | 0) HEAP32[i7 >> 2] = i8 + ((HEAP32[i4 >> 2] | 0) + (HEAP32[i6 + 108 >> 2] | 0) - (HEAP32[i5 >> 2] | 0));
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i4 + 4 | 0;
 i5 = i4;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev(i3);
 HEAP32[i3 >> 2] = 8452;
 HEAP32[i3 + 32 >> 2] = i1;
 HEAP32[i3 + 40 >> 2] = i2;
 HEAP32[i3 + 48 >> 2] = -1;
 HEAP8[i3 + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_(i6, i3 + 4 | 0);
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE(i3, i5);
 __ZNSt3__16localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i4 + 4 | 0;
 i5 = i4;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i3);
 HEAP32[i3 >> 2] = 8324;
 HEAP32[i3 + 32 >> 2] = i1;
 HEAP32[i3 + 40 >> 2] = i2;
 HEAP32[i3 + 48 >> 2] = -1;
 HEAP8[i3 + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_(i6, i3 + 4 | 0);
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE(i3, i5);
 __ZNSt3__16localeD2Ev(i5);
 STACKTOP = i4;
 return;
}

function __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEE12__deallocateEPNS_11__hash_nodeIS4_PvEE(i2, HEAP32[i2 + 8 >> 2] | 0);
 i1 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i6 = i5 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 i2 = i1 - i3 >> 2;
 L1 : do if (i2 >>> 0 >= i4 >>> 0) {
  if (i2 >>> 0 > i4 >>> 0) {
   i2 = i3 + (i4 << 2) | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break L1;
    i5 = i1 + -4 | 0;
    HEAP32[i6 >> 2] = i5;
    i1 = i5;
   }
  }
 } else __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj(i5, i4 - i2 | 0); while (0);
 return;
}

function _trunc(d1) {
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i6 = _bitshift64Lshr(i2 | 0, i3 | 0, 52) | 0;
 i6 = (i6 & 2047) + -1011 | 0;
 if ((i6 | 0) <= 63 ? (i5 = (i6 | 0) < 12, i4 = _bitshift64Lshr(-1, -1, i6 | 0) | 0, i4 = i5 ? -1 : i4, i5 = i5 ? 2147483647 : tempRet0, !((i4 & i2 | 0) == 0 & (i5 & i3 | 0) == 0)) : 0) {
  HEAP32[tempDoublePtr >> 2] = i2 & ~i4;
  HEAP32[tempDoublePtr + 4 >> 2] = i3 & ~i5;
  d1 = +HEAPF64[tempDoublePtr >> 3];
 }
 return +d1;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i1 = HEAP8[i6 >> 0] | 0;
 if (!(i1 & 1)) {
  i2 = (i1 & 255) >>> 1;
  i5 = i6 + 1 | 0;
 } else {
  i2 = HEAP32[i6 + 4 >> 2] | 0;
  i5 = HEAP32[i6 + 8 >> 2] | 0;
 }
 i3 = (i2 | 0) != 0 & 1;
 i4 = i2 - i3 | 0;
 if ((i2 | 0) != (i3 | 0)) {
  _memmove(i5 | 0, i5 + i3 | 0, i4 | 0) | 0;
  i1 = HEAP8[i6 >> 0] | 0;
 }
 if (!(i1 & 1)) HEAP8[i6 >> 0] = i4 << 1; else HEAP32[i6 + 4 >> 2] = i4;
 HEAP8[i5 + i4 >> 0] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0;
 HEAP32[i4 >> 2] = 0;
 if ((i1 | 0) != (i2 | 0)) {
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 == 114) {
   HEAP32[i4 >> 2] = 4;
   i2 = i1 + 1 | 0;
   i1 = i2;
   i2 = HEAP8[i2 >> 0] | 0;
   i3 = 4;
  } else i3 = 0;
  if (i2 << 24 >> 24 == 86) {
   i3 = i3 | 2;
   HEAP32[i4 >> 2] = i3;
   i2 = i1 + 1 | 0;
   i1 = i2;
   i2 = HEAP8[i2 >> 0] | 0;
  }
  if (i2 << 24 >> 24 == 75) {
   HEAP32[i4 >> 2] = i3 | 1;
   i1 = i1 + 1 | 0;
  }
 }
 return i1 | 0;
}

function _fmt_u(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 if (i3 >>> 0 > 0 | (i3 | 0) == 0 & i2 >>> 0 > 4294967295) while (1) {
  i4 = ___uremdi3(i2 | 0, i3 | 0, 10, 0) | 0;
  i1 = i1 + -1 | 0;
  HEAP8[i1 >> 0] = i4 | 48;
  i4 = ___udivdi3(i2 | 0, i3 | 0, 10, 0) | 0;
  if (i3 >>> 0 > 9 | (i3 | 0) == 9 & i2 >>> 0 > 4294967295) {
   i2 = i4;
   i3 = tempRet0;
  } else {
   i2 = i4;
   break;
  }
 }
 if (i2) while (1) {
  i1 = i1 + -1 | 0;
  HEAP8[i1 >> 0] = (i2 >>> 0) % 10 | 0 | 48;
  if (i2 >>> 0 < 10) break; else i2 = (i2 >>> 0) / 10 | 0;
 }
 return i1 | 0;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_(i5, i3, i4, i1) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i5 + 12 >> 2] = 0;
 HEAP32[i5 + 16 >> 2] = i1;
 do if (i3) {
  i2 = i1 + 112 | 0;
  if (i3 >>> 0 < 29 & (HEAP8[i2 >> 0] | 0) == 0) {
   HEAP8[i2 >> 0] = 1;
   break;
  } else {
   i1 = __Znwj(i3 << 2) | 0;
   break;
  }
 } else i1 = 0; while (0);
 HEAP32[i5 >> 2] = i1;
 i4 = i1 + (i4 << 2) | 0;
 HEAP32[i5 + 8 >> 2] = i4;
 HEAP32[i5 + 4 >> 2] = i4;
 HEAP32[i5 + 12 >> 2] = i1 + (i3 << 2);
 return;
}

function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_(i3, i1, i6, i2, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i4 = 0, i7 = 0;
 while (1) {
  if ((i2 | 0) == (i5 | 0)) {
   i7 = 7;
   break;
  }
  if ((i1 | 0) == (i6 | 0)) {
   i1 = -1;
   break;
  }
  i3 = HEAP8[i1 >> 0] | 0;
  i4 = HEAP8[i2 >> 0] | 0;
  if (i3 << 24 >> 24 < i4 << 24 >> 24) {
   i1 = -1;
   break;
  }
  if (i4 << 24 >> 24 < i3 << 24 >> 24) {
   i1 = 1;
   break;
  }
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 if ((i7 | 0) == 7) i1 = (i1 | 0) != (i6 | 0) & 1;
 return i1 | 0;
}

function __Z9parseHeapPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 if ((((HEAP8[i2 >> 0] | 0) == 72 ? (HEAP8[i2 + 1 >> 0] | 0) == 69 : 0) ? (HEAP8[i2 + 2 >> 0] | 0) == 65 : 0) ? (HEAP8[i2 + 3 >> 0] | 0) == 80 : 0) {
  HEAP8[i1 >> 0] = 1;
  i3 = HEAP8[i2 + 4 >> 0] | 0;
  i4 = i3 << 24 >> 24 == 85;
  HEAP8[i1 + 1 >> 0] = i4 & 1;
  i3 = i3 << 24 >> 24 == 70;
  HEAP8[i1 + 2 >> 0] = i3 & 1;
  i2 = __Z8parseIntPKc(i2 + (i4 | i3 ? 5 : 4) | 0) | 0;
  HEAP32[i1 + 4 >> 2] = i2;
  HEAP32[i1 + 8 >> 2] = i3 ? ((i2 | 0) == 64 ? 1 : 2) : 0;
 } else HEAP8[i1 >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 if (i1 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i2);
 if (i1 >>> 0 < 11) {
  HEAP8[i2 >> 0] = i4 << 1;
  i1 = i2 + 1 | 0;
 } else {
  i5 = i1 + 16 & -16;
  i1 = _malloc(i5) | 0;
  HEAP32[i2 + 8 >> 2] = i1;
  HEAP32[i2 >> 2] = i5 | 1;
  HEAP32[i2 + 4 >> 2] = i4;
 }
 _memcpy(i1 | 0, i3 | 0, i4 | 0) | 0;
 HEAP8[i1 + i4 >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) {
  HEAP8[i1 >> 0] = i3 << 1;
  i1 = i1 + 1 | 0;
 } else {
  i5 = i3 + 16 & -16;
  i4 = _malloc(i5) | 0;
  HEAP32[i1 + 8 >> 2] = i4;
  HEAP32[i1 >> 2] = i5 | 1;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i4;
 }
 _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
 HEAP8[i1 + i3 >> 0] = 0;
 return;
}

function __ZNSt3__16locale5__impD2Ev(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 HEAP32[i5 >> 2] = 11604;
 i2 = i5 + 8 | 0;
 i3 = i5 + 12 | 0;
 i4 = 0;
 while (1) {
  i1 = HEAP32[i2 >> 2] | 0;
  if (i4 >>> 0 >= (HEAP32[i3 >> 2] | 0) - i1 >> 2 >>> 0) break;
  i1 = HEAP32[i1 + (i4 << 2) >> 2] | 0;
  if (i1 | 0) __ZNSt3__114__shared_count16__release_sharedEv(i1) | 0;
  i4 = i4 + 1 | 0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5 + 144 | 0);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(i2);
 return;
}

function __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 while (1) {
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (i1 | 0)) break;
  i3 = i3 + -24 | 0;
  HEAP32[i2 >> 2] = i3;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3);
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[HEAP32[i4 + 16 >> 2] >> 2] | 0, i1, (HEAP32[i4 + 12 >> 2] | 0) - i1 | 0);
 return;
}

function __ZN4wasm16PrintSExpression13visitGetLocalEPNS_8GetLocalE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 4 | 0;
 i5 = i3;
 i2 = __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i2 + 4 >> 2] | 0, 25935, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i1 + 8 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i2, i4) | 0, 41) | 0;
 STACKTOP = i3;
 return;
}

function __ZN4wasm22SExpressionWasmBuilder12makeGetLocalERNS_7ElementE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i3 = __ZN10MixedArena5allocIN4wasm8GetLocalEEEPT_v(HEAP32[i2 + 4 >> 2] | 0) | 0;
 i1 = __ZN4wasm7Element4listEv(i1) | 0;
 i1 = __ZN4wasm22SExpressionWasmBuilder12getLocalNameERNS_7ElementE(i2, HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i3 + 8 >> 2] = i1;
 i2 = __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEEixERS8_(i2 + 72 | 0, i3 + 8 | 0) | 0;
 HEAP32[i3 + 4 >> 2] = HEAP32[i2 >> 2];
 return i3 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = i4 + 44 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i3 = HEAP32[i4 + 24 >> 2] | 0;
 if (i2 >>> 0 < i3 >>> 0) {
  HEAP32[i1 >> 2] = i3;
  i1 = i3;
 } else i1 = i2;
 if (HEAP32[i4 + 48 >> 2] & 8) {
  i3 = i4 + 16 | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  if (i2 >>> 0 < i1 >>> 0) {
   HEAP32[i3 >> 2] = i1;
   i2 = i1;
  }
  i1 = HEAP32[i4 + 12 >> 2] | 0;
  if (i1 >>> 0 < i2 >>> 0) i1 = HEAPU8[i1 >> 0] | 0; else i1 = -1;
 } else i1 = -1;
 return i1 | 0;
}

function __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE6resizeEj(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i6 = i5 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 i2 = i1 - i3 >> 2;
 L1 : do if (i2 >>> 0 >= i4 >>> 0) {
  if (i2 >>> 0 > i4 >>> 0) {
   i2 = i3 + (i4 << 2) | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break L1;
    i5 = i1 + -4 | 0;
    HEAP32[i6 >> 2] = i5;
    i1 = i5;
   }
  }
 } else __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE8__appendEj(i5, i4 - i2 | 0); while (0);
 return;
}

function __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) {
  i2 = i4 + 4 | 0;
  while (1) {
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 | 0) == (i1 | 0)) break;
   i3 = i3 + -24 | 0;
   HEAP32[i2 >> 2] = i3;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i3);
  }
  i3 = HEAP32[i4 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[i4 + 12 >> 2] | 0, i3, (HEAP32[i4 + 8 >> 2] | 0) - i3 | 0);
 }
 return;
}

function __ZN4wasm22SExpressionWasmBuilder12getLocalNameERNS_7ElementE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 do if (!(HEAP8[i1 + 20 >> 0] | 0)) {
  i4 = _atoi(__ZN4wasm7Element5c_strEv(i1) | 0) | 0;
  i3 = HEAP32[i2 + 68 >> 2] | 0;
  i1 = HEAP32[i3 + 8 >> 2] | 0;
  i2 = (HEAP32[i3 + 12 >> 2] | 0) - i1 >> 3;
  if (i4 >>> 0 < i2 >>> 0) {
   i1 = HEAP32[i1 + (i4 << 3) >> 2] | 0;
   break;
  } else {
   i1 = HEAP32[(HEAP32[i3 + 20 >> 2] | 0) + (i4 - i2 << 3) >> 2] | 0;
   break;
  }
 } else i1 = __ZN4wasm7Element3strEv(i1) | 0; while (0);
 return i1 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder8makeHostERNS_7ElementENS_6HostOpE(i4, i3, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 i1 = __ZN10MixedArena5allocIN4wasm4HostEEEPT_v(HEAP32[i4 + 4 >> 2] | 0) | 0;
 HEAP32[i1 + 8 >> 2] = i2;
 if ((i2 | 0) == 3) {
  i4 = __ZN4wasm7Element4listEv(i3) | 0;
  i4 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] | 0) | 0;
  HEAP32[i1 + 12 >> 2] = i4;
 } else __ZN4wasm22SExpressionWasmBuilder17parseCallOperandsINS_4HostEEEvRNS_7ElementEjPT_(i4, i3, 1, i1);
 __ZN4wasm4Host8finalizeEv(i1);
 return i1 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_(i5, i1, i2, i3, i4, i6, i7, i8) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i5 + 4 | 0;
 i1 = i5;
 HEAP32[i9 >> 2] = i2;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i2, i3, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i5;
 return i7 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_(i5, i1, i2, i3, i4, i6, i7, i8) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i5 + 4 | 0;
 i1 = i5;
 HEAP32[i9 >> 2] = i2;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(i2, i3, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i5;
 return i7 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_(i5, i1, i2, i3, i4, i6, i7, i8) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i5 + 4 | 0;
 i1 = i5;
 HEAP32[i9 >> 2] = i2;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i2, i3, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i5;
 return i7 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_(i5, i1, i2, i3, i4, i6, i7, i8) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i5 + 4 | 0;
 i1 = i5;
 HEAP32[i9 >> 2] = i2;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(i2, i3, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i5;
 return i7 | 0;
}

function __ZNSt3__114__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj(HEAP32[i1 >> 2] | 0, i2 << 4) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 4) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 4);
 return;
}

function __ZN4wasm22SExpressionWasmBuilder11parseExportERNS_7ElementE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i3 = __ZN10MixedArena5allocIN4wasm6ExportEEEPT_v(HEAP32[i2 + 4 >> 2] | 0) | 0;
 i4 = __ZN4wasm7Element4listEv(i1) | 0;
 i4 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i4 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i3 >> 2] = i4;
 i1 = __ZN4wasm7Element4listEv(i1) | 0;
 i1 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] | 0) | 0;
 HEAP32[i3 + 4 >> 2] = i1;
 __ZN4wasm6Module9addExportEPNS_6ExportE(HEAP32[i2 >> 2] | 0, i3);
 return;
}

function __ZNSt3__114__split_bufferINS_6vectorIN6cashew6ParserINS2_3RefENS2_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS7_EEEERNS8_ISA_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 while (1) {
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (i1 | 0)) break;
  i3 = i3 + -12 | 0;
  HEAP32[i2 >> 2] = i3;
  __ZNSt3__113__vector_baseIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEED2Ev(i3);
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function _strlen(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = i1;
 L1 : do if (!(i4 & 3)) i3 = 4; else {
  i2 = i1;
  i1 = i4;
  while (1) {
   if (!(HEAP8[i2 >> 0] | 0)) break L1;
   i2 = i2 + 1 | 0;
   i1 = i2;
   if (!(i1 & 3)) {
    i1 = i2;
    i3 = 4;
    break;
   }
  }
 } while (0);
 if ((i3 | 0) == 4) {
  while (1) {
   i2 = HEAP32[i1 >> 2] | 0;
   if (!((i2 & -2139062144 ^ -2139062144) & i2 + -16843009)) i1 = i1 + 4 | 0; else break;
  }
  if ((i2 & 255) << 24 >> 24) do i1 = i1 + 1 | 0; while ((HEAP8[i1 >> 0] | 0) != 0);
 }
 return i1 - i4 | 0;
}

function __ZNSt3__113__vector_baseINS_6vectorIN6cashew6ParserINS2_3RefENS2_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS7_EEEENS8_ISA_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) {
  i2 = i4 + 4 | 0;
  while (1) {
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 | 0) == (i1 | 0)) break;
   i3 = i3 + -12 | 0;
   HEAP32[i2 >> 2] = i3;
   __ZNSt3__113__vector_baseIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEED2Ev(i3);
  }
  __ZdlPv(HEAP32[i4 >> 2] | 0);
 }
 return;
}

function __ZN4wasm13ReorderLocals13visitFunctionEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3;
 i5 = HEAP32[i1 + 20 >> 2] | 0;
 i1 = HEAP32[i1 + 24 >> 2] | 0;
 HEAP32[i4 >> 2] = i2;
 __ZNSt3__16__sortIRZN4wasm13ReorderLocals13visitFunctionEPNS1_8FunctionEEUlNS1_8NameTypeES5_E_PS5_EEvT0_S9_T_(i5, i1, i4);
 __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE5clearEv(i2 + 12 | 0);
 STACKTOP = i3;
 return;
}

function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_(i3, i1, i6, i2, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i4 = 0, i7 = 0;
 while (1) {
  if ((i2 | 0) == (i5 | 0)) {
   i7 = 7;
   break;
  }
  if ((i1 | 0) == (i6 | 0)) {
   i1 = -1;
   break;
  }
  i3 = HEAP32[i1 >> 2] | 0;
  i4 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) < (i4 | 0)) {
   i1 = -1;
   break;
  }
  if ((i4 | 0) < (i3 | 0)) {
   i1 = 1;
   break;
  }
  i2 = i2 + 4 | 0;
  i1 = i1 + 4 | 0;
 }
 if ((i7 | 0) == 7) i1 = (i1 | 0) != (i6 | 0) & 1;
 return i1 | 0;
}

function __ZN4wasm10Expression4castINS_5BlockEEEPT_v(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i1 = i3;
 i4 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = 1;
 i5 = i1 + 4 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 HEAP32[i5 + 12 >> 2] = 0;
 HEAP32[i5 + 16 >> 2] = 0;
 if ((i4 | 0) == 1) {
  __ZNSt3__113__vector_baseIPN4wasm10ExpressionENS_9allocatorIS3_EEED2Ev(i1 + 12 | 0);
  STACKTOP = i3;
  return i2 | 0;
 } else ___assert_fail(27564, 30223, 750, 27579);
 return 0;
}

function __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE6resizeEj(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i6 = i5 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i3 = HEAP32[i5 >> 2] | 0;
 i2 = i1 - i3 >> 2;
 L1 : do if (i2 >>> 0 >= i4 >>> 0) {
  if (i2 >>> 0 > i4 >>> 0) {
   i2 = i3 + (i4 << 2) | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break L1;
    i5 = i1 + -4 | 0;
    HEAP32[i6 >> 2] = i5;
    i1 = i5;
   }
  }
 } else __ZNSt3__16vectorIN4wasm4NameENS_9allocatorIS2_EEE8__appendEj(i5, i4 - i2 | 0); while (0);
 return;
}

function __ZN6cashew5Value8setArrayERNSt3__16vectorINS_3RefENS1_9allocatorIS3_EEEE(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 __ZN6cashew5Value4freeEv(i3);
 HEAP32[i3 >> 2] = 2;
 i1 = __ZN6cashew5Arena10allocArrayEv(41412) | 0;
 HEAP32[i3 + 8 >> 2] = i1;
 if ((i1 | 0) != (i2 | 0)) __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(i1, HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0);
 return i3 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0;
 L1 : do if ((i3 | 0) != (i4 | 0) ? (i1 = (HEAP8[i3 >> 0] | 0) == 110 ? i3 + 1 | 0 : i3, (i1 | 0) != (i4 | 0)) : 0) {
  i2 = HEAP8[i1 >> 0] | 0;
  if (i2 << 24 >> 24 == 48) {
   i1 = i1 + 1 | 0;
   break;
  }
  if ((i2 + -49 & 255) < 9) do {
   i1 = i1 + 1 | 0;
   if ((i1 | 0) == (i4 | 0)) {
    i1 = i4;
    break L1;
   }
  } while (((HEAP8[i1 >> 0] | 0) + -48 | 0) >>> 0 < 10); else i1 = i3;
 } else i1 = i3; while (0);
 return i1 | 0;
}

function __ZN6cashew12ValueBuilder13appendToBlockENS_3RefES1_(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i2 = i5;
 if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i3, 0) | 0, 41044) | 0) {
  i3 = __ZN6cashew3RefixEj(i3, 1) | 0;
  i3 = HEAP32[i3 >> 2] | 0;
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
  STACKTOP = i5;
  return;
 } else ___assert_fail(24550, 31233, 1361, 24568);
}

function __ZN6cashew12ValueBuilder13appendToArrayENS_3RefES1_(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i2 = i5;
 if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i3, 0) | 0, 41352) | 0) {
  i3 = __ZN6cashew3RefixEj(i3, 1) | 0;
  i3 = HEAP32[i3 >> 2] | 0;
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
  STACKTOP = i5;
  return;
 } else ___assert_fail(24425, 31233, 1643, 24443);
}

function __ZN6cashew12ValueBuilder12appendToCallENS_3RefES1_(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i2 = i5;
 if (__ZN6cashew3RefeqERKNS_7IStringE(__ZN6cashew3RefixEj(i3, 0) | 0, 41108) | 0) {
  i3 = __ZN6cashew3RefixEj(i3, 2) | 0;
  i3 = HEAP32[i3 >> 2] | 0;
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  __ZN6cashew5Value9push_backENS_3RefE(i3, i1) | 0;
  STACKTOP = i5;
  return;
 } else ___assert_fail(24129, 31233, 1446, 24145);
}

function __ZN4wasm11WasmVisitorINS_14SimplifyLocalsEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZN4wasm14SimplifyLocals10visitBlockEPNS_5BlockE(i2 + -4 | 0, i1);
   break;
  }
 case 20:
 case 19:
 case 18:
 case 17:
 case 16:
 case 15:
 case 14:
 case 13:
 case 12:
 case 11:
 case 10:
 case 9:
 case 8:
 case 7:
 case 6:
 case 5:
 case 4:
 case 3:
 case 2:
  break;
 default:
  {}
 }
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj(i2, i3, i4, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 if (i1 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i2);
 if (i1 >>> 0 < 11) {
  HEAP8[i2 >> 0] = i4 << 1;
  i1 = i2 + 1 | 0;
 } else {
  i5 = i1 + 16 & -16;
  i1 = __Znwj(i5) | 0;
  HEAP32[i2 + 8 >> 2] = i1;
  HEAP32[i2 >> 2] = i5 | 1;
  HEAP32[i2 + 4 >> 2] = i4;
 }
 _memcpy(i1 | 0, i3 | 0, i4 | 0) | 0;
 HEAP8[i1 + i4 >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) {
  HEAP8[i1 >> 0] = i3 << 1;
  i1 = i1 + 1 | 0;
 } else {
  i5 = i3 + 16 & -16;
  i4 = __Znwj(i5) | 0;
  HEAP32[i1 + 8 >> 2] = i4;
  HEAP32[i1 >> 2] = i5 | 1;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i4;
 }
 _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
 HEAP8[i1 + i3 >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 if (i3 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 2) {
  HEAP8[i1 >> 0] = i3 << 1;
  i1 = i1 + 4 | 0;
 } else {
  i5 = i3 + 4 & -4;
  i4 = __Znwj(i5 << 2) | 0;
  HEAP32[i1 + 8 >> 2] = i4;
  HEAP32[i1 >> 2] = i5 | 1;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i4;
 }
 _wmemcpy(i1, i2, i3) | 0;
 HEAP32[i1 + (i3 << 2) >> 2] = 0;
 return;
}

function __ZN4wasmL8abort_onENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN6cashew3RefE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE(42212, i2) | 0, 32) | 0;
 __ZN6cashew5Value9stringifyERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEb(HEAP32[i1 >> 2] | 0, 42212, 0);
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(42212, 10) | 0;
 _abort();
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) {
  HEAP8[i1 >> 0] = i3 << 1;
  i1 = i1 + 1 | 0;
 } else {
  i5 = i3 + 16 & -16;
  i4 = __Znwj(i5) | 0;
  HEAP32[i1 + 8 >> 2] = i4;
  HEAP32[i1 >> 2] = i5 | 1;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i4;
 }
 _memset(i1 | 0, i2 | 0, i3 | 0) | 0;
 HEAP8[i1 + i3 >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0;
 if (i3 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 2) {
  HEAP8[i1 >> 0] = i3 << 1;
  i1 = i1 + 4 | 0;
 } else {
  i5 = i3 + 4 & -4;
  i4 = __Znwj(i5 << 2) | 0;
  HEAP32[i1 + 8 >> 2] = i4;
  HEAP32[i1 >> 2] = i5 | 1;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i4;
 }
 _wmemset(i1, i2, i3) | 0;
 HEAP32[i1 + (i3 << 2) >> 2] = 0;
 return;
}

function __ZN4wasm11WasmVisitorINS_11MergeBlocksEvE5visitEPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) ___assert_fail(30470, 30223, 1222, 30475);
 switch (HEAP32[i1 >> 2] | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 1:
  {
   __ZN4wasm11MergeBlocks10visitBlockEPNS_5BlockE(i2 + -4 | 0, i1);
   break;
  }
 case 20:
 case 19:
 case 18:
 case 17:
 case 16:
 case 15:
 case 14:
 case 13:
 case 12:
 case 11:
 case 10:
 case 9:
 case 8:
 case 7:
 case 6:
 case 5:
 case 4:
 case 3:
 case 2:
  break;
 default:
  {}
 }
 return;
}

function _memset(i2, i6, i1) {
 i2 = i2 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i3 = i2 + i1 | 0;
 if ((i1 | 0) >= 20) {
  i6 = i6 & 255;
  i5 = i2 & 3;
  i7 = i6 | i6 << 8 | i6 << 16 | i6 << 24;
  i4 = i3 & ~3;
  if (i5) {
   i5 = i2 + 4 - i5 | 0;
   while ((i2 | 0) < (i5 | 0)) {
    HEAP8[i2 >> 0] = i6;
    i2 = i2 + 1 | 0;
   }
  }
  while ((i2 | 0) < (i4 | 0)) {
   HEAP32[i2 >> 2] = i7;
   i2 = i2 + 4 | 0;
  }
 }
 while ((i2 | 0) < (i3 | 0)) {
  HEAP8[i2 >> 0] = i6;
  i2 = i2 + 1 | 0;
 }
 return i2 - i1 | 0;
}

function __ZNSt3__114__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj(HEAP32[i1 >> 2] | 0, i2 << 4) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 4) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 4);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_SK_SK_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 L1 : while (1) {
  while (1) {
   if (!i2) break L1;
   if (!(__ZNK6cashew7IStringltERKS0_(i2 + 16 | 0, i4) | 0)) break;
   i2 = HEAP32[i2 + 4 >> 2] | 0;
  }
  i1 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE16__construct_nodeIJS2_EEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINS7_ISE_EEEEEEDpOT_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(12) | 0;
 HEAP32[i2 >> 2] = i4;
 HEAP32[i2 + 4 >> 2] = i3 + 8;
 HEAP32[i4 + 8 >> 2] = HEAP32[i1 >> 2];
 HEAP8[i2 + 8 >> 0] = 1;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i3 + 4 >> 2] = (HEAP32[i3 + 8 >> 2] | 0) * 33 ^ 5381;
 HEAP32[i3 >> 2] = 0;
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE11visitSwitchEPNS_6SwitchE(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i4 + 12 | 0);
 i3 = HEAP32[i4 + 36 >> 2] | 0;
 i1 = HEAP32[i4 + 32 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i4 = HEAP32[i2 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 127](i4, i1 + 4 | 0);
  i1 = i1 + 8 | 0;
 }
 return;
}

function __ZN4wasmL8abort_onENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN6cashew7IStringE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i2 = __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE(42212, i2) | 0, 32) | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i2, HEAP32[i1 >> 2] | 0) | 0, 10) | 0;
 _abort();
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE11visitSwitchEPNS_6SwitchE(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i4 + 12 | 0);
 i3 = HEAP32[i4 + 36 >> 2] | 0;
 i1 = HEAP32[i4 + 32 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i4 = HEAP32[i2 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 127](i4, i1 + 4 | 0);
  i1 = i1 + 8 | 0;
 }
 return;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i2 = HEAP32[i4 >> 2] | 0;
 do if (i2 | 0) {
  i1 = HEAP32[i4 + 16 >> 2] | 0;
  if ((i1 | 0) == (i2 | 0)) {
   HEAP8[i1 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv(i2);
   break;
  }
 } while (0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE11visitSwitchEPNS_6SwitchE(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i4 + 12 | 0);
 i3 = HEAP32[i4 + 36 >> 2] | 0;
 i1 = HEAP32[i4 + 32 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i4 = HEAP32[i2 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 127](i4, i1 + 4 | 0);
  i1 = i1 + 8 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE11visitSwitchEPNS_6SwitchE(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i4 + 12 | 0);
 i3 = HEAP32[i4 + 36 >> 2] | 0;
 i1 = HEAP32[i4 + 32 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i4 = HEAP32[i2 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 127](i4, i1 + 4 | 0);
  i1 = i1 + 8 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP8[i2 >> 0] = 10;
 i3 = i2 + 1 | 0;
 HEAP8[i3 >> 0] = HEAP8[i1 >> 0] | 0;
 HEAP8[i3 + 1 >> 0] = HEAP8[i1 + 1 >> 0] | 0;
 HEAP8[i3 + 2 >> 0] = HEAP8[i1 + 2 >> 0] | 0;
 HEAP8[i3 + 3 >> 0] = HEAP8[i1 + 3 >> 0] | 0;
 HEAP8[i3 + 4 >> 0] = HEAP8[i1 + 4 >> 0] | 0;
 HEAP8[i2 + 6 >> 0] = 0;
 i1 = i2 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP8[i2 >> 0] = 8;
 i3 = i2 + 1 | 0;
 i1 = HEAPU8[i1 >> 0] | HEAPU8[i1 + 1 >> 0] << 8 | HEAPU8[i1 + 2 >> 0] << 16 | HEAPU8[i1 + 3 >> 0] << 24;
 HEAP8[i3 >> 0] = i1;
 HEAP8[i3 + 1 >> 0] = i1 >> 8;
 HEAP8[i3 + 2 >> 0] = i1 >> 16;
 HEAP8[i3 + 3 >> 0] = i1 >> 24;
 HEAP8[i2 + 5 >> 0] = 0;
 i1 = i2 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE11visitSwitchEPNS_6SwitchE(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i4 + 12 | 0);
 i3 = HEAP32[i4 + 36 >> 2] | 0;
 i1 = HEAP32[i4 + 32 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i4 = HEAP32[i2 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 127](i4, i1 + 4 | 0);
  i1 = i1 + 8 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i1 = i3 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNSt3__111__call_onceERVmPvPFvS2_E(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 _pthread_mutex_lock(44928) | 0;
 while (1) {
  if ((HEAP32[i2 >> 2] | 0) != 1) break;
  _pthread_cond_wait(44956, 44928) | 0;
 }
 if (!(HEAP32[i2 >> 2] | 0)) {
  HEAP32[i2 >> 2] = 1;
  _pthread_mutex_unlock(44928) | 0;
  FUNCTION_TABLE_vi[i3 & 255](i1);
  _pthread_mutex_lock(44928) | 0;
  HEAP32[i2 >> 2] = -1;
  _pthread_mutex_unlock(44928) | 0;
  _pthread_cond_broadcast(44956) | 0;
 } else _pthread_mutex_unlock(44928) | 0;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewEEENS_19__map_value_compareIS3_S7_NS_4lessIS3_EELb1EEENS_9allocatorIS7_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS7_PNS_11__tree_nodeIS7_PvEEiEERKT_SK_SK_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 L1 : while (1) {
  while (1) {
   if (!i2) break L1;
   if (!(__ZNK6cashew7IStringltERKS0_(i2 + 16 | 0, i4) | 0)) break;
   i2 = HEAP32[i2 + 4 >> 2] | 0;
  }
  i1 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE11visitSwitchEPNS_6SwitchE(i1, i4) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i4 + 12 | 0);
 i3 = HEAP32[i4 + 36 >> 2] | 0;
 i1 = HEAP32[i4 + 32 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i4 = HEAP32[i2 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i4 >> 2] | 0) + 8 >> 2] & 127](i4, i1 + 4 | 0);
  i1 = i1 + 8 | 0;
 }
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP32[i2 >> 2] = 0;
 i3 = i2 + 4 | 0;
 HEAP32[i3 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 HEAP8[i2 + 128 >> 0] = 0;
 if (i1 | 0) {
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj(i2, i1);
  i2 = HEAP32[i3 >> 2] | 0;
  do {
   HEAP32[i2 >> 2] = 0;
   i2 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
   HEAP32[i3 >> 2] = i2;
   i1 = i1 + -1 | 0;
  } while ((i1 | 0) != 0);
 }
 return;
}

function __ZN4wasm12FunctionTypeaSERKS0_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i5 = i1;
 i4 = HEAP32[i5 + 4 >> 2] | 0;
 i3 = i2;
 HEAP32[i3 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i3 + 4 >> 2] = i4;
 if ((i2 | 0) != (i1 | 0)) __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(i2 + 8 | 0, HEAP32[i1 + 8 >> 2] | 0, HEAP32[i1 + 12 >> 2] | 0);
 return i2 | 0;
}

function _strerror(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = 0;
 while (1) {
  if ((HEAPU8[32417 + i2 >> 0] | 0) == (i1 | 0)) {
   i3 = 2;
   break;
  }
  i2 = i2 + 1 | 0;
  if ((i2 | 0) == 87) {
   i2 = 87;
   i1 = 32505;
   i3 = 5;
   break;
  }
 }
 if ((i3 | 0) == 2) if (!i2) i1 = 32505; else {
  i1 = 32505;
  i3 = 5;
 }
 if ((i3 | 0) == 5) while (1) {
  i3 = i1;
  while (1) {
   i1 = i3 + 1 | 0;
   if (!(HEAP8[i3 >> 0] | 0)) break; else i3 = i1;
  }
  i2 = i2 + -1 | 0;
  if (!i2) break; else i3 = 5;
 }
 return i1 | 0;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder12MappedGlobalENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE25__construct_node_with_keyERSA_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(40) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i4 + 24 >> 2] = 0;
 HEAP8[i4 + 28 >> 0] = 0;
 HEAP32[i4 + 32 >> 2] = 0;
 HEAP32[i4 + 36 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZN6cashew19DotZeroValueBuilder10makeDoubleEd(d1) {
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i3 + 12 | 0;
 i4 = i3 + 8 | 0;
 i6 = i3 + 4 | 0;
 i5 = i3;
 HEAP32[i6 >> 2] = HEAP32[10295];
 i7 = __ZN6cashew12ValueBuilder10makeDoubleEd(d1) | 0;
 HEAP32[i5 >> 2] = i7;
 HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
 i2 = __ZN6cashew12ValueBuilder10makePrefixENS_7IStringENS_3RefE(i4, i2) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_SJ_SJ_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 L1 : while (1) {
  while (1) {
   if (!i2) break L1;
   if (!(__ZNK6cashew7IStringltERKS0_(i2 + 16 | 0, i4) | 0)) break;
   i2 = HEAP32[i2 + 4 >> 2] | 0;
  }
  i1 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZNSt3__114__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj(HEAP32[i1 >> 2] | 0, i2 * 24 | 0) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 * 24 | 0) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 * 24 | 0);
 return;
}

function __ZNSt3__16vectorINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEENS8_ISD_EEE18__construct_at_endEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 4 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  HEAP32[i2 + 4 >> 2] = 0;
  HEAP32[i2 + 8 >> 2] = 0;
  HEAP32[i2 + 12 >> 2] = 0;
  HEAPF32[i2 + 16 >> 2] = 1.0;
  i2 = (HEAP32[i3 >> 2] | 0) + 20 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(40) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 i1 = i4 + 20 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZSt9terminatev() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 8 | 0;
 i1 = ___cxa_get_globals_fast() | 0;
 if ((i1 | 0 ? (i2 = HEAP32[i1 >> 2] | 0, i2 | 0) : 0) ? (i1 = i2 + 48 | 0, (HEAP32[i1 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[i1 + 4 >> 2] | 0) == 1129074247 : 0) : 0) {
  FUNCTION_TABLE_v[HEAP32[i2 + 12 >> 2] & 3]();
  _abort_message(37926, i3);
 }
 i3 = HEAP32[3006] | 0;
 HEAP32[3006] = i3 + 0;
 FUNCTION_TABLE_v[i3 & 3]();
 _abort_message(37926, i4);
}

function __ZNSt3__18functionIFPN4wasm4PassEvEEC2ERKS5_(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) if ((i2 | 0) == (i3 | 0)) {
  HEAP32[i4 + 16 >> 2] = i4;
  i3 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 127](i3, i4);
  break;
 } else {
  i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2) | 0;
  HEAP32[i4 + 16 >> 2] = i3;
  break;
 } else HEAP32[i4 + 16 >> 2] = 0; while (0);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_12FunctionTypeEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_SJ_SJ_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 L1 : while (1) {
  while (1) {
   if (!i2) break L1;
   if (!(__ZNK6cashew7IStringltERKS0_(i2 + 16 | 0, i4) | 0)) break;
   i2 = HEAP32[i2 + 4 >> 2] | 0;
  }
  i1 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i5, i3, i2, i1, i4, i6) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 if ((i5 | 0) == (HEAP32[i3 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i3, i2, i1, i4); else {
  i5 = HEAP32[i5 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 15](i5, i3, i2, i1, i4, i6);
 }
 return;
}

function __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEEclES5_j(i2, i4, i1) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i3 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i5;
 HEAP32[i3 >> 2] = i1;
 i1 = HEAP32[i2 + 16 >> 2] | 0;
 if (!i1) {
  i5 = ___cxa_allocate_exception(4) | 0;
  HEAP32[i5 >> 2] = 3112;
  ___cxa_throw(i5 | 0, 152, 15);
 } else {
  i4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 31](i1, i4, i3) | 0;
  STACKTOP = i5;
  return i4 | 0;
 }
 return 0;
}

function __ZN4wasm9printWasmEPNS_6ModuleERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i3;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 __ZN4wasm10PassRunner3addINS_7PrinterENSt3__113basic_ostreamIcNS3_11char_traitsIcEEEEEEvRT0_(i4, i2);
 __ZN4wasm10PassRunner3runEPNS_6ModuleE(i4, i1);
 __ZN4wasm10PassRunnerD2Ev(i4);
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNK4wasm7Literal19countTrailingZeroesEv(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 8 | 0;
 if ((HEAP32[i2 >> 2] | 0) == 1) {
  i1 = __ZN4wasm19CountTrailingZeroesIjEEiT_(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i3 + 8 >> 2] = i1;
  i1 = 1;
 } else {
  i2 = i1;
  i2 = __ZN4wasm19CountTrailingZeroesIyEEiT_(HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0) | 0;
  i1 = i3 + 8 | 0;
  HEAP32[i1 >> 2] = i2;
  HEAP32[i1 + 4 >> 2] = ((i2 | 0) < 0) << 31 >> 31;
  i1 = 2;
 }
 HEAP32[i3 >> 2] = i1;
 return;
}

function __ZN4wasm22SExpressionWasmBuilder9makeUnaryERNS_7ElementENS_7UnaryOpENS_8WasmTypeE(i3, i2, i1, i4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i5 = 0;
 i5 = __ZN10MixedArena5allocIN4wasm5UnaryEEEPT_v(HEAP32[i3 + 4 >> 2] | 0) | 0;
 HEAP32[i5 + 8 >> 2] = i1;
 i2 = __ZN4wasm7Element4listEv(i2) | 0;
 i3 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i3, HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i5 + 12 >> 2] = i3;
 HEAP32[i5 + 4 >> 2] = i4;
 return i5 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ImportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_SJ_SJ_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 L1 : while (1) {
  while (1) {
   if (!i2) break L1;
   if (!(__ZNK6cashew7IStringltERKS0_(i2 + 16 | 0, i4) | 0)) break;
   i2 = HEAP32[i2 + 4 >> 2] | 0;
  }
  i1 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEPNS2_6ExportEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEEiEERKT_SJ_SJ_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 L1 : while (1) {
  while (1) {
   if (!i2) break L1;
   if (!(__ZNK6cashew7IStringltERKS0_(i2 + 16 | 0, i4) | 0)) break;
   i2 = HEAP32[i2 + 4 >> 2] | 0;
  }
  i1 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZNK4wasm7Literal18countLeadingZeroesEv(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 8 | 0;
 if ((HEAP32[i2 >> 2] | 0) == 1) {
  i1 = __ZN4wasm18CountLeadingZeroesIjEEiT_(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i3 + 8 >> 2] = i1;
  i1 = 1;
 } else {
  i2 = i1;
  i2 = __ZN4wasm18CountLeadingZeroesIyEEiT_(HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0) | 0;
  i1 = i3 + 8 | 0;
  HEAP32[i1 >> 2] = i2;
  HEAP32[i1 + 4 >> 2] = ((i2 | 0) < 0) << 31 >> 31;
  i1 = 2;
 }
 HEAP32[i3 >> 2] = i1;
 return;
}

function __ZN6cashew5Value9push_backENS_3RefE(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 if ((HEAP32[i5 >> 2] | 0) != 2) ___assert_fail(31223, 31233, 478, 23395);
 i1 = HEAP32[i5 + 8 >> 2] | 0;
 i2 = i1 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if ((i3 | 0) == (HEAP32[i1 + 8 >> 2] | 0)) __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(i1, i4); else {
  HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 4;
 }
 return i5 | 0;
}

function __ZNSt3__18functionIFvvEEC2ERKS2_(i4, i3) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) if ((i2 | 0) == (i3 | 0)) {
  HEAP32[i4 + 16 >> 2] = i4;
  i3 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 12 >> 2] & 127](i3, i4);
  break;
 } else {
  i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2) | 0;
  HEAP32[i4 + 16 >> 2] = i3;
  break;
 } else HEAP32[i4 + 16 >> 2] = 0; while (0);
 return;
}

function __ZN4wasm15Asm2WasmBuilder18isUnsignedCoercionEN6cashew3RefE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 12 | 0;
 i5 = i3 + 8 | 0;
 i7 = i3 + 4 | 0;
 i6 = i3;
 HEAP32[i7 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i6 >> 2] = HEAP32[i2 + 80 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
 i2 = (__Z10detectSignN6cashew3RefENS_7IStringE(i5, i4) | 0) == 2;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE11visitSelectEPNS_6SelectE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEiEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEiEERKT_SH_SH_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 L1 : while (1) {
  while (1) {
   if (!i2) break L1;
   if (!(__ZNK6cashew7IStringltERKS0_(i2 + 16 | 0, i4) | 0)) break;
   i2 = HEAP32[i2 + 4 >> 2] | 0;
  }
  i1 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE11visitSelectEPNS_6SelectE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE11visitSelectEPNS_6SelectE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE11visitSelectEPNS_6SelectE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE11visitSelectEPNS_6SelectE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE13__lower_boundIS3_EENS_15__tree_iteratorIS4_PNS_11__tree_nodeIS4_PvEEiEERKT_SH_SH_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 L1 : while (1) {
  while (1) {
   if (!i2) break L1;
   if (!(__ZNK6cashew7IStringltERKS0_(i2 + 16 | 0, i4) | 0)) break;
   i2 = HEAP32[i2 + 4 >> 2] | 0;
  }
  i1 = i2;
  i2 = HEAP32[i2 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE15visitCallImportEPNS_10CallImportE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE11visitSelectEPNS_6SelectE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZN4wasm10Expression8dyn_castINS_5BlockEEEPT_v(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i3;
 i2 = HEAP32[i1 >> 2] | 0;
 HEAP32[i4 >> 2] = 1;
 i5 = i4 + 4 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 HEAP32[i5 + 12 >> 2] = 0;
 HEAP32[i5 + 16 >> 2] = 0;
 __ZNSt3__113__vector_baseIPN4wasm10ExpressionENS_9allocatorIS3_EEED2Ev(i4 + 12 | 0);
 STACKTOP = i3;
 return ((i2 | 0) == 1 ? i1 : 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEENS5_IS9_Lj4096EEEED2Ev(i1 + 32 | 0);
 __ZNSt3__113__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev(i1 + 16 | 0);
 __ZNSt3__113__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev(i1);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE15visitCallImportEPNS_10CallImportE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNSt3__114__split_bufferINS_6vectorIN6cashew6ParserINS2_3RefENS2_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS7_EEEERNS8_ISA_EEEC2EjjSC_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 * 12 | 0) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 * 12 | 0) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 * 12 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE7visitIfEPNS_2IfE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE15visitCallImportEPNS_10CallImportE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE15visitCallImportEPNS_10CallImportE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNSt3__114__split_bufferINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEERNS8_ISD_EEEC2EjjSF_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 * 20 | 0) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 * 20 | 0) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 * 20 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE15visitCallImportEPNS_10CallImportE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i7, i5, i4, i3, i6, i8) {
 i7 = i7 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0;
 i2 = HEAP32[i7 + 4 >> 2] | 0;
 i1 = i2 >> 8;
 if (i2 & 1) i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + i1 >> 2] | 0;
 i7 = HEAP32[i7 >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 20 >> 2] & 15](i7, i5, i4, i3 + i1 | 0, i2 & 2 | 0 ? i6 : 2, i8);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE7visitIfEPNS_2IfE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function ___stdio_seek(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i6 = i5;
 i3 = i5 + 20 | 0;
 HEAP32[i6 >> 2] = HEAP32[i1 + 60 >> 2];
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = i2;
 HEAP32[i6 + 12 >> 2] = i3;
 HEAP32[i6 + 16 >> 2] = i4;
 if ((___syscall_ret(___syscall140(140, i6 | 0) | 0) | 0) < 0) {
  HEAP32[i3 >> 2] = -1;
  i1 = -1;
 } else i1 = HEAP32[i3 >> 2] | 0;
 STACKTOP = i5;
 return i1 | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE7visitIfEPNS_2IfE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE7visitIfEPNS_2IfE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE15visitCallImportEPNS_10CallImportE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE7visitIfEPNS_2IfE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i5) {
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i5 >> 2] | 0;
 i4 = i3 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 if (i1 | 0) HEAP32[i1 + 8 >> 2] = i5;
 i1 = i5 + 8 | 0;
 HEAP32[i3 + 8 >> 2] = HEAP32[i1 >> 2];
 i2 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i2 >> 2] | 0) == (i5 | 0)) HEAP32[i2 >> 2] = i3; else HEAP32[i2 + 4 >> 2] = i3;
 HEAP32[i4 >> 2] = i5;
 HEAP32[i1 >> 2] = i3;
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE7visitIfEPNS_2IfE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 8 | 0);
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE10visitBlockEPNS_5BlockE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 12 | 0;
 i4 = i1 + 16 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EEclEOS5_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 4 | 0;
 i5 = i3;
 HEAP32[i5 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
 i2 = __ZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__1clES2_(i2 + 4 | 0, i4) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZN4wasm16PrintSExpression13printFullLineEPNS_10ExpressionE(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i3 + 4 | 0;
 if (!(HEAP8[i3 + 12 >> 0] | 0)) __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i1 >> 2] | 0, HEAP32[i3 + 8 >> 2] | 0) | 0;
 __ZN4wasm11WasmVisitorINS_16PrintSExpressionEvE5visitEPNS_10ExpressionE(i3, i2);
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(HEAP32[i1 >> 2] | 0, HEAP32[i3 + 20 >> 2] | 0) | 0;
 return;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE19parseMaybeBracketedERPcPKc(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE9skipSpaceERPc(i2);
 if ((HEAP8[HEAP32[i2 >> 2] >> 0] | 0) == 123) i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE19parseBracketedBlockERPc(i3, i2) | 0; else i1 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE23parseElementOrStatementERPcPKc(i3, i2, i1) | 0;
 return i1 | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE10visitBlockEPNS_5BlockE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 12 | 0;
 i4 = i1 + 16 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE18__construct_at_endEj(i1, i5) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = i1 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 i1 = i5;
 i4 = i2;
 while (1) {
  HEAP32[i4 >> 2] = 0;
  HEAP32[i4 + 4 >> 2] = 0;
  HEAP32[i4 + 8 >> 2] = 0;
  i1 = i1 + -1 | 0;
  if (!i1) break; else i4 = i4 + 12 | 0;
 }
 HEAP32[i3 >> 2] = i2 + (i5 * 12 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE9visitHostEPNS_4HostE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 16 | 0;
 i4 = i1 + 20 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE10visitBlockEPNS_5BlockE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 12 | 0;
 i4 = i1 + 16 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE10visitBlockEPNS_5BlockE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 12 | 0;
 i4 = i1 + 16 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE9visitCallEPNS_4CallE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE10visitBlockEPNS_5BlockE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 12 | 0;
 i4 = i1 + 16 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE9visitHostEPNS_4HostE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 16 | 0;
 i4 = i1 + 20 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE9visitCallEPNS_4CallE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE9visitHostEPNS_4HostE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 16 | 0;
 i4 = i1 + 20 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE9visitHostEPNS_4HostE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 16 | 0;
 i4 = i1 + 20 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE10visitBlockEPNS_5BlockE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 12 | 0;
 i4 = i1 + 16 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i2 = i4 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 HEAP32[i2 >> 2] = i1;
 if (i1 | 0) HEAP32[i1 + 8 >> 2] = i4;
 i1 = i4 + 8 | 0;
 HEAP32[i3 + 8 >> 2] = HEAP32[i1 >> 2];
 i2 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i2 >> 2] | 0) == (i4 | 0)) HEAP32[i2 >> 2] = i3; else HEAP32[i2 + 4 >> 2] = i3;
 HEAP32[i3 >> 2] = i4;
 HEAP32[i1 >> 2] = i3;
 return;
}

function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 do if (i1 | 0) {
  i2 = i4 + 4 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  while (1) {
   if ((i3 | 0) == (i1 | 0)) break;
   i5 = i3 + -4 | 0;
   HEAP32[i2 >> 2] = i5;
   i3 = i5;
  }
  if ((i4 + 16 | 0) == (i1 | 0)) {
   HEAP8[i4 + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv(i1);
   break;
  }
 } while (0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE9visitCallEPNS_4CallE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE9visitCallEPNS_4CallE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE9visitHostEPNS_4HostE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 16 | 0;
 i4 = i1 + 20 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi(i4, i1, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0;
 L1 : do if (!(HEAP8[i4 + 44 >> 0] | 0)) {
  i2 = i1;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i3 | 0)) break L1;
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 52 >> 2] & 31](i4, HEAP32[i2 >> 2] | 0) | 0) == -1) break L1;
   i2 = i2 + 4 | 0;
   i1 = i1 + 1 | 0;
  }
 } else i1 = _fwrite(i1, 4, i3, HEAP32[i4 + 32 >> 2] | 0) | 0; while (0);
 return i1 | 0;
}

function __ZNSt3__111__stdoutbufIcE6xsputnEPKci(i4, i1, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0;
 L1 : do if (!(HEAP8[i4 + 44 >> 0] | 0)) {
  i2 = i1;
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i3 | 0)) break L1;
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i4 >> 2] | 0) + 52 >> 2] & 31](i4, HEAPU8[i2 >> 0] | 0) | 0) == -1) break L1;
   i2 = i2 + 1 | 0;
   i1 = i1 + 1 | 0;
  }
 } else i1 = _fwrite(i1, 1, i3, HEAP32[i4 + 32 >> 2] | 0) | 0; while (0);
 return i1 | 0;
}

function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 44888) | 0;
 i3 = i2 + 36 | 0;
 HEAP32[i3 >> 2] = i4;
 i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0;
 i1 = i2 + 44 | 0;
 HEAP32[i1 >> 2] = i4;
 i3 = HEAP32[i3 >> 2] | 0;
 i3 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i3) | 0) & 1;
 HEAP8[i2 + 53 >> 0] = i3;
 return;
}

function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i4 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 44880) | 0;
 i3 = i2 + 36 | 0;
 HEAP32[i3 >> 2] = i4;
 i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0;
 i1 = i2 + 44 | 0;
 HEAP32[i1 >> 2] = i4;
 i3 = HEAP32[i3 >> 2] | 0;
 i3 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i3) | 0) & 1;
 HEAP8[i2 + 53 >> 0] = i3;
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE9visitCallEPNS_4CallE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE9visitHostEPNS_4HostE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 16 | 0;
 i4 = i1 + 20 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt(i1, i6, i5, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i7 = 0;
 i4 = (i5 - i6 | 0) >>> 2;
 i3 = i6;
 while (1) {
  if ((i3 | 0) == (i5 | 0)) break;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 >>> 0 < 128) {
   i7 = ___ctype_b_loc() | 0;
   i1 = HEAPU16[(HEAP32[i7 >> 2] | 0) + (i1 << 1) >> 1] | 0;
  } else i1 = 0;
  HEAP16[i2 >> 1] = i1;
  i2 = i2 + 2 | 0;
  i3 = i3 + 4 | 0;
 }
 return i6 + (i4 << 2) | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE8parseNewERPcPKc(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4 + 4 | 0;
 i6 = i4;
 i3 = __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE12parseElementERPcPKc(i3, i2, i1) | 0;
 HEAP32[i6 >> 2] = i3;
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 i3 = __ZN6cashew12ValueBuilder7makeNewENS_3RefE(i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE9visitCallEPNS_4CallE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i5 = i1 + 8 | 0;
 i4 = i1 + 12 | 0;
 i1 = i2 + 4 | 0;
 i3 = 0;
 while (1) {
  i2 = HEAP32[i5 >> 2] | 0;
  if (i3 >>> 0 >= (HEAP32[i4 >> 2] | 0) - i2 >> 2 >>> 0) break;
  i6 = HEAP32[i1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 8 >> 2] & 127](i6, i2 + (i3 << 2) | 0);
  i3 = i3 + 1 | 0;
 }
 return;
}

function __ZNK4wasm7Literal8popCountEv(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2 + 8 | 0;
 if ((HEAP32[i2 >> 2] | 0) == 1) {
  i1 = __ZN4wasm8PopCountIjEEiT_(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i3 + 8 >> 2] = i1;
  i1 = 1;
 } else {
  i2 = i1;
  i2 = __ZN4wasm8PopCountIyEEiT_(HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0) | 0;
  i1 = i3 + 8 | 0;
  HEAP32[i1 >> 2] = i2;
  HEAP32[i1 + 4 >> 2] = ((i2 | 0) < 0) << 31 >> 31;
  i1 = 2;
 }
 HEAP32[i3 >> 2] = i1;
 return;
}

function __ZN4wasm10Expression2isINS_10CallImportEEEbv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i2;
 i1 = HEAP32[i1 >> 2] | 0;
 i4 = i3 + 4 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = 0;
 HEAP32[i3 >> 2] = 7;
 __ZNSt3__113__vector_baseIPN4wasm10ExpressionENS_9allocatorIS3_EEED2Ev(i3 + 8 | 0);
 STACKTOP = i2;
 return (i1 | 0) == 7 | 0;
}

function _wmemmove(i4, i3, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 i2 = (i1 | 0) == 0;
 if (i4 - i3 >> 2 >>> 0 < i1 >>> 0) {
  if (!i2) do {
   i1 = i1 + -1 | 0;
   HEAP32[i4 + (i1 << 2) >> 2] = HEAP32[i3 + (i1 << 2) >> 2];
  } while ((i1 | 0) != 0);
 } else if (!i2) {
  i2 = i3;
  i3 = i4;
  while (1) {
   i1 = i1 + -1 | 0;
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   if (!i1) break; else {
    i2 = i2 + 4 | 0;
    i3 = i3 + 4 | 0;
   }
  }
 }
 return i4 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!(HEAP8[i1 >> 0] & 1)) {
  HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i2, HEAP32[i1 + 8 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0);
 return;
}

function __ZN4wasm15MinifiedPrinter3runEPNS_10PassRunnerEPNS_6ModuleE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i2;
 i3 = HEAP32[i3 + 4 >> 2] | 0;
 HEAP32[i4 >> 2] = 3760;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP8[i4 + 12 >> 0] = 1;
 HEAP32[i4 + 16 >> 2] = 49108;
 HEAP32[i4 + 20 >> 2] = 49108;
 __ZN4wasm16PrintSExpression11visitModuleEPNS_6ModuleE(i4, i1);
 STACKTOP = i2;
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 if (i2 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i3);
 i1 = i3 + 128 | 0;
 if (i2 >>> 0 < 29 & (HEAP8[i1 >> 0] | 0) == 0) {
  HEAP8[i1 >> 0] = 1;
  i1 = i3 + 16 | 0;
 } else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i3 + 4 >> 2] = i1;
 HEAP32[i3 >> 2] = i1;
 HEAP32[i3 + 8 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameENS2_8WasmTypeEEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE5clearEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 4 | 0;
 __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameENS2_8WasmTypeEEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(i1, HEAP32[i2 >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i2 >> 2] = 0;
 return;
}

function __ZN4wasm10Expression2isINS_5BlockEEEbv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i2;
 i1 = HEAP32[i1 >> 2] | 0;
 HEAP32[i3 >> 2] = 1;
 i4 = i3 + 4 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = 0;
 __ZNSt3__113__vector_baseIPN4wasm10ExpressionENS_9allocatorIS3_EEED2Ev(i3 + 12 | 0);
 STACKTOP = i2;
 return (i1 | 0) == 1 | 0;
}

function __ZN4wasm10Expression2isINS_4CallEEEbv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i2;
 i1 = HEAP32[i1 >> 2] | 0;
 HEAP32[i3 >> 2] = 6;
 i4 = i3 + 4 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = 0;
 __ZNSt3__113__vector_baseIPN4wasm10ExpressionENS_9allocatorIS3_EEED2Ev(i3 + 8 | 0);
 STACKTOP = i2;
 return (i1 | 0) == 6 | 0;
}

function __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i2, 40) | 0;
 if (i1) __Z17prepareMajorColorRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEE(i2) | 0; else __Z12prepareColorRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEE(i2) | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i2, i3) | 0;
 return i2 | 0;
}

function __ZNSt3__114__split_bufferIN6cashew13OperatorClassERNS_9allocatorIS2_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 while (1) {
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (i1 | 0)) break;
  i3 = i3 + -28 | 0;
  HEAP32[i2 >> 2] = i3;
  __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i3);
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__113__vector_baseIN6cashew13OperatorClassENS_9allocatorIS2_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) {
  i2 = i4 + 4 | 0;
  while (1) {
   i3 = HEAP32[i2 >> 2] | 0;
   if ((i3 | 0) == (i1 | 0)) break;
   i3 = i3 + -28 | 0;
   HEAP32[i2 >> 2] = i3;
   __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i3);
  }
  __ZdlPv(HEAP32[i4 >> 2] | 0);
 }
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i6, i4, i3, i5, i7) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 i1 = i2 >> 8;
 if (i2 & 1) i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + i1 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 24 >> 2] & 3](i6, i4, i3 + i1 | 0, i2 & 2 | 0 ? i5 : 2, i7);
 return;
}

function __ZN4wasm7Printer3runEPNS_10PassRunnerEPNS_6ModuleE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i2;
 i3 = HEAP32[i3 + 4 >> 2] | 0;
 HEAP32[i4 >> 2] = 3760;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP8[i4 + 12 >> 0] = 0;
 HEAP32[i4 + 16 >> 2] = 39558;
 HEAP32[i4 + 20 >> 2] = 25614;
 __ZN4wasm16PrintSExpression11visitModuleEPNS_6ModuleE(i4, i1);
 STACKTOP = i2;
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i4, i2, i1, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 if ((i4 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i1, i3); else {
  i4 = HEAP32[i4 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 28 >> 2] & 15](i4, i2, i1, i3);
 }
 return;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm7LiteralENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(40) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 24 >> 2] = 0;
 i1 = i4 + 32 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZNSt3__114__split_bufferIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementERNS_9allocatorIS6_EEEC2EjjS9_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 3) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 3) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 3);
 return;
}

function ___towrite(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i1 = i2 + 74 | 0;
 i3 = HEAP8[i1 >> 0] | 0;
 HEAP8[i1 >> 0] = i3 + 255 | i3;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!(i1 & 8)) {
  HEAP32[i2 + 8 >> 2] = 0;
  HEAP32[i2 + 4 >> 2] = 0;
  i1 = HEAP32[i2 + 44 >> 2] | 0;
  HEAP32[i2 + 28 >> 2] = i1;
  HEAP32[i2 + 20 >> 2] = i1;
  HEAP32[i2 + 16 >> 2] = i1 + (HEAP32[i2 + 48 >> 2] | 0);
  i1 = 0;
 } else {
  HEAP32[i2 >> 2] = i1 | 32;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder10makeReturnERNS_7ElementE(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 i1 = __ZN10MixedArena5allocIN4wasm6ReturnEEEPT_v(HEAP32[i3 + 4 >> 2] | 0) | 0;
 if ((__ZN4wasm7Element4sizeEv(i2) | 0) >>> 0 > 1) {
  i2 = __ZN4wasm7Element4listEv(i2) | 0;
  i3 = __ZN4wasm22SExpressionWasmBuilder15parseExpressionERNS_7ElementE(i3, HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] | 0) | 0;
  HEAP32[i1 + 8 >> 2] = i3;
 }
 return i1 | 0;
}

function __ZN4wasm15Asm2WasmBuilder14detectWasmTypeEN6cashew3RefEP7AsmData(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4 + 4 | 0;
 i6 = i4;
 HEAP32[i6 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 i3 = __ZN4wasm13asmToWasmTypeE7AsmType(__ZN4wasm15Asm2WasmBuilder13detectAsmTypeEN6cashew3RefEP7AsmData(i3, i5, i2) | 0) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZN4wasm12RegisterPassINS_17RemoveUnusedNamesEEC2EPKcS4_(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i3;
 i5 = __ZN4wasm12PassRegistry3getEv() | 0;
 HEAP32[i4 + 16 >> 2] = i4;
 HEAP32[i4 >> 2] = 4020;
 __ZN4wasm12PassRegistry12registerPassEPKcS2_NSt3__18functionIFPNS_4PassEvEEE(i5, i2, i1, i4);
 __ZNSt3__18functionIFPN4wasm4PassEvEED2Ev(i4);
 STACKTOP = i3;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0;
 HEAP8[i3 >> 0] = 20;
 i4 = i3 + 1 | 0;
 i2 = i4 + 10 | 0;
 do {
  HEAP8[i4 >> 0] = HEAP8[i1 >> 0] | 0;
  i4 = i4 + 1 | 0;
  i1 = i1 + 1 | 0;
 } while ((i4 | 0) < (i2 | 0));
 HEAP8[i3 + 11 >> 0] = 0;
 i1 = i3 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = HEAP8[i1 >> 0] | 0;
  i4 = (i3 & 1) == 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj(i2, i4 ? i1 + 1 | 0 : HEAP32[i1 + 8 >> 2] | 0, i4 ? (i3 & 255) >>> 1 : HEAP32[i1 + 4 >> 2] | 0);
 }
 return;
}

function __ZN4wasm12RegisterPassINS_15RemoveUnusedBrsEEC2EPKcS4_(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i3;
 i5 = __ZN4wasm12PassRegistry3getEv() | 0;
 HEAP32[i4 + 16 >> 2] = i4;
 HEAP32[i4 >> 2] = 3892;
 __ZN4wasm12PassRegistry12registerPassEPKcS2_NSt3__18functionIFPNS_4PassEvEEE(i5, i2, i1, i4);
 __ZNSt3__18functionIFPN4wasm4PassEvEED2Ev(i4);
 STACKTOP = i3;
 return;
}

function __ZN4wasm12RegisterPassINS_15MinifiedPrinterEEC2EPKcS4_(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i3;
 i5 = __ZN4wasm12PassRegistry3getEv() | 0;
 HEAP32[i4 + 16 >> 2] = i4;
 HEAP32[i4 >> 2] = 3848;
 __ZN4wasm12PassRegistry12registerPassEPKcS2_NSt3__18functionIFPNS_4PassEvEEE(i5, i2, i1, i4);
 __ZNSt3__18functionIFPN4wasm4PassEvEED2Ev(i4);
 STACKTOP = i3;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0;
 HEAP8[i3 >> 0] = 18;
 i4 = i3 + 1 | 0;
 i2 = i4 + 9 | 0;
 do {
  HEAP8[i4 >> 0] = HEAP8[i1 >> 0] | 0;
  i4 = i4 + 1 | 0;
  i1 = i1 + 1 | 0;
 } while ((i4 | 0) < (i2 | 0));
 HEAP8[i3 + 10 >> 0] = 0;
 i1 = i3 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZN4wasm12RegisterPassINS_14SimplifyLocalsEEC2EPKcS4_(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i3;
 i5 = __ZN4wasm12PassRegistry3getEv() | 0;
 HEAP32[i4 + 16 >> 2] = i4;
 HEAP32[i4 >> 2] = 4276;
 __ZN4wasm12PassRegistry12registerPassEPKcS2_NSt3__18functionIFPNS_4PassEvEEE(i5, i2, i1, i4);
 __ZNSt3__18functionIFPN4wasm4PassEvEED2Ev(i4);
 STACKTOP = i3;
 return;
}

function __ZN4wasm12RegisterPassINS_14PostEmscriptenEEC2EPKcS4_(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i3;
 i5 = __ZN4wasm12PassRegistry3getEv() | 0;
 HEAP32[i4 + 16 >> 2] = i4;
 HEAP32[i4 >> 2] = 4148;
 __ZN4wasm12PassRegistry12registerPassEPKcS2_NSt3__18functionIFPNS_4PassEvEEE(i5, i2, i1, i4);
 __ZNSt3__18functionIFPN4wasm4PassEvEED2Ev(i4);
 STACKTOP = i3;
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i6, i4, i3, i5) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 i1 = i2 >> 8;
 if (i2 & 1) i1 = HEAP32[(HEAP32[i3 >> 2] | 0) + i1 >> 2] | 0;
 i6 = HEAP32[i6 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 15](i6, i4, i3 + i1 | 0, i2 & 2 | 0 ? i5 : 2);
 return;
}

function __ZN4wasm12RegisterPassINS_13ReorderLocalsEEC2EPKcS4_(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i3;
 i5 = __ZN4wasm12PassRegistry3getEv() | 0;
 HEAP32[i4 + 16 >> 2] = i4;
 HEAP32[i4 >> 2] = 4404;
 __ZN4wasm12PassRegistry12registerPassEPKcS2_NSt3__18functionIFPNS_4PassEvEEE(i5, i2, i1, i4);
 __ZNSt3__18functionIFPN4wasm4PassEvEED2Ev(i4);
 STACKTOP = i3;
 return;
}

function copyTempDouble(i1) {
 i1 = i1 | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[i1 >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[i1 + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[i1 + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[i1 + 3 >> 0];
 HEAP8[tempDoublePtr + 4 >> 0] = HEAP8[i1 + 4 >> 0];
 HEAP8[tempDoublePtr + 5 >> 0] = HEAP8[i1 + 5 >> 0];
 HEAP8[tempDoublePtr + 6 >> 0] = HEAP8[i1 + 6 >> 0];
 HEAP8[tempDoublePtr + 7 >> 0] = HEAP8[i1 + 7 >> 0];
}

function __ZN4wasm12RegisterPassINS_11MergeBlocksEEC2EPKcS4_(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i3;
 i5 = __ZN4wasm12PassRegistry3getEv() | 0;
 HEAP32[i4 + 16 >> 2] = i4;
 HEAP32[i4 >> 2] = 3604;
 __ZN4wasm12PassRegistry12registerPassEPKcS2_NSt3__18functionIFPNS_4PassEvEEE(i5, i2, i1, i4);
 __ZNSt3__18functionIFPN4wasm4PassEvEED2Ev(i4);
 STACKTOP = i3;
 return;
}

function __ZN4wasm10Expression2isINS_12CallIndirectEEEbv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i2;
 i1 = HEAP32[i1 >> 2] | 0;
 HEAP32[i3 >> 2] = 8;
 i4 = i3 + 4 | 0;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i4 + 8 >> 2] = 0;
 HEAP32[i4 + 12 >> 2] = 0;
 __ZNSt3__113__vector_baseIPN4wasm10ExpressionENS_9allocatorIS3_EEED2Ev(i3 + 8 | 0);
 STACKTOP = i2;
 return (i1 | 0) == 8 | 0;
}

function _memcmp(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 L1 : do if (!i1) i1 = 0; else {
  i5 = i1;
  i4 = i2;
  while (1) {
   i2 = HEAP8[i4 >> 0] | 0;
   i1 = HEAP8[i3 >> 0] | 0;
   if (i2 << 24 >> 24 != i1 << 24 >> 24) break;
   i5 = i5 + -1 | 0;
   if (!i5) {
    i1 = 0;
    break L1;
   } else {
    i4 = i4 + 1 | 0;
    i3 = i3 + 1 | 0;
   }
  }
  i1 = (i2 & 255) - (i1 & 255) | 0;
 } while (0);
 return i1 | 0;
}

function ___stdout_write(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i4 = i5;
 HEAP32[i2 + 36 >> 2] = 6;
 if ((HEAP32[i2 >> 2] & 64 | 0) == 0 ? (HEAP32[i4 >> 2] = HEAP32[i2 + 60 >> 2], HEAP32[i4 + 4 >> 2] = 21505, HEAP32[i4 + 8 >> 2] = i5 + 12, ___syscall54(54, i4 | 0) | 0) : 0) HEAP8[i2 + 75 >> 0] = -1;
 i4 = ___stdio_write(i2, i1, i3) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i1) return; else {
  __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(i2, HEAP32[i1 >> 2] | 0);
  __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(i2, HEAP32[i1 + 4 >> 2] | 0);
  __ZdlPv(i1);
  return;
 }
}

function _vsscanf(i4, i3, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i2 = i6;
 i5 = i2;
 i7 = i5 + 112 | 0;
 do {
  HEAP32[i5 >> 2] = 0;
  i5 = i5 + 4 | 0;
 } while ((i5 | 0) < (i7 | 0));
 HEAP32[i2 + 32 >> 2] = 28;
 HEAP32[i2 + 44 >> 2] = i4;
 HEAP32[i2 + 76 >> 2] = -1;
 HEAP32[i2 + 84 >> 2] = i4;
 i7 = _vfscanf(i2, i3, i1) | 0;
 STACKTOP = i6;
 return i7 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE5clearEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 4 | 0;
 __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(i1, HEAP32[i2 >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i2 >> 2] = 0;
 return;
}

function __ZN7AsmData7getTypeERKN6cashew7IStringE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(i2, i1) | 0;
 if (!i1) i1 = 8; else i1 = HEAP32[i1 + 12 >> 2] | 0;
 return i1 | 0;
}

function __ZN4wasm12RegisterPassINS_7PrinterEEC2EPKcS4_(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i3;
 i5 = __ZN4wasm12PassRegistry3getEv() | 0;
 HEAP32[i4 + 16 >> 2] = i4;
 HEAP32[i4 >> 2] = 3804;
 __ZN4wasm12PassRegistry12registerPassEPKcS2_NSt3__18functionIFPNS_4PassEvEEE(i5, i2, i1, i4);
 __ZNSt3__18functionIFPN4wasm4PassEvEED2Ev(i4);
 STACKTOP = i3;
 return;
}

function __ZNK4wasm7Literal2leERKS0_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var d4 = 0.0;
 if ((HEAP32[i3 >> 2] | 0) == 3) {
  d4 = +__ZNK4wasm7Literal6getf32Ev(i3);
  i3 = d4 <= +__ZNK4wasm7Literal6getf32Ev(i2) & 1;
  HEAP32[i1 >> 2] = 1;
  HEAP32[i1 + 8 >> 2] = i3;
 } else {
  d4 = +__ZNK4wasm7Literal6getf64Ev(i3);
  i3 = d4 <= +__ZNK4wasm7Literal6getf64Ev(i2) & 1;
  HEAP32[i1 >> 2] = 1;
  HEAP32[i1 + 8 >> 2] = i3;
 }
 return;
}

function __ZNK4wasm7Literal2geERKS0_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var d4 = 0.0;
 if ((HEAP32[i3 >> 2] | 0) == 3) {
  d4 = +__ZNK4wasm7Literal6getf32Ev(i3);
  i3 = d4 >= +__ZNK4wasm7Literal6getf32Ev(i2) & 1;
  HEAP32[i1 >> 2] = 1;
  HEAP32[i1 + 8 >> 2] = i3;
 } else {
  d4 = +__ZNK4wasm7Literal6getf64Ev(i3);
  i3 = d4 >= +__ZNK4wasm7Literal6getf64Ev(i2) & 1;
  HEAP32[i1 >> 2] = 1;
  HEAP32[i1 + 8 >> 2] = i3;
 }
 return;
}

function __ZNK4wasm7Literal2ltERKS0_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var d4 = 0.0;
 if ((HEAP32[i3 >> 2] | 0) == 3) {
  d4 = +__ZNK4wasm7Literal6getf32Ev(i3);
  i3 = d4 < +__ZNK4wasm7Literal6getf32Ev(i2) & 1;
  HEAP32[i1 >> 2] = 1;
  HEAP32[i1 + 8 >> 2] = i3;
 } else {
  d4 = +__ZNK4wasm7Literal6getf64Ev(i3);
  i3 = d4 < +__ZNK4wasm7Literal6getf64Ev(i2) & 1;
  HEAP32[i1 >> 2] = 1;
  HEAP32[i1 + 8 >> 2] = i3;
 }
 return;
}

function __ZNK4wasm7Literal2gtERKS0_(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var d4 = 0.0;
 if ((HEAP32[i3 >> 2] | 0) == 3) {
  d4 = +__ZNK4wasm7Literal6getf32Ev(i3);
  i3 = d4 > +__ZNK4wasm7Literal6getf32Ev(i2) & 1;
  HEAP32[i1 >> 2] = 1;
  HEAP32[i1 + 8 >> 2] = i3;
 } else {
  d4 = +__ZNK4wasm7Literal6getf64Ev(i3);
  i3 = d4 > +__ZNK4wasm7Literal6getf64Ev(i2) & 1;
  HEAP32[i1 >> 2] = 1;
  HEAP32[i1 + 8 >> 2] = i3;
 }
 return;
}

function __ZN4wasm16PrintSExpression9decIndentEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 if (!(HEAP8[i1 + 12 >> 0] | 0)) {
  i3 = i1 + 8 | 0;
  i2 = (HEAP32[i3 >> 2] | 0) + -1 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + 4 | 0;
  __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(HEAP32[i1 >> 2] | 0, i2) | 0;
 } else i1 = i1 + 4 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i1 >> 2] | 0, 41) | 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP8[i2 >> 0] = 6;
 i3 = i2 + 1 | 0;
 HEAP8[i3 >> 0] = HEAP8[i1 >> 0] | 0;
 HEAP8[i3 + 1 >> 0] = HEAP8[i1 + 1 >> 0] | 0;
 HEAP8[i3 + 2 >> 0] = HEAP8[i1 + 2 >> 0] | 0;
 HEAP8[i2 + 4 >> 0] = 0;
 i1 = i2 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZN7AsmDataD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113__vector_baseIN6cashew7IStringENS_9allocatorIS2_EEED2Ev(i1 + 32 | 0);
 __ZNSt3__113__vector_baseIN6cashew7IStringENS_9allocatorIS2_EEED2Ev(i1 + 20 | 0);
 __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEED2Ev(i1);
 return;
}

function ___string_read(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = i2 + 84 | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 i7 = i3 + 256 | 0;
 i5 = _memchr(i6, 0, i7) | 0;
 i5 = (i5 | 0) == 0 ? i7 : i5 - i6 | 0;
 i3 = i5 >>> 0 < i3 >>> 0 ? i5 : i3;
 _memcpy(i1 | 0, i6 | 0, i3 | 0) | 0;
 HEAP32[i2 + 4 >> 2] = i6 + i3;
 i1 = i6 + i5 | 0;
 HEAP32[i2 + 8 >> 2] = i1;
 HEAP32[i4 >> 2] = i1;
 return i3 | 0;
}

function __ZN4wasm12toUInteger64Ed(d1) {
 d1 = +d1;
 var i2 = 0, i3 = 0;
 if (__ZN4wasm12isUInteger64Ed(d1) | 0) {
  i2 = d1 < 18446744073709551616.0;
  i3 = +Math_abs(d1) >= 1.0 ? (d1 > 0.0 ? ~~+Math_min(+Math_floor(d1 / 4294967296.0), 4294967295.0) >>> 0 : ~~+Math_ceil((d1 - +(~~d1 >>> 0)) / 4294967296.0) >>> 0) : 0;
  tempRet0 = i2 ? i3 : -1;
  return (i2 ? ~~d1 >>> 0 : -1) | 0;
 } else ___assert_fail(31559, 31488, 62, 31575);
 return 0;
}

function __Znwj(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = (i1 | 0) == 0 ? 1 : i1;
 while (1) {
  i1 = _malloc(i2) | 0;
  if (i1 | 0) {
   i2 = 6;
   break;
  }
  i1 = __ZSt15get_new_handlerv() | 0;
  if (!i1) {
   i2 = 5;
   break;
  }
  FUNCTION_TABLE_v[i1 & 3]();
 }
 if ((i2 | 0) == 5) {
  i2 = ___cxa_allocate_exception(4) | 0;
  HEAP32[i2 >> 2] = 12120;
  ___cxa_throw(i2 | 0, 2824, 199);
 } else if ((i2 | 0) == 6) return i1 | 0;
 return 0;
}

function __ZNKSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE14__count_uniqueIS2_EEjRKT_(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0;
 i1 = i1 + 4 | 0;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) {
   i1 = 0;
   break;
  }
  i2 = i1 + 16 | 0;
  if (__ZNK6cashew7IStringltERKS0_(i3, i2) | 0) continue;
  if (!(__ZNK6cashew7IStringltERKS0_(i2, i3) | 0)) {
   i1 = 1;
   break;
  }
  i1 = i1 + 4 | 0;
 }
 return i1 | 0;
}

function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i6 = 0;
 i3 = (i4 - i5 | 0) >>> 2;
 i2 = i5;
 while (1) {
  if ((i2 | 0) == (i4 | 0)) break;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i1 >>> 0 < 128) {
   i6 = ___ctype_toupper_loc() | 0;
   i1 = HEAP32[(HEAP32[i6 >> 2] | 0) + (i1 << 2) >> 2] | 0;
  }
  HEAP32[i2 >> 2] = i1;
  i2 = i2 + 4 | 0;
 }
 return i5 + (i3 << 2) | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw(i1, i5, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i6 = 0;
 i3 = (i4 - i5 | 0) >>> 2;
 i2 = i5;
 while (1) {
  if ((i2 | 0) == (i4 | 0)) break;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i1 >>> 0 < 128) {
   i6 = ___ctype_tolower_loc() | 0;
   i1 = HEAP32[(HEAP32[i6 >> 2] | 0) + (i1 << 2) >> 2] | 0;
  }
  HEAP32[i2 >> 2] = i1;
  i2 = i2 + 4 | 0;
 }
 return i5 + (i3 << 2) | 0;
}

function __ZNSt3__18ios_base4initEPv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP32[i2 + 24 >> 2] = i1;
 HEAP32[i2 + 16 >> 2] = (i1 | 0) == 0 & 1;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 4098;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 6;
 i3 = i2 + 28 | 0;
 i1 = i2 + 32 | 0;
 i2 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = 0;
  i1 = i1 + 4 | 0;
 } while ((i1 | 0) < (i2 | 0));
 __ZNSt3__16localeC2Ev(i3);
 return;
}

function __ZNK4wasm7Literal3divERKS0_(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var d4 = 0.0;
 if ((HEAP32[i2 >> 2] | 0) == 3) {
  d4 = +__ZNK4wasm7Literal6getf32Ev(i2);
  d4 = d4 / +__ZNK4wasm7Literal6getf32Ev(i1);
  HEAPF32[i3 + 8 >> 2] = d4;
  i1 = 3;
 } else {
  d4 = +__ZNK4wasm7Literal6getf64Ev(i2);
  d4 = d4 / +__ZNK4wasm7Literal6getf64Ev(i1);
  HEAPF64[i3 + 8 >> 3] = d4;
  i1 = 4;
 }
 HEAP32[i3 >> 2] = i1;
 return;
}

function __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE10deallocateEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) {
  i2 = i4 + 4 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  while (1) {
   if ((i3 | 0) == (i1 | 0)) break;
   i5 = i3 + -4 | 0;
   HEAP32[i2 >> 2] = i5;
   i3 = i5;
  }
  __ZdlPv(i1);
  HEAP32[i4 + 8 >> 2] = 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i4 >> 2] = 0;
 }
 return;
}

function __ZZ11instantiateEN19JSExternalInterface4initERN4wasm6ModuleE(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0;
 _emscripten_asm_const_ii(12, HEAP32[i3 + 108 >> 2] | 0) | 0;
 i2 = HEAP32[i3 + 120 >> 2] | 0;
 i1 = HEAP32[i3 + 116 >> 2] | 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  _emscripten_asm_const_iiii(13, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0, HEAP32[i1 + 8 >> 2] | 0) | 0;
  i1 = i1 + 12 | 0;
 }
 return;
}

function __ZN4wasm15Asm2WasmBuilder10getLiteralEN6cashew3RefE(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4 + 4 | 0;
 i6 = i4;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 __ZN4wasm15Asm2WasmBuilder12checkLiteralEN6cashew3RefE(i1, i3, i5);
 if (!(HEAP32[i1 >> 2] | 0)) _abort(); else {
  STACKTOP = i4;
  return;
 }
}

function _strcmp(i4, i2) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = HEAP8[i4 >> 0] | 0;
 i1 = HEAP8[i2 >> 0] | 0;
 if (i3 << 24 >> 24 == 0 ? 1 : i3 << 24 >> 24 != i1 << 24 >> 24) i2 = i3; else {
  do {
   i4 = i4 + 1 | 0;
   i2 = i2 + 1 | 0;
   i3 = HEAP8[i4 >> 0] | 0;
   i1 = HEAP8[i2 >> 0] | 0;
  } while (!(i3 << 24 >> 24 == 0 ? 1 : i3 << 24 >> 24 != i1 << 24 >> 24));
  i2 = i3;
 }
 return (i2 & 255) - (i1 & 255) | 0;
}

function __ZNSt3__1lsIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = HEAP8[i2 >> 0] | 0;
 i4 = (i3 & 1) == 0;
 return __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i1, i4 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0, i4 ? (i3 & 255) >>> 1 : HEAP32[i2 + 4 >> 2] | 0) | 0;
}

function __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE10deallocateEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) {
  i2 = i4 + 4 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  while (1) {
   if ((i3 | 0) == (i1 | 0)) break;
   i5 = i3 + -4 | 0;
   HEAP32[i2 >> 2] = i5;
   i3 = i5;
  }
  __ZdlPv(i1);
  HEAP32[i4 + 8 >> 2] = 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i4 >> 2] = 0;
 }
 return;
}

function __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE10deallocateEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) {
  i2 = i4 + 4 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  while (1) {
   if ((i3 | 0) == (i1 | 0)) break;
   i5 = i3 + -8 | 0;
   HEAP32[i2 >> 2] = i5;
   i3 = i5;
  }
  __ZdlPv(i1);
  HEAP32[i4 + 8 >> 2] = 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i4 >> 2] = 0;
 }
 return;
}

function __ZNSt3__114__split_bufferIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementERNS_9allocatorIS6_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -8 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZN6cashew5Value10getIntegerEv(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = __ZN6cashew5Value9getNumberEv(i2) | 0;
 if (!(+_fmod(+HEAPF64[i1 >> 3], 1.0) == 0.0)) ___assert_fail(22793, 31233, 228, 22819);
 i1 = __ZN6cashew5Value9getNumberEv(i2) | 0;
 i1 = ~~+HEAPF64[i1 >> 3];
 i2 = __ZN6cashew5Value9getNumberEv(i2) | 0;
 if (+(i1 | 0) == +HEAPF64[i2 >> 3]) return i1 | 0; else ___assert_fail(22830, 31233, 230, 22819);
 return 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE7__cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = __Znwj(64) | 0;
 HEAP32[i3 >> 2] = 3428;
 i4 = i3 + 4 | 0;
 i1 = i1 + 4 | 0;
 i2 = i4 + 60 | 0;
 do {
  HEAP32[i4 >> 2] = HEAP32[i1 >> 2];
  i4 = i4 + 4 | 0;
  i1 = i1 + 4 | 0;
 } while ((i4 | 0) < (i2 | 0));
 return i3 | 0;
}

function __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE10deallocateEv(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) {
  i2 = i4 + 4 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  while (1) {
   if ((i3 | 0) == (i1 | 0)) break;
   i5 = i3 + -4 | 0;
   HEAP32[i2 >> 2] = i5;
   i3 = i5;
  }
  __ZdlPv(i1);
  HEAP32[i4 + 8 >> 2] = 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i4 >> 2] = 0;
 }
 return;
}

function __ZNSt3__114__split_bufferIPNS_6vectorIN6cashew3RefENS_9allocatorIS3_EEEERNS4_IS7_EEEC2EjjS9_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__112__hash_tableIPKcN6cashew7IString11CStringHashENS4_12CStringEqualENS_9allocatorIS2_EEE16__construct_nodeERKS2_j(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = __Znwj(12) | 0;
 HEAP32[i5 + 8 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i5 + 4 >> 2] = i1;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i3 >> 2] = i5;
 i3 = i3 + 4 | 0;
 HEAP32[i3 >> 2] = i4 + 8;
 HEAP32[i3 + 4 >> 2] = 1;
 return;
}

function __ZNSt3__114__split_bufferIN6cashew13OperatorClassERNS_9allocatorIS2_EEEC2EjjS5_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 * 28 | 0) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 * 28 | 0) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 * 28 | 0);
 return;
}

function __ZNSt3__114__split_bufferIN4wasm6Memory7SegmentERNS_9allocatorIS3_EEEC2EjjS6_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 * 12 | 0) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 * 12 | 0) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 * 12 | 0);
 return;
}

function __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_j(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i5 = 0;
 i5 = __Znwj(12) | 0;
 HEAP32[i5 + 8 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i5 + 4 >> 2] = i1;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i3 >> 2] = i5;
 i3 = i3 + 4 | 0;
 HEAP32[i3 >> 2] = i4 + 8;
 HEAP32[i3 + 4 >> 2] = 1;
 return;
}

function __ZZN4wasm12RegisterPassINS_17RemoveUnusedNamesEEC1EPKcS4_ENKUlvE_clEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = __Znwj(24) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 >> 2] = 4064;
 HEAP32[i1 + 4 >> 2] = 4092;
 i2 = i1 + 16 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = i2;
 return i1 | 0;
}

function __ZN4wasm6Binary8finalizeEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 if ((HEAP32[i3 + 8 >> 2] | 0) > 16) HEAP32[i3 + 4 >> 2] = 1; else {
  i2 = HEAP32[(HEAP32[i3 + 12 >> 2] | 0) + 4 >> 2] | 0;
  i1 = HEAP32[(HEAP32[i3 + 16 >> 2] | 0) + 4 >> 2] | 0;
  if ((i2 | 0) != 5 ? !((i1 | 0) == 5 | (i2 | 0) == (i1 | 0)) : 0) ___assert_fail(17372, 30223, 979, 17463);
  HEAP32[i3 + 4 >> 2] = (i2 | 0) != 5 ? i2 : i1;
 }
 return;
}

function __ZN4wasm4Name7fromIntEj(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i2 + 12 | 0;
 i3 = i2;
 __ZNSt3__19to_stringEj(i3, i1);
 __ZN6cashew7IStringC2EPKcb(i4, (HEAP8[i3 >> 0] & 1) == 0 ? i3 + 1 | 0 : HEAP32[i3 + 8 >> 2] | 0, 0);
 i1 = HEAP32[i4 >> 2] | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3);
 STACKTOP = i2;
 return i1 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!(HEAP8[i1 >> 0] & 1)) {
  HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
  HEAP32[i2 + 4 >> 2] = HEAP32[i1 + 4 >> 2];
  HEAP32[i2 + 8 >> 2] = HEAP32[i1 + 8 >> 2];
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i2, HEAP32[i1 + 8 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0);
 return;
}

function __ZN10MixedArena5clearEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0;
 i4 = i3 + 4 | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  __ZdaPv(HEAP32[i2 >> 2] | 0);
  i2 = i2 + 4 | 0;
 }
 i1 = HEAP32[i3 >> 2] | 0;
 i2 = HEAP32[i4 >> 2] | 0;
 while (1) {
  if ((i2 | 0) == (i1 | 0)) break;
  i3 = i2 + -4 | 0;
  HEAP32[i4 >> 2] = i3;
  i2 = i3;
 }
 return;
}

function __ZZN4wasm12RegisterPassINS_13ReorderLocalsEEC1EPKcS4_ENKUlvE_clEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = __Znwj(24) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 >> 2] = 4448;
 HEAP32[i1 + 4 >> 2] = 4476;
 i2 = i1 + 16 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = i2;
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE7__cloneEPNS0_6__baseISB_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP32[i1 >> 2] = 3428;
 i3 = i1 + 4 | 0;
 i1 = i2 + 4 | 0;
 i2 = i3 + 60 | 0;
 do {
  HEAP32[i3 >> 2] = HEAP32[i1 >> 2];
  i3 = i3 + 4 | 0;
  i1 = i1 + 4 | 0;
 } while ((i3 | 0) < (i2 | 0));
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 8 | 0;
 i2 = _uselocale(HEAP32[i1 >> 2] | 0) | 0;
 i3 = _mbtowc(0, 0, 4) | 0;
 if (i2 | 0) _uselocale(i2) | 0;
 if (!i3) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (i1) {
   i1 = _uselocale(i1) | 0;
   if (!i1) i1 = 0; else {
    _uselocale(i1) | 0;
    i1 = 0;
   }
  } else i1 = 1;
 } else i1 = -1;
 return i1 | 0;
}

function __ZN4wasm10WalkerPassINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 15](i3, i2, i1);
 __ZN4wasm10WasmWalkerINS_17RemoveUnusedNamesEvE9startWalkEPNS_6ModuleE(i3 + 4 | 0, i1);
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 15](i3, i2, i1);
 return;
}

function __ZN4wasm10PassRunnerD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = i1 + 4 | 0;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 i3 = HEAP32[i4 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i2 = HEAP32[i3 >> 2] | 0;
  if (i2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i2 >> 2] | 0) + 4 >> 2] & 255](i2);
  i3 = i3 + 4 | 0;
 }
 __ZNSt3__113__vector_baseIPN4wasm4PassENS_9allocatorIS3_EEED2Ev(i4);
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm12FunctionTypeERNS_9allocatorIS3_EEEC2EjjS6_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 if ((i2 | 0) != (i1 | 0)) {
  i3 = HEAP8[i1 >> 0] | 0;
  i4 = (i3 & 1) == 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj(i2, i4 ? i1 + 1 | 0 : HEAP32[i1 + 8 >> 2] | 0, i4 ? (i3 & 255) >>> 1 : HEAP32[i1 + 4 >> 2] | 0) | 0;
 }
 return i2 | 0;
}

function __ZN4wasm10WalkerPassINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 15](i3, i2, i1);
 __ZN4wasm10WasmWalkerINS_15RemoveUnusedBrsEvE9startWalkEPNS_6ModuleE(i3 + 4 | 0, i1);
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 15](i3, i2, i1);
 return;
}

function __ZNSt3__13mapIN6cashew7IStringEN4wasm15Asm2WasmBuilder4ViewENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S5_EEEEE25__construct_node_with_keyERSA_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(32) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm10ExpressionERNS_9allocatorIS3_EEEC2EjjS6_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZN4wasm10WalkerPassINS_10WasmWalkerINS_14SimplifyLocalsEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 15](i3, i2, i1);
 __ZN4wasm10WasmWalkerINS_14SimplifyLocalsEvE9startWalkEPNS_6ModuleE(i3 + 4 | 0, i1);
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 15](i3, i2, i1);
 return;
}

function __ZN4wasm10WalkerPassINS_10WasmWalkerINS_14PostEmscriptenEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 15](i3, i2, i1);
 __ZN4wasm10WasmWalkerINS_14PostEmscriptenEvE9startWalkEPNS_6ModuleE(i3 + 4 | 0, i1);
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 15](i3, i2, i1);
 return;
}

function __ZN4wasm10PassRunner3runEPNS_6ModuleE(i5, i4) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i6 = 0;
 i1 = HEAP32[i5 + 8 >> 2] | 0;
 i2 = i5 + 16 | 0;
 i3 = HEAP32[i5 + 4 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i6 = HEAP32[i3 >> 2] | 0;
  HEAP32[i2 >> 2] = i6;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] & 15](i6, i5, i4);
  i3 = i3 + 4 | 0;
 }
 return;
}

function __ZNSt3__114__split_bufferIN4wasm6Switch4CaseERNS_9allocatorIS3_EEEC2EjjS6_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 3) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 3) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 3);
 return;
}

function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_(i2, i4, i1, i3) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i5 = 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) {
   i1 = i3;
   break;
  }
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 >= 128) break;
  i5 = ___ctype_b_loc() | 0;
  if (!((HEAP16[(HEAP32[i5 >> 2] | 0) + (i2 << 1) >> 1] & i4) << 16 >> 16)) break;
  i1 = i1 + 4 | 0;
 }
 return i1 | 0;
}

function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0;
 i1 = i5 + 32 | 0;
 i2 = i5 + 36 | 0;
 i4 = HEAP32[i5 + 40 >> 2] | 0;
 while (1) {
  if (!i4) break;
  i6 = i4 + -1 | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[i1 >> 2] | 0) + (i6 << 2) >> 2] & 15](i3, i5, HEAP32[(HEAP32[i2 >> 2] | 0) + (i6 << 2) >> 2] | 0);
  i4 = i6;
 }
 return;
}

function __ZNSt3__113unordered_mapIN6cashew7IStringEiNS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorINS_4pairIKS2_iEEEEE25__construct_node_with_keyERS9_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(16) | 0;
 HEAP32[i4 + 8 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 8;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZN4wasm10WalkerPassINS_10WasmWalkerINS_13ReorderLocalsEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 15](i3, i2, i1);
 __ZN4wasm10WasmWalkerINS_13ReorderLocalsEvE9startWalkEPNS_6ModuleE(i3 + 4 | 0, i1);
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 15](i3, i2, i1);
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm8FunctionERNS_9allocatorIS3_EEEC2EjjS6_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__114__split_bufferIN6cashew7IStringERNS_9allocatorIS2_EEEC2EjjS5_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__114__split_bufferIPN6cashew5ValueERNS_9allocatorIS3_EEEC2EjjS6_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm7ElementERNS_9allocatorIS3_EEEC2EjjS6_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__114__split_bufferIN4wasm8WasmTypeERNS_9allocatorIS2_EEEC2EjjS5_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__114__split_bufferIN4wasm8NameTypeERNS_9allocatorIS2_EEEC2EjjS5_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 3) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 3) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 3);
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm6ImportERNS_9allocatorIS3_EEEC2EjjS6_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm6ExportERNS_9allocatorIS3_EEEC2EjjS6_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__114__split_bufferIN4wasm7LiteralERNS_9allocatorIS2_EEEC2EjjS5_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 4) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 4) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 4);
 return;
}

function __ZN4wasm10WalkerPassINS_10WasmWalkerINS_11MergeBlocksEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 15](i3, i2, i1);
 __ZN4wasm10WasmWalkerINS_11MergeBlocksEvE9startWalkEPNS_6ModuleE(i3 + 4 | 0, i1);
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i3 >> 2] | 0) + 16 >> 2] & 15](i3, i2, i1);
 return;
}

function __ZNSt3__13mapIPN4wasm12CallIndirectEN6cashew7IStringENS_4lessIS3_EENS_9allocatorINS_4pairIKS3_S5_EEEEE25__construct_node_with_keyERSA_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(24) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm4PassERNS_9allocatorIS3_EEEC2EjjS6_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__114__split_bufferIN6cashew3RefERNS_9allocatorIS2_EEEC2EjjS5_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZNSt3__113__vector_baseIN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -8 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZNSt3__114__split_bufferIN4wasm4NameERNS_9allocatorIS2_EEEC2EjjS5_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function ___muldsi3(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = i1 & 65535;
 i5 = i2 & 65535;
 i3 = Math_imul(i5, i6) | 0;
 i4 = i1 >>> 16;
 i1 = (i3 >>> 16) + (Math_imul(i5, i4) | 0) | 0;
 i5 = i2 >>> 16;
 i2 = Math_imul(i5, i6) | 0;
 return (tempRet0 = (i1 >>> 16) + (Math_imul(i5, i4) | 0) + (((i1 & 65535) + i2 | 0) >>> 16) | 0, i1 + i2 << 16 | i3 & 65535 | 0) | 0;
}

function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc(i1, i6, i5, i4, i2) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0, i7 = 0;
 i3 = (i5 - i6 | 0) >>> 2;
 i1 = i2;
 i2 = i6;
 while (1) {
  if ((i2 | 0) == (i5 | 0)) break;
  i7 = HEAP32[i2 >> 2] | 0;
  HEAP8[i1 >> 0] = i7 >>> 0 < 128 ? i7 & 255 : i4;
  i1 = i1 + 1 | 0;
  i2 = i2 + 4 | 0;
 }
 return i6 + (i3 << 2) | 0;
}

function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 i2 = i1;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP8[i2 >> 0] | 0;
  if (i1 << 24 >> 24 > -1) {
   i4 = ___ctype_toupper_loc() | 0;
   i1 = HEAP32[(HEAP32[i4 >> 2] | 0) + (i1 << 24 >> 24 << 2) >> 2] & 255;
  }
  HEAP8[i2 >> 0] = i1;
  i2 = i2 + 1 | 0;
 }
 return i3 | 0;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 i2 = i1;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP8[i2 >> 0] | 0;
  if (i1 << 24 >> 24 > -1) {
   i4 = ___ctype_tolower_loc() | 0;
   i1 = HEAP32[(HEAP32[i4 >> 2] | 0) + (i1 << 24 >> 24 << 2) >> 2] & 255;
  }
  HEAP8[i2 >> 0] = i1;
  i2 = i2 + 1 | 0;
 }
 return i3 | 0;
}

function __ZNSt3__113unordered_mapIN6cashew7IStringEN7AsmData5LocalENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERSB_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(20) | 0;
 HEAP32[i4 + 8 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 8;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP8[i2 >> 0] = 0;
 HEAP32[i2 + 4 >> 2] = i1;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[i1 + 16 >> 2] | 0)) {
  i1 = HEAP32[i1 + 72 >> 2] | 0;
  if (i1 | 0) __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(i1) | 0;
  HEAP8[i2 >> 0] = 1;
 }
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP8[i2 >> 0] = 0;
 HEAP32[i2 + 4 >> 2] = i1;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[i1 + 16 >> 2] | 0)) {
  i1 = HEAP32[i1 + 72 >> 2] | 0;
  if (i1 | 0) __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  HEAP8[i2 >> 0] = 1;
 }
 return;
}

function _rint(d1) {
 d1 = +d1;
 var i2 = 0, i3 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i3 = i2 & 2146435072;
 if (!(i3 >>> 0 > 1126170624 | (i3 | 0) == 1126170624 & 0 > 0)) {
  i2 = (i2 | 0) < 0;
  d1 = i2 ? d1 + -4503599627370496.0 + 4503599627370496.0 : d1 + 4503599627370496.0 + -4503599627370496.0;
  if (d1 == 0.0) d1 = i2 ? -0.0 : 0.0;
 }
 return +d1;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_12FunctionTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(24) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_(i2, i4, i1, i3) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i5 = 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) {
   i1 = i3;
   break;
  }
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < 128 ? (i5 = ___ctype_b_loc() | 0, (HEAP16[(HEAP32[i5 >> 2] | 0) + (i2 << 1) >> 1] & i4) << 16 >> 16) : 0) break;
  i1 = i1 + 4 | 0;
 }
 return i1 | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE11visitBinaryEPNS_6BinaryE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZNSt3__114__split_bufferIPNS_6vectorIN6cashew3RefENS_9allocatorIS3_EEEERNS4_IS7_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE10visitStoreEPNS_5StoreE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 20 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE10visitBreakEPNS_5BreakE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 16 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE11visitBinaryEPNS_6BinaryE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function _fwrite(i2, i5, i1, i3) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i6 = 0;
 i4 = Math_imul(i1, i5) | 0;
 if ((HEAP32[i3 + 76 >> 2] | 0) > -1) {
  i6 = (___lockfile(i3) | 0) == 0;
  i2 = ___fwritex(i2, i4, i3) | 0;
  if (!i6) ___unlockfile(i3);
 } else i2 = ___fwritex(i2, i4, i3) | 0;
 if ((i2 | 0) != (i4 | 0)) i1 = (i2 >>> 0) / (i5 >>> 0) | 0;
 return i1 | 0;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEN7AsmData5LocalEEENS_22__unordered_map_hasherIS3_S6_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S6_NS_8equal_toIS3_EELb1EEENS_9allocatorIS6_EEE12__deallocateEPNS_11__hash_nodeIS6_PvEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 while (1) {
  if (!i1) break;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZdlPv(i1);
  i1 = i2;
 }
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE11visitBinaryEPNS_6BinaryE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE11visitBinaryEPNS_6BinaryE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEEC2EjjS4_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 12 >> 2] = 0;
 HEAP32[i4 + 16 >> 2] = i1;
 if (!i2) i1 = 0; else i1 = __Znwj(i2 << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 i3 = i1 + (i3 << 2) | 0;
 HEAP32[i4 + 8 >> 2] = i3;
 HEAP32[i4 + 4 >> 2] = i3;
 HEAP32[i4 + 12 >> 2] = i1 + (i2 << 2);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE10visitStoreEPNS_5StoreE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 20 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE10visitBreakEPNS_5BreakE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 16 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE11visitBinaryEPNS_6BinaryE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_8FunctionENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(24) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + (HEAP32[i3 + -12 >> 2] | 0) >> 2] = HEAP32[i2 + 32 >> 2];
 HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 36 >> 2];
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7__cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = __Znwj(12) | 0;
 HEAP32[i2 >> 2] = 3516;
 i4 = i1 + 4 | 0;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 i1 = i2 + 4 | 0;
 HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 + 4 >> 2] = i3;
 return i2 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7__cloneEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = __Znwj(12) | 0;
 HEAP32[i2 >> 2] = 3472;
 i4 = i1 + 4 | 0;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 i1 = i2 + 4 | 0;
 HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i1 + 4 >> 2] = i3;
 return i2 | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE10visitStoreEPNS_5StoreE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 20 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEE10visitBreakEPNS_5BreakE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 16 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE10visitStoreEPNS_5StoreE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 20 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEE10visitBreakEPNS_5BreakE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 16 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
 return;
}

function __ZNSt3__13mapIN4wasm4NameENS1_8WasmTypeENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S3_EEEEE25__construct_node_with_keyERS8_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(24) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE10visitStoreEPNS_5StoreE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 20 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEE10visitBreakEPNS_5BreakE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 16 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE11visitBinaryEPNS_6BinaryE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 12 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 16 | 0);
 return;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_6ImportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(24) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZNSt3__13mapIN4wasm4NameEPNS1_6ExportENS_4lessIS2_EENS_9allocatorINS_4pairIKS2_S4_EEEEE25__construct_node_with_keyERS9_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(24) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7__cloneEPNS0_6__baseISB_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 HEAP32[i1 >> 2] = 3516;
 i4 = i2 + 4 | 0;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i1 + 4 | 0;
 HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i2 + 4 >> 2] = i3;
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7__cloneEPNS0_6__baseISB_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 HEAP32[i1 >> 2] = 3472;
 i4 = i2 + 4 | 0;
 i3 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i1 + 4 | 0;
 HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i2 + 4 >> 2] = i3;
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE10visitStoreEPNS_5StoreE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 20 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 24 | 0);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEE10visitBreakEPNS_5BreakE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i2 = i2 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3, i1 + 16 | 0);
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 12 | 0);
 return;
}

function _copysign(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 var i3 = 0;
 HEAPF64[tempDoublePtr >> 3] = d2;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 d2 = +Math_abs(+d1);
 HEAPF64[tempDoublePtr >> 3] = d2;
 i3 = i3 & -2147483648 | HEAP32[tempDoublePtr + 4 >> 2];
 HEAP32[tempDoublePtr >> 2] = HEAP32[tempDoublePtr >> 2];
 HEAP32[tempDoublePtr + 4 >> 2] = i3;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringENS2_3RefEEENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_NS_8equal_toIS3_EELb1EEENS_9allocatorIS5_EEE12__deallocateEPNS_11__hash_nodeIS5_PvEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 while (1) {
  if (!i1) break;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZdlPv(i1);
  i1 = i2;
 }
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm7LiteralEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__16__treeINS_12__value_typeIN6cashew7IStringEN4wasm7LiteralEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(i1, HEAP32[i1 + 4 >> 2] | 0);
 return;
}

function __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE12__deallocateEPNS_11__hash_nodeIS2_PvEE(i2, HEAP32[i2 + 8 >> 2] | 0);
 i1 = HEAP32[i2 >> 2] | 0;
 HEAP32[i2 >> 2] = 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__13mapIN6cashew7IStringEiNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_iEEEEE25__construct_node_with_keyERS7_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(24) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZNSt3__114__split_bufferIN4wasm6Memory7SegmentERNS_9allocatorIS3_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -12 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZN4wasm13printWasmTypeENS_8WasmTypeE(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 switch (i2 | 0) {
 case 0:
  {
   i1 = 20417;
   break;
  }
 case 1:
  {
   i1 = 26239;
   break;
  }
 case 2:
  {
   i1 = 26235;
   break;
  }
 case 3:
  {
   i1 = 26152;
   break;
  }
 case 4:
  {
   i1 = 26148;
   break;
  }
 case 5:
  {
   i1 = 26437;
   break;
  }
 default:
  {}
 }
 return i1 | 0;
}

function __ZNSt3__114__split_bufferIPN4wasm12FunctionTypeERNS_9allocatorIS3_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__112__hash_tableINS_17__hash_value_typeIN6cashew7IStringEiEENS_22__unordered_map_hasherIS3_S4_NS_4hashIS3_EELb1EEENS_21__unordered_map_equalIS3_S4_NS_8equal_toIS3_EELb1EEENS_9allocatorIS4_EEE12__deallocateEPNS_11__hash_nodeIS4_PvEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 while (1) {
  if (!i1) break;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZdlPv(i1);
  i1 = i2;
 }
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i5, i3, i2, i1, i4, i6) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 if ((i5 | 0) == (HEAP32[i3 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i3, i2, i1, i4);
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm10ExpressionERNS_9allocatorIS3_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function _memmove(i1, i4, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((i4 | 0) < (i1 | 0) & (i1 | 0) < (i4 + i2 | 0)) {
  i3 = i1;
  i4 = i4 + i2 | 0;
  i1 = i1 + i2 | 0;
  while ((i2 | 0) > 0) {
   i1 = i1 - 1 | 0;
   i4 = i4 - 1 | 0;
   i2 = i2 - 1 | 0;
   HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
  }
  i1 = i3;
 } else _memcpy(i1, i4, i2) | 0;
 return i1 | 0;
}

function __ZNSt3__114__split_bufferIN4wasm6Switch4CaseERNS_9allocatorIS3_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -8 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz(i5, i4, i1, i3, i2) {
 i5 = i5 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i6;
 HEAP32[i7 >> 2] = i2;
 i2 = _uselocale(i1) | 0;
 i1 = _vsnprintf(i5, i4, i3, i7) | 0;
 if (i2 | 0) _uselocale(i2) | 0;
 STACKTOP = i6;
 return i1 | 0;
}

function __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEE25__construct_node_with_keyERS7_(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 i4 = __Znwj(24) | 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i4 + 20 >> 2] = 0;
 HEAP32[i2 >> 2] = i4;
 i2 = i2 + 4 | 0;
 HEAP32[i2 >> 2] = i3 + 4;
 HEAP32[i2 + 4 >> 2] = 257;
 return;
}

function __ZN4wasm15Asm2WasmBuilder11fixCallTypeEPNS_10ExpressionENS_8WasmTypeE(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 if (__ZN4wasm10Expression2isINS_4CallEEEbv(i1) | 0) HEAP32[i1 + 4 >> 2] = i3;
 if (!(!(__ZN4wasm10Expression2isINS_10CallImportEEEbv(i1) | 0) ? !(__ZN4wasm10Expression2isINS_12CallIndirectEEEbv(i1) | 0) : 0)) HEAP32[i1 + 4 >> 2] = i3;
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm8FunctionERNS_9allocatorIS3_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__114__split_bufferIN6cashew7IStringERNS_9allocatorIS2_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i2) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 44888) | 0;
 HEAP32[i2 + 36 >> 2] = i1;
 i1 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 127](i1) | 0) & 1;
 HEAP8[i2 + 44 >> 0] = i1;
 return;
}

function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i2) | 0;
 i1 = __ZNKSt3__16locale9use_facetERNS0_2idE(i1, 44880) | 0;
 HEAP32[i2 + 36 >> 2] = i1;
 i1 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 127](i1) | 0) & 1;
 HEAP8[i2 + 44 >> 0] = i1;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameENS2_8WasmTypeEEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameENS2_8WasmTypeEEENS_19__map_value_compareIS3_S5_NS_4lessIS3_EELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(i1, HEAP32[i1 + 4 >> 2] | 0);
 return;
}

function __ZNSt3__114__split_bufferIPN6cashew5ValueERNS_9allocatorIS3_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm7ElementERNS_9allocatorIS3_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__114__split_bufferIN4wasm8WasmTypeERNS_9allocatorIS2_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__114__split_bufferIN4wasm8NameTypeERNS_9allocatorIS2_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -8 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__114__split_bufferIN4wasm7LiteralERNS_9allocatorIS2_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -16 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm6ImportERNS_9allocatorIS3_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm6ExportERNS_9allocatorIS3_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__114__split_bufferIPN4wasm4PassERNS_9allocatorIS3_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__114__split_bufferIN6cashew3RefERNS_9allocatorIS2_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZN4wasm7Literal10getIntegerEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 switch (HEAP32[i3 >> 2] | 0) {
 case 1:
  {
   i2 = HEAP32[i3 + 8 >> 2] | 0;
   i1 = ((i2 | 0) < 0) << 31 >> 31;
   break;
  }
 case 2:
  {
   i2 = i3 + 8 | 0;
   i1 = HEAP32[i2 + 4 >> 2] | 0;
   i2 = HEAP32[i2 >> 2] | 0;
   break;
  }
 default:
  _abort();
 }
 tempRet0 = i1;
 return i2 | 0;
}

function __ZNSt3__114__split_bufferIN4wasm4NameERNS_9allocatorIS2_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function __ZNSt3__113__vector_baseIPNS_6vectorIN6cashew3RefENS_9allocatorIS3_EEEENS4_IS7_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -4 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZN4wasmlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEENS_4NameE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 if (!i1) ___assert_fail(17350, 30223, 78, 38833); else return __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i2, 36) | 0, i1) | 0;
 return 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 __ZNSt3__16vectorINS0_IN6cashew6ParserINS1_3RefENS1_19DotZeroValueBuilderEE17ExpressionElementENS_9allocatorIS6_EEEENS7_IS9_EEE6resizeEj(i1, 1);
 return;
}

function _llvm_cttz_i32(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP8[cttz_i8 + (i2 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 | 0;
 i1 = HEAP8[cttz_i8 + (i2 >> 8 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 + 8 | 0;
 i1 = HEAP8[cttz_i8 + (i2 >> 16 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 + 16 | 0;
 return (HEAP8[cttz_i8 + (i2 >>> 24) >> 0] | 0) + 24 | 0;
}

function __ZNSt3__16locale2id5__getEv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i3;
 if ((HEAP32[i2 >> 2] | 0) != -1) {
  HEAP32[i1 >> 2] = i2;
  HEAP32[i1 + 4 >> 2] = 210;
  HEAP32[i1 + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E(i2, i1, 211);
 }
 STACKTOP = i3;
 return (HEAP32[i2 + 4 >> 2] | 0) + -1 | 0;
}

function __ZNSt3__16vectorIPN4wasm10ExpressionENS_9allocatorIS3_EEE8allocateEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 if (i1 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i2); else {
  i3 = __Znwj(i1 << 2) | 0;
  HEAP32[i2 + 4 >> 2] = i3;
  HEAP32[i2 >> 2] = i3;
  HEAP32[i2 + 8 >> 2] = i3 + (i1 << 2);
  return;
 }
}

function ___cxa_can_catch(i1, i2, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i3 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i5;
 HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 i1 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 31](i1, i2, i3) | 0;
 if (i1) HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
 STACKTOP = i5;
 return i1 & 1 | 0;
}

function __ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i1 = HEAP32[i4 >> 2] | 0;
 if (i1 | 0) __ZdlPv(i1);
 return;
}

function _calloc(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 if (i3) {
  i2 = Math_imul(i1, i3) | 0;
  if ((i1 | i3) >>> 0 > 65535) i2 = ((i2 >>> 0) / (i3 >>> 0) | 0 | 0) == (i1 | 0) ? i2 : -1;
 } else i2 = 0;
 i1 = _malloc(i2) | 0;
 if (!i1) return i1 | 0;
 if (!(HEAP32[i1 + -4 >> 2] & 3)) return i1 | 0;
 _memset(i1 | 0, 0, i2 | 0) | 0;
 return i1 | 0;
}

function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_h(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3;
 HEAP8[i4 >> 0] = i1;
 i2 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i2, i4, 1) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3;
 HEAP8[i4 >> 0] = i1;
 i2 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i2, i4, 1) | 0;
 STACKTOP = i3;
 return i2 | 0;
}

function __ZNSt3__16vectorIN4wasm8WasmTypeENS_9allocatorIS2_EEE8allocateEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 if (i1 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i2); else {
  i3 = __Znwj(i1 << 2) | 0;
  HEAP32[i2 + 4 >> 2] = i3;
  HEAP32[i2 >> 2] = i3;
  HEAP32[i2 + 8 >> 2] = i3 + (i1 << 2);
  return;
 }
}

function __ZNSt3__16vectorIN4wasm8NameTypeENS_9allocatorIS2_EEE8allocateEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 if (i1 >>> 0 > 536870911) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i2); else {
  i3 = __Znwj(i1 << 3) | 0;
  HEAP32[i2 + 4 >> 2] = i3;
  HEAP32[i2 >> 2] = i3;
  HEAP32[i2 + 8 >> 2] = i3 + (i1 << 3);
  return;
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i2, i1, 17);
 i1 = i2 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i2, i1, 14);
 i1 = i2 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i2, i1, 13);
 i1 = i2 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i2, i1, 12);
 i1 = i2 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj(i2, i1, 11);
 i1 = i2 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNK4wasm7Literal5floorEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var d3 = 0.0;
 if ((HEAP32[i1 >> 2] | 0) == 3) {
  d3 = +Math_floor(+(+__ZNK4wasm7Literal6getf32Ev(i1)));
  HEAPF32[i2 + 8 >> 2] = d3;
  i1 = 3;
 } else {
  d3 = +Math_floor(+(+__ZNK4wasm7Literal6getf64Ev(i1)));
  HEAPF64[i2 + 8 >> 3] = d3;
  i1 = 4;
 }
 HEAP32[i2 >> 2] = i1;
 return;
}

function __GLOBAL__sub_I_simple_ast_cpp() {
 HEAP32[10353] = 0;
 HEAP32[10354] = 0;
 HEAP32[10355] = 0;
 HEAP32[10356] = 0;
 HEAP32[10357] = 0;
 HEAP32[10358] = 0;
 HEAP32[10359] = 0;
 HEAP32[10360] = 0;
 ___cxa_atexit(206, 41412, ___dso_handle | 0) | 0;
 __ZN6cashew10IStringSetC2EPKc(41444, 31134);
 ___cxa_atexit(203, 41444, ___dso_handle | 0) | 0;
 return;
}

function __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE8allocateEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 if (i1 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i2); else {
  i3 = __Znwj(i1 << 2) | 0;
  HEAP32[i2 + 4 >> 2] = i3;
  HEAP32[i2 >> 2] = i3;
  HEAP32[i2 + 8 >> 2] = i3 + (i1 << 2);
  return;
 }
}

function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz(i4, i1, i3, i2) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = i2;
 i2 = _uselocale(i1) | 0;
 i1 = _vasprintf(i4, i3, i6) | 0;
 if (i2 | 0) _uselocale(i2) | 0;
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNK4wasm7Literal9nearbyintEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var d3 = 0.0;
 if ((HEAP32[i1 >> 2] | 0) == 3) {
  d3 = +_nearbyintf(+__ZNK4wasm7Literal6getf32Ev(i1));
  HEAPF32[i2 + 8 >> 2] = d3;
  i1 = 3;
 } else {
  d3 = +_nearbyint(+__ZNK4wasm7Literal6getf64Ev(i1));
  HEAPF64[i2 + 8 >> 3] = d3;
  i1 = 4;
 }
 HEAP32[i2 >> 2] = i1;
 return;
}

function __ZNKSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEEclES5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = HEAP32[i1 + 16 >> 2] | 0;
 if (!i1) {
  i2 = ___cxa_allocate_exception(4) | 0;
  HEAP32[i2 >> 2] = 3112;
  ___cxa_throw(i2 | 0, 152, 15);
 } else return FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 31](i1, i2) | 0;
 return 0;
}

function __ZNK4wasm7Literal4sqrtEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var d3 = 0.0;
 if ((HEAP32[i1 >> 2] | 0) == 3) {
  d3 = +Math_sqrt(+(+__ZNK4wasm7Literal6getf32Ev(i1)));
  HEAPF32[i2 + 8 >> 2] = d3;
  i1 = 3;
 } else {
  d3 = +Math_sqrt(+(+__ZNK4wasm7Literal6getf64Ev(i1)));
  HEAPF64[i2 + 8 >> 3] = d3;
  i1 = 4;
 }
 HEAP32[i2 >> 2] = i1;
 return;
}

function __ZNK4wasm7Literal4ceilEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var d3 = 0.0;
 if ((HEAP32[i1 >> 2] | 0) == 3) {
  d3 = +Math_ceil(+(+__ZNK4wasm7Literal6getf32Ev(i1)));
  HEAPF32[i2 + 8 >> 2] = d3;
  i1 = 3;
 } else {
  d3 = +Math_ceil(+(+__ZNK4wasm7Literal6getf64Ev(i1)));
  HEAPF64[i2 + 8 >> 3] = d3;
  i1 = 4;
 }
 HEAP32[i2 >> 2] = i1;
 return;
}

function __ZNSt3__113__vector_baseIPN4wasm10ExpressionENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -4 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZNKSt3__120__time_get_c_storageIwE3__xEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[40208] | 0) == 0 ? ___cxa_guard_acquire(40208) | 0 : 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(44752, 10932, _wcslen(10932) | 0);
  ___cxa_atexit(219, 44752, ___dso_handle | 0) | 0;
  ___cxa_guard_release(40208);
 }
 return 44752;
}

function __ZNKSt3__120__time_get_c_storageIwE3__rEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[40200] | 0) == 0 ? ___cxa_guard_acquire(40200) | 0 : 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(44740, 10884, _wcslen(10884) | 0);
  ___cxa_atexit(219, 44740, ___dso_handle | 0) | 0;
  ___cxa_guard_release(40200);
 }
 return 44740;
}

function __ZNKSt3__120__time_get_c_storageIwE3__cEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[40192] | 0) == 0 ? ___cxa_guard_acquire(40192) | 0 : 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(44728, 10800, _wcslen(10800) | 0);
  ___cxa_atexit(219, 44728, ___dso_handle | 0) | 0;
  ___cxa_guard_release(40192);
 }
 return 44728;
}

function __ZNKSt3__120__time_get_c_storageIwE3__XEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[40216] | 0) == 0 ? ___cxa_guard_acquire(40216) | 0 : 0) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(44764, 10968, _wcslen(10968) | 0);
  ___cxa_atexit(219, 44764, ___dso_handle | 0) | 0;
  ___cxa_guard_release(40216);
 }
 return 44764;
}

function __ZN4wasm17SExpressionParserC2EPc(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i3 >> 2] = i1;
 HEAP32[i3 + 4 >> 2] = 0;
 HEAP32[i3 + 8 >> 2] = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 i1 = i3 + 20 | 0;
 i2 = 0;
 while (1) {
  HEAP32[i1 >> 2] = i2;
  if (i2 | 0) break;
  i2 = __ZN4wasm17SExpressionParser14parseInnerListEv(i3) | 0;
 }
 return;
}

function __Z9printTextRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i1, 34) | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i1, i2) | 0;
 return __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i1, 34) | 0;
}

function __ZZN4wasm15RemoveUnusedBrs7visitIfEPNS_2IfEENKUlPNS_10ExpressionEE_clES4_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i1 = __ZN4wasm10Expression8dyn_castINS_5BlockEEEPT_v(i1) | 0;
 if ((i1 | 0) != 0 ? (i3 = HEAP32[i1 + 16 >> 2] | 0, (i3 | 0) != (HEAP32[i1 + 12 >> 2] | 0)) : 0) i1 = HEAP32[i3 + -4 >> 2] | 0; else i1 = 0;
 return i1 | 0;
}

function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z(i4, i1, i3, i2) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = i2;
 i2 = _uselocale(i1) | 0;
 i1 = _vsscanf(i4, i3, i6) | 0;
 if (i2 | 0) _uselocale(i2) | 0;
 STACKTOP = i5;
 return i1 | 0;
}

function _truncf(d1) {
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = (HEAPF32[tempDoublePtr >> 2] = d1, HEAP32[tempDoublePtr >> 2] | 0);
 i3 = (i2 >>> 23 & 255) + -118 | 0;
 if ((i3 | 0) <= 31 ? (i4 = (i3 | 0) < 9 ? 2147483647 : -1 >>> i3, (i4 & i2 | 0) != 0) : 0) d1 = (HEAP32[tempDoublePtr >> 2] = i2 & ~i4, +HEAPF32[tempDoublePtr >> 2]);
 return +d1;
}

function __ZNSt3__113__vector_baseIN6cashew7IStringENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -4 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(i1, HEAP32[i1 + 4 >> 2] | 0);
 return;
}

function __ZNSt3__113__vector_baseIPN6cashew5ValueENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -4 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZNSt3__113__vector_baseIN4wasm8WasmTypeENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -4 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZNSt3__113__vector_baseIN4wasm8NameTypeENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -8 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZNSt3__113__vector_baseIN4wasm7LiteralENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -16 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + (HEAP32[i3 + -12 >> 2] | 0) >> 2] = HEAP32[i2 + 12 >> 2];
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 8 | 0);
 return;
}

function __ZN4wasm7Literal9castToI64Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 if ((HEAP32[i2 >> 2] | 0) == 4) {
  i4 = i2 + 8 | 0;
  i3 = HEAP32[i4 + 4 >> 2] | 0;
  i2 = i1 + 8 | 0;
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i2 + 4 >> 2] = i3;
  HEAP32[i1 >> 2] = 2;
  return;
 } else ___assert_fail(21144, 30223, 189, 21166);
}

function __ZN4wasm7Literal9castToF64Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 if ((HEAP32[i2 >> 2] | 0) == 2) {
  i4 = i2 + 8 | 0;
  i3 = HEAP32[i4 + 4 >> 2] | 0;
  i2 = i1 + 8 | 0;
  HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i2 + 4 >> 2] = i3;
  HEAP32[i1 >> 2] = 4;
  return;
 } else ___assert_fail(16734, 30223, 177, 16756);
}

function __ZN4wasm22SExpressionWasmBuilder15preParseImportsERNS_7ElementE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i3 = __ZN4wasm7Element4listEv(i1) | 0;
 i3 = __ZN4wasm7Element3strEv(HEAP32[HEAP32[i3 >> 2] >> 2] | 0) | 0;
 if ((i3 | 0) == (HEAP32[10217] | 0)) __ZN4wasm22SExpressionWasmBuilder11parseImportERNS_7ElementE(i2, i1);
 return;
}

function __ZN4wasm12PassRegistry8PassInfoC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS2_8functionIFPNS_4PassEvEEE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i3, i2);
 __ZNSt3__18functionIFPN4wasm4PassEvEEC2ERKS5_(i3 + 16 | 0, i1);
 return;
}

function __ZNSt3__113__vector_baseIPN4wasm4PassENS_9allocatorIS3_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -4 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZNSt3__113__vector_baseIN6cashew3RefENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -4 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZN4wasm14AstStackHelperC2EN6cashew3RefE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = HEAP32[10246] | 0;
 if ((i1 | 0) == (HEAP32[10247] | 0)) __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(40980, i2); else {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  HEAP32[10246] = (HEAP32[10246] | 0) + 4;
 }
 return;
}

function __ZNSt3__113__vector_baseIN4wasm4NameENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -4 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZNK4wasm7Literal5truncEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var d3 = 0.0;
 if ((HEAP32[i1 >> 2] | 0) == 3) {
  d3 = +_truncf(+__ZNK4wasm7Literal6getf32Ev(i1));
  HEAPF32[i2 + 8 >> 2] = d3;
  i1 = 3;
 } else {
  d3 = +_trunc(+__ZNK4wasm7Literal6getf64Ev(i1));
  HEAPF64[i2 + 8 >> 3] = d3;
  i1 = 4;
 }
 HEAP32[i2 >> 2] = i1;
 return;
}

function __ZNSt3__18ios_base4InitD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(42128) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(42296) | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(42468) | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv(42636) | 0;
 return;
}

function __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (!i1) while (1) {
  i1 = HEAP32[i2 + 8 >> 2] | 0;
  if ((HEAP32[i1 >> 2] | 0) == (i2 | 0)) break; else i2 = i1;
 } else while (1) {
  i2 = HEAP32[i1 >> 2] | 0;
  if (!i2) break; else i1 = i2;
 }
 return i1 | 0;
}

function __ZN6cashew13OperatorClassC2EOS0_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEEC2EOS9_(i2, i1);
 i3 = i1 + 20 | 0;
 i1 = HEAP32[i3 + 4 >> 2] | 0;
 i2 = i2 + 20 | 0;
 HEAP32[i2 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i2 + 4 >> 2] = i1;
 return;
}

function ___uflow(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i3;
 if ((HEAP32[i2 + 8 >> 2] | 0) == 0 ? (___toread(i2) | 0) != 0 : 0) i1 = -1; else if ((FUNCTION_TABLE_iiii[HEAP32[i2 + 32 >> 2] & 31](i2, i1, 1) | 0) == 1) i1 = HEAPU8[i1 >> 0] | 0; else i1 = -1;
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 i3 = HEAP32[i2 + 8 >> 2] | 0;
 i2 = (HEAP32[i2 >> 2] | 0) + (i3 >> 1) | 0;
 if (i3 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 FUNCTION_TABLE_vi[i1 & 255](i2);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj(i3, i4, i1, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = i1 + 8 | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 16 >> 2] & 15](i3, i4, HEAP32[i1 >> 2] | 0, HEAP32[i1 + 4 >> 2] | 0, 0, i2);
 return;
}

function ___shlim(i3, i4) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i5 = 0;
 HEAP32[i3 + 104 >> 2] = i4;
 i1 = HEAP32[i3 + 8 >> 2] | 0;
 i2 = HEAP32[i3 + 4 >> 2] | 0;
 i5 = i1 - i2 | 0;
 HEAP32[i3 + 108 >> 2] = i5;
 if ((i4 | 0) != 0 & (i5 | 0) > (i4 | 0)) HEAP32[i3 + 100 >> 2] = i2 + i4; else HEAP32[i3 + 100 >> 2] = i1;
 return;
}

function __ZNKSt3__120__time_get_c_storageIcE3__rEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[40120] | 0) == 0 ? ___cxa_guard_acquire(40120) | 0 : 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(43928, 36029, 11);
  ___cxa_atexit(215, 43928, ___dso_handle | 0) | 0;
  ___cxa_guard_release(40120);
 }
 return 43928;
}

function __ZNKSt3__120__time_get_c_storageIcE3__cEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[40112] | 0) == 0 ? ___cxa_guard_acquire(40112) | 0 : 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(43916, 36008, 20);
  ___cxa_atexit(215, 43916, ___dso_handle | 0) | 0;
  ___cxa_guard_release(40112);
 }
 return 43916;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i4, i2, i1, i3) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 if ((i4 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i1, i3);
 return;
}

function __ZN4wasm13sigToWasmTypeEc(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 switch (i2 << 24 >> 24 | 0) {
 case 105:
  {
   i1 = 1;
   break;
  }
 case 106:
  {
   i1 = 2;
   break;
  }
 case 102:
  {
   i1 = 3;
   break;
  }
 case 100:
  {
   i1 = 4;
   break;
  }
 case 118:
  {
   i1 = 0;
   break;
  }
 default:
  _abort();
 }
 return i1 | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE3__xEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[40128] | 0) == 0 ? ___cxa_guard_acquire(40128) | 0 : 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(43940, 36041, 8);
  ___cxa_atexit(215, 43940, ___dso_handle | 0) | 0;
  ___cxa_guard_release(40128);
 }
 return 43940;
}

function __ZNKSt3__120__time_get_c_storageIcE3__XEv(i1) {
 i1 = i1 | 0;
 if ((HEAP8[40136] | 0) == 0 ? ___cxa_guard_acquire(40136) | 0 : 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(43952, 36050, 8);
  ___cxa_atexit(215, 43952, ___dso_handle | 0) | 0;
  ___cxa_guard_release(40136);
 }
 return 43952;
}

function __ZNK4wasm7Literal12extendToSI64Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((HEAP32[i2 >> 2] | 0) == 1) {
  i3 = HEAP32[i2 + 8 >> 2] | 0;
  HEAP32[i1 >> 2] = 2;
  i2 = i1 + 8 | 0;
  HEAP32[i2 >> 2] = i3;
  HEAP32[i2 + 4 >> 2] = ((i3 | 0) < 0) << 31 >> 31;
  return;
 } else ___assert_fail(16702, 30223, 307, 20972);
}

function __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE5clearEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 4 | 0;
 __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(i1, HEAP32[i2 >> 2] | 0);
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 >> 2] = i2;
 HEAP32[i2 >> 2] = 0;
 return;
}

function __ZNSt3__113__vector_baseIPcNS_9allocatorIS1_EEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i3 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) {
  i1 = i1 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  while (1) {
   if ((i2 | 0) == (i3 | 0)) break;
   i4 = i2 + -4 | 0;
   HEAP32[i1 >> 2] = i4;
   i2 = i4;
  }
  __ZdlPv(i3);
 }
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj(i5, i6, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i5 + 8 | 0;
 HEAP32[i6 >> 2] = -1;
 HEAP32[i6 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj(i5, i6, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i5 + 8 | 0;
 HEAP32[i6 >> 2] = -1;
 HEAP32[i6 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEjEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 16 >> 2] | 0;
 if ((i1 | 0) != (i2 | 0)) {
  if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 255](i1);
 } else FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 255](i1);
 return;
}

function __ZNSt3__18functionIFPN4wasm10ExpressionEN6cashew3RefEEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 16 >> 2] | 0;
 if ((i1 | 0) != (i2 | 0)) {
  if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 255](i1);
 } else FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 255](i1);
 return;
}

function __ZN4wasm6getSigENS_8WasmTypeE(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 switch (i2 | 0) {
 case 1:
  {
   i1 = 105;
   break;
  }
 case 2:
  {
   i1 = 106;
   break;
  }
 case 3:
  {
   i1 = 102;
   break;
  }
 case 4:
  {
   i1 = 100;
   break;
  }
 case 0:
  {
   i1 = 118;
   break;
  }
 default:
  _abort();
 }
 return i1 | 0;
}

function __ZNSt3__15ctypeIcEC2EPKtbj(i4, i3, i2, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i4 + 4 >> 2] = i1 + -1;
 HEAP32[i4 >> 2] = 11624;
 i1 = i4 + 8 | 0;
 HEAP32[i1 >> 2] = i3;
 HEAP8[i4 + 12 >> 0] = i2 & 1;
 if (!i3) {
  i4 = ___ctype_b_loc() | 0;
  HEAP32[i1 >> 2] = HEAP32[i4 >> 2];
 }
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 9044;
 __ZNSt3__16localeC2Ev(i1 + 4 | 0);
 i1 = i1 + 8 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) i1 = -1; else {
  i2 = i1 + 12 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 >> 2] = i1 + 4;
  i1 = HEAP32[i1 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 8980;
 __ZNSt3__16localeC2Ev(i1 + 4 | 0);
 i1 = i1 + 8 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) i1 = -1; else {
  i2 = i1 + 12 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 >> 2] = i1 + 1;
  i1 = HEAPU8[i1 >> 0] | 0;
 }
 return i1 | 0;
}

function __ZN4wasm5unhexEc(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i2 = i3 << 24 >> 24;
 do if ((i3 + -48 & 255) >= 10) {
  if ((i3 + -97 & 255) < 6) {
   i1 = i2 + -87 | 0;
   break;
  }
  if ((i3 + -65 & 255) < 6) {
   i1 = i2 + -55 | 0;
   break;
  } else _abort();
 } else i1 = i2 + -48 | 0; while (0);
 return i1 | 0;
}

function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc(i3, i1, i5, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i5 | 0)) break;
  i3 = HEAP8[i1 >> 0] | 0;
  HEAP8[i2 >> 0] = i3 << 24 >> 24 > -1 ? i3 : i4;
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i5 | 0;
}

function _sn_write(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0;
 i4 = i1 + 20 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i1 = (HEAP32[i1 + 16 >> 2] | 0) - i5 | 0;
 i1 = i1 >>> 0 > i2 >>> 0 ? i2 : i1;
 _memcpy(i5 | 0, i3 | 0, i1 | 0) | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + i1;
 return i2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 if (i1 >>> 0 <= i3 >>> 0 & (i1 + 4096 | 0) >>> 0 >= i3 >>> 0) {
  i1 = i1 + 4096 | 0;
  if ((i3 + (i2 + 15 & -16) | 0) == (HEAP32[i1 >> 2] | 0)) HEAP32[i1 >> 2] = i3;
 } else _free(i3);
 return;
}

function __ZNSt3__18numpunctIwEC2Ej(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 4 >> 2] = i1 + -1;
 HEAP32[i2 >> 2] = 11716;
 HEAP32[i2 + 8 >> 2] = 46;
 HEAP32[i2 + 12 >> 2] = 44;
 i1 = i2 + 16 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNSt3__18numpunctIcEC2Ej(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 4 >> 2] = i1 + -1;
 HEAP32[i2 >> 2] = 11676;
 HEAP8[i2 + 8 >> 0] = 46;
 HEAP8[i2 + 9 >> 0] = 44;
 i1 = i2 + 12 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) == 3) break;
  HEAP32[i1 + (i2 << 2) >> 2] = 0;
  i2 = i2 + 1 | 0;
 }
 return;
}

function __ZNSt3__18ios_baseD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 8964;
 __ZNSt3__18ios_base16__call_callbacksENS0_5eventE(i1, 0);
 __ZNSt3__16localeD2Ev(i1 + 28 | 0);
 _free(HEAP32[i1 + 32 >> 2] | 0);
 _free(HEAP32[i1 + 36 >> 2] | 0);
 _free(HEAP32[i1 + 48 >> 2] | 0);
 _free(HEAP32[i1 + 60 >> 2] | 0);
 return;
}

function __ZNKSt3__17collateIwE7do_hashEPKwS3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i1 = 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i4 = (HEAP32[i2 >> 2] | 0) + (i1 << 4) | 0;
  i5 = i4 & -268435456;
  i1 = (i5 >>> 24 | i5) ^ i4;
  i2 = i2 + 4 | 0;
 }
 return i1 | 0;
}

function __GLOBAL__sub_I_optimizer_shared_cpp() {
 HEAP32[10366] = 0;
 __ZN6cashew7IString3setEPKcb(41468, 31271, 1);
 __ZN6cashew7IString3setEPKcb(41472, 31290, 1);
 __ZN6cashew7IString3setEPKcb(41476, 31309, 1);
 __ZN6cashew7IString3setEPKcb(41480, 31328, 1);
 __ZN6cashew7IString3setEPKcb(41484, 31349, 1);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj(i3, i1, i2, _strlen(i2) | 0) | 0;
}

function __ZNKSt3__17collateIcE7do_hashEPKcS3_(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i1 = 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i4 = (HEAP8[i2 >> 0] | 0) + (i1 << 4) | 0;
  i5 = i4 & -268435456;
  i1 = (i5 >>> 24 | i5) ^ i4;
  i2 = i2 + 1 | 0;
 }
 return i1 | 0;
}

function __ZNSt3__18functionIFPN4wasm4PassEvEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 16 >> 2] | 0;
 if ((i1 | 0) != (i2 | 0)) {
  if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 255](i1);
 } else FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 255](i1);
 return;
}

function __ZNKSt3__18functionIFPN4wasm4PassEvEEclEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 + 16 >> 2] | 0;
 if (!i1) {
  i1 = ___cxa_allocate_exception(4) | 0;
  HEAP32[i1 >> 2] = 3112;
  ___cxa_throw(i1 | 0, 152, 15);
 } else return FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 127](i1) | 0;
 return 0;
}

function __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE2atEj(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((HEAP32[i3 + 4 >> 2] | 0) - i1 >> 2 >>> 0 > i2 >>> 0) return i1 + (i2 << 2) | 0; else __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(i3);
 return 0;
}

function __ZNK4wasm7Literal12extendToUI64Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((HEAP32[i2 >> 2] | 0) == 1) {
  i3 = HEAP32[i2 + 8 >> 2] | 0;
  HEAP32[i1 >> 2] = 2;
  i2 = i1 + 8 | 0;
  HEAP32[i2 >> 2] = i3;
  HEAP32[i2 + 4 >> 2] = 0;
  return;
 } else ___assert_fail(16702, 30223, 311, 20985);
}

function __ZN4wasm15Asm2WasmBuilder12bytesToShiftEj(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 switch (i2 | 0) {
 case 1:
  {
   i1 = 0;
   break;
  }
 case 2:
  {
   i1 = 1;
   break;
  }
 case 4:
  {
   i1 = 2;
   break;
  }
 case 8:
  {
   i1 = 3;
   break;
  }
 default:
  _abort();
 }
 return i1 | 0;
}

function _rintf(d1) {
 d1 = +d1;
 var i2 = 0;
 i2 = (HEAPF32[tempDoublePtr >> 2] = d1, HEAP32[tempDoublePtr >> 2] | 0);
 if ((i2 & 2130706432) >>> 0 <= 1249902592) {
  i2 = (i2 | 0) < 0;
  d1 = i2 ? d1 + -8388608.0 + 8388608.0 : d1 + 8388608.0 + -8388608.0;
  if (d1 == 0.0) d1 = i2 ? -0.0 : 0.0;
 }
 return +d1;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 15 & -16;
 i3 = i4 + 4096 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 if ((i4 + 4096 - i1 | 0) >>> 0 < i2 >>> 0) i1 = _malloc(i2) | 0; else HEAP32[i3 >> 2] = i1 + i2;
 return i1 | 0;
}

function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = _catopen((HEAP8[i2 >> 0] & 1) == 0 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0, 1) | 0;
 return i3 >>> ((i3 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = _catopen((HEAP8[i2 >> 0] & 1) == 0 ? i2 + 1 | 0 : HEAP32[i2 + 8 >> 2] | 0, 1) | 0;
 return i3 >>> ((i3 | 0) != (-1 | 0) & 1) | 0;
}

function __ZN6cashew5Value8setArrayEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 __ZN6cashew5Value4freeEv(i2);
 HEAP32[i2 >> 2] = 2;
 i3 = __ZN6cashew5Arena10allocArrayEv(41412) | 0;
 HEAP32[i2 + 8 >> 2] = i3;
 __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE7reserveEj(i3, i1);
 return i2 | 0;
}

function __ZN4wasm16PrintSExpression16visitUnreachableEPNS_11UnreachableE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__Z17printMinorOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(HEAP32[i2 + 4 >> 2] | 0, 26437) | 0, 41) | 0;
 return;
}

function __ZN4wasm18CountLeadingZeroesIjEEiT_(i1) {
 i1 = i1 | 0;
 i1 = i1 >>> 1 | i1;
 i1 = i1 >>> 2 | i1;
 i1 = i1 >>> 4 | i1;
 i1 = i1 >>> 8 | i1;
 i1 = i1 >>> 16 | i1;
 if (!i1) i1 = 32; else {
  i1 = 31620 + ((Math_imul(i1, 130329821) | 0) >>> 27) | 0;
  i1 = HEAPU8[i1 >> 0] | 0;
 }
 return i1 | 0;
}

function __ZNSt3__18functionIFvvEED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 16 >> 2] | 0;
 if ((i1 | 0) != (i2 | 0)) {
  if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 255](i1);
 } else FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 255](i1);
 return;
}

function __ZN6cashew5Value4backEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((HEAP32[i1 >> 2] | 0) != 2) ___assert_fail(31223, 31233, 490, 24050);
 i2 = HEAP32[i1 + 8 >> 2] | 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if ((i1 | 0) == (HEAP32[i2 >> 2] | 0)) i1 = 0; else i1 = HEAP32[i1 + -4 >> 2] | 0;
 return i1 | 0;
}

function __ZN4wasm17RemoveUnusedNames10visitBreakEPNS_5BreakE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_(i3, i2 + 12 | 0, i1 + 8 | 0);
 STACKTOP = i3;
 return;
}

function ___uremdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i6 | 0;
 ___udivmoddi4(i1, i2, i3, i4, i5) | 0;
 STACKTOP = i6;
 return (tempRet0 = HEAP32[i5 + 4 >> 2] | 0, HEAP32[i5 >> 2] | 0) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj(i3, i4, i1, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i3;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = i3 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i4 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj(i3, i4, i1, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i3;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = i3 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i4 + 4 >> 2] = -1;
 return;
}

function dynCall_iiiiiiiii(i9, i1, i2, i3, i4, i5, i6, i7, i8) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[i9 & 15](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0, i8 | 0) | 0;
}

function __ZN4wasm17RemoveUnusedNames10visitBlockEPNS_5BlockE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = i1 + 8 | 0;
 if (HEAP32[i1 >> 2] | 0 ? (__ZNKSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE14__count_uniqueIS2_EEjRKT_(i2 + 12 | 0, i1) | 0) == 0 : 0) HEAP32[i1 >> 2] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i1 + 12 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i1);
 return;
}

function __Z8doIndentRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEj(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == (i2 | 0)) break;
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i3, 25645) | 0;
  i1 = i1 + 1 | 0;
 }
 return i3 | 0;
}

function __ZNKSt3__18functionIFvvEEclEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 + 16 >> 2] | 0;
 if (!i1) {
  i1 = ___cxa_allocate_exception(4) | 0;
  HEAP32[i1 >> 2] = 3112;
  ___cxa_throw(i1 | 0, 152, 15);
 } else {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 255](i1);
  return;
 }
}

function __ZN4wasm15getWasmTypeSizeENS_8WasmTypeE(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 switch (i2 | 0) {
 case 0:
  {
   _abort();
   break;
  }
 case 3:
 case 1:
  {
   i1 = 4;
   break;
  }
 case 2:
  {
   i1 = 8;
   break;
  }
 case 4:
  {
   i1 = 8;
   break;
  }
 default:
  {}
 }
 return i1 | 0;
}

function __ZN4wasm11getWasmTypeEjb(i3, i2) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i1 = 0;
 L1 : do if (i3 >>> 0 < 4) i1 = 1; else switch (i3 | 0) {
 case 4:
  {
   i1 = i2 ? 3 : 1;
   break L1;
  }
 case 8:
  {
   i1 = i2 ? 4 : 2;
   break L1;
  }
 default:
  _abort();
 } while (0);
 return i1 | 0;
}

function __Z17printMinorOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(i1, 40) | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i1, i2) | 0;
 return i1 | 0;
}

function __ZZZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEENK3__1clES2_ENKUlvE_clEv(i1) {
 i1 = i1 | 0;
 i1 = __ZN10MixedArena5allocIN4wasm8GetLocalEEEPT_v(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i1 + 8 >> 2] = HEAP32[10205];
 HEAP32[i1 + 4 >> 2] = 1;
 return i1 | 0;
}

function __ZNSt3__114__shared_count16__release_sharedEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2 + -1;
 if (!i2) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 255](i1);
  i1 = 1;
 } else i1 = 0;
 return i1 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj(i2, i1, _strlen(i1) | 0) | 0;
}

function __ZNKSt3__17collateIwE12do_transformEPKwS3_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i3, i2, i1);
 return;
}

function __ZNKSt3__17collateIcE12do_transformEPKcS3_(i3, i4, i2, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i3, i2, i1);
 return;
}

function __ZN4wasm16PrintSExpression15visitCallImportEPNS_10CallImportE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i2 + 4 >> 2] | 0, 25907, 0) | 0;
 __ZN4wasm16PrintSExpression13printCallBodyEPNS_4CallE(i2, i1);
 return;
}

function __ZN4wasm13wasmToAsmTypeENS_8WasmTypeE(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 switch (i2 | 0) {
 case 1:
  {
   i1 = 0;
   break;
  }
 case 3:
  {
   i1 = 2;
   break;
  }
 case 4:
  {
   i1 = 1;
   break;
  }
 case 0:
  {
   i1 = 8;
   break;
  }
 default:
  _abort();
 }
 return i1 | 0;
}

function __ZN4wasm22SExpressionWasmBuilder10parseStartERNS_7ElementE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 i1 = __ZN4wasm7Element4listEv(i1) | 0;
 i1 = __ZN4wasm7Element3strEv(HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] | 0) | 0;
 HEAP32[i2 + 128 >> 2] = i1;
 return;
}

function __ZL12prepare2wasmv() {
 var i1 = 0;
 if ((HEAP32[10251] | 0) == 0 & (HEAP32[10252] | 0) == 0 & (HEAP32[10253] | 0) == 0 & (HEAP32[10254] | 0) == 0) {
  i1 = (_emscripten_asm_const_i(5) | 0) != 0 & 1;
  HEAP8[45016] = i1;
  return;
 } else ___assert_fail(16766, 15130, 47, 16878);
}

function __ZN4wasm16PrintSExpression8visitNopEPNS_3NopE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(__Z17printMinorOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKc(HEAP32[i2 + 4 >> 2] | 0, 26433) | 0, 41) | 0;
 return;
}

function __ZN4wasm13asmToWasmTypeE7AsmType(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 switch (i2 | 0) {
 case 0:
  {
   i1 = 1;
   break;
  }
 case 1:
  {
   i1 = 4;
   break;
  }
 case 2:
  {
   i1 = 3;
   break;
  }
 case 8:
  {
   i1 = 0;
   break;
  }
 default:
  _abort();
 }
 return i1 | 0;
}

function __ZNK4wasm7Literal13truncateToF32Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0;
 if ((HEAP32[i2 >> 2] | 0) == 4) {
  d3 = +__ZNK4wasm7Literal6getf64Ev(i2);
  HEAP32[i1 >> 2] = 3;
  HEAPF32[i1 + 8 >> 2] = d3;
  return;
 } else ___assert_fail(21144, 30223, 323, 21176);
}

function __ZNK4wasm7Literal11extendToF64Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var d3 = 0.0;
 if ((HEAP32[i2 >> 2] | 0) == 3) {
  d3 = +__ZNK4wasm7Literal6getf32Ev(i2);
  HEAP32[i1 >> 2] = 4;
  HEAPF64[i1 + 8 >> 3] = d3;
  return;
 } else ___assert_fail(21100, 30223, 315, 21132);
}

function __ZN4wasm10WasmWalkerIZZNS_15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizer10visitBlockEPNS_5BlockEE11BreakSeekervE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 36 | 0);
 return;
}

function __ZN4wasm16PrintSExpression9incIndentEv(i1) {
 i1 = i1 | 0;
 if (!(HEAP8[i1 + 12 >> 0] | 0)) {
  __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(HEAP32[i1 + 4 >> 2] | 0, 10) | 0;
  i1 = i1 + 8 | 0;
  HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
 }
 return;
}

function _wmemcpy(i4, i2, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 if (i1 | 0) {
  i3 = i4;
  while (1) {
   i1 = i1 + -1 | 0;
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   if (!i1) break; else {
    i2 = i2 + 4 | 0;
    i3 = i3 + 4 | 0;
   }
  }
 }
 return i4 | 0;
}

function ___muldi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = i1;
 i6 = i3;
 i3 = ___muldsi3(i5, i6) | 0;
 i1 = tempRet0;
 return (tempRet0 = (Math_imul(i2, i6) | 0) + (Math_imul(i4, i5) | 0) + i1 | i1 & 0, i3 | 0 | 0) | 0;
}

function __ZN4wasm7Literal8getFloatEv(i2) {
 i2 = i2 | 0;
 var d1 = 0.0;
 switch (HEAP32[i2 >> 2] | 0) {
 case 3:
  {
   d1 = +__ZNK4wasm7Literal6getf32Ev(i2);
   break;
  }
 case 4:
  {
   d1 = +__ZNK4wasm7Literal6getf64Ev(i2);
   break;
  }
 default:
  _abort();
 }
 return +d1;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 3048;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_(i6, i1, i4, i2, i5, i7, i3, i8) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 HEAP32[i5 >> 2] = i4;
 HEAP32[i8 >> 2] = i7;
 return 3;
}

function __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEE12__deallocateEPNS_11__hash_nodeIS2_PvEE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 while (1) {
  if (!i1) break;
  i2 = HEAP32[i1 >> 2] | 0;
  __ZdlPv(i1);
  i1 = i2;
 }
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_(i6, i1, i4, i2, i5, i7, i3, i8) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i7 = i7 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 HEAP32[i5 >> 2] = i4;
 HEAP32[i8 >> 2] = i7;
 return 3;
}

function __ZN4wasm16PrintSExpression9visitCallEPNS_4CallE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __Z12printOpeningRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEEPKcb(HEAP32[i2 + 4 >> 2] | 0, 25901, 0) | 0;
 __ZN4wasm16PrintSExpression13printCallBodyEPNS_4CallE(i2, i1);
 return;
}

function ___cxa_get_globals_fast() {
 var i1 = 0, i2 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_once(45004, 2) | 0)) {
  i2 = _pthread_getspecific(HEAP32[11252] | 0) | 0;
  STACKTOP = i1;
  return i2 | 0;
 } else _abort_message(37602, i1);
 return 0;
}

function __ZN4wasm13ReorderLocals13visitSetLocalEPNS_8SetLocalE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i2 = __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEEixERS7_(i2 + 12 | 0, i1 + 8 | 0) | 0;
 HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
 return;
}

function __ZN4wasm13ReorderLocals13visitGetLocalEPNS_8GetLocalE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i2 = __ZNSt3__13mapIN4wasm4NameEjNS_4lessIS2_EENS_9allocatorINS_4pairIKS2_jEEEEEixERS7_(i2 + 12 | 0, i1 + 8 | 0) | 0;
 HEAP32[i2 >> 2] = (HEAP32[i2 >> 2] | 0) + 1;
 return;
}

function __Z8parseIntPKc(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1;
 i1 = (HEAP8[i1 >> 0] | 0) + -48 | 0;
 while (1) {
  i2 = i2 + 1 | 0;
  i3 = HEAP8[i2 >> 0] | 0;
  if (!(i3 << 24 >> 24)) break;
  i1 = (i1 * 10 | 0) + -48 + (i3 << 24 >> 24) | 0;
 }
 return i1 | 0;
}

function dynCall_iiiiiiii(i8, i1, i2, i3, i4, i5, i6, i7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 return FUNCTION_TABLE_iiiiiiii[i8 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0) | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 23332 ? i2 + 4 | 0 : 0) | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 23138 ? i2 + 4 | 0 : 0) | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 22857 ? i2 + 4 | 0 : 0) | 0;
}

function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i4 | 0;
}

function __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1, 2984);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i1 + 60 | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _free(i1);
 if (!(_pthread_setspecific(HEAP32[11252] | 0, 0) | 0)) {
  STACKTOP = i2;
  return;
 } else _abort_message(37499, i2);
}

function _snprintf(i3, i2, i1, i4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = i4;
 i4 = _vsnprintf(i3, i2, i1, i6) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZZN4wasm12RegisterPassINS_15RemoveUnusedBrsEEC1EPKcS4_ENKUlvE_clEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(12) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 >> 2] = 3936;
 HEAP32[i1 + 4 >> 2] = 3964;
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 28317 ? i2 + 4 | 0 : 0) | 0;
}

function __ZZN4wasm12RegisterPassINS_14SimplifyLocalsEEC1EPKcS4_ENKUlvE_clEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(12) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 >> 2] = 4320;
 HEAP32[i1 + 4 >> 2] = 4348;
 return i1 | 0;
}

function __ZZN4wasm12RegisterPassINS_14PostEmscriptenEEC1EPKcS4_ENKUlvE_clEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(12) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 >> 2] = 4192;
 HEAP32[i1 + 4 >> 2] = 4220;
 return i1 | 0;
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1, 3232);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i1 + 64 | 0);
 return;
}

function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  HEAP32[i2 >> 2] = HEAP8[i1 >> 0];
  i2 = i2 + 4 | 0;
  i1 = i1 + 1 | 0;
 }
 return i4 | 0;
}

function __ZN4wasm13ReorderLocalsD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 4448;
 HEAP32[i1 + 4 >> 2] = 4476;
 __ZNSt3__16__treeINS_12__value_typeIN4wasm4NameEjEENS_19__map_value_compareIS3_S4_NS_4lessIS3_EELb1EEENS_9allocatorIS4_EEED2Ev(i1 + 12 | 0);
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 27584 ? i2 + 4 | 0 : 0) | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 26850 ? i2 + 4 | 0 : 0) | 0;
}

function __ZN4wasm12PassRegistry3getEv() {
 var i1 = 0;
 i1 = HEAP32[10258] | 0;
 if (!i1) {
  i1 = __Znwj(12) | 0;
  HEAP32[i1 >> 2] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 >> 2] = i1 + 4;
  HEAP32[10258] = i1;
 }
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 29772 ? i2 + 4 | 0 : 0) | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 29084 ? i2 + 4 | 0 : 0) | 0;
}

function __ZNK4wasm7Literal13truncateToI32Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((HEAP32[i2 >> 2] | 0) == 2) {
  i2 = HEAP32[i2 + 8 >> 2] | 0;
  HEAP32[i1 >> 2] = 1;
  HEAP32[i1 + 8 >> 2] = i2;
  return;
 } else ___assert_fail(16734, 30223, 319, 20998);
}

function __ZZN4wasm12RegisterPassINS_11MergeBlocksEEC1EPKcS4_ENKUlvE_clEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(12) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 >> 2] = 3648;
 HEAP32[i1 + 4 >> 2] = 3676;
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 30481 ? i2 + 4 | 0 : 0) | 0;
}

function __ZN4wasm2If8finalizeEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (HEAP32[i1 + 8 >> 2] | 0) {
  i2 = HEAP32[(HEAP32[i1 + 12 >> 2] | 0) + 4 >> 2] | 0;
  HEAP32[i1 + 4 >> 2] = (i2 | 0) != 5 ? i2 : HEAP32[(HEAP32[i1 + 16 >> 2] | 0) + 4 >> 2] | 0;
 }
 return;
}

function __ZL8abort_onN6cashew3RefE(i1) {
 i1 = i1 | 0;
 __ZN6cashew5Value9stringifyERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEb(HEAP32[i1 >> 2] | 0, 42212, 0);
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c(42212, 10) | 0;
 _abort();
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE(i2, i3, i4, 1114111, 0) | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE(i2, i3, i4, 1114111, 0) | 0;
}

function __ZNKSt3__15ctypeIwE5do_isEtw(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 >>> 0 < 128) {
  i3 = ___ctype_b_loc() | 0;
  i1 = (HEAP16[(HEAP32[i3 >> 2] | 0) + (i1 << 1) >> 1] & i2) << 16 >> 16 != 0;
 } else i1 = 0;
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 25470 ? i2 + 4 | 0 : 0) | 0;
}

function __ZN6cashew5ValueixEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 2) return __ZNSt3__16vectorIN6cashew3RefENS_9allocatorIS2_EEE2atEj(HEAP32[i1 + 8 >> 2] | 0, i2) | 0; else ___assert_fail(31223, 31233, 473, 38799);
 return 0;
}

function __ZTv0_n12_NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44856) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44848) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44840) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44832) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44792) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44784) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44776) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(43964) | 0);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv(i1) {
 i1 = i1 | 0;
 return __ZZN4wasm12RegisterPassINS_17RemoveUnusedNamesEEC1EPKcS4_ENKUlvE_clEv(i1 + 4 | 0) | 0;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(43152) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(43144) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(43136) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(43112) | 0);
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 26623 ? i2 + 4 | 0 : 0) | 0;
}

function __ZN4wasm4Host8finalizeEv(i1) {
 i1 = i1 | 0;
 switch (HEAP32[i1 + 8 >> 2] | 0) {
 case 3:
 case 1:
 case 0:
  {
   HEAP32[i1 + 4 >> 2] = 1;
   break;
  }
 case 2:
  {
   HEAP32[i1 + 4 >> 2] = 1;
   break;
  }
 default:
  _abort();
 }
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv(i1) {
 i1 = i1 | 0;
 return __ZZN4wasm12RegisterPassINS_15RemoveUnusedBrsEEC1EPKcS4_ENKUlvE_clEv(i1 + 4 | 0) | 0;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv(i1) {
 i1 = i1 | 0;
 return __ZZN4wasm12RegisterPassINS_15MinifiedPrinterEEC1EPKcS4_ENKUlvE_clEv(i1 + 4 | 0) | 0;
}

function __ZN6cashew5Value4sizeEv(i1) {
 i1 = i1 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 2) {
  i1 = HEAP32[i1 + 8 >> 2] | 0;
  return (HEAP32[i1 + 4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 2 | 0;
 } else ___assert_fail(31223, 31233, 457, 15398);
 return 0;
}

function __ZN4wasm12toSInteger32Ed(d1) {
 d1 = +d1;
 if (__ZN4wasm12isSInteger32Ed(d1) | 0) return ~~(d1 > -2147483648.0 & d1 < 2147483647.0 ? d1 : d1 < 0.0 ? -2147483648.0 : 2147483647.0) | 0; else ___assert_fail(31530, 31488, 44, 31546);
 return 0;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv(i1) {
 i1 = i1 | 0;
 return __ZZN4wasm12RegisterPassINS_14SimplifyLocalsEEC1EPKcS4_ENKUlvE_clEv(i1 + 4 | 0) | 0;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv(i1) {
 i1 = i1 | 0;
 return __ZZN4wasm12RegisterPassINS_14PostEmscriptenEEC1EPKcS4_ENKUlvE_clEv(i1 + 4 | 0) | 0;
}

function ___stdio_close(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i2;
 HEAP32[i3 >> 2] = HEAP32[i1 + 60 >> 2];
 i1 = ___syscall_ret(___syscall6(6, i3 | 0) | 0) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i1, i2, _strlen(i2) | 0) | 0;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv(i1) {
 i1 = i1 | 0;
 return __ZZN4wasm12RegisterPassINS_13ReorderLocalsEEC1EPKcS4_ENKUlvE_clEv(i1 + 4 | 0) | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 if (i1) {
  i1 = _uselocale(i1) | 0;
  if (!i1) i1 = 4; else {
   _uselocale(i1) | 0;
   i1 = 4;
  }
 } else i1 = 1;
 return i1 | 0;
}

function copyTempFloat(i1) {
 i1 = i1 | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[i1 >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[i1 + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[i1 + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[i1 + 3 >> 0];
}

function __ZN4wasm18CountLeadingZeroesIyEEiT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((i2 | 0) == 0 & 0 == 0) i1 = (__ZN4wasm18CountLeadingZeroesIjEEiT_(i1) | 0) + 32 | 0; else i1 = __ZN4wasm18CountLeadingZeroesIjEEiT_(i2) | 0;
 return i1 | 0;
}

function dynCall_iiiiiii(i7, i1, i2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 return FUNCTION_TABLE_iiiiiii[i7 & 63](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0) | 0;
}

function __ZNSt3__16locale8__globalEv() {
 if ((HEAP8[40704] | 0) == 0 ? ___cxa_guard_acquire(40704) | 0 : 0) {
  __ZNSt3__16locale5__imp11make_globalEv() | 0;
  HEAP32[11231] = 44920;
  ___cxa_guard_release(40704);
 }
 return HEAP32[11231] | 0;
}

function __ZNSt3__16locale7classicEv() {
 if ((HEAP8[40536] | 0) == 0 ? ___cxa_guard_acquire(40536) | 0 : 0) {
  __ZNSt3__16locale5__imp12make_classicEv() | 0;
  HEAP32[11229] = 44912;
  ___cxa_guard_release(40536);
 }
 return HEAP32[11229] | 0;
}

function _bitshift64Ashr(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  tempRet0 = i2 >> i1;
  return i3 >>> i1 | (i2 & (1 << i1) - 1) << 32 - i1;
 }
 tempRet0 = (i2 | 0) < 0 ? -1 : 0;
 return i2 >> i1 - 32 | 0;
}

function _newlocale(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 if (((HEAP8[i3 >> 0] | 0) != 0 ? (_strcmp(i3, 35303) | 0) != 0 : 0) ? (_strcmp(i3, 34351) | 0) != 0 : 0) i1 = 0; else if (!i1) i1 = _calloc(1, 4) | 0;
 return i1 | 0;
}

function __ZNSt3__16__clocEv() {
 var i1 = 0;
 if ((HEAP8[40056] | 0) == 0 ? ___cxa_guard_acquire(40056) | 0 : 0) {
  i1 = _newlocale(2147483647, 35303, 0) | 0;
  HEAP32[10777] = i1;
  ___cxa_guard_release(40056);
 }
 return HEAP32[10777] | 0;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv(i1) {
 i1 = i1 | 0;
 return __ZZN4wasm12RegisterPassINS_11MergeBlocksEEC1EPKcS4_ENKUlvE_clEv(i1 + 4 | 0) | 0;
}

function __ZN4wasm10WasmWalkerIZNS_15Asm2WasmBuilder8optimizeEvE19BlockBreakOptimizervE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 36 | 0);
 return;
}

function __ZNSt3__113unordered_setIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__112__hash_tableIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev(i1);
 return;
}

function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 11556;
 i1 = i1 + 8 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (__ZNSt3__16__clocEv() | 0)) _freelocale(HEAP32[i1 >> 2] | 0);
 return;
}

function _fprintf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4;
 HEAP32[i5 >> 2] = i3;
 i3 = _vfprintf(i1, i2, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZNK4wasm7Literal6geti64Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 2) {
  i1 = i1 + 8 | 0;
  tempRet0 = HEAP32[i1 + 4 >> 2] | 0;
  return HEAP32[i1 >> 2] | 0;
 } else ___assert_fail(16734, 30223, 196, 19917);
 return 0;
}

function __ZN4wasm7Literal9castToI32Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((HEAP32[i2 >> 2] | 0) == 3) {
  HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
  HEAP32[i1 >> 2] = 1;
  return;
 } else ___assert_fail(21100, 30223, 183, 21122);
}

function __ZN4wasm7Literal9castToF32Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if ((HEAP32[i2 >> 2] | 0) == 1) {
  HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
  HEAP32[i1 >> 2] = 3;
  return;
 } else ___assert_fail(16702, 30223, 171, 16724);
}

function dynCall_iiiiiid(i7, i1, i2, i3, i4, i5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 return FUNCTION_TABLE_iiiiiid[i7 & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, +d6) | 0;
}

function _sscanf(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4;
 HEAP32[i5 >> 2] = i3;
 i3 = _vsscanf(i2, i1, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(i2, i1, _wcslen(i1) | 0) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj(i2, i1, _strlen(i1) | 0) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(i2, i1, _strlen(i1) | 0) | 0;
}

function _wmemset(i4, i3, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 if (i1 | 0) {
  i2 = i4;
  while (1) {
   i1 = i1 + -1 | 0;
   HEAP32[i2 >> 2] = i3;
   if (!i1) break; else i2 = i2 + 4 | 0;
  }
 }
 return i4 | 0;
}

function __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(i1, HEAP32[i1 + 4 >> 2] | 0);
 return;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 << 24 >> 24 > -1) {
  i2 = ___ctype_tolower_loc() | 0;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i1 << 24 >> 24 << 2) >> 2] & 255;
 }
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 4020;
 return;
}

function __ZN6cashew5ArenaD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113__vector_baseIPNS_6vectorIN6cashew3RefENS_9allocatorIS3_EEEENS4_IS7_EEED2Ev(i1 + 16 | 0);
 __ZNSt3__113__vector_baseIPN6cashew5ValueENS_9allocatorIS3_EEED2Ev(i1);
 return;
}

function dynCall_viiiiii(i7, i1, i2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 FUNCTION_TABLE_viiiiii[i7 & 15](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0);
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv(i1) {
 i1 = i1 | 0;
 return __ZZN4wasm12RegisterPassINS_7PrinterEEC1EPKcS4_ENKUlvE_clEv(i1 + 4 | 0) | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 3892;
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 3848;
 return;
}

function __ZNKSt3__15ctypeIcE10do_toupperEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 << 24 >> 24 > -1) {
  i2 = ___ctype_toupper_loc() | 0;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + ((i1 & 255) << 2) >> 2] & 255;
 }
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 4276;
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 4148;
 return;
}

function __ZN4wasm14AstStackHelper9getParentEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = HEAP32[10245] | 0;
 i2 = (HEAP32[10246] | 0) - i1 >> 2;
 if (i2 >>> 0 > 1) i1 = HEAP32[i1 + (i2 + -2 << 2) >> 2] | 0; else i1 = 0;
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 4404;
 return;
}

function _bitshift64Shl(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  tempRet0 = i2 << i1 | (i3 & (1 << i1) - 1 << 32 - i1) >>> 32 - i1;
  return i3 << i1;
 }
 tempRet0 = i3 << i1 - 32;
 return 0;
}

function __ZN4wasm19CountTrailingZeroesIyEEiT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = (__ZN4wasm19CountTrailingZeroesIjEEiT_(i2) | 0) + 32 | 0; else i1 = __ZN4wasm19CountTrailingZeroesIjEEiT_(i1) | 0;
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 3604;
 return;
}

function __ZNK6cashew7IStringltERKS0_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 i3 = HEAP32[i2 >> 2] | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 return (_strcmp((i3 | 0) == 0 ? 49108 : i3, (i2 | 0) == 0 ? 49108 : i2) | 0) < 0 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement7getNodeEv(i1) {
 i1 = i1 | 0;
 if (!(HEAP8[i1 >> 0] | 0)) ___assert_fail(24333, 23426, 319, 24340); else return HEAP32[i1 + 4 >> 2] | 0;
 return 0;
}

function _abort_message(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[i3 >> 2] = i2;
 i2 = HEAP32[1133] | 0;
 _vfprintf(i2, i1, i3) | 0;
 _fputc(10, i2) | 0;
 _abort();
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 4020;
 return i1 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE17ExpressionElement5getOpEv(i1) {
 i1 = i1 | 0;
 if (!(HEAP8[i1 >> 0] | 0)) return HEAP32[i1 + 4 >> 2] | 0; else ___assert_fail(24348, 23426, 323, 24356);
 return 0;
}

function _bitshift64Lshr(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  tempRet0 = i2 >>> i1;
  return i3 >>> i1 | (i2 & (1 << i1) - 1) << 32 - i1;
 }
 tempRet0 = 0;
 return i2 >>> i1 - 32 | 0;
}

function __ZNKSt3__18ios_base6getlocEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i3;
 __ZNSt3__16localeC2ERKS0_(i2, i1 + 28 | 0);
 STACKTOP = i3;
 return HEAP32[i2 >> 2] | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 3892;
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 3848;
 return i1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var i1 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_key_create(45008, 222) | 0)) {
  STACKTOP = i1;
  return;
 } else _abort_message(37552, i1);
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 4276;
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 4148;
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 3804;
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 4404;
 return i1 | 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j(i5, i1, i3, i2, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i2 - i3 | 0;
 return (i5 >>> 0 < i4 >>> 0 ? i5 : i4) | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 3604;
 return i1 | 0;
}

function __ZN4wasm8PopCountIjEEiT_(i1) {
 i1 = i1 | 0;
 i1 = i1 - (i1 >>> 1 & 1431655765) | 0;
 i1 = (i1 >>> 2 & 858993459) + (i1 & 858993459) | 0;
 return (Math_imul((i1 >>> 4) + i1 & 252645135, 16843009) | 0) >>> 24 | 0;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44896) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44904) | 0);
 return;
}

function __ZN6cashew3RefeqERKNS_7IStringE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 if (!(HEAP32[i1 >> 2] | 0)) i1 = (HEAP32[i1 + 8 >> 2] | 0) == (HEAP32[i2 >> 2] | 0); else i1 = 0;
 return i1 | 0;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44888) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44880) | 0);
 return;
}

function __ZNKSt3__16locale9use_facetERNS0_2idE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 i2 = __ZNSt3__16locale2id5__getEv(i2) | 0;
 return HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + (i2 << 2) >> 2] | 0;
}

function runPostSets() {}
function _i64Subtract(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = i2 - i4 - (i3 >>> 0 > i1 >>> 0 | 0) >>> 0;
 return (tempRet0 = i4, i1 - i3 >>> 0 | 0) | 0;
}

function dynCall_iiiiii(i6, i1, i2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return FUNCTION_TABLE_iiiiii[i6 & 31](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0) | 0;
}

function __ZNSt3__16locale5__imp11make_globalEv() {
 var i1 = 0;
 i1 = __ZNSt3__16locale7classicEv() | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 HEAP32[11230] = i1;
 __ZNSt3__114__shared_count12__add_sharedEv(i1);
 return 44920;
}

function __ZNKSt3__15ctypeIwE10do_toupperEw(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 >>> 0 < 128) {
  i2 = ___ctype_toupper_loc() | 0;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i1 << 2) >> 2] | 0;
 }
 return i1 | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEw(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 >>> 0 < 128) {
  i2 = ___ctype_tolower_loc() | 0;
  i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + (i1 << 2) >> 2] | 0;
 }
 return i1 | 0;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 3804;
 return i1 | 0;
}

function __ZN6cashew6ParserINS_3RefENS_19DotZeroValueBuilderEE7isSpaceEc(i1) {
 i1 = i1 | 0;
 i1 = i1 + -9 << 24 >> 24;
 if ((i1 & 255) < 24) return (8388627 >>> (i1 & 255) & 1 | 0) != 0 | 0; else return 0;
 return 0;
}

function __ZNKSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE6targetERKSt9type_info(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return ((HEAP32[i1 + 4 >> 2] | 0) == 24733 ? i2 + 4 | 0 : 0) | 0;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44824) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44816) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44808) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44800) | 0);
 return;
}

function __ZNSt3__16localeC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = __ZNSt3__16locale8__globalEv() | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = i2;
 __ZNSt3__114__shared_count12__add_sharedEv(i2);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZN4wasm10WasmWalkerINS_17RemoveUnusedNamesEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 36 | 0);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function dynCall_iiiiid(i6, i1, i2, i3, i4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 return FUNCTION_TABLE_iiiiid[i6 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, +d5) | 0;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZN4wasm10WasmWalkerINS_15RemoveUnusedBrsEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 36 | 0);
 return;
}

function __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEEclEv(i1) {
 i1 = i1 | 0;
 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(42212, 24693) | 0;
 _abort();
}

function __ZN4wasm10WasmWalkerINS_14SimplifyLocalsEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 36 | 0);
 return;
}

function __ZN4wasm10WasmWalkerINS_14PostEmscriptenEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 36 | 0);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZN4wasm19CountTrailingZeroesIjEEiT_(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 32; else {
  i1 = 31588 + ((Math_imul(i1 & 0 - i1, 125613361) | 0) >>> 27) | 0;
  i1 = HEAPU8[i1 >> 0] | 0;
 }
 return i1 | 0;
}

function __ZN4wasm17RemoveUnusedNamesD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 4064;
 HEAP32[i1 + 4 >> 2] = 4092;
 __ZNSt3__16__treeIN4wasm4NameENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev(i1 + 12 | 0);
 return;
}

function __ZN4wasm12toUInteger32Ed(d1) {
 d1 = +d1;
 if (__ZN4wasm12isUInteger32Ed(d1) | 0) return ~~(d1 < 4294967295.0 ? d1 : 4294967295.0) >>> 0 | 0; else ___assert_fail(31472, 31488, 37, 31517);
 return 0;
}

function __ZN4wasm10WasmWalkerINS_13ReorderLocalsEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 36 | 0);
 return;
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1 + -8 | 0);
 return;
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1 + -8 | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(43128) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(43100) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44872) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(44864) | 0);
 return;
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(43080) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(43072) | 0);
 return;
}

function __ZN6cashew7IStringC2EPKcb(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (!i2) ___assert_fail(15331, 15333, 61, 15368); else {
  __ZN6cashew7IString3setEPKcb(i3, i2, i1);
  return;
 }
}

function __ZN4wasm12PassRegistry8PassInfoD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18functionIFPN4wasm4PassEvEED2Ev(i1 + 16 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
 return;
}

function __ZN4wasm10WasmWalkerINS_11MergeBlocksEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 8 >> 2] & 127](i2, i1 + 36 | 0);
 return;
}

function dynCall_viiiii(i6, i1, i2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 FUNCTION_TABLE_viiiii[i6 & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0);
}

function __ZNKSt3__18numpunctIwE12do_falsenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(i1, 11768, _wcslen(11768) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(43120) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl(i2, i1, __ZNSt3__16locale2id5__getEv(43088) | 0);
 return;
}

function __ZNKSt3__18numpunctIwE11do_truenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(i1, 11748, _wcslen(11748) | 0);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i3, i1, i4, i2, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i4;
 return 3;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i3, i1, i4, i2, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i4;
 return 3;
}

function __ZN6cashew5Value9setStringERKNS_7IStringE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 __ZN6cashew5Value4freeEv(i2);
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = HEAP32[i1 >> 2];
 return i2 | 0;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i3, i1, i4, i2, i5) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i4;
 return 3;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __GLOBAL__sub_I_Print_cpp() {
 __ZN4wasm12RegisterPassINS_7PrinterEEC2EPKcS4_(47027, 26474, 26480);
 __ZN4wasm12RegisterPassINS_15MinifiedPrinterEEC2EPKcS4_(47028, 26674, 26689);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i1, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i1, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i1, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i1, 1, 45);
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 312;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 288;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev(i1) {
 i1 = i1 | 0;
 if (HEAP8[i1 >> 0] & 1) _free(HEAP32[i1 + 8 >> 2] | 0);
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 256;
}

function __ZN6cashew11isIdentInitEc(i1) {
 i1 = i1 | 0;
 if ((i1 + -97 & 255) < 26) return 1; else return i1 << 24 >> 24 == 36 | (i1 << 24 >> 24 == 95 | (i1 + -65 & 255) < 26) | 0;
 return 0;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZZN4wasm12RegisterPassINS_15MinifiedPrinterEEC1EPKcS4_ENKUlvE_clEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 + 4 >> 2] = 42128;
 HEAP32[i1 >> 2] = 3776;
 return i1 | 0;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function dynCall_iiiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return FUNCTION_TABLE_iiiii[i5 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0) | 0;
}

function __ZNKSt3__18numpunctIcE12do_falsenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 38471, 5);
 return;
}

function _i64Add(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i3 = i1 + i3 >>> 0;
 return (tempRet0 = i2 + i4 + (i3 >>> 0 < i1 >>> 0 | 0) >>> 0, i3 | 0) | 0;
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 12 | 0);
 return;
}

function __ZNSt3__15ctypeIcED2Ev(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 HEAP32[i2 >> 2] = 11624;
 i1 = HEAP32[i2 + 8 >> 2] | 0;
 if (i1 | 0 ? HEAP8[i2 + 12 >> 0] | 0 : 0) __ZdaPv(i1);
 return;
}

function __ZNKSt3__18numpunctIcE11do_truenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 38477, 4);
 return;
}

function __ZNKSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE7__cloneEPNS0_6__baseIS5_EE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 3560;
 return;
}

function __ZNKSt3__18numpunctIwE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2 + 16 | 0);
 return;
}

function __ZNKSt3__18numpunctIcE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2 + 12 | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 8 | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 8 | 0);
 return;
}

function __ZNK4wasm7Literal6getf64Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 4) return +(+HEAPF64[i1 + 8 >> 3]); else ___assert_fail(21144, 30223, 198, 21754);
 return +(0.0);
}

function __ZNK4wasm7Literal6getf32Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 3) return +(+HEAPF32[i1 + 8 >> 2]); else ___assert_fail(21100, 30223, 197, 21747);
 return +(0.0);
}

function __ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunnerD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__time_putD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if ((i2 | 0) != (__ZNSt3__16__clocEv() | 0)) _freelocale(HEAP32[i1 >> 2] | 0);
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 920;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 768;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 616;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 1224;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 1072;
}

function __ZN6cashew12ValueBuilder13makeRawStringERKNS_7IStringE(i1) {
 i1 = i1 | 0;
 return __ZN6cashew5Value9setStringERKNS_7IStringE(__ZN6cashew5Arena5allocEv(41412) | 0, i1) | 0;
}

function b11(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 abort(11);
 return 0;
}

function __ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 1376;
}

function __ZZN4wasm12RegisterPassINS_7PrinterEEC1EPKcS4_ENKUlvE_clEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 3732;
 HEAP32[i1 + 4 >> 2] = 42128;
 return i1 | 0;
}

function __ZNSt3__16localeC2ERKS0_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 HEAP32[i2 >> 2] = i1;
 __ZNSt3__114__shared_count12__add_sharedEv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE7__cloneEv(i1) {
 i1 = i1 | 0;
 i1 = __Znwj(8) | 0;
 HEAP32[i1 >> 2] = 3560;
 return i1 | 0;
}

function __ZN6cashew5Value8getArrayEv(i1) {
 i1 = i1 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 2) return HEAP32[i1 + 8 >> 2] | 0; else ___assert_fail(31223, 31233, 219, 23405);
 return 0;
}

function __ZN4wasm16AllocatingModuleC2Ev(i1) {
 i1 = i1 | 0;
 __ZN4wasm6ModuleC2Ev(i1);
 HEAP32[i1 + 148 >> 2] = 0;
 HEAP32[i1 + 152 >> 2] = 0;
 HEAP32[i1 + 156 >> 2] = 0;
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNK4wasm7Literal6geti32Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 1) return HEAP32[i1 + 8 >> 2] | 0; else ___assert_fail(16702, 30223, 195, 21740);
 return 0;
}

function __ZN6cashew5Value10getCStringEv(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[i1 >> 2] | 0)) return HEAP32[i1 + 8 >> 2] | 0; else ___assert_fail(15376, 31233, 207, 15704);
 return 0;
}

function dynCall_viiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 FUNCTION_TABLE_viiii[i5 & 15](i1 | 0, i2 | 0, i3 | 0, i4 | 0);
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 512;
}

function __ZN4wasm10Expression4castINS_5BreakEEEPT_v(i1) {
 i1 = i1 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 4) return i1 | 0; else ___assert_fail(27564, 30223, 750, 27579);
 return 0;
}

function _uselocale(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0;
 i1 = (_pthread_self() | 0) + 180 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (i3 | 0) HEAP32[i1 >> 2] = i3;
 return i2 | 0;
}

function ___syscall_ret(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if (i1 >>> 0 > 4294963200) {
  i2 = ___errno_location() | 0;
  HEAP32[i2 >> 2] = 0 - i1;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function ___errno_location() {
 var i1 = 0;
 if (!(HEAP32[10372] | 0)) i1 = 41532; else {
  i1 = (_pthread_self() | 0) + 64 | 0;
  i1 = HEAP32[i1 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZN6cashew12ValueBuilder8makeNullEv() {
 var i1 = 0;
 i1 = __ZN6cashew5Arena5allocEv(41412) | 0;
 __ZN6cashew5Value4freeEv(i1);
 HEAP32[i1 >> 2] = 3;
 return i1 | 0;
}

function __ZNSt3__18numpunctIwED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 11716;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 16 | 0);
 return;
}

function __ZNSt3__18numpunctIcED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 11676;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 592;
}

function __ZZ11instantiateEN19JSExternalInterface10growMemoryEjj(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 _emscripten_asm_const_ii(29, i1 | 0) | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN4wasm7Element5c_strEv(i1) {
 i1 = i1 | 0;
 if (!(HEAP8[i1 >> 0] | 0)) return HEAP32[i1 + 16 >> 2] | 0; else ___assert_fail(17210, 17087, 88, 17513);
 return 0;
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEEEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEEEvE4walkERPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN4wasm7Element3strEv(i1) {
 i1 = i1 | 0;
 if (!(HEAP8[i1 >> 0] | 0)) return HEAP32[i1 + 16 >> 2] | 0; else ___assert_fail(17210, 17087, 83, 17219);
 return 0;
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEEEvE9startWalkEPNS_6ModuleE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEEEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEEEvE4walkERPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEEEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEEEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN6cashew5Value9getNumberEv(i1) {
 i1 = i1 | 0;
 if ((HEAP32[i1 >> 2] | 0) == 1) return i1 + 8 | 0; else ___assert_fail(15403, 31233, 215, 15414);
 return 0;
}

function __ZN4wasm7ElementixEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i2 = __ZN4wasm7Element4listEv(i2) | 0;
 return HEAP32[(HEAP32[i2 >> 2] | 0) + (i1 << 2) >> 2] | 0;
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEEEvE9startWalkEPNS_6ModuleE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEEEvE4walkERPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEEEvE4walkERPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEEEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__110__time_putD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__110__time_putD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 9044;
 __ZNSt3__16localeD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 8980;
 __ZNSt3__16localeD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZN4wasm8PopCountIyEEiT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = __ZN4wasm8PopCountIjEEiT_(i1) | 0;
 return (__ZN4wasm8PopCountIjEEiT_(i2) | 0) + i1 | 0;
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEEEvE9startWalkEPNS_6ModuleE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEEEvE9startWalkEPNS_6ModuleE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEEEvE4walkERPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN6cashew5Value10getIStringEv(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[i1 >> 2] | 0)) return i1 + 8 | 0; else ___assert_fail(15376, 31233, 211, 15387);
 return 0;
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEEEvE9startWalkEPNS_6ModuleE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEEEvE9startWalkEPNS_8FunctionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev(i1 + -8 | 0);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1) {
 i1 = i1 | 0;
 if (HEAP8[i1 >> 0] & 1) __ZdlPv(HEAP32[i1 + 8 >> 2] | 0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1) {
 i1 = i1 | 0;
 if (HEAP8[i1 >> 0] & 1) __ZdlPv(HEAP32[i1 + 8 >> 2] | 0);
 return;
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEEEvE4walkERPNS_10ExpressionE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEEEvE9startWalkEPNS_6ModuleE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 _abort();
}

function __ZNSt3__16locale5facet16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 255](i1);
 return;
}

function __ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function dynCall_iiii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return FUNCTION_TABLE_iiii[i4 & 31](i1 | 0, i2 | 0, i3 | 0) | 0;
}

function b0(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 abort(0);
 return 0;
}

function __ZNSt3__16locale2id6__initEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[10774] | 0;
 HEAP32[10774] = i2 + 1;
 HEAP32[i1 + 4 >> 2] = i2 + 1;
 return;
}

function __ZN4wasm7Element4sizeEv(i1) {
 i1 = i1 | 0;
 i1 = __ZN4wasm7Element4listEv(i1) | 0;
 return (HEAP32[i1 + 4 >> 2] | 0) - (HEAP32[i1 >> 2] | 0) >> 2 | 0;
}

function __ZN4wasm11WasmVisitorIZZNS_15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizer10visitBlockEPNS_5BlockEE11BreakSeekervED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _strchr(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i2 = ___strchrnul(i2, i1) | 0;
 return ((HEAP8[i2 >> 0] | 0) == (i1 & 255) << 24 >> 24 ? i2 : 0) | 0;
}

function __ZZZN4wasm15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizer10visitBlockEPNS_5BlockEEN11BreakSeekerD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN4wasm7Element4listEv(i1) {
 i1 = i1 | 0;
 if (!(HEAP8[i1 >> 0] | 0)) ___assert_fail(17144, 17087, 68, 17152); else return i1 + 4 | 0;
 return 0;
}

function __ZN6cashew11isIdentPartEc(i1) {
 i1 = i1 | 0;
 if (__ZN6cashew11isIdentInitEc(i1) | 0) return 1; else return (i1 + -48 & 255) < 10 | 0;
 return 0;
}

function __ZN6cashew12ValueBuilder12makeRawArrayEi(i1) {
 i1 = i1 | 0;
 return __ZN6cashew5Value8setArrayEj(__ZN6cashew5Arena5allocEv(41412) | 0, i1) | 0;
}

function _wcslen(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2;
 while (1) if (!(HEAP32[i1 >> 2] | 0)) break; else i1 = i1 + 4 | 0;
 return i1 - i2 >> 2 | 0;
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__110__time_putD2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__110__time_putD2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv(i1) {
 i1 = i1 | 0;
 i1 = i1 + 16 | 0;
 HEAP32[i1 >> 2] = HEAP32[i1 >> 2] | 1;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 9044;
 __ZNSt3__16localeD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 8980;
 __ZNSt3__16localeD2Ev(i1 + 4 | 0);
 return;
}

function __ZSt17__throw_bad_allocv() {
 var i1 = 0;
 i1 = ___cxa_allocate_exception(4) | 0;
 __ZNSt9bad_allocC2Ev(i1);
 ___cxa_throw(i1 | 0, 2824, 199);
}

function __ZNSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE18destroy_deallocateEv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function dynCall_viii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 FUNCTION_TABLE_viii[i4 & 15](i1 | 0, i2 | 0, i3 | 0);
}

function __ZZ11instantiateEN19JSExternalInterface4trapEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 _emscripten_asm_const_ii(30, i2 | 0) | 0;
 return;
}

function __ZN10MixedArenaD2Ev(i1) {
 i1 = i1 | 0;
 __ZN10MixedArena5clearEv(i1);
 __ZNSt3__113__vector_baseIPcNS_9allocatorIS1_EEED2Ev(i1);
 return;
}
function stackAlloc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + i1 | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return i2 | 0;
}

function __ZN6cashew3RefntEv(i1) {
 i1 = i1 | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 if (!i1) i1 = 1; else i1 = (HEAP32[i1 >> 2] | 0) == 3;
 return i1 | 0;
}

function ___cxa_is_pointer_type(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 0; else i1 = (___dynamic_cast(i1, 2800, 2856, 0) | 0) != 0;
 return i1 & 1 | 0;
}

function __ZNSt3__18ios_base5clearEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 + 16 >> 2] = (HEAP32[i2 + 24 >> 2] | 0) == 0 | i1;
 return;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 12 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__114__shared_count12__add_sharedEv(i1) {
 i1 = i1 | 0;
 i1 = i1 + 4 | 0;
 HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__15ctypeIwE9do_narrowEwc(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 >>> 0 < 128 ? i1 & 255 : i2) | 0;
}

function b6(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 abort(6);
 return 0;
}

function _strtoull_l(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = _strtoull(i4, i3, i1) | 0;
 return i4 | 0;
}

function __ZNSt3__111__stdoutbufIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__111__stdoutbufIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__15ctypeIcE9do_narrowEcc(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 << 24 >> 24 > -1 ? i1 : i2) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i3 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i3 | 0;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__stdinbufIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__stdinbufIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _strtoll_l(i4, i3, i1, i2) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = _strtoll(i4, i3, i1) | 0;
 return i4 | 0;
}

function _isxdigit(i1) {
 i1 = i1 | 0;
 if ((i1 + -48 | 0) >>> 0 < 10) i1 = 1; else i1 = ((i1 | 32) + -97 | 0) >>> 0 < 6;
 return i1 & 1 | 0;
}

function __ZN4wasm12isUInteger64Ed(d1) {
 d1 = +d1;
 return d1 <= 18446744073709551616.0 & (d1 >= 0.0 & (__ZN4wasm9isIntegerEd(d1) | 0)) | 0;
}

function __ZN4wasm12isSInteger32Ed(d1) {
 d1 = +d1;
 return d1 <= 2147483647.0 & (d1 >= -2147483648.0 & (__ZN4wasm9isIntegerEd(d1) | 0)) | 0;
}

function b3(i1, i2, i3, i4, i5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 abort(3);
 return 0;
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + -8 + 12 | 0);
 return;
}

function __GLOBAL__sub_I_RemoveUnusedNames_cpp() {
 __ZN4wasm12RegisterPassINS_17RemoveUnusedNamesEEC2EPKcS4_(47030, 27644, 27664);
 return;
}

function ___udivdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return ___udivmoddi4(i1, i2, i3, i4, 0) | 0;
}

function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(i1) {
 i1 = i1 | 0;
 ___assert_fail(34625, 34522, 1175, 37453);
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(i1) {
 i1 = i1 | 0;
 ___assert_fail(34493, 34522, 1164, 37409);
}

function _strtoll(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = _strtox(i3, i2, i1, 0, -2147483648) | 0;
 return i3 | 0;
}

function __ZNKSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE11target_typeEv(i1) {
 i1 = i1 | 0;
 return 344;
}

function __ZN6Colors15outputColorCodeERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function __GLOBAL__sub_I_RemoveUnusedBrs_cpp() {
 __ZN4wasm12RegisterPassINS_15RemoveUnusedBrsEEC2EPKcS4_(47029, 26910, 26928);
 return;
}

function __ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(i1) {
 i1 = i1 | 0;
 ___assert_fail(37430, 37306, 314, 37453);
}

function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(i1) {
 i1 = i1 | 0;
 ___assert_fail(37283, 37306, 303, 37409);
}

function b13(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 abort(13);
}

function __ZNSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __GLOBAL__sub_I_SimplifyLocals_cpp() {
 __ZN4wasm12RegisterPassINS_14SimplifyLocalsEEC2EPKcS4_(47032, 29143, 29159);
 return;
}

function __GLOBAL__sub_I_PostEmscripten_cpp() {
 __ZN4wasm12RegisterPassINS_14PostEmscriptenEEC2EPKcS4_(47031, 28379, 28395);
 return;
}

function dynCall_iii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return FUNCTION_TABLE_iii[i3 & 31](i1 | 0, i2 | 0) | 0;
}

function __ZNSt3__16localeD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
 return;
}

function __GLOBAL__sub_I_ReorderLocals_cpp() {
 __ZN4wasm12RegisterPassINS_13ReorderLocalsEEC2EPKcS4_(47033, 29831, 29846);
 return;
}

function __ZNSt3__16locale5__imp12make_classicEv() {
 __ZNSt3__16locale5__impC2Ej(40544, 1);
 HEAP32[11228] = 40544;
 return 44912;
}

function __ZN4wasm12isUInteger32Ed(d1) {
 d1 = +d1;
 return d1 <= 4294967295.0 & (d1 >= 0.0 & (__ZN4wasm9isIntegerEd(d1) | 0)) | 0;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 12 | 0);
 return;
}

function _strtoull(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = _strtox(i3, i2, i1, -1, -1) | 0;
 return i3 | 0;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1 + 8 | 0);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEEEvED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __GLOBAL__sub_I_MergeBlocks_cpp() {
 __ZN4wasm12RegisterPassINS_11MergeBlocksEEC2EPKcS4_(47026, 24824, 24837);
 return;
}

function b15(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 abort(15);
 return 0;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN4wasm4Pass8finalizeEPNS_10PassRunnerEPNS_6ModuleE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function _mbrlen(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 return _mbrtowc(0, i2, i1, i3 | 0 ? i3 : 41540) | 0;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function __ZNSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE7destroyEv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN6cashew3RefixEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZN6cashew5ValueixEj(HEAP32[i1 >> 2] | 0, i2) | 0;
}

function __ZN4wasm4Pass7prepareEPNS_10PassRunnerEPNS_6ModuleE(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEEEvED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEEEvED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEEEvED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __GLOBAL__I_000101() {
 __ZNSt3__18ios_base4InitC2Ev(0);
 ___cxa_atexit(209, 49107, ___dso_handle | 0) | 0;
 return;
}

function __ZNSt3__110__stdinbufIwE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb(i1, 0) | 0;
}

function __ZNSt3__110__stdinbufIcE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb(i1, 0) | 0;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEEEvED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function dynCall_vii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_vii[i3 & 127](i1 | 0, i2 | 0);
}

function _wctomb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = 0; else i1 = _wcrtomb(i1, i2, 0) | 0;
 return i1 | 0;
}

function __ZThn4_N4wasm17RemoveUnusedNamesD1Ev(i1) {
 i1 = i1 | 0;
 __ZN4wasm17RemoveUnusedNamesD2Ev(i1 + -4 | 0);
 return;
}

function __ZThn4_N4wasm17RemoveUnusedNamesD0Ev(i1) {
 i1 = i1 | 0;
 __ZN4wasm17RemoveUnusedNamesD0Ev(i1 + -4 | 0);
 return;
}

function __ZN4wasm17RemoveUnusedNamesD0Ev(i1) {
 i1 = i1 | 0;
 __ZN4wasm17RemoveUnusedNamesD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function b7(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 abort(7);
 return 0;
}

function __ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEEEvED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return -1;
}

function __ZN4wasm11WasmVisitorIZNS_15Asm2WasmBuilder8optimizeEvE19BlockBreakOptimizervED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__110__stdinbufIwE5uflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb(i1, 1) | 0;
}

function __ZNSt3__110__stdinbufIcE5uflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb(i1, 1) | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _strncpy(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 ___stpncpy(i1, i3, i2) | 0;
 return i1 | 0;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _do_read_421(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 return ___string_read(i2, i1, i3) | 0;
}

function __ZZN4wasm15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizerD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZThn4_N4wasm13ReorderLocalsD1Ev(i1) {
 i1 = i1 | 0;
 __ZN4wasm13ReorderLocalsD2Ev(i1 + -4 | 0);
 return;
}

function __ZThn4_N4wasm13ReorderLocalsD0Ev(i1) {
 i1 = i1 | 0;
 __ZN4wasm13ReorderLocalsD0Ev(i1 + -4 | 0);
 return;
}

function __ZSt15get_new_handlerv() {
 var i1 = 0;
 i1 = HEAP32[11253] | 0;
 HEAP32[11253] = i1 + 0;
 return i1 | 0;
}

function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1);
 return;
}

function __ZN4wasm13ReorderLocalsD0Ev(i1) {
 i1 = i1 | 0;
 __ZN4wasm13ReorderLocalsD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function setThrew(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!__THREW__) {
  __THREW__ = i1;
  threwValue = i2;
 }
}

function b2(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 abort(2);
}

function __Z17prepareMajorColorRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEE(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function _mbsinit(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 1; else i1 = (HEAP32[i1 >> 2] | 0) == 0;
 return i1 & 1 | 0;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__16locale5__impD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__16locale5__impD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _nearbyintf(d1) {
 d1 = +d1;
 var i2 = 0;
 i2 = _fetestexcept(32) | 0;
 d1 = +_rintf(d1);
 return +d1;
}

function __ZNSt3__18numpunctIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18numpunctIwED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18numpunctIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18numpunctIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _strtold_l(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +(+_strtox_17(i3, i2, 2));
}

function b12(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 abort(12);
 return 0;
}

function _nearbyint(d1) {
 d1 = +d1;
 var i2 = 0;
 i2 = _fetestexcept(32) | 0;
 d1 = +_rint(d1);
 return +d1;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt3__110__function6__baseIFPN4wasm10ExpressionEN6cashew3RefEjEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __Z12prepareColorRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEE(i1) {
 i1 = i1 | 0;
 return i1 | 0;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt3__110__function6__baseIFPN4wasm10ExpressionEN6cashew3RefEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _catgets(i1, i4, i2, i3) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i3 | 0;
}

function dynCall_ii(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return FUNCTION_TABLE_ii[i2 & 127](i1 | 0) | 0;
}

function ___clang_call_terminate(i1) {
 i1 = i1 | 0;
 ___cxa_begin_catch(i1 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNKSt3__18numpunctIwE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 12 >> 2] | 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return i1 << 24 >> 24 | 0;
}

function __ZNSt3__18ios_baseD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__18ios_baseD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__15ctypeIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__15ctypeIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__18numpunctIwE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 8 >> 2] | 0;
}

function __ZN4wasm10WalkerPassINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNKSt3__18numpunctIcE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return HEAP8[i1 + 9 >> 0] | 0;
}

function __ZNKSt3__18numpunctIcE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return HEAP8[i1 + 8 >> 0] | 0;
}

function __ZN4wasm10WalkerPassINS_10WasmWalkerINS_14SimplifyLocalsEvEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN4wasm10WalkerPassINS_10WasmWalkerINS_14PostEmscriptenEvEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _cleanup_435(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[i1 + 68 >> 2] | 0)) ___unlockfile(i1);
 return;
}

function _cleanup_418(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[i1 + 68 >> 2] | 0)) ___unlockfile(i1);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv(i1) {
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv(i1) {
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZN4wasm10WalkerPassINS_10WasmWalkerINS_11MergeBlocksEvEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function establishStackSpace(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 STACKTOP = i1;
 STACK_MAX = i2;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function b16(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 abort(16);
}

function _isspace(i1) {
 i1 = i1 | 0;
 return ((i1 | 0) == 32 | (i1 + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function _isdigit_l(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 + -48 | 0) >>> 0 < 10 | 0;
}

function __ZThn4_N4wasm15RemoveUnusedBrsD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1 + -4 | 0);
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function dynCall_vi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vi[i2 & 255](i1 | 0);
}

function __ZThn4_N4wasm14SimplifyLocalsD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1 + -4 | 0);
 return;
}

function __ZThn4_N4wasm14PostEmscriptenD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1 + -4 | 0);
 return;
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _strcpy(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 ___stpcpy(i1, i2) | 0;
 return i1 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZNKSt3__15ctypeIcE8do_widenEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return i1 | 0;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZThn4_N4wasm11MergeBlocksD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1 + -4 | 0);
 return;
}

function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__117__widen_from_utf8ILj32EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__18messagesIwE8do_closeEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function __ZNKSt3__18messagesIcE8do_closeEi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return;
}

function b1(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 abort(1);
 return 0;
}

function _strtof(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +(+_strtox_17(i2, i1, 0));
}

function _strtod(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return +(+_strtox_17(i2, i1, 1));
}

function __ZNSt3__110__function6__baseIFPN4wasm4PassEvEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN4wasm11WasmVisitorINS_16PrintSExpressionEvED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function _isxdigit_l(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return _isxdigit(i1) | 0;
}

function __ZNSt3__117bad_function_callD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110moneypunctIwLb1EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110moneypunctIwLb0EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110moneypunctIcLb1EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110moneypunctIcLb0EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt9bad_allocC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 12120;
 return;
}

function __ZN4wasm9isIntegerEd(d1) {
 d1 = +d1;
 return +_fmod(d1, 1.0) == 0.0 | 0;
}

function __ZN4wasm16PrintSExpressionD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _copysignl(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(+_copysign(d1, d2));
}

function __ZN4wasm15RemoveUnusedBrsD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN4wasm15MinifiedPrinterD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _scalbnl(d2, i1) {
 d2 = +d2;
 i1 = i1 | 0;
 return +(+_scalbn(d2, i1));
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN4wasm14SimplifyLocalsD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN4wasm14PostEmscriptenD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _frexpl(d2, i1) {
 d2 = +d2;
 i1 = i1 | 0;
 return +(+_frexp(d2, i1));
}

function __ZNSt3__16locale5facetD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function b9(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 abort(9);
}

function __ZNSt3__18messagesIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__18messagesIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN4wasm11MergeBlocksD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17collateIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__17collateIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__110__function6__baseIFvvEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _isupper(i1) {
 i1 = i1 | 0;
 return (i1 + -65 | 0) >>> 0 < 26 | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__15ctypeIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__121__throw_runtime_errorEPKc(i1) {
 i1 = i1 | 0;
 return;
}

function _fmodl(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(+_fmod(d1, d2));
}

function b14(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 abort(14);
 return 0;
}

function __ZThn4_N4wasm15RemoveUnusedBrsD1Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZN4wasm7PrinterD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZThn4_N4wasm14SimplifyLocalsD1Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZThn4_N4wasm14PostEmscriptenD1Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9bad_allocD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _catopen(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return -1 | 0;
}

function __ZNSt3__110moneypunctIwLb1EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__110moneypunctIwLb0EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb1EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb0EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZThn4_N4wasm11MergeBlocksD1Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__114__shared_countD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNKSt9exception4whatEv(i1) {
 i1 = i1 | 0;
 return 37994;
}

function __ZNKSt9bad_alloc4whatEv(i1) {
 i1 = i1 | 0;
 return 37979;
}

function dynCall_v(i1) {
 i1 = i1 | 0;
 FUNCTION_TABLE_v[i1 & 3]();
}

function __ZNSt3__16locale5facetD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__112__do_nothingEPv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__18messagesIwED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__18messagesIcED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__17collateIwED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__17collateIcED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _freelocale(i1) {
 i1 = i1 | 0;
 _free(i1);
 return;
}

function b5(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 abort(5);
}

function __Znaj(i1) {
 i1 = i1 | 0;
 return __Znwj(i1) | 0;
}

function __ZdaPv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt9type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9exceptionD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9bad_allocD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function stackRestore(i1) {
 i1 = i1 | 0;
 STACKTOP = i1;
}

function __ZdlPv(i1) {
 i1 = i1 | 0;
 _free(i1);
 return;
}

function setTempRet0(i1) {
 i1 = i1 | 0;
 tempRet0 = i1;
}

function __ZN4wasm4PassD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _feclearexcept(i1) {
 i1 = i1 | 0;
 return 0;
}

function b8(i1) {
 i1 = i1 | 0;
 abort(8);
 return 0;
}

function _fetestexcept(i1) {
 i1 = i1 | 0;
 return 0;
}

function ___unlockfile(i1) {
 i1 = i1 | 0;
 return;
}

function ___lockfile(i1) {
 i1 = i1 | 0;
 return 0;
}

function __GLOBAL__sub_I_iostream_cpp() {
 return;
}

function _catclose(i1) {
 i1 = i1 | 0;
 return 0;
}

function _nan(i1) {
 i1 = i1 | 0;
 return +nan;
}

function ___ctype_toupper_loc() {
 return 5236;
}

function ___ctype_tolower_loc() {
 return 6776;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b4(i1) {
 i1 = i1 | 0;
 abort(4);
}

function ___ctype_b_loc() {
 return 5232;
}

function b10() {
 abort(10);
}

// emscripten_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b0];
var FUNCTION_TABLE_iiii = [b1,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEEclEOS5_Oj,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEEclEOS5_Oj,___stdio_write,___stdio_seek,___stdout_write,___stdio_read,_sn_write,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_do_read_421
,b1,b1,b1];
var FUNCTION_TABLE_viiiii = [b2,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib];
var FUNCTION_TABLE_iiiiiid = [b3,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b3];
var FUNCTION_TABLE_vi = [b4,__ZN4wasm11WasmVisitorIZNS_15Asm2WasmBuilder8optimizeEvE19BlockBreakOptimizervED2Ev,__ZZN4wasm15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizerD0Ev,__ZN4wasm11WasmVisitorIZZNS_15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizer10visitBlockEPNS_5BlockEE11BreakSeekervED2Ev,__ZZZN4wasm15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizer10visitBlockEPNS_5BlockEEN11BreakSeekerD0Ev,__ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt9exceptionD2Ev,__ZNSt3__117bad_function_callD0Ev,__ZN4wasm11WasmVisitorIZNS_14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS4_9allocatorIS6_EEEEE16ExpressionRunnerNS_4FlowEED2Ev,__ZZN4wasm14ModuleInstance12callFunctionEN6cashew7IStringERNSt3__16vectorINS_7LiteralENS3_9allocatorIS5_EEEEEN16ExpressionRunnerD0Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev
,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__110__function6__baseIFPN4wasm10ExpressionEN6cashew3RefEEED2Ev,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EED0Ev,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE7destroyEv,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE18destroy_deallocateEv,__ZNSt3__110__function6__baseIFPN4wasm10ExpressionEN6cashew3RefEjEED2Ev,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEED0Ev,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7destroyEv,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEED0Ev,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7destroyEv,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE18destroy_deallocateEv,__ZNSt3__110__function6__baseIFvvEED2Ev,__ZNSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEED0Ev,__ZNSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE7destroyEv,__ZNSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEEclEv,__ZNSt3__110__function6__baseIFPN4wasm4PassEvEED2Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv,__ZN4wasm10WalkerPassINS_10WasmWalkerINS_11MergeBlocksEvEEED2Ev,__ZN4wasm11MergeBlocksD0Ev,__ZThn4_N4wasm11MergeBlocksD1Ev,__ZThn4_N4wasm11MergeBlocksD0Ev
,__ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEEEvED2Ev,__ZN4wasm11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEED0Ev,__ZN4wasm4PassD2Ev,__ZN4wasm7PrinterD0Ev,__ZN4wasm11WasmVisitorINS_16PrintSExpressionEvED2Ev,__ZN4wasm16PrintSExpressionD0Ev,__ZN4wasm15MinifiedPrinterD0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv,__ZN4wasm10WalkerPassINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEED2Ev,__ZN4wasm15RemoveUnusedBrsD0Ev,__ZThn4_N4wasm15RemoveUnusedBrsD1Ev,__ZThn4_N4wasm15RemoveUnusedBrsD0Ev,__ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEEEvED2Ev,__ZN4wasm11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv,__ZN4wasm17RemoveUnusedNamesD2Ev,__ZN4wasm17RemoveUnusedNamesD0Ev,__ZThn4_N4wasm17RemoveUnusedNamesD1Ev,__ZThn4_N4wasm17RemoveUnusedNamesD0Ev,__ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEEEvED2Ev
,__ZN4wasm11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv,__ZN4wasm10WalkerPassINS_10WasmWalkerINS_14PostEmscriptenEvEEED2Ev,__ZN4wasm14PostEmscriptenD0Ev,__ZThn4_N4wasm14PostEmscriptenD1Ev,__ZThn4_N4wasm14PostEmscriptenD0Ev,__ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEEEvED2Ev,__ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv,__ZN4wasm10WalkerPassINS_10WasmWalkerINS_14SimplifyLocalsEvEEED2Ev,__ZN4wasm14SimplifyLocalsD0Ev,__ZThn4_N4wasm14SimplifyLocalsD1Ev,__ZThn4_N4wasm14SimplifyLocalsD0Ev,__ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEEEvED2Ev,__ZN4wasm11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEED0Ev,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7destroyEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE18destroy_deallocateEv,__ZN4wasm13ReorderLocalsD2Ev,__ZN4wasm13ReorderLocalsD0Ev,__ZThn4_N4wasm13ReorderLocalsD1Ev,__ZThn4_N4wasm13ReorderLocalsD0Ev,__ZN4wasm11WasmVisitorINS_11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEEEvED2Ev,__ZN4wasm11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__110__stdinbufIcED0Ev
,__ZNSt3__111__stdoutbufIcED0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__110__stdinbufIwED0Ev,__ZNSt3__111__stdoutbufIwED0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev
,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED2Ev,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev
,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZNSt3__113__vector_baseIN6cashew3RefENS_9allocatorIS2_EEED2Ev,__ZNSt3__113unordered_setIN6cashew7IStringENS_4hashIS2_EENS_8equal_toIS2_EENS_9allocatorIS2_EEED2Ev,__ZNSt3__113__vector_baseIN6cashew13OperatorClassENS_9allocatorIS2_EEED2Ev,__ZNSt3__113__vector_baseINS_13unordered_mapIN6cashew7IStringEiNS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorINS_4pairIKS3_iEEEEEENS8_ISD_EEED2Ev,__ZN6cashew5ArenaD2Ev,_cleanup_418,_cleanup_435
,__ZNSt3__18ios_base4InitD2Ev,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,___cxx_global_array_dtor,___cxx_global_array_dtor_61,___cxx_global_array_dtor_109,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,___cxx_global_array_dtor_46,___cxx_global_array_dtor_85,___cxx_global_array_dtor_112,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev,__ZNSt3__112__do_nothingEPv,_free,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_vii = [b5,__ZN4wasm10WasmWalkerIZNS_15Asm2WasmBuilder8optimizeEvE19BlockBreakOptimizervE4walkERPNS_10ExpressionE,__ZN4wasm10WasmWalkerIZNS_15Asm2WasmBuilder8optimizeEvE19BlockBreakOptimizervE9startWalkEPNS_8FunctionE,__ZN4wasm10WasmWalkerIZNS_15Asm2WasmBuilder8optimizeEvE19BlockBreakOptimizervE9startWalkEPNS_6ModuleE,__ZN4wasm10WasmWalkerIZZNS_15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizer10visitBlockEPNS_5BlockEE11BreakSeekervE4walkERPNS_10ExpressionE,__ZN4wasm10WasmWalkerIZZNS_15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizer10visitBlockEPNS_5BlockEE11BreakSeekervE9startWalkEPNS_8FunctionE,__ZN4wasm10WasmWalkerIZZNS_15Asm2WasmBuilder8optimizeEvEN19BlockBreakOptimizer10visitBlockEPNS_5BlockEE11BreakSeekervE9startWalkEPNS_6ModuleE,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZZ11instantiateEN19JSExternalInterface4initERN4wasm6ModuleE,__ZZ11instantiateEN19JSExternalInterface4trapEPKc,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE7__cloneEPNS0_6__baseISB_EE,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7__cloneEPNS0_6__baseISB_EE,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7__cloneEPNS0_6__baseISB_EE,__ZNKSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE7__cloneEPNS0_6__baseIS5_EE,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE,__ZN4wasm10WasmWalkerINS_11MergeBlocksEvE4walkERPNS_10ExpressionE,__ZN4wasm10WasmWalkerINS_11MergeBlocksEvE9startWalkEPNS_8FunctionE,__ZN4wasm10WasmWalkerINS_11MergeBlocksEvE9startWalkEPNS_6ModuleE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEEEvE4walkERPNS_10ExpressionE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEEEvE9startWalkEPNS_8FunctionE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_11MergeBlocksEvEEEEvE9startWalkEPNS_6ModuleE,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE,__ZN4wasm10WasmWalkerINS_15RemoveUnusedBrsEvE4walkERPNS_10ExpressionE,__ZN4wasm10WasmWalkerINS_15RemoveUnusedBrsEvE9startWalkEPNS_8FunctionE,__ZN4wasm10WasmWalkerINS_15RemoveUnusedBrsEvE9startWalkEPNS_6ModuleE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEEEvE4walkERPNS_10ExpressionE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEEEvE9startWalkEPNS_8FunctionE
,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEEEvE9startWalkEPNS_6ModuleE,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE,__ZN4wasm10WasmWalkerINS_17RemoveUnusedNamesEvE4walkERPNS_10ExpressionE,__ZN4wasm10WasmWalkerINS_17RemoveUnusedNamesEvE9startWalkEPNS_8FunctionE,__ZN4wasm10WasmWalkerINS_17RemoveUnusedNamesEvE9startWalkEPNS_6ModuleE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEEEvE4walkERPNS_10ExpressionE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEEEvE9startWalkEPNS_8FunctionE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEEEvE9startWalkEPNS_6ModuleE,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE,__ZN4wasm10WasmWalkerINS_14PostEmscriptenEvE4walkERPNS_10ExpressionE,__ZN4wasm10WasmWalkerINS_14PostEmscriptenEvE9startWalkEPNS_8FunctionE,__ZN4wasm10WasmWalkerINS_14PostEmscriptenEvE9startWalkEPNS_6ModuleE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEEEvE4walkERPNS_10ExpressionE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEEEvE9startWalkEPNS_8FunctionE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14PostEmscriptenEvEEEEvE9startWalkEPNS_6ModuleE,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE,__ZN4wasm10WasmWalkerINS_14SimplifyLocalsEvE4walkERPNS_10ExpressionE,__ZN4wasm10WasmWalkerINS_14SimplifyLocalsEvE9startWalkEPNS_8FunctionE,__ZN4wasm10WasmWalkerINS_14SimplifyLocalsEvE9startWalkEPNS_6ModuleE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEEEvE4walkERPNS_10ExpressionE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEEEvE9startWalkEPNS_8FunctionE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_14SimplifyLocalsEvEEEEvE9startWalkEPNS_6ModuleE,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEPNS0_6__baseISD_EE,__ZN4wasm10WasmWalkerINS_13ReorderLocalsEvE4walkERPNS_10ExpressionE,__ZN4wasm10WasmWalkerINS_13ReorderLocalsEvE9startWalkEPNS_8FunctionE,__ZN4wasm10WasmWalkerINS_13ReorderLocalsEvE9startWalkEPNS_6ModuleE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEEEvE4walkERPNS_10ExpressionE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEEEvE9startWalkEPNS_8FunctionE,__ZN4wasm14WasmWalkerBaseINS_11ChildWalkerINS_10WasmWalkerINS_13ReorderLocalsEvEEEEvE9startWalkEPNS_6ModuleE,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE
,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi
,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiiiiii = [b6,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiiid = [b7,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b7,b7,b7];
var FUNCTION_TABLE_ii = [b8,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNKSt9exception4whatEv,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE7__cloneEv,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE11target_typeEv,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7__cloneEv,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE11target_typeEv,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE7__cloneEv,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE11target_typeEv,__ZNKSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE7__cloneEv,__ZNKSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE11target_typeEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv
,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE7__cloneEv,__ZNSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEEclEv,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE11target_typeEv,___stdio_close,__ZNSt3__110__stdinbufIcE9underflowEv,__ZNSt3__110__stdinbufIcE5uflowEv,__ZNSt3__111__stdoutbufIcE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__110__stdinbufIwE9underflowEv,__ZNSt3__110__stdinbufIwE5uflowEv,__ZNSt3__111__stdoutbufIwE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv
,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv
,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt9bad_alloc4whatEv,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_viii = [b9,__ZZ11instantiateEN19JSExternalInterface10growMemoryEjj,__ZN4wasm4Pass7prepareEPNS_10PassRunnerEPNS_6ModuleE,__ZN4wasm10WalkerPassINS_10WasmWalkerINS_11MergeBlocksEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE,__ZN4wasm4Pass8finalizeEPNS_10PassRunnerEPNS_6ModuleE,__ZN4wasm7Printer3runEPNS_10PassRunnerEPNS_6ModuleE,__ZN4wasm15MinifiedPrinter3runEPNS_10PassRunnerEPNS_6ModuleE,__ZN4wasm10WalkerPassINS_10WasmWalkerINS_15RemoveUnusedBrsEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE,__ZN4wasm10WalkerPassINS_10WasmWalkerINS_17RemoveUnusedNamesEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE,__ZN4wasm10WalkerPassINS_10WasmWalkerINS_14PostEmscriptenEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE,__ZN4wasm10WalkerPassINS_10WasmWalkerINS_14SimplifyLocalsEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE,__ZN4wasm10WalkerPassINS_10WasmWalkerINS_13ReorderLocalsEvEEE3runEPNS_10PassRunnerEPNS_6ModuleE,b9,b9,b9,b9];
var FUNCTION_TABLE_v = [b10,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b10];
var FUNCTION_TABLE_iiiiiiiii = [b11,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_iiiii = [b12,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,b12,b12];
var FUNCTION_TABLE_viiiiii = [b13,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b13,b13,b13,b13,b13,b13,b13];
var FUNCTION_TABLE_iii = [b14,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZNSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EEclEOS5_,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__1NS_9allocatorIS6_EEFPNS2_10ExpressionES5_EE6targetERKSt9type_info,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__2NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE6targetERKSt9type_info,__ZNKSt3__110__function6__funcIZN4wasm15Asm2WasmBuilder15processFunctionEN6cashew3RefEE3__3NS_9allocatorIS6_EEFPNS2_10ExpressionES5_jEE6targetERKSt9type_info,__ZNKSt3__110__function6__funcIZ16load_s_expr2wasmE3__4NS_9allocatorIS2_EEFvvEE6targetERKSt9type_info,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_11MergeBlocksEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_7PrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15MinifiedPrinterEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_15RemoveUnusedBrsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_17RemoveUnusedNamesEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14PostEmscriptenEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_14SimplifyLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info,__ZNKSt3__110__function6__funcIZN4wasm12RegisterPassINS2_13ReorderLocalsEEC1EPKcS7_EUlvE_NS_9allocatorIS8_EEFPNS2_4PassEvEE6targetERKSt9type_info,__ZNSt3__110__stdinbufIcE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__111__stdoutbufIcE8overflowEi,__ZNSt3__110__stdinbufIwE9pbackfailEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__111__stdoutbufIwE8overflowEj,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw,__ZNKSt3__15ctypeIwE10do_tolowerEw
,__ZNKSt3__15ctypeIwE8do_widenEc,b14,b14];
var FUNCTION_TABLE_iiiiii = [b15,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15];
var FUNCTION_TABLE_viiii = [b16,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZZ11instantiateEN19JSExternalInterface10callImportEPN4wasm6ImportERNSt3__16vectorINS0_7LiteralENS3_9allocatorIS5_EEEE,__ZZ11instantiateEN19JSExternalInterface4loadEPN4wasm4LoadEj,__ZZ11instantiateEN19JSExternalInterface5storeEPN4wasm5StoreEjNS0_7LiteralE,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b16,b16,b16,b16];

  return { ___cxa_demangle: ___cxa_demangle, ___cxa_can_catch: ___cxa_can_catch, _fflush: _fflush, _load_asm2wasm: _load_asm2wasm, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _load_s_expr2wasm: _load_s_expr2wasm, _memmove: _memmove, _bitshift64Ashr: _bitshift64Ashr, _instantiate: _instantiate, _memset: _memset, _malloc: _malloc, _i64Add: _i64Add, _memcpy: _memcpy, _bitshift64Lshr: _bitshift64Lshr, _free: _free, _bitshift64Shl: _bitshift64Shl, _i64Subtract: _i64Subtract, ___errno_location: ___errno_location, _call_from_js: _call_from_js, __GLOBAL__I_000101: __GLOBAL__I_000101, __GLOBAL__sub_I_wasm_js_cpp: __GLOBAL__sub_I_wasm_js_cpp, __GLOBAL__sub_I_MergeBlocks_cpp: __GLOBAL__sub_I_MergeBlocks_cpp, __GLOBAL__sub_I_Print_cpp: __GLOBAL__sub_I_Print_cpp, __GLOBAL__sub_I_RemoveUnusedBrs_cpp: __GLOBAL__sub_I_RemoveUnusedBrs_cpp, __GLOBAL__sub_I_RemoveUnusedNames_cpp: __GLOBAL__sub_I_RemoveUnusedNames_cpp, __GLOBAL__sub_I_PostEmscripten_cpp: __GLOBAL__sub_I_PostEmscripten_cpp, __GLOBAL__sub_I_SimplifyLocals_cpp: __GLOBAL__sub_I_SimplifyLocals_cpp, __GLOBAL__sub_I_ReorderLocals_cpp: __GLOBAL__sub_I_ReorderLocals_cpp, __GLOBAL__sub_I_parser_cpp: __GLOBAL__sub_I_parser_cpp, __GLOBAL__sub_I_simple_ast_cpp: __GLOBAL__sub_I_simple_ast_cpp, __GLOBAL__sub_I_optimizer_shared_cpp: __GLOBAL__sub_I_optimizer_shared_cpp, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, runPostSets: runPostSets, _emscripten_replace_memory: _emscripten_replace_memory, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiii: dynCall_viiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// emscripten_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var __GLOBAL__sub_I_simple_ast_cpp = Module["__GLOBAL__sub_I_simple_ast_cpp"] = asm["__GLOBAL__sub_I_simple_ast_cpp"];
var _instantiate = Module["_instantiate"] = asm["_instantiate"];
var __GLOBAL__sub_I_RemoveUnusedBrs_cpp = Module["__GLOBAL__sub_I_RemoveUnusedBrs_cpp"] = asm["__GLOBAL__sub_I_RemoveUnusedBrs_cpp"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var __GLOBAL__sub_I_SimplifyLocals_cpp = Module["__GLOBAL__sub_I_SimplifyLocals_cpp"] = asm["__GLOBAL__sub_I_SimplifyLocals_cpp"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var __GLOBAL__sub_I_parser_cpp = Module["__GLOBAL__sub_I_parser_cpp"] = asm["__GLOBAL__sub_I_parser_cpp"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var _load_asm2wasm = Module["_load_asm2wasm"] = asm["_load_asm2wasm"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var __GLOBAL__sub_I_optimizer_shared_cpp = Module["__GLOBAL__sub_I_optimizer_shared_cpp"] = asm["__GLOBAL__sub_I_optimizer_shared_cpp"];
var _bitshift64Ashr = Module["_bitshift64Ashr"] = asm["_bitshift64Ashr"];
var _memset = Module["_memset"] = asm["_memset"];
var ___cxa_demangle = Module["___cxa_demangle"] = asm["___cxa_demangle"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var __GLOBAL__sub_I_PostEmscripten_cpp = Module["__GLOBAL__sub_I_PostEmscripten_cpp"] = asm["__GLOBAL__sub_I_PostEmscripten_cpp"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var __GLOBAL__sub_I_MergeBlocks_cpp = Module["__GLOBAL__sub_I_MergeBlocks_cpp"] = asm["__GLOBAL__sub_I_MergeBlocks_cpp"];
var _load_s_expr2wasm = Module["_load_s_expr2wasm"] = asm["_load_s_expr2wasm"];
var __GLOBAL__sub_I_Print_cpp = Module["__GLOBAL__sub_I_Print_cpp"] = asm["__GLOBAL__sub_I_Print_cpp"];
var __GLOBAL__I_000101 = Module["__GLOBAL__I_000101"] = asm["__GLOBAL__I_000101"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var _call_from_js = Module["_call_from_js"] = asm["_call_from_js"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var __GLOBAL__sub_I_wasm_js_cpp = Module["__GLOBAL__sub_I_wasm_js_cpp"] = asm["__GLOBAL__sub_I_wasm_js_cpp"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var __GLOBAL__sub_I_ReorderLocals_cpp = Module["__GLOBAL__sub_I_ReorderLocals_cpp"] = asm["__GLOBAL__sub_I_ReorderLocals_cpp"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _emscripten_replace_memory = Module["_emscripten_replace_memory"] = asm["_emscripten_replace_memory"];
var __GLOBAL__sub_I_RemoveUnusedNames_cpp = Module["__GLOBAL__sub_I_RemoveUnusedNames_cpp"] = asm["__GLOBAL__sub_I_RemoveUnusedNames_cpp"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = asm["stackAlloc"];
Runtime.stackSave = asm["stackSave"];
Runtime.stackRestore = asm["stackRestore"];
Runtime.establishStackSpace = asm["establishStackSpace"];
Runtime.setTempRet0 = asm["setTempRet0"];
Runtime.getTempRet0 = asm["getTempRet0"];
function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = "Program terminated with exit(" + status + ")";
 this.status = status;
}
ExitStatus.prototype = new Error;
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
 if (!Module["calledRun"]) run();
 if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
};
Module["callMain"] = Module.callMain = function callMain(args) {
 args = args || [];
 ensureInitRuntime();
 var argc = args.length + 1;
 function pad() {
  for (var i = 0; i < 4 - 1; i++) {
   argv.push(0);
  }
 }
 var argv = [ allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL) ];
 pad();
 for (var i = 0; i < argc - 1; i = i + 1) {
  argv.push(allocate(intArrayFromString(args[i]), "i8", ALLOC_NORMAL));
  pad();
 }
 argv.push(0);
 argv = allocate(argv, "i32", ALLOC_NORMAL);
 try {
  var ret = Module["_main"](argc, argv, 0);
  exit(ret, true);
 } catch (e) {
  if (e instanceof ExitStatus) {
   return;
  } else if (e == "SimulateInfiniteLoop") {
   Module["noExitRuntime"] = true;
   return;
  } else {
   if (e && typeof e === "object" && e.stack) Module.printErr("exception thrown: " + [ e, e.stack ]);
   throw e;
  }
 } finally {
  calledMain = true;
 }
};
function run(args) {
 args = args || Module["arguments"];
 if (preloadStartTime === null) preloadStartTime = Date.now();
 if (runDependencies > 0) {
  return;
 }
 preRun();
 if (runDependencies > 0) return;
 if (Module["calledRun"]) return;
 function doRun() {
  if (Module["calledRun"]) return;
  Module["calledRun"] = true;
  if (ABORT) return;
  ensureInitRuntime();
  preMain();
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  if (Module["_main"] && shouldRunNow) Module["callMain"](args);
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout((function() {
   setTimeout((function() {
    Module["setStatus"]("");
   }), 1);
   doRun();
  }), 1);
 } else {
  doRun();
 }
}
Module["run"] = Module.run = run;
function exit(status, implicit) {
 if (implicit && Module["noExitRuntime"]) {
  return;
 }
 if (Module["noExitRuntime"]) {} else {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  exitRuntime();
  if (Module["onExit"]) Module["onExit"](status);
 }
 if (ENVIRONMENT_IS_NODE) {
  process["exit"](status);
 } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
  quit(status);
 }
 throw new ExitStatus(status);
}
Module["exit"] = Module.exit = exit;
var abortDecorators = [];
function abort(what) {
 if (what !== undefined) {
  Module.print(what);
  Module.printErr(what);
  what = JSON.stringify(what);
 } else {
  what = "";
 }
 ABORT = true;
 EXITSTATUS = 1;
 var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";
 var output = "abort(" + what + ") at " + stackTrace() + extra;
 if (abortDecorators) {
  abortDecorators.forEach((function(decorator) {
   output = decorator(output, what);
  }));
 }
 throw output;
}
Module["abort"] = Module.abort = abort;
if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}
var shouldRunNow = true;
if (Module["noInitialRun"]) {
 shouldRunNow = false;
}
run();





  return Module;
};

//^wasm.js


/*
 * Copyright 2015 WebAssembly Community Group participants
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

function integrateWasmJS(Module) {
  // wasm.js has several methods for creating the compiled code module here:
  //  * 'wasm-s-parser': load s-expression code from a .wast and create wasm
  //  * 'asm2wasm': load asm.js code and translate to wasm
  //  * 'just-asm': no wasm, just load the asm.js code and use that (good for testing)
  // The method can be set at compile time (BINARYEN_METHOD), or runtime by setting Module['wasmJSMethod'].
  var method = Module['wasmJSMethod'] || 'wasm-s-parser';
  assert(method == 'asm2wasm' || method == 'wasm-s-parser' || method == 'just-asm');

  if (method == 'just-asm') {
    eval(Module['read']('bb.asm.js'));
    return;
  }

  var asm2wasmImports = { // special asm2wasm imports
    "f64-rem": function(x, y) {
      return x % y;
    },
    "f64-to-int": function(x) {
      return x | 0;
    },
    "debugger": function() {
      debugger;
    },
  };

  var info = {
    global: null,
    env: null,
    asm2wasm: asm2wasmImports,
    parent: Module // Module inside wasm-js.cpp refers to wasm-js.cpp; this allows access to the outside program.
  };

  function lookupImport(mod, base) {
    var lookup = info;
    if (mod.indexOf('.') < 0) {
      lookup = (lookup || {})[mod];
    } else {
      var parts = mod.split('.');
      lookup = (lookup || {})[parts[0]];
      lookup = (lookup || {})[parts[1]];
    }
    if (base) {
      lookup = (lookup || {})[base];
    }
    if (lookup === undefined) {
      abort('bad lookupImport to (' + mod + ').' + base);
    }
    return lookup;
  }

  function mergeMemory(newBuffer) {
    // The wasm instance creates its memory. But static init code might have written to
    // buffer already, including the mem init file, and we must copy it over in a proper merge.
    // TODO: avoid this copy, by avoiding such static init writes
    // TODO: in shorter term, just copy up to the last static init write
    var oldBuffer = Module['buffer'];
    assert(newBuffer.byteLength >= oldBuffer.byteLength, 'we might fail if we allocated more than TOTAL_MEMORY');
    var oldView = new Int8Array(oldBuffer);
    var newView = new Int8Array(newBuffer);
    if (0) {
      // memory segments arrived in the wast, do not trample them
      oldView.set(newView.subarray(STATIC_BASE, STATIC_BASE + STATIC_BUMP), STATIC_BASE);
    }
    newView.set(oldView);
    updateGlobalBuffer(newBuffer);
    updateGlobalBufferViews();
    Module['reallocBuffer'] = function(size) {
      var old = Module['buffer'];
      wasmJS['asmExports']['__growWasmMemory'](size); // tiny wasm method that just does grow_memory
      return Module['buffer'] !== old ? Module['buffer'] : null; // if it was reallocated, it changed
    };
  }

  // wasm lacks globals, so asm2wasm maps them into locations in memory. that information cannot
  // be present in the wasm output of asm2wasm, so we store it in a side file. If we load asm2wasm
  // output, either generated ahead of time or on the client, we need to apply those mapped
  // globals after loading the module.
  function applyMappedGlobals() {
    var mappedGlobals = JSON.parse(Module['read']("bb.wast" + '.mappedGlobals'));
    for (var name in mappedGlobals) {
      var global = mappedGlobals[name];
      if (!global.import) continue; // non-imports are initialized to zero in the typed array anyhow, so nothing to do here
      var value = lookupImport(global.module, global.base);
      var address = global.address;
      switch (global.type) {
        case WasmTypes.i32: Module['HEAP32'][address >> 2] = value; break;
        case WasmTypes.f32: Module['HEAPF32'][address >> 2] = value; break;
        case WasmTypes.f64: Module['HEAPF64'][address >> 3] = value; break;
        default: abort();
      }
    }
  }

  if (typeof Wasm === 'object' || typeof wasmEval === 'function') {
    // Provide an "asm.js function" for the application, called to "link" the asm.js module. We instantiate
    // the wasm module at that time, and it receives imports and provides exports and so forth, the app
    // doesn't need to care that it is wasm and not asm.
    Module['asm'] = function(global, env, providedBuffer) {
      // Load the wasm module
      var binary = Module['readBinary']("bb.wast");
      // Create an instance of the module using native support in the JS engine.
      info['global'] = { 'Math': global.Math };
      info['env'] = env;
      var instance;
      if (typeof Wasm === 'object') {
        instance = Wasm.instantiateModule(binary.buffer, info);
      } else if (typeof wasmEval === 'function') {
        instance = wasmEval(binary.buffer, info);
      } else {
        throw 'how to wasm?';
      }
      mergeMemory(instance.memory);

      applyMappedGlobals();

      return instance;
    };

    return;
  }

  var WasmTypes = {
    none: 0,
    i32: 1,
    i64: 2,
    f32: 3,
    f64: 4
  };

  // Use wasm.js to polyfill and execute code in a wasm interpreter.
  var wasmJS = WasmJS({});

  // XXX don't be confused. Module here is in the outside program. wasmJS is the inner wasm-js.cpp.
  wasmJS['outside'] = Module; // Inside wasm-js.cpp, Module['outside'] reaches the outside module.

  // Information for the instance of the module.
  wasmJS['info'] = info;

  wasmJS['lookupImport'] = lookupImport;

  // The asm.js function, called to "link" the asm.js module. At that time, we are provided imports
  // and respond with exports, and so forth.
  Module['asm'] = function(global, env, providedBuffer) {
    assert(providedBuffer === Module['buffer']); // we should not even need to pass it as a 3rd arg for wasm, but that's the asm.js way.

    info.global = global;
    info.env = env;

    Module['reallocBuffer'] = function(size) {
      var old = Module['buffer'];
      wasmJS['asmExports']['__growWasmMemory'](size); // tiny wasm method that just does grow_memory
      return Module['buffer'] !== old ? Module['buffer'] : null; // if it was reallocated, it changed
    };

    wasmJS['providedTotalMemory'] = Module['buffer'].byteLength;

    // Prepare to generate wasm, using either asm2wasm or wasm-s-parser
    var code = Module['read'](method == 'asm2wasm' ? "bb.asm.js" : "bb.wast");
    var temp = wasmJS['_malloc'](code.length + 1);
    wasmJS['writeAsciiToMemory'](code, temp);
    if (method == 'asm2wasm') {
      wasmJS['_load_asm2wasm'](temp);
    } else {
      wasmJS['_load_s_expr2wasm'](temp);
    }
    wasmJS['_free'](temp);

    wasmJS['_instantiate'](temp);

    if (Module['newBuffer']) {
      mergeMemory(Module['newBuffer']);
      Module['newBuffer'] = null;
    }

    if (method == 'wasm-s-parser') {
      applyMappedGlobals();
    }

    return wasmJS['asmExports'];
  };
}


var Module;
if (!Module) Module = (typeof Module !== "undefined" ? Module : null) || {};
var moduleOverrides = {};
for (var key in Module) {
 if (Module.hasOwnProperty(key)) {
  moduleOverrides[key] = Module[key];
 }
}
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;
if (Module["ENVIRONMENT"]) {
 if (Module["ENVIRONMENT"] === "WEB") {
  ENVIRONMENT_IS_WEB = true;
 } else if (Module["ENVIRONMENT"] === "WORKER") {
  ENVIRONMENT_IS_WORKER = true;
 } else if (Module["ENVIRONMENT"] === "NODE") {
  ENVIRONMENT_IS_NODE = true;
 } else if (Module["ENVIRONMENT"] === "SHELL") {
  ENVIRONMENT_IS_SHELL = true;
 } else {
  throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");
 }
} else {
 ENVIRONMENT_IS_WEB = typeof window === "object";
 ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
 ENVIRONMENT_IS_NODE = typeof process === "object" && typeof require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
 ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}
if (ENVIRONMENT_IS_NODE) {
 if (!Module["print"]) Module["print"] = console.log;
 if (!Module["printErr"]) Module["printErr"] = console.warn;
 var nodeFS;
 var nodePath;
 Module["read"] = function read(filename, binary) {
  if (!nodeFS) nodeFS = require("fs");
  if (!nodePath) nodePath = require("path");
  filename = nodePath["normalize"](filename);
  var ret = nodeFS["readFileSync"](filename);
  if (!ret && filename != nodePath["resolve"](filename)) {
   filename = path.join(__dirname, "..", "src", filename);
   ret = nodeFS["readFileSync"](filename);
  }
  if (ret && !binary) ret = ret.toString();
  return ret;
 };
 Module["readBinary"] = function readBinary(filename) {
  var ret = Module["read"](filename, true);
  if (!ret.buffer) {
   ret = new Uint8Array(ret);
  }
  assert(ret.buffer);
  return ret;
 };
 Module["load"] = function load(f) {
  globalEval(read(f));
 };
 if (!Module["thisProgram"]) {
  if (process["argv"].length > 1) {
   Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
  } else {
   Module["thisProgram"] = "unknown-program";
  }
 }
 Module["arguments"] = process["argv"].slice(2);
 if (typeof module !== "undefined") {
  module["exports"] = Module;
 }
 process["on"]("uncaughtException", (function(ex) {
  if (!(ex instanceof ExitStatus)) {
   throw ex;
  }
 }));
 Module["inspect"] = (function() {
  return "[Emscripten Module object]";
 });
} else if (ENVIRONMENT_IS_SHELL) {
 if (!Module["print"]) Module["print"] = print;
 if (typeof printErr != "undefined") Module["printErr"] = printErr;
 if (typeof read != "undefined") {
  Module["read"] = read;
 } else {
  Module["read"] = function read() {
   throw "no read() available (jsc?)";
  };
 }
 Module["readBinary"] = function readBinary(f) {
  if (typeof readbuffer === "function") {
   return new Uint8Array(readbuffer(f));
  }
  var data = read(f, "binary");
  assert(typeof data === "object");
  return data;
 };
 if (typeof scriptArgs != "undefined") {
  Module["arguments"] = scriptArgs;
 } else if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 Module["read"] = function read(url) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, false);
  xhr.send(null);
  return xhr.responseText;
 };
 Module["readAsync"] = function readAsync(url, onload, onerror) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, true);
  xhr.responseType = "arraybuffer";
  xhr.onload = function xhr_onload() {
   if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
    onload(xhr.response);
   } else {
    onerror();
   }
  };
  xhr.onerror = onerror;
  xhr.send(null);
 };
 if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
 if (typeof console !== "undefined") {
  if (!Module["print"]) Module["print"] = function print(x) {
   console.log(x);
  };
  if (!Module["printErr"]) Module["printErr"] = function printErr(x) {
   console.warn(x);
  };
 } else {
  var TRY_USE_DUMP = false;
  if (!Module["print"]) Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? (function(x) {
   dump(x);
  }) : (function(x) {});
 }
 if (ENVIRONMENT_IS_WORKER) {
  Module["load"] = importScripts;
 }
 if (typeof Module["setWindowTitle"] === "undefined") {
  Module["setWindowTitle"] = (function(title) {
   document.title = title;
  });
 }
} else {
 throw "Unknown runtime environment. Where are we?";
}
function globalEval(x) {
 eval.call(null, x);
}
if (!Module["load"] && Module["read"]) {
 Module["load"] = function load(f) {
  globalEval(Module["read"](f));
 };
}
if (!Module["print"]) {
 Module["print"] = (function() {});
}
if (!Module["printErr"]) {
 Module["printErr"] = Module["print"];
}
if (!Module["arguments"]) {
 Module["arguments"] = [];
}
if (!Module["thisProgram"]) {
 Module["thisProgram"] = "./this.program";
}
Module.print = Module["print"];
Module.printErr = Module["printErr"];
Module["preRun"] = [];
Module["postRun"] = [];
for (var key in moduleOverrides) {
 if (moduleOverrides.hasOwnProperty(key)) {
  Module[key] = moduleOverrides[key];
 }
}
moduleOverrides = undefined;
integrateWasmJS(Module);
var Runtime = {
 setTempRet0: (function(value) {
  tempRet0 = value;
 }),
 getTempRet0: (function() {
  return tempRet0;
 }),
 stackSave: (function() {
  return STACKTOP;
 }),
 stackRestore: (function(stackTop) {
  STACKTOP = stackTop;
 }),
 getNativeTypeSize: (function(type) {
  switch (type) {
  case "i1":
  case "i8":
   return 1;
  case "i16":
   return 2;
  case "i32":
   return 4;
  case "i64":
   return 8;
  case "float":
   return 4;
  case "double":
   return 8;
  default:
   {
    if (type[type.length - 1] === "*") {
     return Runtime.QUANTUM_SIZE;
    } else if (type[0] === "i") {
     var bits = parseInt(type.substr(1));
     assert(bits % 8 === 0);
     return bits / 8;
    } else {
     return 0;
    }
   }
  }
 }),
 getNativeFieldSize: (function(type) {
  return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
 }),
 STACK_ALIGN: 16,
 prepVararg: (function(ptr, type) {
  if (type === "double" || type === "i64") {
   if (ptr & 7) {
    assert((ptr & 7) === 4);
    ptr += 4;
   }
  } else {
   assert((ptr & 3) === 0);
  }
  return ptr;
 }),
 getAlignSize: (function(type, size, vararg) {
  if (!vararg && (type == "i64" || type == "double")) return 8;
  if (!type) return Math.min(size, 8);
  return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
 }),
 dynCall: (function(sig, ptr, args) {
  if (args && args.length) {
   if (!args.splice) args = Array.prototype.slice.call(args);
   args.splice(0, 0, ptr);
   return Module["dynCall_" + sig].apply(null, args);
  } else {
   return Module["dynCall_" + sig].call(null, ptr);
  }
 }),
 functionPointers: [],
 addFunction: (function(func) {
  for (var i = 0; i < Runtime.functionPointers.length; i++) {
   if (!Runtime.functionPointers[i]) {
    Runtime.functionPointers[i] = func;
    return 2 * (1 + i);
   }
  }
  throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
 }),
 removeFunction: (function(index) {
  Runtime.functionPointers[(index - 2) / 2] = null;
 }),
 warnOnce: (function(text) {
  if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
  if (!Runtime.warnOnce.shown[text]) {
   Runtime.warnOnce.shown[text] = 1;
   Module.printErr(text);
  }
 }),
 funcWrappers: {},
 getFuncWrapper: (function(func, sig) {
  assert(sig);
  if (!Runtime.funcWrappers[sig]) {
   Runtime.funcWrappers[sig] = {};
  }
  var sigCache = Runtime.funcWrappers[sig];
  if (!sigCache[func]) {
   sigCache[func] = function dynCall_wrapper() {
    return Runtime.dynCall(sig, func, arguments);
   };
  }
  return sigCache[func];
 }),
 getCompilerSetting: (function(name) {
  throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
 }),
 stackAlloc: (function(size) {
  var ret = STACKTOP;
  STACKTOP = STACKTOP + size | 0;
  STACKTOP = STACKTOP + 15 & -16;
  return ret;
 }),
 staticAlloc: (function(size) {
  var ret = STATICTOP;
  STATICTOP = STATICTOP + size | 0;
  STATICTOP = STATICTOP + 15 & -16;
  return ret;
 }),
 dynamicAlloc: (function(size) {
  var ret = DYNAMICTOP;
  DYNAMICTOP = DYNAMICTOP + size | 0;
  DYNAMICTOP = DYNAMICTOP + 15 & -16;
  if (DYNAMICTOP >= TOTAL_MEMORY) {
   var success = enlargeMemory();
   if (!success) {
    DYNAMICTOP = ret;
    return 0;
   }
  }
  return ret;
 }),
 alignMemory: (function(size, quantum) {
  var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
  return ret;
 }),
 makeBigInt: (function(low, high, unsigned) {
  var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * +4294967296 : +(low >>> 0) + +(high | 0) * +4294967296;
  return ret;
 }),
 GLOBAL_BASE: 1024,
 QUANTUM_SIZE: 4,
 __dummy__: 0
};
Module["Runtime"] = Runtime;
var ABORT = false;
var EXITSTATUS = 0;
function assert(condition, text) {
 if (!condition) {
  abort("Assertion failed: " + text);
 }
}
function getCFunc(ident) {
 var func = Module["_" + ident];
 if (!func) {
  try {
   func = eval("_" + ident);
  } catch (e) {}
 }
 assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");
 return func;
}
var cwrap, ccall;
((function() {
 var JSfuncs = {
  "stackSave": (function() {
   Runtime.stackSave();
  }),
  "stackRestore": (function() {
   Runtime.stackRestore();
  }),
  "arrayToC": (function(arr) {
   var ret = Runtime.stackAlloc(arr.length);
   writeArrayToMemory(arr, ret);
   return ret;
  }),
  "stringToC": (function(str) {
   var ret = 0;
   if (str !== null && str !== undefined && str !== 0) {
    ret = Runtime.stackAlloc((str.length << 2) + 1);
    writeStringToMemory(str, ret);
   }
   return ret;
  })
 };
 var toC = {
  "string": JSfuncs["stringToC"],
  "array": JSfuncs["arrayToC"]
 };
 ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  if (args) {
   for (var i = 0; i < args.length; i++) {
    var converter = toC[argTypes[i]];
    if (converter) {
     if (stack === 0) stack = Runtime.stackSave();
     cArgs[i] = converter(args[i]);
    } else {
     cArgs[i] = args[i];
    }
   }
  }
  var ret = func.apply(null, cArgs);
  if (returnType === "string") ret = Pointer_stringify(ret);
  if (stack !== 0) {
   if (opts && opts.async) {
    EmterpreterAsync.asyncFinalizers.push((function() {
     Runtime.stackRestore(stack);
    }));
    return;
   }
   Runtime.stackRestore(stack);
  }
  return ret;
 };
 var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
 function parseJSFunc(jsfunc) {
  var parsed = jsfunc.toString().match(sourceRegex).slice(1);
  return {
   arguments: parsed[0],
   body: parsed[1],
   returnValue: parsed[2]
  };
 }
 var JSsource = null;
 function ensureJSsource() {
  if (!JSsource) {
   JSsource = {};
   for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
     JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
   }
  }
 }
 cwrap = function cwrap(ident, returnType, argTypes) {
  argTypes = argTypes || [];
  var cfunc = getCFunc(ident);
  var numericArgs = argTypes.every((function(type) {
   return type === "number";
  }));
  var numericRet = returnType !== "string";
  if (numericRet && numericArgs) {
   return cfunc;
  }
  var argNames = argTypes.map((function(x, i) {
   return "$" + i;
  }));
  var funcstr = "(function(" + argNames.join(",") + ") {";
  var nargs = argTypes.length;
  if (!numericArgs) {
   ensureJSsource();
   funcstr += "var stack = " + JSsource["stackSave"].body + ";";
   for (var i = 0; i < nargs; i++) {
    var arg = argNames[i], type = argTypes[i];
    if (type === "number") continue;
    var convertCode = JSsource[type + "ToC"];
    funcstr += "var " + convertCode.arguments + " = " + arg + ";";
    funcstr += convertCode.body + ";";
    funcstr += arg + "=(" + convertCode.returnValue + ");";
   }
  }
  var cfuncname = parseJSFunc((function() {
   return cfunc;
  })).returnValue;
  funcstr += "var ret = " + cfuncname + "(" + argNames.join(",") + ");";
  if (!numericRet) {
   var strgfy = parseJSFunc((function() {
    return Pointer_stringify;
   })).returnValue;
   funcstr += "ret = " + strgfy + "(ret);";
  }
  if (!numericArgs) {
   ensureJSsource();
   funcstr += JSsource["stackRestore"].body.replace("()", "(stack)") + ";";
  }
  funcstr += "return ret})";
  return eval(funcstr);
 };
}))();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;
function setValue(ptr, value, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  HEAP8[ptr >> 0] = value;
  break;
 case "i8":
  HEAP8[ptr >> 0] = value;
  break;
 case "i16":
  HEAP16[ptr >> 1] = value;
  break;
 case "i32":
  HEAP32[ptr >> 2] = value;
  break;
 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
  break;
 case "float":
  HEAPF32[ptr >> 2] = value;
  break;
 case "double":
  HEAPF64[ptr >> 3] = value;
  break;
 default:
  abort("invalid type for setValue: " + type);
 }
}
Module["setValue"] = setValue;
function getValue(ptr, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  return HEAP8[ptr >> 0];
 case "i8":
  return HEAP8[ptr >> 0];
 case "i16":
  return HEAP16[ptr >> 1];
 case "i32":
  return HEAP32[ptr >> 2];
 case "i64":
  return HEAP32[ptr >> 2];
 case "float":
  return HEAPF32[ptr >> 2];
 case "double":
  return HEAPF64[ptr >> 3];
 default:
  abort("invalid type for setValue: " + type);
 }
 return null;
}
Module["getValue"] = getValue;
var ALLOC_NORMAL = 0;
var ALLOC_STACK = 1;
var ALLOC_STATIC = 2;
var ALLOC_DYNAMIC = 3;
var ALLOC_NONE = 4;
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;
function allocate(slab, types, allocator, ptr) {
 var zeroinit, size;
 if (typeof slab === "number") {
  zeroinit = true;
  size = slab;
 } else {
  zeroinit = false;
  size = slab.length;
 }
 var singleType = typeof types === "string" ? types : null;
 var ret;
 if (allocator == ALLOC_NONE) {
  ret = ptr;
 } else {
  ret = [ typeof _malloc === "function" ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc ][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
 }
 if (zeroinit) {
  var ptr = ret, stop;
  assert((ret & 3) == 0);
  stop = ret + (size & ~3);
  for (; ptr < stop; ptr += 4) {
   HEAP32[ptr >> 2] = 0;
  }
  stop = ret + size;
  while (ptr < stop) {
   HEAP8[ptr++ >> 0] = 0;
  }
  return ret;
 }
 if (singleType === "i8") {
  if (slab.subarray || slab.slice) {
   HEAPU8.set(slab, ret);
  } else {
   HEAPU8.set(new Uint8Array(slab), ret);
  }
  return ret;
 }
 var i = 0, type, typeSize, previousType;
 while (i < size) {
  var curr = slab[i];
  if (typeof curr === "function") {
   curr = Runtime.getFunctionIndex(curr);
  }
  type = singleType || types[i];
  if (type === 0) {
   i++;
   continue;
  }
  if (type == "i64") type = "i32";
  setValue(ret + i, curr, type);
  if (previousType !== type) {
   typeSize = Runtime.getNativeTypeSize(type);
   previousType = type;
  }
  i += typeSize;
 }
 return ret;
}
Module["allocate"] = allocate;
function getMemory(size) {
 if (!staticSealed) return Runtime.staticAlloc(size);
 if (typeof _sbrk !== "undefined" && !_sbrk.called || !runtimeInitialized) return Runtime.dynamicAlloc(size);
 return _malloc(size);
}
Module["getMemory"] = getMemory;
function Pointer_stringify(ptr, length) {
 if (length === 0 || !ptr) return "";
 var hasUtf = 0;
 var t;
 var i = 0;
 while (1) {
  t = HEAPU8[ptr + i >> 0];
  hasUtf |= t;
  if (t == 0 && !length) break;
  i++;
  if (length && i == length) break;
 }
 if (!length) length = i;
 var ret = "";
 if (hasUtf < 128) {
  var MAX_CHUNK = 1024;
  var curr;
  while (length > 0) {
   curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
   ret = ret ? ret + curr : curr;
   ptr += MAX_CHUNK;
   length -= MAX_CHUNK;
  }
  return ret;
 }
 return Module["UTF8ToString"](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;
function AsciiToString(ptr) {
 var str = "";
 while (1) {
  var ch = HEAP8[ptr++ >> 0];
  if (!ch) return str;
  str += String.fromCharCode(ch);
 }
}
Module["AsciiToString"] = AsciiToString;
function stringToAscii(str, outPtr) {
 return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;
function UTF8ArrayToString(u8Array, idx) {
 var u0, u1, u2, u3, u4, u5;
 var str = "";
 while (1) {
  u0 = u8Array[idx++];
  if (!u0) return str;
  if (!(u0 & 128)) {
   str += String.fromCharCode(u0);
   continue;
  }
  u1 = u8Array[idx++] & 63;
  if ((u0 & 224) == 192) {
   str += String.fromCharCode((u0 & 31) << 6 | u1);
   continue;
  }
  u2 = u8Array[idx++] & 63;
  if ((u0 & 240) == 224) {
   u0 = (u0 & 15) << 12 | u1 << 6 | u2;
  } else {
   u3 = u8Array[idx++] & 63;
   if ((u0 & 248) == 240) {
    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
   } else {
    u4 = u8Array[idx++] & 63;
    if ((u0 & 252) == 248) {
     u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
    } else {
     u5 = u8Array[idx++] & 63;
     u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
    }
   }
  }
  if (u0 < 65536) {
   str += String.fromCharCode(u0);
  } else {
   var ch = u0 - 65536;
   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
  }
 }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;
function UTF8ToString(ptr) {
 return UTF8ArrayToString(HEAPU8, ptr);
}
Module["UTF8ToString"] = UTF8ToString;
function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   outU8Array[outIdx++] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   outU8Array[outIdx++] = 192 | u >> 6;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   outU8Array[outIdx++] = 224 | u >> 12;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 2097151) {
   if (outIdx + 3 >= endIdx) break;
   outU8Array[outIdx++] = 240 | u >> 18;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 67108863) {
   if (outIdx + 4 >= endIdx) break;
   outU8Array[outIdx++] = 248 | u >> 24;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else {
   if (outIdx + 5 >= endIdx) break;
   outU8Array[outIdx++] = 252 | u >> 30;
   outU8Array[outIdx++] = 128 | u >> 24 & 63;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  }
 }
 outU8Array[outIdx] = 0;
 return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;
function stringToUTF8(str, outPtr, maxBytesToWrite) {
 return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;
function lengthBytesUTF8(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   ++len;
  } else if (u <= 2047) {
   len += 2;
  } else if (u <= 65535) {
   len += 3;
  } else if (u <= 2097151) {
   len += 4;
  } else if (u <= 67108863) {
   len += 5;
  } else {
   len += 6;
  }
 }
 return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;
function demangle(func) {
 var hasLibcxxabi = !!Module["___cxa_demangle"];
 if (hasLibcxxabi) {
  try {
   var buf = _malloc(func.length);
   writeStringToMemory(func.substr(1), buf);
   var status = _malloc(4);
   var ret = Module["___cxa_demangle"](buf, 0, 0, status);
   if (getValue(status, "i32") === 0 && ret) {
    return Pointer_stringify(ret);
   }
  } catch (e) {
   return func;
  } finally {
   if (buf) _free(buf);
   if (status) _free(status);
   if (ret) _free(ret);
  }
 }
 Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
 return func;
}
function demangleAll(text) {
 return text.replace(/__Z[\w\d_]+/g, (function(x) {
  var y = demangle(x);
  return x === y ? x : x + " [" + y + "]";
 }));
}
function jsStackTrace() {
 var err = new Error;
 if (!err.stack) {
  try {
   throw new Error(0);
  } catch (e) {
   err = e;
  }
  if (!err.stack) {
   return "(no stack trace available)";
  }
 }
 return err.stack.toString();
}
function stackTrace() {
 return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
 if (x % 4096 > 0) {
  x += 4096 - x % 4096;
 }
 return x;
}
var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
function updateGlobalBuffer(buf) {
 Module["buffer"] = buffer = buf;
}
function updateGlobalBufferViews() {
 Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
 Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
 Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
}
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false;
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0;
var DYNAMIC_BASE = 0, DYNAMICTOP = 0;
function abortOnCannotGrowMemory() {
 abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + TOTAL_MEMORY + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
}
function enlargeMemory() {
 abortOnCannotGrowMemory();
}
var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 67108864;
var totalMemory = 64 * 1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
 if (totalMemory < 16 * 1024 * 1024) {
  totalMemory *= 2;
 } else {
  totalMemory += 16 * 1024 * 1024;
 }
}
if (totalMemory !== TOTAL_MEMORY) {
 TOTAL_MEMORY = totalMemory;
}
if (Module["buffer"]) {
 buffer = Module["buffer"];
} else {
 buffer = new ArrayBuffer(TOTAL_MEMORY);
}
updateGlobalBufferViews();
HEAP32[0] = 255;
if (HEAPU8[0] !== 255 || HEAPU8[3] !== 0) throw "Typed arrays 2 must be run on a little-endian system";
Module["HEAP"] = HEAP;
Module["buffer"] = buffer;
Module["HEAP8"] = HEAP8;
Module["HEAP16"] = HEAP16;
Module["HEAP32"] = HEAP32;
Module["HEAPU8"] = HEAPU8;
Module["HEAPU16"] = HEAPU16;
Module["HEAPU32"] = HEAPU32;
Module["HEAPF32"] = HEAPF32;
Module["HEAPF64"] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
 while (callbacks.length > 0) {
  var callback = callbacks.shift();
  if (typeof callback == "function") {
   callback();
   continue;
  }
  var func = callback.func;
  if (typeof func === "number") {
   if (callback.arg === undefined) {
    Runtime.dynCall("v", func);
   } else {
    Runtime.dynCall("vi", func, [ callback.arg ]);
   }
  } else {
   func(callback.arg === undefined ? null : callback.arg);
  }
 }
}
var __ATPRERUN__ = [];
var __ATINIT__ = [];
var __ATMAIN__ = [];
var __ATEXIT__ = [];
var __ATPOSTRUN__ = [];
var runtimeInitialized = false;
var runtimeExited = false;
function preRun() {
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
 if (runtimeInitialized) return;
 runtimeInitialized = true;
 callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
 callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
 callRuntimeCallbacks(__ATEXIT__);
 runtimeExited = true;
}
function postRun() {
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;
function addOnInit(cb) {
 __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;
function addOnPreMain(cb) {
 __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;
function addOnExit(cb) {
 __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;
function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;
function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}
Module["intArrayFromString"] = intArrayFromString;
function intArrayToString(array) {
 var ret = [];
 for (var i = 0; i < array.length; i++) {
  var chr = array[i];
  if (chr > 255) {
   chr &= 255;
  }
  ret.push(String.fromCharCode(chr));
 }
 return ret.join("");
}
Module["intArrayToString"] = intArrayToString;
function writeStringToMemory(string, buffer, dontAddNull) {
 var array = intArrayFromString(string, dontAddNull);
 var i = 0;
 while (i < array.length) {
  var chr = array[i];
  HEAP8[buffer + i >> 0] = chr;
  i = i + 1;
 }
}
Module["writeStringToMemory"] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
 for (var i = 0; i < array.length; i++) {
  HEAP8[buffer++ >> 0] = array[i];
 }
}
Module["writeArrayToMemory"] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
 for (var i = 0; i < str.length; ++i) {
  HEAP8[buffer++ >> 0] = str.charCodeAt(i);
 }
 if (!dontAddNull) HEAP8[buffer >> 0] = 0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;
if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5) Math["imul"] = function imul(a, b) {
 var ah = a >>> 16;
 var al = a & 65535;
 var bh = b >>> 16;
 var bl = b & 65535;
 return al * bl + (ah * bl + al * bh << 16) | 0;
};
Math.imul = Math["imul"];
if (!Math["clz32"]) Math["clz32"] = (function(x) {
 x = x >>> 0;
 for (var i = 0; i < 32; i++) {
  if (x & 1 << 31 - i) return i;
 }
 return 32;
});
Math.clz32 = Math["clz32"];
if (!Math["trunc"]) Math["trunc"] = (function(x) {
 return x < 0 ? Math.ceil(x) : Math.floor(x);
});
Math.trunc = Math["trunc"];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null;
function getUniqueRunDependency(id) {
 return id;
}
function addRunDependency(id) {
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
}
Module["addRunDependency"] = addRunDependency;
function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}
Module["removeRunDependency"] = removeRunDependency;
Module["preloadedImages"] = {};
Module["preloadedAudios"] = {};
var memoryInitializer = null;
var ASM_CONSTS = [ (function($0, $1) {
 {
  Module.printErr("bad name in getProcAddress: " + [ Pointer_stringify($0), Pointer_stringify($1) ]);
 }
}) ];
function _emscripten_asm_const_iii(code, a0, a1) {
 return ASM_CONSTS[code](a0, a1);
}
STATIC_BASE = 1024;
STATICTOP = STATIC_BASE + 756160;
__ATINIT__.push({
 func: (function() {
  __GLOBAL__sub_I_world_cpp();
 })
}, {
 func: (function() {
  ___cxx_global_var_init_180();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_rendermodel_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_renderparticles_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_rendersky_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_rendertext_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_renderva_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_server_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_serverbrowser_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_shader_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_shadowmap_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_sound_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_texture_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_water_cpp();
 })
}, {
 func: (function() {
  ___cxx_global_var_init_179();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_worldio_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_ai_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_client_cpp_2999();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_entities_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_fps_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_monster_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_movable_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_render_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_scoreboard_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_server_cpp_3934();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_waypoint_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_weapon_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_lightmap_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_stream_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_zip_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_3dgui_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_blend_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_blob_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_client_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_command_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_console_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_cubeloader_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_decal_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_dynlight_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_glare_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_grass_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_crypto_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_main_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_material_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_menus_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_movie_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_normal_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_octa_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_octaedit_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_octarender_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_physics_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_pvs_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_rendergl_cpp();
 })
}, {
 func: (function() {
  ___cxx_global_var_init_178();
 })
});
memoryInitializer = "bb.js.mem";
var STATIC_BUMP = 756160;
var tempDoublePtr = STATICTOP;
STATICTOP += 16;
var GL = {
 counter: 1,
 lastError: 0,
 buffers: [],
 mappedBuffers: {},
 programs: [],
 framebuffers: [],
 renderbuffers: [],
 textures: [],
 uniforms: [],
 shaders: [],
 vaos: [],
 contexts: [],
 currentContext: null,
 currArrayBuffer: 0,
 currElementArrayBuffer: 0,
 byteSizeByTypeRoot: 5120,
 byteSizeByType: [ 1, 1, 2, 2, 4, 4, 4, 2, 3, 4, 8 ],
 programInfos: {},
 stringCache: {},
 packAlignment: 4,
 unpackAlignment: 4,
 init: (function() {
  GL.createLog2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);
  GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
  for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
   GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i + 1);
  }
 }),
 recordError: function recordError(errorCode) {
  if (!GL.lastError) {
   GL.lastError = errorCode;
  }
 },
 getNewId: (function(table) {
  var ret = GL.counter++;
  for (var i = table.length; i < ret; i++) {
   table[i] = null;
  }
  return ret;
 }),
 MINI_TEMP_BUFFER_SIZE: 256,
 miniTempBuffer: null,
 miniTempBufferViews: [ 0 ],
 MAX_TEMP_BUFFER_SIZE: 2097152,
 numTempVertexBuffersPerSize: 64,
 log2ceilLookup: null,
 createLog2ceilLookup: (function(maxValue) {
  GL.log2ceilLookup = new Uint8Array(maxValue + 1);
  var log2 = 0;
  var pow2 = 1;
  GL.log2ceilLookup[0] = 0;
  for (var i = 1; i <= maxValue; ++i) {
   if (i > pow2) {
    pow2 <<= 1;
    ++log2;
   }
   GL.log2ceilLookup[i] = log2;
  }
 }),
 generateTempBuffers: (function(quads, context) {
  var largestIndex = GL.log2ceilLookup[GL.MAX_TEMP_BUFFER_SIZE];
  context.tempVertexBufferCounters1 = [];
  context.tempVertexBufferCounters2 = [];
  context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex + 1;
  context.tempVertexBuffers1 = [];
  context.tempVertexBuffers2 = [];
  context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex + 1;
  context.tempIndexBuffers = [];
  context.tempIndexBuffers.length = largestIndex + 1;
  for (var i = 0; i <= largestIndex; ++i) {
   context.tempIndexBuffers[i] = null;
   context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;
   var ringbufferLength = GL.numTempVertexBuffersPerSize;
   context.tempVertexBuffers1[i] = [];
   context.tempVertexBuffers2[i] = [];
   var ringbuffer1 = context.tempVertexBuffers1[i];
   var ringbuffer2 = context.tempVertexBuffers2[i];
   ringbuffer1.length = ringbuffer2.length = ringbufferLength;
   for (var j = 0; j < ringbufferLength; ++j) {
    ringbuffer1[j] = ringbuffer2[j] = null;
   }
  }
  if (quads) {
   context.tempQuadIndexBuffer = GLctx.createBuffer();
   context.GLctx.bindBuffer(context.GLctx.ELEMENT_ARRAY_BUFFER, context.tempQuadIndexBuffer);
   var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;
   var quadIndexes = new Uint16Array(numIndexes);
   var i = 0, v = 0;
   while (1) {
    quadIndexes[i++] = v;
    if (i >= numIndexes) break;
    quadIndexes[i++] = v + 1;
    if (i >= numIndexes) break;
    quadIndexes[i++] = v + 2;
    if (i >= numIndexes) break;
    quadIndexes[i++] = v;
    if (i >= numIndexes) break;
    quadIndexes[i++] = v + 2;
    if (i >= numIndexes) break;
    quadIndexes[i++] = v + 3;
    if (i >= numIndexes) break;
    v += 4;
   }
   context.GLctx.bufferData(context.GLctx.ELEMENT_ARRAY_BUFFER, quadIndexes, context.GLctx.STATIC_DRAW);
   context.GLctx.bindBuffer(context.GLctx.ELEMENT_ARRAY_BUFFER, null);
  }
 }),
 getTempVertexBuffer: function getTempVertexBuffer(sizeBytes) {
  var idx = GL.log2ceilLookup[sizeBytes];
  var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];
  var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];
  GL.currentContext.tempVertexBufferCounters1[idx] = GL.currentContext.tempVertexBufferCounters1[idx] + 1 & GL.numTempVertexBuffersPerSize - 1;
  var vbo = ringbuffer[nextFreeBufferIndex];
  if (vbo) {
   return vbo;
  }
  var prevVBO = GLctx.getParameter(GLctx.ARRAY_BUFFER_BINDING);
  ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();
  GLctx.bindBuffer(GLctx.ARRAY_BUFFER, ringbuffer[nextFreeBufferIndex]);
  GLctx.bufferData(GLctx.ARRAY_BUFFER, 1 << idx, GLctx.DYNAMIC_DRAW);
  GLctx.bindBuffer(GLctx.ARRAY_BUFFER, prevVBO);
  return ringbuffer[nextFreeBufferIndex];
 },
 getTempIndexBuffer: function getTempIndexBuffer(sizeBytes) {
  var idx = GL.log2ceilLookup[sizeBytes];
  var ibo = GL.currentContext.tempIndexBuffers[idx];
  if (ibo) {
   return ibo;
  }
  var prevIBO = GLctx.getParameter(GLctx.ELEMENT_ARRAY_BUFFER_BINDING);
  GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();
  GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.currentContext.tempIndexBuffers[idx]);
  GLctx.bufferData(GLctx.ELEMENT_ARRAY_BUFFER, 1 << idx, GLctx.DYNAMIC_DRAW);
  GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, prevIBO);
  return GL.currentContext.tempIndexBuffers[idx];
 },
 newRenderingFrameStarted: function newRenderingFrameStarted() {
  if (!GL.currentContext) {
   return;
  }
  var vb = GL.currentContext.tempVertexBuffers1;
  GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;
  GL.currentContext.tempVertexBuffers2 = vb;
  vb = GL.currentContext.tempVertexBufferCounters1;
  GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;
  GL.currentContext.tempVertexBufferCounters2 = vb;
  var largestIndex = GL.log2ceilLookup[GL.MAX_TEMP_BUFFER_SIZE];
  for (var i = 0; i <= largestIndex; ++i) {
   GL.currentContext.tempVertexBufferCounters1[i] = 0;
  }
 },
 findToken: (function(source, token) {
  function isIdentChar(ch) {
   if (ch >= 48 && ch <= 57) return true;
   if (ch >= 65 && ch <= 90) return true;
   if (ch >= 97 && ch <= 122) return true;
   return false;
  }
  var i = -1;
  do {
   i = source.indexOf(token, i + 1);
   if (i < 0) {
    break;
   }
   if (i > 0 && isIdentChar(source[i - 1])) {
    continue;
   }
   i += token.length;
   if (i < source.length - 1 && isIdentChar(source[i + 1])) {
    continue;
   }
   return true;
  } while (true);
  return false;
 }),
 getSource: (function(shader, count, string, length) {
  var source = "";
  for (var i = 0; i < count; ++i) {
   var frag;
   if (length) {
    var len = HEAP32[length + i * 4 >> 2];
    if (len < 0) {
     frag = Pointer_stringify(HEAP32[string + i * 4 >> 2]);
    } else {
     frag = Pointer_stringify(HEAP32[string + i * 4 >> 2], len);
    }
   } else {
    frag = Pointer_stringify(HEAP32[string + i * 4 >> 2]);
   }
   source += frag;
  }
  type = GLctx.getShaderParameter(GL.shaders[shader], 35663);
  if (type == 35632) {
   if (GL.findToken(source, "dFdx") || GL.findToken(source, "dFdy") || GL.findToken(source, "fwidth")) {
    source = "#extension GL_OES_standard_derivatives : enable\n" + source;
    var extension = GLctx.getExtension("OES_standard_derivatives");
   }
  }
  return source;
 }),
 createContext: (function(canvas, webGLContextAttributes) {
  if (typeof webGLContextAttributes.majorVersion === "undefined" && typeof webGLContextAttributes.minorVersion === "undefined") {
   webGLContextAttributes.majorVersion = 1;
   webGLContextAttributes.minorVersion = 0;
  }
  var ctx;
  var errorInfo = "?";
  function onContextCreationError(event) {
   errorInfo = event.statusMessage || errorInfo;
  }
  try {
   canvas.addEventListener("webglcontextcreationerror", onContextCreationError, false);
   try {
    if (webGLContextAttributes.majorVersion == 1 && webGLContextAttributes.minorVersion == 0) {
     ctx = canvas.getContext("webgl", webGLContextAttributes) || canvas.getContext("experimental-webgl", webGLContextAttributes);
    } else if (webGLContextAttributes.majorVersion == 2 && webGLContextAttributes.minorVersion == 0) {
     ctx = canvas.getContext("webgl2", webGLContextAttributes) || canvas.getContext("experimental-webgl2", webGLContextAttributes);
    } else {
     throw "Unsupported WebGL context version " + majorVersion + "." + minorVersion + "!";
    }
   } finally {
    canvas.removeEventListener("webglcontextcreationerror", onContextCreationError, false);
   }
   if (!ctx) throw ":(";
  } catch (e) {
   Module.print("Could not create canvas: " + [ errorInfo, e, JSON.stringify(webGLContextAttributes) ]);
   return 0;
  }
  if (!ctx) return 0;
  return GL.registerContext(ctx, webGLContextAttributes);
 }),
 registerContext: (function(ctx, webGLContextAttributes) {
  var handle = GL.getNewId(GL.contexts);
  var context = {
   handle: handle,
   version: webGLContextAttributes.majorVersion,
   GLctx: ctx
  };
  if (ctx.canvas) ctx.canvas.GLctxObject = context;
  GL.contexts[handle] = context;
  if (typeof webGLContextAttributes["enableExtensionsByDefault"] === "undefined" || webGLContextAttributes.enableExtensionsByDefault) {
   GL.initExtensions(context);
  }
  return handle;
 }),
 makeContextCurrent: (function(contextHandle) {
  var context = GL.contexts[contextHandle];
  if (!context) return false;
  GLctx = Module.ctx = context.GLctx;
  GL.currentContext = context;
  return true;
 }),
 getContext: (function(contextHandle) {
  return GL.contexts[contextHandle];
 }),
 deleteContext: (function(contextHandle) {
  if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;
  if (typeof JSEvents === "object") JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);
  if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined;
  GL.contexts[contextHandle] = null;
 }),
 initExtensions: (function(context) {
  if (!context) context = GL.currentContext;
  if (context.initExtensionsDone) return;
  context.initExtensionsDone = true;
  var GLctx = context.GLctx;
  context.maxVertexAttribs = GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);
  context.compressionExt = GLctx.getExtension("WEBGL_compressed_texture_s3tc");
  context.anisotropicExt = GLctx.getExtension("EXT_texture_filter_anisotropic");
  if (context.version < 2) {
   var instancedArraysExt = GLctx.getExtension("ANGLE_instanced_arrays");
   if (instancedArraysExt) {
    GLctx["vertexAttribDivisor"] = (function(index, divisor) {
     instancedArraysExt["vertexAttribDivisorANGLE"](index, divisor);
    });
    GLctx["drawArraysInstanced"] = (function(mode, first, count, primcount) {
     instancedArraysExt["drawArraysInstancedANGLE"](mode, first, count, primcount);
    });
    GLctx["drawElementsInstanced"] = (function(mode, count, type, indices, primcount) {
     instancedArraysExt["drawElementsInstancedANGLE"](mode, count, type, indices, primcount);
    });
   }
   var vaoExt = GLctx.getExtension("OES_vertex_array_object");
   if (vaoExt) {
    GLctx["createVertexArray"] = (function() {
     return vaoExt["createVertexArrayOES"]();
    });
    GLctx["deleteVertexArray"] = (function(vao) {
     vaoExt["deleteVertexArrayOES"](vao);
    });
    GLctx["bindVertexArray"] = (function(vao) {
     vaoExt["bindVertexArrayOES"](vao);
    });
    GLctx["isVertexArray"] = (function(vao) {
     return vaoExt["isVertexArrayOES"](vao);
    });
   }
   var drawBuffersExt = GLctx.getExtension("WEBGL_draw_buffers");
   if (drawBuffersExt) {
    GLctx["drawBuffers"] = (function(n, bufs) {
     drawBuffersExt["drawBuffersWEBGL"](n, bufs);
    });
   }
  }
  var automaticallyEnabledExtensions = [ "OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives", "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture", "OES_element_index_uint", "EXT_texture_filter_anisotropic", "ANGLE_instanced_arrays", "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_compressed_texture_atc", "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float", "EXT_frag_depth", "EXT_sRGB", "WEBGL_draw_buffers", "WEBGL_shared_resources", "EXT_shader_texture_lod" ];
  var exts = GLctx.getSupportedExtensions();
  if (exts && exts.length > 0) {
   GLctx.getSupportedExtensions().forEach((function(ext) {
    if (automaticallyEnabledExtensions.indexOf(ext) != -1) {
     GLctx.getExtension(ext);
    }
   }));
  }
 }),
 populateUniformTable: (function(program) {
  var p = GL.programs[program];
  GL.programInfos[program] = {
   uniforms: {},
   maxUniformLength: 0,
   maxAttributeLength: -1
  };
  var ptable = GL.programInfos[program];
  var utable = ptable.uniforms;
  var numUniforms = GLctx.getProgramParameter(p, GLctx.ACTIVE_UNIFORMS);
  for (var i = 0; i < numUniforms; ++i) {
   var u = GLctx.getActiveUniform(p, i);
   var name = u.name;
   ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length + 1);
   if (name.indexOf("]", name.length - 1) !== -1) {
    var ls = name.lastIndexOf("[");
    name = name.slice(0, ls);
   }
   var loc = GLctx.getUniformLocation(p, name);
   var id = GL.getNewId(GL.uniforms);
   utable[name] = [ u.size, id ];
   GL.uniforms[id] = loc;
   for (var j = 1; j < u.size; ++j) {
    var n = name + "[" + j + "]";
    loc = GLctx.getUniformLocation(p, n);
    id = GL.getNewId(GL.uniforms);
    GL.uniforms[id] = loc;
   }
  }
 })
};
function _emscripten_glIsRenderbuffer(renderbuffer) {
 var rb = GL.renderbuffers[renderbuffer];
 if (!rb) return 0;
 return GLctx.isRenderbuffer(rb);
}
var ERRNO_CODES = {
 EPERM: 1,
 ENOENT: 2,
 ESRCH: 3,
 EINTR: 4,
 EIO: 5,
 ENXIO: 6,
 E2BIG: 7,
 ENOEXEC: 8,
 EBADF: 9,
 ECHILD: 10,
 EAGAIN: 11,
 EWOULDBLOCK: 11,
 ENOMEM: 12,
 EACCES: 13,
 EFAULT: 14,
 ENOTBLK: 15,
 EBUSY: 16,
 EEXIST: 17,
 EXDEV: 18,
 ENODEV: 19,
 ENOTDIR: 20,
 EISDIR: 21,
 EINVAL: 22,
 ENFILE: 23,
 EMFILE: 24,
 ENOTTY: 25,
 ETXTBSY: 26,
 EFBIG: 27,
 ENOSPC: 28,
 ESPIPE: 29,
 EROFS: 30,
 EMLINK: 31,
 EPIPE: 32,
 EDOM: 33,
 ERANGE: 34,
 ENOMSG: 42,
 EIDRM: 43,
 ECHRNG: 44,
 EL2NSYNC: 45,
 EL3HLT: 46,
 EL3RST: 47,
 ELNRNG: 48,
 EUNATCH: 49,
 ENOCSI: 50,
 EL2HLT: 51,
 EDEADLK: 35,
 ENOLCK: 37,
 EBADE: 52,
 EBADR: 53,
 EXFULL: 54,
 ENOANO: 55,
 EBADRQC: 56,
 EBADSLT: 57,
 EDEADLOCK: 35,
 EBFONT: 59,
 ENOSTR: 60,
 ENODATA: 61,
 ETIME: 62,
 ENOSR: 63,
 ENONET: 64,
 ENOPKG: 65,
 EREMOTE: 66,
 ENOLINK: 67,
 EADV: 68,
 ESRMNT: 69,
 ECOMM: 70,
 EPROTO: 71,
 EMULTIHOP: 72,
 EDOTDOT: 73,
 EBADMSG: 74,
 ENOTUNIQ: 76,
 EBADFD: 77,
 EREMCHG: 78,
 ELIBACC: 79,
 ELIBBAD: 80,
 ELIBSCN: 81,
 ELIBMAX: 82,
 ELIBEXEC: 83,
 ENOSYS: 38,
 ENOTEMPTY: 39,
 ENAMETOOLONG: 36,
 ELOOP: 40,
 EOPNOTSUPP: 95,
 EPFNOSUPPORT: 96,
 ECONNRESET: 104,
 ENOBUFS: 105,
 EAFNOSUPPORT: 97,
 EPROTOTYPE: 91,
 ENOTSOCK: 88,
 ENOPROTOOPT: 92,
 ESHUTDOWN: 108,
 ECONNREFUSED: 111,
 EADDRINUSE: 98,
 ECONNABORTED: 103,
 ENETUNREACH: 101,
 ENETDOWN: 100,
 ETIMEDOUT: 110,
 EHOSTDOWN: 112,
 EHOSTUNREACH: 113,
 EINPROGRESS: 115,
 EALREADY: 114,
 EDESTADDRREQ: 89,
 EMSGSIZE: 90,
 EPROTONOSUPPORT: 93,
 ESOCKTNOSUPPORT: 94,
 EADDRNOTAVAIL: 99,
 ENETRESET: 102,
 EISCONN: 106,
 ENOTCONN: 107,
 ETOOMANYREFS: 109,
 EUSERS: 87,
 EDQUOT: 122,
 ESTALE: 116,
 ENOTSUP: 95,
 ENOMEDIUM: 123,
 EILSEQ: 84,
 EOVERFLOW: 75,
 ECANCELED: 125,
 ENOTRECOVERABLE: 131,
 EOWNERDEAD: 130,
 ESTRPIPE: 86
};
var ERRNO_MESSAGES = {
 0: "Success",
 1: "Not super-user",
 2: "No such file or directory",
 3: "No such process",
 4: "Interrupted system call",
 5: "I/O error",
 6: "No such device or address",
 7: "Arg list too long",
 8: "Exec format error",
 9: "Bad file number",
 10: "No children",
 11: "No more processes",
 12: "Not enough core",
 13: "Permission denied",
 14: "Bad address",
 15: "Block device required",
 16: "Mount device busy",
 17: "File exists",
 18: "Cross-device link",
 19: "No such device",
 20: "Not a directory",
 21: "Is a directory",
 22: "Invalid argument",
 23: "Too many open files in system",
 24: "Too many open files",
 25: "Not a typewriter",
 26: "Text file busy",
 27: "File too large",
 28: "No space left on device",
 29: "Illegal seek",
 30: "Read only file system",
 31: "Too many links",
 32: "Broken pipe",
 33: "Math arg out of domain of func",
 34: "Math result not representable",
 35: "File locking deadlock error",
 36: "File or path name too long",
 37: "No record locks available",
 38: "Function not implemented",
 39: "Directory not empty",
 40: "Too many symbolic links",
 42: "No message of desired type",
 43: "Identifier removed",
 44: "Channel number out of range",
 45: "Level 2 not synchronized",
 46: "Level 3 halted",
 47: "Level 3 reset",
 48: "Link number out of range",
 49: "Protocol driver not attached",
 50: "No CSI structure available",
 51: "Level 2 halted",
 52: "Invalid exchange",
 53: "Invalid request descriptor",
 54: "Exchange full",
 55: "No anode",
 56: "Invalid request code",
 57: "Invalid slot",
 59: "Bad font file fmt",
 60: "Device not a stream",
 61: "No data (for no delay io)",
 62: "Timer expired",
 63: "Out of streams resources",
 64: "Machine is not on the network",
 65: "Package not installed",
 66: "The object is remote",
 67: "The link has been severed",
 68: "Advertise error",
 69: "Srmount error",
 70: "Communication error on send",
 71: "Protocol error",
 72: "Multihop attempted",
 73: "Cross mount point (not really error)",
 74: "Trying to read unreadable message",
 75: "Value too large for defined data type",
 76: "Given log. name not unique",
 77: "f.d. invalid for this operation",
 78: "Remote address changed",
 79: "Can   access a needed shared lib",
 80: "Accessing a corrupted shared lib",
 81: ".lib section in a.out corrupted",
 82: "Attempting to link in too many libs",
 83: "Attempting to exec a shared library",
 84: "Illegal byte sequence",
 86: "Streams pipe error",
 87: "Too many users",
 88: "Socket operation on non-socket",
 89: "Destination address required",
 90: "Message too long",
 91: "Protocol wrong type for socket",
 92: "Protocol not available",
 93: "Unknown protocol",
 94: "Socket type not supported",
 95: "Not supported",
 96: "Protocol family not supported",
 97: "Address family not supported by protocol family",
 98: "Address already in use",
 99: "Address not available",
 100: "Network interface is not configured",
 101: "Network is unreachable",
 102: "Connection reset by network",
 103: "Connection aborted",
 104: "Connection reset by peer",
 105: "No buffer space available",
 106: "Socket is already connected",
 107: "Socket is not connected",
 108: "Can't send after socket shutdown",
 109: "Too many references",
 110: "Connection timed out",
 111: "Connection refused",
 112: "Host is down",
 113: "Host is unreachable",
 114: "Socket already connected",
 115: "Connection already in progress",
 116: "Stale file handle",
 122: "Quota exceeded",
 123: "No medium (in tape drive)",
 125: "Operation canceled",
 130: "Previous owner died",
 131: "State not recoverable"
};
function ___setErrNo(value) {
 if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value;
 return value;
}
var PATH = {
 splitPath: (function(filename) {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 }),
 normalizeArray: (function(parts, allowAboveRoot) {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (; up--; up) {
    parts.unshift("..");
   }
  }
  return parts;
 }),
 normalize: (function(path) {
  var isAbsolute = path.charAt(0) === "/", trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 }),
 dirname: (function(path) {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 }),
 basename: (function(path) {
  if (path === "/") return "/";
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 }),
 extname: (function(path) {
  return PATH.splitPath(path)[3];
 }),
 join: (function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return PATH.normalize(paths.join("/"));
 }),
 join2: (function(l, r) {
  return PATH.normalize(l + "/" + r);
 }),
 resolve: (function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path !== "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = path.charAt(0) === "/";
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter((function(p) {
   return !!p;
  })), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 }),
 relative: (function(from, to) {
  from = PATH.resolve(from).substr(1);
  to = PATH.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (; start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (; end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 })
};
var TTY = {
 ttys: [],
 init: (function() {}),
 shutdown: (function() {}),
 register: (function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 }),
 stream_ops: {
  open: (function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   stream.tty = tty;
   stream.seekable = false;
  }),
  close: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  flush: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  read: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  }),
  write: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   for (var i = 0; i < length; i++) {
    try {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  })
 },
 default_tty_ops: {
  get_char: (function(tty) {
   if (!tty.input.length) {
    var result = null;
    if (ENVIRONMENT_IS_NODE) {
     var BUFSIZE = 256;
     var buf = new Buffer(BUFSIZE);
     var bytesRead = 0;
     var fd = process.stdin.fd;
     var usingDevice = false;
     try {
      fd = fs.openSync("/dev/stdin", "r");
      usingDevice = true;
     } catch (e) {}
     bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
     if (usingDevice) {
      fs.closeSync(fd);
     }
     if (bytesRead > 0) {
      result = buf.slice(0, bytesRead).toString("utf-8");
     } else {
      result = null;
     }
    } else if (typeof window != "undefined" && typeof window.prompt == "function") {
     result = window.prompt("Input: ");
     if (result !== null) {
      result += "\n";
     }
    } else if (typeof readline == "function") {
     result = readline();
     if (result !== null) {
      result += "\n";
     }
    }
    if (!result) {
     return null;
    }
    tty.input = intArrayFromString(result, true);
   }
   return tty.input.shift();
  }),
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 },
 default_tty1_ops: {
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 }
};
var MEMFS = {
 ops_table: null,
 mount: (function(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 getFileDataAsRegularArray: (function(node) {
  if (node.contents && node.contents.subarray) {
   var arr = [];
   for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
   return arr;
  }
  return node.contents;
 }),
 getFileDataAsTypedArray: (function(node) {
  if (!node.contents) return new Uint8Array;
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 }),
 expandFileStorage: (function(node, newCapacity) {
  if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
   node.contents = MEMFS.getFileDataAsRegularArray(node);
   node.usedBytes = node.contents.length;
  }
  if (!node.contents || node.contents.subarray) {
   var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
   if (prevCapacity >= newCapacity) return;
   var CAPACITY_DOUBLING_MAX = 1024 * 1024;
   newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
   if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
   var oldContents = node.contents;
   node.contents = new Uint8Array(newCapacity);
   if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
   return;
  }
  if (!node.contents && newCapacity > 0) node.contents = [];
  while (node.contents.length < newCapacity) node.contents.push(0);
 }),
 resizeFileStorage: (function(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
   return;
  }
  if (!node.contents || node.contents.subarray) {
   var oldContents = node.contents;
   node.contents = new Uint8Array(new ArrayBuffer(newSize));
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
   return;
  }
  if (!node.contents) node.contents = [];
  if (node.contents.length > newSize) node.contents.length = newSize; else while (node.contents.length < newSize) node.contents.push(0);
  node.usedBytes = newSize;
 }),
 node_ops: {
  getattr: (function(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  }),
  lookup: (function(parent, name) {
   throw FS.genericErrors[ERRNO_CODES.ENOENT];
  }),
  mknod: (function(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  }),
  rename: (function(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   old_node.parent = new_dir;
  }),
  unlink: (function(parent, name) {
   delete parent.contents[name];
  }),
  rmdir: (function(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
   }
   delete parent.contents[name];
  }),
  readdir: (function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  }),
  symlink: (function(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  }),
  readlink: (function(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return node.link;
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   assert(size >= 0);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  }),
  write: (function(stream, buffer, offset, length, position, canOwn) {
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  }),
  allocate: (function(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  }),
  mmap: (function(stream, buffer, offset, length, position, prot, flags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < stream.node.usedBytes) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = _malloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
    }
    buffer.set(contents, ptr);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  }),
  msync: (function(stream, buffer, offset, length, mmapFlags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   if (mmapFlags & 2) {
    return 0;
   }
   var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  })
 }
};
var IDBFS = {
 dbs: {},
 indexedDB: (function() {
  if (typeof indexedDB !== "undefined") return indexedDB;
  var ret = null;
  if (typeof window === "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
  assert(ret, "IDBFS used, but indexedDB not supported");
  return ret;
 }),
 DB_VERSION: 21,
 DB_STORE_NAME: "FILE_DATA",
 mount: (function(mount) {
  return MEMFS.mount.apply(null, arguments);
 }),
 syncfs: (function(mount, populate, callback) {
  IDBFS.getLocalSet(mount, (function(err, local) {
   if (err) return callback(err);
   IDBFS.getRemoteSet(mount, (function(err, remote) {
    if (err) return callback(err);
    var src = populate ? remote : local;
    var dst = populate ? local : remote;
    IDBFS.reconcile(src, dst, callback);
   }));
  }));
 }),
 getDB: (function(name, callback) {
  var db = IDBFS.dbs[name];
  if (db) {
   return callback(null, db);
  }
  var req;
  try {
   req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
  } catch (e) {
   return callback(e);
  }
  req.onupgradeneeded = (function(e) {
   var db = e.target.result;
   var transaction = e.target.transaction;
   var fileStore;
   if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
    fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
   } else {
    fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
   }
   if (!fileStore.indexNames.contains("timestamp")) {
    fileStore.createIndex("timestamp", "timestamp", {
     unique: false
    });
   }
  });
  req.onsuccess = (function() {
   db = req.result;
   IDBFS.dbs[name] = db;
   callback(null, db);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 getLocalSet: (function(mount, callback) {
  var entries = {};
  function isRealDir(p) {
   return p !== "." && p !== "..";
  }
  function toAbsolute(root) {
   return (function(p) {
    return PATH.join2(root, p);
   });
  }
  var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  while (check.length) {
   var path = check.pop();
   var stat;
   try {
    stat = FS.stat(path);
   } catch (e) {
    return callback(e);
   }
   if (FS.isDir(stat.mode)) {
    check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
   }
   entries[path] = {
    timestamp: stat.mtime
   };
  }
  return callback(null, {
   type: "local",
   entries: entries
  });
 }),
 getRemoteSet: (function(mount, callback) {
  var entries = {};
  IDBFS.getDB(mount.mountpoint, (function(err, db) {
   if (err) return callback(err);
   var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readonly");
   transaction.onerror = (function(e) {
    callback(this.error);
    e.preventDefault();
   });
   var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
   var index = store.index("timestamp");
   index.openKeyCursor().onsuccess = (function(event) {
    var cursor = event.target.result;
    if (!cursor) {
     return callback(null, {
      type: "remote",
      db: db,
      entries: entries
     });
    }
    entries[cursor.primaryKey] = {
     timestamp: cursor.key
    };
    cursor.continue();
   });
  }));
 }),
 loadLocalEntry: (function(path, callback) {
  var stat, node;
  try {
   var lookup = FS.lookupPath(path);
   node = lookup.node;
   stat = FS.stat(path);
  } catch (e) {
   return callback(e);
  }
  if (FS.isDir(stat.mode)) {
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode
   });
  } else if (FS.isFile(stat.mode)) {
   node.contents = MEMFS.getFileDataAsTypedArray(node);
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode,
    contents: node.contents
   });
  } else {
   return callback(new Error("node type not supported"));
  }
 }),
 storeLocalEntry: (function(path, entry, callback) {
  try {
   if (FS.isDir(entry.mode)) {
    FS.mkdir(path, entry.mode);
   } else if (FS.isFile(entry.mode)) {
    FS.writeFile(path, entry.contents, {
     encoding: "binary",
     canOwn: true
    });
   } else {
    return callback(new Error("node type not supported"));
   }
   FS.chmod(path, entry.mode);
   FS.utime(path, entry.timestamp, entry.timestamp);
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 removeLocalEntry: (function(path, callback) {
  try {
   var lookup = FS.lookupPath(path);
   var stat = FS.stat(path);
   if (FS.isDir(stat.mode)) {
    FS.rmdir(path);
   } else if (FS.isFile(stat.mode)) {
    FS.unlink(path);
   }
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 loadRemoteEntry: (function(store, path, callback) {
  var req = store.get(path);
  req.onsuccess = (function(event) {
   callback(null, event.target.result);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 storeRemoteEntry: (function(store, path, entry, callback) {
  var req = store.put(entry, path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 removeRemoteEntry: (function(store, path, callback) {
  var req = store.delete(path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 reconcile: (function(src, dst, callback) {
  var total = 0;
  var create = [];
  Object.keys(src.entries).forEach((function(key) {
   var e = src.entries[key];
   var e2 = dst.entries[key];
   if (!e2 || e.timestamp > e2.timestamp) {
    create.push(key);
    total++;
   }
  }));
  var remove = [];
  Object.keys(dst.entries).forEach((function(key) {
   var e = dst.entries[key];
   var e2 = src.entries[key];
   if (!e2) {
    remove.push(key);
    total++;
   }
  }));
  if (!total) {
   return callback(null);
  }
  var completed = 0;
  var db = src.type === "remote" ? src.db : dst.db;
  var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readwrite");
  var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return callback(err);
    }
    return;
   }
   if (++completed >= total) {
    return callback(null);
   }
  }
  transaction.onerror = (function(e) {
   done(this.error);
   e.preventDefault();
  });
  create.sort().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.loadRemoteEntry(store, path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeLocalEntry(path, entry, done);
    }));
   } else {
    IDBFS.loadLocalEntry(path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeRemoteEntry(store, path, entry, done);
    }));
   }
  }));
  remove.sort().reverse().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.removeLocalEntry(path, done);
   } else {
    IDBFS.removeRemoteEntry(store, path, done);
   }
  }));
 })
};
var NODEFS = {
 isWindows: false,
 staticInit: (function() {
  NODEFS.isWindows = !!process.platform.match(/^win/);
 }),
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_NODE);
  return NODEFS.createNode(null, "/", NODEFS.getMode(mount.opts.root), 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = FS.createNode(parent, name, mode);
  node.node_ops = NODEFS.node_ops;
  node.stream_ops = NODEFS.stream_ops;
  return node;
 }),
 getMode: (function(path) {
  var stat;
  try {
   stat = fs.lstatSync(path);
   if (NODEFS.isWindows) {
    stat.mode = stat.mode | (stat.mode & 146) >> 1;
   }
  } catch (e) {
   if (!e.code) throw e;
   throw new FS.ErrnoError(ERRNO_CODES[e.code]);
  }
  return stat.mode;
 }),
 realPath: (function(node) {
  var parts = [];
  while (node.parent !== node) {
   parts.push(node.name);
   node = node.parent;
  }
  parts.push(node.mount.opts.root);
  parts.reverse();
  return PATH.join.apply(null, parts);
 }),
 flagsToPermissionStringMap: {
  0: "r",
  1: "r+",
  2: "r+",
  64: "r",
  65: "r+",
  66: "r+",
  129: "rx+",
  193: "rx+",
  514: "w+",
  577: "w",
  578: "w+",
  705: "wx",
  706: "wx+",
  1024: "a",
  1025: "a",
  1026: "a+",
  1089: "a",
  1090: "a+",
  1153: "ax",
  1154: "ax+",
  1217: "ax",
  1218: "ax+",
  4096: "rs",
  4098: "rs+"
 },
 flagsToPermissionString: (function(flags) {
  flags &= ~32768;
  flags &= ~524288;
  if (flags in NODEFS.flagsToPermissionStringMap) {
   return NODEFS.flagsToPermissionStringMap[flags];
  } else {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
 }),
 node_ops: {
  getattr: (function(node) {
   var path = NODEFS.realPath(node);
   var stat;
   try {
    stat = fs.lstatSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   if (NODEFS.isWindows && !stat.blksize) {
    stat.blksize = 4096;
   }
   if (NODEFS.isWindows && !stat.blocks) {
    stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
   }
   return {
    dev: stat.dev,
    ino: stat.ino,
    mode: stat.mode,
    nlink: stat.nlink,
    uid: stat.uid,
    gid: stat.gid,
    rdev: stat.rdev,
    size: stat.size,
    atime: stat.atime,
    mtime: stat.mtime,
    ctime: stat.ctime,
    blksize: stat.blksize,
    blocks: stat.blocks
   };
  }),
  setattr: (function(node, attr) {
   var path = NODEFS.realPath(node);
   try {
    if (attr.mode !== undefined) {
     fs.chmodSync(path, attr.mode);
     node.mode = attr.mode;
    }
    if (attr.timestamp !== undefined) {
     var date = new Date(attr.timestamp);
     fs.utimesSync(path, date, date);
    }
    if (attr.size !== undefined) {
     fs.truncateSync(path, attr.size);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  lookup: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   var mode = NODEFS.getMode(path);
   return NODEFS.createNode(parent, name, mode);
  }),
  mknod: (function(parent, name, mode, dev) {
   var node = NODEFS.createNode(parent, name, mode, dev);
   var path = NODEFS.realPath(node);
   try {
    if (FS.isDir(node.mode)) {
     fs.mkdirSync(path, node.mode);
    } else {
     fs.writeFileSync(path, "", {
      mode: node.mode
     });
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   return node;
  }),
  rename: (function(oldNode, newDir, newName) {
   var oldPath = NODEFS.realPath(oldNode);
   var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
   try {
    fs.renameSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  unlink: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.unlinkSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  rmdir: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.rmdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readdir: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    return fs.readdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  symlink: (function(parent, newName, oldPath) {
   var newPath = PATH.join2(NODEFS.realPath(parent), newName);
   try {
    fs.symlinkSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readlink: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    path = fs.readlinkSync(path);
    path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
    return path;
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  })
 },
 stream_ops: {
  open: (function(stream) {
   var path = NODEFS.realPath(stream.node);
   try {
    if (FS.isFile(stream.node.mode)) {
     stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  close: (function(stream) {
   try {
    if (FS.isFile(stream.node.mode) && stream.nfd) {
     fs.closeSync(stream.nfd);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  read: (function(stream, buffer, offset, length, position) {
   if (length === 0) return 0;
   var nbuffer = new Buffer(length);
   var res;
   try {
    res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   if (res > 0) {
    for (var i = 0; i < res; i++) {
     buffer[offset + i] = nbuffer[i];
    }
   }
   return res;
  }),
  write: (function(stream, buffer, offset, length, position) {
   var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
   var res;
   try {
    res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   return res;
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     try {
      var stat = fs.fstatSync(stream.nfd);
      position += stat.size;
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES[e.code]);
     }
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
var WORKERFS = {
 DIR_MODE: 16895,
 FILE_MODE: 33279,
 reader: null,
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_WORKER);
  if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync;
  var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);
  var createdParents = {};
  function ensureParent(path) {
   var parts = path.split("/");
   var parent = root;
   for (var i = 0; i < parts.length - 1; i++) {
    var curr = parts.slice(0, i + 1).join("/");
    if (!createdParents[curr]) {
     createdParents[curr] = WORKERFS.createNode(parent, curr, WORKERFS.DIR_MODE, 0);
    }
    parent = createdParents[curr];
   }
   return parent;
  }
  function base(path) {
   var parts = path.split("/");
   return parts[parts.length - 1];
  }
  Array.prototype.forEach.call(mount.opts["files"] || [], (function(file) {
   WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
  }));
  (mount.opts["blobs"] || []).forEach((function(obj) {
   WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
  }));
  (mount.opts["packages"] || []).forEach((function(pack) {
   pack["metadata"].files.forEach((function(file) {
    var name = file.filename.substr(1);
    WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
   }));
  }));
  return root;
 }),
 createNode: (function(parent, name, mode, dev, contents, mtime) {
  var node = FS.createNode(parent, name, mode);
  node.mode = mode;
  node.node_ops = WORKERFS.node_ops;
  node.stream_ops = WORKERFS.stream_ops;
  node.timestamp = (mtime || new Date).getTime();
  assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
  if (mode === WORKERFS.FILE_MODE) {
   node.size = contents.size;
   node.contents = contents;
  } else {
   node.size = 4096;
   node.contents = {};
  }
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 node_ops: {
  getattr: (function(node) {
   return {
    dev: 1,
    ino: undefined,
    mode: node.mode,
    nlink: 1,
    uid: 0,
    gid: 0,
    rdev: undefined,
    size: node.size,
    atime: new Date(node.timestamp),
    mtime: new Date(node.timestamp),
    ctime: new Date(node.timestamp),
    blksize: 4096,
    blocks: Math.ceil(node.size / 4096)
   };
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
  }),
  lookup: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }),
  mknod: (function(parent, name, mode, dev) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rename: (function(oldNode, newDir, newName) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  unlink: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rmdir: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readdir: (function(node) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  symlink: (function(parent, newName, oldPath) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readlink: (function(node) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   if (position >= stream.node.size) return 0;
   var chunk = stream.node.contents.slice(position, position + length);
   var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
   buffer.set(new Uint8Array(ab), offset);
   return chunk.size;
  }),
  write: (function(stream, buffer, offset, length, position) {
   throw new FS.ErrnoError(ERRNO_CODES.EIO);
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.size;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
STATICTOP += 16;
STATICTOP += 16;
STATICTOP += 16;
var FS = {
 root: null,
 mounts: [],
 devices: [ null ],
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 trackingDelegate: {},
 tracking: {
  openFlags: {
   READ: 1,
   WRITE: 2
  }
 },
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 syncFSRequests: 0,
 handleFSError: (function(e) {
  if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();
  return ___setErrNo(e.errno);
 }),
 lookupPath: (function(path, opts) {
  path = PATH.resolve(FS.cwd(), path);
  opts = opts || {};
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  for (var key in defaults) {
   if (opts[key] === undefined) {
    opts[key] = defaults[key];
   }
  }
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
  }
  var parts = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), false);
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 }),
 getPath: (function(node) {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
   }
   path = path ? node.name + "/" + path : node.name;
   node = node.parent;
  }
 }),
 hashName: (function(parentid, name) {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 }),
 hashAddNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 }),
 hashRemoveNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 }),
 lookupNode: (function(parent, name) {
  var err = FS.mayLookup(parent);
  if (err) {
   throw new FS.ErrnoError(err, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 }),
 createNode: (function(parent, name, mode, rdev) {
  if (!FS.FSNode) {
   FS.FSNode = (function(parent, name, mode, rdev) {
    if (!parent) {
     parent = this;
    }
    this.parent = parent;
    this.mount = parent.mount;
    this.mounted = null;
    this.id = FS.nextInode++;
    this.name = name;
    this.mode = mode;
    this.node_ops = {};
    this.stream_ops = {};
    this.rdev = rdev;
   });
   FS.FSNode.prototype = {};
   var readMode = 292 | 73;
   var writeMode = 146;
   Object.defineProperties(FS.FSNode.prototype, {
    read: {
     get: (function() {
      return (this.mode & readMode) === readMode;
     }),
     set: (function(val) {
      val ? this.mode |= readMode : this.mode &= ~readMode;
     })
    },
    write: {
     get: (function() {
      return (this.mode & writeMode) === writeMode;
     }),
     set: (function(val) {
      val ? this.mode |= writeMode : this.mode &= ~writeMode;
     })
    },
    isFolder: {
     get: (function() {
      return FS.isDir(this.mode);
     })
    },
    isDevice: {
     get: (function() {
      return FS.isChrdev(this.mode);
     })
    }
   });
  }
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 }),
 destroyNode: (function(node) {
  FS.hashRemoveNode(node);
 }),
 isRoot: (function(node) {
  return node === node.parent;
 }),
 isMountpoint: (function(node) {
  return !!node.mounted;
 }),
 isFile: (function(mode) {
  return (mode & 61440) === 32768;
 }),
 isDir: (function(mode) {
  return (mode & 61440) === 16384;
 }),
 isLink: (function(mode) {
  return (mode & 61440) === 40960;
 }),
 isChrdev: (function(mode) {
  return (mode & 61440) === 8192;
 }),
 isBlkdev: (function(mode) {
  return (mode & 61440) === 24576;
 }),
 isFIFO: (function(mode) {
  return (mode & 61440) === 4096;
 }),
 isSocket: (function(mode) {
  return (mode & 49152) === 49152;
 }),
 flagModes: {
  "r": 0,
  "rs": 1052672,
  "r+": 2,
  "w": 577,
  "wx": 705,
  "xw": 705,
  "w+": 578,
  "wx+": 706,
  "xw+": 706,
  "a": 1089,
  "ax": 1217,
  "xa": 1217,
  "a+": 1090,
  "ax+": 1218,
  "xa+": 1218
 },
 modeStringToFlags: (function(str) {
  var flags = FS.flagModes[str];
  if (typeof flags === "undefined") {
   throw new Error("Unknown file open mode: " + str);
  }
  return flags;
 }),
 flagsToPermissionString: (function(flag) {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 }),
 nodePermissions: (function(node, perms) {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
   return ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 mayLookup: (function(dir) {
  var err = FS.nodePermissions(dir, "x");
  if (err) return err;
  if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
  return 0;
 }),
 mayCreate: (function(dir, name) {
  try {
   var node = FS.lookupNode(dir, name);
   return ERRNO_CODES.EEXIST;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 }),
 mayDelete: (function(dir, name, isdir) {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var err = FS.nodePermissions(dir, "wx");
  if (err) {
   return err;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return ERRNO_CODES.ENOTDIR;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return ERRNO_CODES.EBUSY;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return 0;
 }),
 mayOpen: (function(node, flags) {
  if (!node) {
   return ERRNO_CODES.ENOENT;
  }
  if (FS.isLink(node.mode)) {
   return ERRNO_CODES.ELOOP;
  } else if (FS.isDir(node.mode)) {
   if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 }),
 MAX_OPEN_FDS: 4096,
 nextfd: (function(fd_start, fd_end) {
  fd_start = fd_start || 0;
  fd_end = fd_end || FS.MAX_OPEN_FDS;
  for (var fd = fd_start; fd <= fd_end; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
 }),
 getStream: (function(fd) {
  return FS.streams[fd];
 }),
 createStream: (function(stream, fd_start, fd_end) {
  if (!FS.FSStream) {
   FS.FSStream = (function() {});
   FS.FSStream.prototype = {};
   Object.defineProperties(FS.FSStream.prototype, {
    object: {
     get: (function() {
      return this.node;
     }),
     set: (function(val) {
      this.node = val;
     })
    },
    isRead: {
     get: (function() {
      return (this.flags & 2097155) !== 1;
     })
    },
    isWrite: {
     get: (function() {
      return (this.flags & 2097155) !== 0;
     })
    },
    isAppend: {
     get: (function() {
      return this.flags & 1024;
     })
    }
   });
  }
  var newStream = new FS.FSStream;
  for (var p in stream) {
   newStream[p] = stream[p];
  }
  stream = newStream;
  var fd = FS.nextfd(fd_start, fd_end);
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 }),
 closeStream: (function(fd) {
  FS.streams[fd] = null;
 }),
 chrdev_stream_ops: {
  open: (function(stream) {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  }),
  llseek: (function() {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  })
 },
 major: (function(dev) {
  return dev >> 8;
 }),
 minor: (function(dev) {
  return dev & 255;
 }),
 makedev: (function(ma, mi) {
  return ma << 8 | mi;
 }),
 registerDevice: (function(dev, ops) {
  FS.devices[dev] = {
   stream_ops: ops
  };
 }),
 getDevice: (function(dev) {
  return FS.devices[dev];
 }),
 getMounts: (function(mount) {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 }),
 syncfs: (function(populate, callback) {
  if (typeof populate === "function") {
   callback = populate;
   populate = false;
  }
  FS.syncFSRequests++;
  if (FS.syncFSRequests > 1) {
   console.log("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function doCallback(err) {
   assert(FS.syncFSRequests > 0);
   FS.syncFSRequests--;
   return callback(err);
  }
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return doCallback(err);
    }
    return;
   }
   if (++completed >= mounts.length) {
    doCallback(null);
   }
  }
  mounts.forEach((function(mount) {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  }));
 }),
 mount: (function(type, opts, mountpoint) {
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 }),
 unmount: (function(mountpoint) {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach((function(hash) {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.indexOf(current.mount) !== -1) {
     FS.destroyNode(current);
    }
    current = next;
   }
  }));
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  assert(idx !== -1);
  node.mount.mounts.splice(idx, 1);
 }),
 lookup: (function(parent, name) {
  return parent.node_ops.lookup(parent, name);
 }),
 mknod: (function(path, mode, dev) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.mayCreate(parent, name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 }),
 create: (function(path, mode) {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 }),
 mkdir: (function(path, mode) {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 }),
 mkdev: (function(path, mode, dev) {
  if (typeof dev === "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 }),
 symlink: (function(oldpath, newpath) {
  if (!PATH.resolve(oldpath)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var newname = PATH.basename(newpath);
  var err = FS.mayCreate(parent, newname);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 }),
 rename: (function(old_path, new_path) {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  try {
   lookup = FS.lookupPath(old_path, {
    parent: true
   });
   old_dir = lookup.node;
   lookup = FS.lookupPath(new_path, {
    parent: true
   });
   new_dir = lookup.node;
  } catch (e) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  relative = PATH.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var err = FS.mayDelete(old_dir, old_name, isdir);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (new_dir !== old_dir) {
   err = FS.nodePermissions(old_dir, "w");
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  try {
   if (FS.trackingDelegate["willMovePath"]) {
    FS.trackingDelegate["willMovePath"](old_path, new_path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
  try {
   if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
  } catch (e) {
   console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
 }),
 rmdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, true);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  return node.node_ops.readdir(node);
 }),
 unlink: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, false);
  if (err) {
   if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readlink: (function(path) {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 }),
 stat: (function(path, dontFollow) {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return node.node_ops.getattr(node);
 }),
 lstat: (function(path) {
  return FS.stat(path, true);
 }),
 chmod: (function(path, mode, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 }),
 lchmod: (function(path, mode) {
  FS.chmod(path, mode, true);
 }),
 fchmod: (function(fd, mode) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chmod(stream.node, mode);
 }),
 chown: (function(path, uid, gid, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 }),
 lchown: (function(path, uid, gid) {
  FS.chown(path, uid, gid, true);
 }),
 fchown: (function(fd, uid, gid) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chown(stream.node, uid, gid);
 }),
 truncate: (function(path, len) {
  if (len < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.nodePermissions(node, "w");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 }),
 ftruncate: (function(fd, len) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  FS.truncate(stream.node, len);
 }),
 utime: (function(path, atime, mtime) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 }),
 open: (function(path, flags, mode, fd_start, fd_end) {
  if (path === "") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
  mode = typeof mode === "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path === "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  if (!created) {
   var err = FS.mayOpen(node, flags);
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  if (flags & 512) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  }, fd_start, fd_end);
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
    Module["printErr"]("read file: " + path);
   }
  }
  try {
   if (FS.trackingDelegate["onOpenFile"]) {
    var trackingFlags = 0;
    if ((flags & 2097155) !== 1) {
     trackingFlags |= FS.tracking.openFlags.READ;
    }
    if ((flags & 2097155) !== 0) {
     trackingFlags |= FS.tracking.openFlags.WRITE;
    }
    FS.trackingDelegate["onOpenFile"](path, trackingFlags);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
  }
  return stream;
 }),
 close: (function(stream) {
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
 }),
 llseek: (function(stream, offset, whence) {
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 }),
 read: (function(stream, buffer, offset, length, position) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var seeking = true;
  if (typeof position === "undefined") {
   position = stream.position;
   seeking = false;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 }),
 write: (function(stream, buffer, offset, length, position, canOwn) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if (stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = true;
  if (typeof position === "undefined") {
   position = stream.position;
   seeking = false;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  try {
   if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
  } catch (e) {
   console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
  }
  return bytesWritten;
 }),
 allocate: (function(stream, offset, length) {
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
  }
  stream.stream_ops.allocate(stream, offset, length);
 }),
 mmap: (function(stream, buffer, offset, length, position, prot, flags) {
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EACCES);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
 }),
 msync: (function(stream, buffer, offset, length, mmapFlags) {
  if (!stream || !stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 }),
 munmap: (function(stream) {
  return 0;
 }),
 ioctl: (function(stream, cmd, arg) {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 }),
 readFile: (function(path, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "r";
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 }),
 writeFile: (function(path, data, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "w";
  opts.encoding = opts.encoding || "utf8";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var stream = FS.open(path, opts.flags, opts.mode);
  if (opts.encoding === "utf8") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
  } else if (opts.encoding === "binary") {
   FS.write(stream, data, 0, data.length, 0, opts.canOwn);
  }
  FS.close(stream);
 }),
 cwd: (function() {
  return FS.currentPath;
 }),
 chdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  var err = FS.nodePermissions(lookup.node, "x");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  FS.currentPath = lookup.path;
 }),
 createDefaultDirectories: (function() {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 }),
 createDefaultDevices: (function() {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: (function() {
    return 0;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    return length;
   })
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var random_device;
  if (typeof crypto !== "undefined") {
   var randomBuffer = new Uint8Array(1);
   random_device = (function() {
    crypto.getRandomValues(randomBuffer);
    return randomBuffer[0];
   });
  } else if (ENVIRONMENT_IS_NODE) {
   random_device = (function() {
    return require("crypto").randomBytes(1)[0];
   });
  } else {
   random_device = (function() {
    return Math.random() * 256 | 0;
   });
  }
  FS.createDevice("/dev", "random", random_device);
  FS.createDevice("/dev", "urandom", random_device);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 }),
 createSpecialDirectories: (function() {
  FS.mkdir("/proc");
  FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: (function() {
    var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: (function(parent, name) {
      var fd = +name;
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: (function() {
         return stream.path;
        })
       }
      };
      ret.parent = ret;
      return ret;
     })
    };
    return node;
   })
  }, {}, "/proc/self/fd");
 }),
 createStandardStreams: (function() {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", "r");
  assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
  var stdout = FS.open("/dev/stdout", "w");
  assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
  var stderr = FS.open("/dev/stderr", "w");
  assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
 }),
 ensureErrnoError: (function() {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.node = node;
   this.setErrno = (function(errno) {
    this.errno = errno;
    for (var key in ERRNO_CODES) {
     if (ERRNO_CODES[key] === errno) {
      this.code = key;
      break;
     }
    }
   });
   this.setErrno(errno);
   this.message = ERRNO_MESSAGES[errno];
  };
  FS.ErrnoError.prototype = new Error;
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ ERRNO_CODES.ENOENT ].forEach((function(code) {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  }));
 }),
 staticInit: (function() {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS,
   "IDBFS": IDBFS,
   "NODEFS": NODEFS,
   "WORKERFS": WORKERFS
  };
 }),
 init: (function(input, output, error) {
  assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 }),
 quit: (function() {
  FS.init.initialized = false;
  var fflush = Module["_fflush"];
  if (fflush) fflush(0);
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 }),
 getMode: (function(canRead, canWrite) {
  var mode = 0;
  if (canRead) mode |= 292 | 73;
  if (canWrite) mode |= 146;
  return mode;
 }),
 joinPath: (function(parts, forceRelative) {
  var path = PATH.join.apply(null, parts);
  if (forceRelative && path[0] == "/") path = path.substr(1);
  return path;
 }),
 absolutePath: (function(relative, base) {
  return PATH.resolve(base, relative);
 }),
 standardizePath: (function(path) {
  return PATH.normalize(path);
 }),
 findObject: (function(path, dontResolveLastLink) {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (ret.exists) {
   return ret.object;
  } else {
   ___setErrNo(ret.error);
   return null;
  }
 }),
 analyzePath: (function(path, dontResolveLastLink) {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 }),
 createFolder: (function(parent, name, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.mkdir(path, mode);
 }),
 createPath: (function(parent, path, canRead, canWrite) {
  parent = typeof parent === "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 }),
 createFile: (function(parent, name, properties, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.create(path, mode);
 }),
 createDataFile: (function(parent, name, data, canRead, canWrite, canOwn) {
  var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
  var mode = FS.getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data === "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, "w");
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 }),
 createDevice: (function(parent, name, input, output) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: (function(stream) {
    stream.seekable = false;
   }),
   close: (function(stream) {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   }),
   read: (function(stream, buffer, offset, length, pos) {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   })
  });
  return FS.mkdev(path, mode, dev);
 }),
 createLink: (function(parent, name, target, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  return FS.symlink(target, path);
 }),
 forceLoadFile: (function(obj) {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  var success = true;
  if (typeof XMLHttpRequest !== "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (Module["read"]) {
   try {
    obj.contents = intArrayFromString(Module["read"](obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    success = false;
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
  if (!success) ___setErrNo(ERRNO_CODES.EIO);
  return success;
 }),
 createLazyFile: (function(parent, name, url, canRead, canWrite) {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest;
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = (function(from, to) {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest;
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    } else {
     return intArrayFromString(xhr.responseText || "", true);
    }
   });
   var lazyArray = this;
   lazyArray.setDataGetter((function(chunkNum) {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] === "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   }));
   if (usesGzip || !datalength) {
    chunkSize = datalength = 1;
    datalength = this.getter(0).length;
    chunkSize = datalength;
    console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
   }
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest !== "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array;
   Object.defineProperties(lazyArray, {
    length: {
     get: (function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._length;
     })
    },
    chunkSize: {
     get: (function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._chunkSize;
     })
    }
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperties(node, {
   usedBytes: {
    get: (function() {
     return this.contents.length;
    })
   }
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach((function(key) {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    if (!FS.forceLoadFile(node)) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    return fn.apply(null, arguments);
   };
  }));
  stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
   if (!FS.forceLoadFile(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EIO);
   }
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   assert(size >= 0);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  };
  node.stream_ops = stream_ops;
  return node;
 }),
 createPreloadedFile: (function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
  Browser.init();
  var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
  var dep = getUniqueRunDependency("cp " + fullname);
  function processData(byteArray) {
   function finish(byteArray) {
    if (preFinish) preFinish();
    if (!dontCreateFile) {
     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
    }
    if (onload) onload();
    removeRunDependency(dep);
   }
   var handled = false;
   Module["preloadPlugins"].forEach((function(plugin) {
    if (handled) return;
    if (plugin["canHandle"](fullname)) {
     plugin["handle"](byteArray, fullname, finish, (function() {
      if (onerror) onerror();
      removeRunDependency(dep);
     }));
     handled = true;
    }
   }));
   if (!handled) finish(byteArray);
  }
  addRunDependency(dep);
  if (typeof url == "string") {
   Browser.asyncLoad(url, (function(byteArray) {
    processData(byteArray);
   }), onerror);
  } else {
   processData(url);
  }
 }),
 indexedDB: (function() {
  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
 }),
 DB_NAME: (function() {
  return "EM_FS_" + window.location.pathname;
 }),
 DB_VERSION: 20,
 DB_STORE_NAME: "FILE_DATA",
 saveFilesToDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
   console.log("creating db");
   var db = openRequest.result;
   db.createObjectStore(FS.DB_STORE_NAME);
  };
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   var transaction = db.transaction([ FS.DB_STORE_NAME ], "readwrite");
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var putRequest = files.put(FS.analyzePath(path).object.contents, path);
    putRequest.onsuccess = function putRequest_onsuccess() {
     ok++;
     if (ok + fail == total) finish();
    };
    putRequest.onerror = function putRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 }),
 loadFilesFromDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = onerror;
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   try {
    var transaction = db.transaction([ FS.DB_STORE_NAME ], "readonly");
   } catch (e) {
    onerror(e);
    return;
   }
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var getRequest = files.get(path);
    getRequest.onsuccess = function getRequest_onsuccess() {
     if (FS.analyzePath(path).exists) {
      FS.unlink(path);
     }
     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
     ok++;
     if (ok + fail == total) finish();
    };
    getRequest.onerror = function getRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 })
};
function _emscripten_set_main_loop_timing(mode, value) {
 Browser.mainLoop.timingMode = mode;
 Browser.mainLoop.timingValue = value;
 if (!Browser.mainLoop.func) {
  return 1;
 }
 if (mode == 0) {
  Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {
   setTimeout(Browser.mainLoop.runner, value);
  };
  Browser.mainLoop.method = "timeout";
 } else if (mode == 1) {
  Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {
   Browser.requestAnimationFrame(Browser.mainLoop.runner);
  };
  Browser.mainLoop.method = "rAF";
 } else if (mode == 2) {
  if (!window["setImmediate"]) {
   var setImmediates = [];
   var emscriptenMainLoopMessageId = "__emcc";
   function Browser_setImmediate_messageHandler(event) {
    if (event.source === window && event.data === emscriptenMainLoopMessageId) {
     event.stopPropagation();
     setImmediates.shift()();
    }
   }
   window.addEventListener("message", Browser_setImmediate_messageHandler, true);
   window["setImmediate"] = function Browser_emulated_setImmediate(func) {
    setImmediates.push(func);
    window.postMessage(emscriptenMainLoopMessageId, "*");
   };
  }
  Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {
   window["setImmediate"](Browser.mainLoop.runner);
  };
  Browser.mainLoop.method = "immediate";
 }
 return 0;
}
function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
 Module["noExitRuntime"] = true;
 assert(!Browser.mainLoop.func, "emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.");
 Browser.mainLoop.func = func;
 Browser.mainLoop.arg = arg;
 var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
 Browser.mainLoop.runner = function Browser_mainLoop_runner() {
  if (ABORT) return;
  if (Browser.mainLoop.queue.length > 0) {
   var start = Date.now();
   var blocker = Browser.mainLoop.queue.shift();
   blocker.func(blocker.arg);
   if (Browser.mainLoop.remainingBlockers) {
    var remaining = Browser.mainLoop.remainingBlockers;
    var next = remaining % 1 == 0 ? remaining - 1 : Math.floor(remaining);
    if (blocker.counted) {
     Browser.mainLoop.remainingBlockers = next;
    } else {
     next = next + .5;
     Browser.mainLoop.remainingBlockers = (8 * remaining + next) / 9;
    }
   }
   console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + " ms");
   Browser.mainLoop.updateStatus();
   if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
   setTimeout(Browser.mainLoop.runner, 0);
   return;
  }
  if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
  if (Browser.mainLoop.timingMode == 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
   Browser.mainLoop.scheduler();
   return;
  }
  GL.newRenderingFrameStarted();
  if (Browser.mainLoop.method === "timeout" && Module.ctx) {
   Module.printErr("Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!");
   Browser.mainLoop.method = "";
  }
  Browser.mainLoop.runIter((function() {
   if (typeof arg !== "undefined") {
    Runtime.dynCall("vi", func, [ arg ]);
   } else {
    Runtime.dynCall("v", func);
   }
  }));
  if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  if (typeof SDL === "object" && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  Browser.mainLoop.scheduler();
 };
 if (!noSetTiming) {
  if (fps && fps > 0) _emscripten_set_main_loop_timing(0, 1e3 / fps); else _emscripten_set_main_loop_timing(1, 1);
  Browser.mainLoop.scheduler();
 }
 if (simulateInfiniteLoop) {
  throw "SimulateInfiniteLoop";
 }
}
var Browser = {
 mainLoop: {
  scheduler: null,
  method: "",
  currentlyRunningMainloop: 0,
  func: null,
  arg: 0,
  timingMode: 0,
  timingValue: 0,
  currentFrameNumber: 0,
  queue: [],
  pause: (function() {
   Browser.mainLoop.scheduler = null;
   Browser.mainLoop.currentlyRunningMainloop++;
  }),
  resume: (function() {
   Browser.mainLoop.currentlyRunningMainloop++;
   var timingMode = Browser.mainLoop.timingMode;
   var timingValue = Browser.mainLoop.timingValue;
   var func = Browser.mainLoop.func;
   Browser.mainLoop.func = null;
   _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true);
   _emscripten_set_main_loop_timing(timingMode, timingValue);
   Browser.mainLoop.scheduler();
  }),
  updateStatus: (function() {
   if (Module["setStatus"]) {
    var message = Module["statusMessage"] || "Please wait...";
    var remaining = Browser.mainLoop.remainingBlockers;
    var expected = Browser.mainLoop.expectedBlockers;
    if (remaining) {
     if (remaining < expected) {
      Module["setStatus"](message + " (" + (expected - remaining) + "/" + expected + ")");
     } else {
      Module["setStatus"](message);
     }
    } else {
     Module["setStatus"]("");
    }
   }
  }),
  runIter: (function(func) {
   if (ABORT) return;
   if (Module["preMainLoop"]) {
    var preRet = Module["preMainLoop"]();
    if (preRet === false) {
     return;
    }
   }
   try {
    func();
   } catch (e) {
    if (e instanceof ExitStatus) {
     return;
    } else {
     if (e && typeof e === "object" && e.stack) Module.printErr("exception thrown: " + [ e, e.stack ]);
     throw e;
    }
   }
   if (Module["postMainLoop"]) Module["postMainLoop"]();
  })
 },
 isFullScreen: false,
 pointerLock: false,
 moduleContextCreatedCallbacks: [],
 workers: [],
 init: (function() {
  if (!Module["preloadPlugins"]) Module["preloadPlugins"] = [];
  if (Browser.initted) return;
  Browser.initted = true;
  try {
   new Blob;
   Browser.hasBlobConstructor = true;
  } catch (e) {
   Browser.hasBlobConstructor = false;
   console.log("warning: no blob constructor, cannot create blobs with mimetypes");
  }
  Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : !Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null;
  Browser.URLObject = typeof window != "undefined" ? window.URL ? window.URL : window.webkitURL : undefined;
  if (!Module.noImageDecoding && typeof Browser.URLObject === "undefined") {
   console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
   Module.noImageDecoding = true;
  }
  var imagePlugin = {};
  imagePlugin["canHandle"] = function imagePlugin_canHandle(name) {
   return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
  };
  imagePlugin["handle"] = function imagePlugin_handle(byteArray, name, onload, onerror) {
   var b = null;
   if (Browser.hasBlobConstructor) {
    try {
     b = new Blob([ byteArray ], {
      type: Browser.getMimetype(name)
     });
     if (b.size !== byteArray.length) {
      b = new Blob([ (new Uint8Array(byteArray)).buffer ], {
       type: Browser.getMimetype(name)
      });
     }
    } catch (e) {
     Runtime.warnOnce("Blob constructor present but fails: " + e + "; falling back to blob builder");
    }
   }
   if (!b) {
    var bb = new Browser.BlobBuilder;
    bb.append((new Uint8Array(byteArray)).buffer);
    b = bb.getBlob();
   }
   var url = Browser.URLObject.createObjectURL(b);
   var img = new Image;
   img.onload = function img_onload() {
    assert(img.complete, "Image " + name + " could not be decoded");
    var canvas = document.createElement("canvas");
    canvas.width = img.width;
    canvas.height = img.height;
    var ctx = canvas.getContext("2d");
    ctx.drawImage(img, 0, 0);
    Module["preloadedImages"][name] = canvas;
    Browser.URLObject.revokeObjectURL(url);
    if (onload) onload(byteArray);
   };
   img.onerror = function img_onerror(event) {
    console.log("Image " + url + " could not be decoded");
    if (onerror) onerror();
   };
   img.src = url;
  };
  Module["preloadPlugins"].push(imagePlugin);
  var audioPlugin = {};
  audioPlugin["canHandle"] = function audioPlugin_canHandle(name) {
   return !Module.noAudioDecoding && name.substr(-4) in {
    ".ogg": 1,
    ".wav": 1,
    ".mp3": 1
   };
  };
  audioPlugin["handle"] = function audioPlugin_handle(byteArray, name, onload, onerror) {
   var done = false;
   function finish(audio) {
    if (done) return;
    done = true;
    Module["preloadedAudios"][name] = audio;
    if (onload) onload(byteArray);
   }
   function fail() {
    if (done) return;
    done = true;
    Module["preloadedAudios"][name] = new Audio;
    if (onerror) onerror();
   }
   if (Browser.hasBlobConstructor) {
    try {
     var b = new Blob([ byteArray ], {
      type: Browser.getMimetype(name)
     });
    } catch (e) {
     return fail();
    }
    var url = Browser.URLObject.createObjectURL(b);
    var audio = new Audio;
    audio.addEventListener("canplaythrough", (function() {
     finish(audio);
    }), false);
    audio.onerror = function audio_onerror(event) {
     if (done) return;
     console.log("warning: browser could not fully decode audio " + name + ", trying slower base64 approach");
     function encode64(data) {
      var BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      var PAD = "=";
      var ret = "";
      var leftchar = 0;
      var leftbits = 0;
      for (var i = 0; i < data.length; i++) {
       leftchar = leftchar << 8 | data[i];
       leftbits += 8;
       while (leftbits >= 6) {
        var curr = leftchar >> leftbits - 6 & 63;
        leftbits -= 6;
        ret += BASE[curr];
       }
      }
      if (leftbits == 2) {
       ret += BASE[(leftchar & 3) << 4];
       ret += PAD + PAD;
      } else if (leftbits == 4) {
       ret += BASE[(leftchar & 15) << 2];
       ret += PAD;
      }
      return ret;
     }
     audio.src = "data:audio/x-" + name.substr(-3) + ";base64," + encode64(byteArray);
     finish(audio);
    };
    audio.src = url;
    Browser.safeSetTimeout((function() {
     finish(audio);
    }), 1e4);
   } else {
    return fail();
   }
  };
  Module["preloadPlugins"].push(audioPlugin);
  var canvas = Module["canvas"];
  function pointerLockChange() {
   Browser.pointerLock = document["pointerLockElement"] === canvas || document["mozPointerLockElement"] === canvas || document["webkitPointerLockElement"] === canvas || document["msPointerLockElement"] === canvas;
  }
  if (canvas) {
   canvas.requestPointerLock = canvas["requestPointerLock"] || canvas["mozRequestPointerLock"] || canvas["webkitRequestPointerLock"] || canvas["msRequestPointerLock"] || (function() {});
   canvas.exitPointerLock = document["exitPointerLock"] || document["mozExitPointerLock"] || document["webkitExitPointerLock"] || document["msExitPointerLock"] || (function() {});
   canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
   document.addEventListener("pointerlockchange", pointerLockChange, false);
   document.addEventListener("mozpointerlockchange", pointerLockChange, false);
   document.addEventListener("webkitpointerlockchange", pointerLockChange, false);
   document.addEventListener("mspointerlockchange", pointerLockChange, false);
   if (Module["elementPointerLock"]) {
    canvas.addEventListener("click", (function(ev) {
     if (!Browser.pointerLock && canvas.requestPointerLock) {
      canvas.requestPointerLock();
      ev.preventDefault();
     }
    }), false);
   }
  }
 }),
 createContext: (function(canvas, useWebGL, setInModule, webGLContextAttributes) {
  if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx;
  var ctx;
  var contextHandle;
  if (useWebGL) {
   var contextAttributes = {
    antialias: false,
    alpha: false
   };
   if (webGLContextAttributes) {
    for (var attribute in webGLContextAttributes) {
     contextAttributes[attribute] = webGLContextAttributes[attribute];
    }
   }
   contextHandle = GL.createContext(canvas, contextAttributes);
   if (contextHandle) {
    ctx = GL.getContext(contextHandle).GLctx;
   }
   canvas.style.backgroundColor = "black";
  } else {
   ctx = canvas.getContext("2d");
  }
  if (!ctx) return null;
  if (setInModule) {
   if (!useWebGL) assert(typeof GLctx === "undefined", "cannot set in module if GLctx is used, but we are a non-GL context that would replace it");
   Module.ctx = ctx;
   if (useWebGL) GL.makeContextCurrent(contextHandle);
   Module.useWebGL = useWebGL;
   Browser.moduleContextCreatedCallbacks.forEach((function(callback) {
    callback();
   }));
   Browser.init();
  }
  return ctx;
 }),
 destroyContext: (function(canvas, useWebGL, setInModule) {}),
 fullScreenHandlersInstalled: false,
 lockPointer: undefined,
 resizeCanvas: undefined,
 requestFullScreen: (function(lockPointer, resizeCanvas, vrDevice) {
  Browser.lockPointer = lockPointer;
  Browser.resizeCanvas = resizeCanvas;
  Browser.vrDevice = vrDevice;
  if (typeof Browser.lockPointer === "undefined") Browser.lockPointer = true;
  if (typeof Browser.resizeCanvas === "undefined") Browser.resizeCanvas = false;
  if (typeof Browser.vrDevice === "undefined") Browser.vrDevice = null;
  var canvas = Module["canvas"];
  function fullScreenChange() {
   Browser.isFullScreen = false;
   var canvasContainer = canvas.parentNode;
   if ((document["webkitFullScreenElement"] || document["webkitFullscreenElement"] || document["mozFullScreenElement"] || document["mozFullscreenElement"] || document["fullScreenElement"] || document["fullscreenElement"] || document["msFullScreenElement"] || document["msFullscreenElement"] || document["webkitCurrentFullScreenElement"]) === canvasContainer) {
    canvas.cancelFullScreen = document["cancelFullScreen"] || document["mozCancelFullScreen"] || document["webkitCancelFullScreen"] || document["msExitFullscreen"] || document["exitFullscreen"] || (function() {});
    canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
    if (Browser.lockPointer) canvas.requestPointerLock();
    Browser.isFullScreen = true;
    if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
   } else {
    canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
    canvasContainer.parentNode.removeChild(canvasContainer);
    if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
   }
   if (Module["onFullScreen"]) Module["onFullScreen"](Browser.isFullScreen);
   Browser.updateCanvasDimensions(canvas);
  }
  if (!Browser.fullScreenHandlersInstalled) {
   Browser.fullScreenHandlersInstalled = true;
   document.addEventListener("fullscreenchange", fullScreenChange, false);
   document.addEventListener("mozfullscreenchange", fullScreenChange, false);
   document.addEventListener("webkitfullscreenchange", fullScreenChange, false);
   document.addEventListener("MSFullscreenChange", fullScreenChange, false);
  }
  var canvasContainer = document.createElement("div");
  canvas.parentNode.insertBefore(canvasContainer, canvas);
  canvasContainer.appendChild(canvas);
  canvasContainer.requestFullScreen = canvasContainer["requestFullScreen"] || canvasContainer["mozRequestFullScreen"] || canvasContainer["msRequestFullscreen"] || (canvasContainer["webkitRequestFullScreen"] ? (function() {
   canvasContainer["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"]);
  }) : null);
  if (vrDevice) {
   canvasContainer.requestFullScreen({
    vrDisplay: vrDevice
   });
  } else {
   canvasContainer.requestFullScreen();
  }
 }),
 nextRAF: 0,
 fakeRequestAnimationFrame: (function(func) {
  var now = Date.now();
  if (Browser.nextRAF === 0) {
   Browser.nextRAF = now + 1e3 / 60;
  } else {
   while (now + 2 >= Browser.nextRAF) {
    Browser.nextRAF += 1e3 / 60;
   }
  }
  var delay = Math.max(Browser.nextRAF - now, 0);
  setTimeout(func, delay);
 }),
 requestAnimationFrame: function requestAnimationFrame(func) {
  if (typeof window === "undefined") {
   Browser.fakeRequestAnimationFrame(func);
  } else {
   if (!window.requestAnimationFrame) {
    window.requestAnimationFrame = window["requestAnimationFrame"] || window["mozRequestAnimationFrame"] || window["webkitRequestAnimationFrame"] || window["msRequestAnimationFrame"] || window["oRequestAnimationFrame"] || Browser.fakeRequestAnimationFrame;
   }
   window.requestAnimationFrame(func);
  }
 },
 safeCallback: (function(func) {
  return (function() {
   if (!ABORT) return func.apply(null, arguments);
  });
 }),
 allowAsyncCallbacks: true,
 queuedAsyncCallbacks: [],
 pauseAsyncCallbacks: (function() {
  Browser.allowAsyncCallbacks = false;
 }),
 resumeAsyncCallbacks: (function() {
  Browser.allowAsyncCallbacks = true;
  if (Browser.queuedAsyncCallbacks.length > 0) {
   var callbacks = Browser.queuedAsyncCallbacks;
   Browser.queuedAsyncCallbacks = [];
   callbacks.forEach((function(func) {
    func();
   }));
  }
 }),
 safeRequestAnimationFrame: (function(func) {
  return Browser.requestAnimationFrame((function() {
   if (ABORT) return;
   if (Browser.allowAsyncCallbacks) {
    func();
   } else {
    Browser.queuedAsyncCallbacks.push(func);
   }
  }));
 }),
 safeSetTimeout: (function(func, timeout) {
  Module["noExitRuntime"] = true;
  return setTimeout((function() {
   if (ABORT) return;
   if (Browser.allowAsyncCallbacks) {
    func();
   } else {
    Browser.queuedAsyncCallbacks.push(func);
   }
  }), timeout);
 }),
 safeSetInterval: (function(func, timeout) {
  Module["noExitRuntime"] = true;
  return setInterval((function() {
   if (ABORT) return;
   if (Browser.allowAsyncCallbacks) {
    func();
   }
  }), timeout);
 }),
 getMimetype: (function(name) {
  return {
   "jpg": "image/jpeg",
   "jpeg": "image/jpeg",
   "png": "image/png",
   "bmp": "image/bmp",
   "ogg": "audio/ogg",
   "wav": "audio/wav",
   "mp3": "audio/mpeg"
  }[name.substr(name.lastIndexOf(".") + 1)];
 }),
 getUserMedia: (function(func) {
  if (!window.getUserMedia) {
   window.getUserMedia = navigator["getUserMedia"] || navigator["mozGetUserMedia"];
  }
  window.getUserMedia(func);
 }),
 getMovementX: (function(event) {
  return event["movementX"] || event["mozMovementX"] || event["webkitMovementX"] || 0;
 }),
 getMovementY: (function(event) {
  return event["movementY"] || event["mozMovementY"] || event["webkitMovementY"] || 0;
 }),
 getMouseWheelDelta: (function(event) {
  var delta = 0;
  switch (event.type) {
  case "DOMMouseScroll":
   delta = event.detail;
   break;
  case "mousewheel":
   delta = event.wheelDelta;
   break;
  case "wheel":
   delta = event["deltaY"];
   break;
  default:
   throw "unrecognized mouse wheel event: " + event.type;
  }
  return delta;
 }),
 mouseX: 0,
 mouseY: 0,
 mouseMovementX: 0,
 mouseMovementY: 0,
 touches: {},
 lastTouches: {},
 calculateMouseEvent: (function(event) {
  if (Browser.pointerLock) {
   if (event.type != "mousemove" && "mozMovementX" in event) {
    Browser.mouseMovementX = Browser.mouseMovementY = 0;
   } else {
    Browser.mouseMovementX = Browser.getMovementX(event);
    Browser.mouseMovementY = Browser.getMovementY(event);
   }
   if (typeof SDL != "undefined") {
    Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
    Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
   } else {
    Browser.mouseX += Browser.mouseMovementX;
    Browser.mouseY += Browser.mouseMovementY;
   }
  } else {
   var rect = Module["canvas"].getBoundingClientRect();
   var cw = Module["canvas"].width;
   var ch = Module["canvas"].height;
   var scrollX = typeof window.scrollX !== "undefined" ? window.scrollX : window.pageXOffset;
   var scrollY = typeof window.scrollY !== "undefined" ? window.scrollY : window.pageYOffset;
   if (event.type === "touchstart" || event.type === "touchend" || event.type === "touchmove") {
    var touch = event.touch;
    if (touch === undefined) {
     return;
    }
    var adjustedX = touch.pageX - (scrollX + rect.left);
    var adjustedY = touch.pageY - (scrollY + rect.top);
    adjustedX = adjustedX * (cw / rect.width);
    adjustedY = adjustedY * (ch / rect.height);
    var coords = {
     x: adjustedX,
     y: adjustedY
    };
    if (event.type === "touchstart") {
     Browser.lastTouches[touch.identifier] = coords;
     Browser.touches[touch.identifier] = coords;
    } else if (event.type === "touchend" || event.type === "touchmove") {
     var last = Browser.touches[touch.identifier];
     if (!last) last = coords;
     Browser.lastTouches[touch.identifier] = last;
     Browser.touches[touch.identifier] = coords;
    }
    return;
   }
   var x = event.pageX - (scrollX + rect.left);
   var y = event.pageY - (scrollY + rect.top);
   x = x * (cw / rect.width);
   y = y * (ch / rect.height);
   Browser.mouseMovementX = x - Browser.mouseX;
   Browser.mouseMovementY = y - Browser.mouseY;
   Browser.mouseX = x;
   Browser.mouseY = y;
  }
 }),
 asyncLoad: (function(url, onload, onerror, noRunDep) {
  Module["readAsync"](url, (function(arrayBuffer) {
   assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
   onload(new Uint8Array(arrayBuffer));
   if (!noRunDep) removeRunDependency("al " + url);
  }), (function(event) {
   if (onerror) {
    onerror();
   } else {
    throw 'Loading data file "' + url + '" failed.';
   }
  }));
  if (!noRunDep) addRunDependency("al " + url);
 }),
 resizeListeners: [],
 updateResizeListeners: (function() {
  var canvas = Module["canvas"];
  Browser.resizeListeners.forEach((function(listener) {
   listener(canvas.width, canvas.height);
  }));
 }),
 setCanvasSize: (function(width, height, noUpdates) {
  var canvas = Module["canvas"];
  Browser.updateCanvasDimensions(canvas, width, height);
  if (!noUpdates) Browser.updateResizeListeners();
 }),
 windowedWidth: 0,
 windowedHeight: 0,
 setFullScreenCanvasSize: (function() {
  if (typeof SDL != "undefined") {
   var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];
   flags = flags | 8388608;
   HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags;
  }
  Browser.updateResizeListeners();
 }),
 setWindowedCanvasSize: (function() {
  if (typeof SDL != "undefined") {
   var flags = HEAPU32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2];
   flags = flags & ~8388608;
   HEAP32[SDL.screen + Runtime.QUANTUM_SIZE * 0 >> 2] = flags;
  }
  Browser.updateResizeListeners();
 }),
 updateCanvasDimensions: (function(canvas, wNative, hNative) {
  if (wNative && hNative) {
   canvas.widthNative = wNative;
   canvas.heightNative = hNative;
  } else {
   wNative = canvas.widthNative;
   hNative = canvas.heightNative;
  }
  var w = wNative;
  var h = hNative;
  if (Module["forcedAspectRatio"] && Module["forcedAspectRatio"] > 0) {
   if (w / h < Module["forcedAspectRatio"]) {
    w = Math.round(h * Module["forcedAspectRatio"]);
   } else {
    h = Math.round(w / Module["forcedAspectRatio"]);
   }
  }
  if ((document["webkitFullScreenElement"] || document["webkitFullscreenElement"] || document["mozFullScreenElement"] || document["mozFullscreenElement"] || document["fullScreenElement"] || document["fullscreenElement"] || document["msFullScreenElement"] || document["msFullscreenElement"] || document["webkitCurrentFullScreenElement"]) === canvas.parentNode && typeof screen != "undefined") {
   var factor = Math.min(screen.width / w, screen.height / h);
   w = Math.round(w * factor);
   h = Math.round(h * factor);
  }
  if (Browser.resizeCanvas) {
   if (canvas.width != w) canvas.width = w;
   if (canvas.height != h) canvas.height = h;
   if (typeof canvas.style != "undefined") {
    canvas.style.removeProperty("width");
    canvas.style.removeProperty("height");
   }
  } else {
   if (canvas.width != wNative) canvas.width = wNative;
   if (canvas.height != hNative) canvas.height = hNative;
   if (typeof canvas.style != "undefined") {
    if (w != wNative || h != hNative) {
     canvas.style.setProperty("width", w + "px", "important");
     canvas.style.setProperty("height", h + "px", "important");
    } else {
     canvas.style.removeProperty("width");
     canvas.style.removeProperty("height");
    }
   }
  }
 }),
 wgetRequests: {},
 nextWgetRequestHandle: 0,
 getNextWgetRequestHandle: (function() {
  var handle = Browser.nextWgetRequestHandle;
  Browser.nextWgetRequestHandle++;
  return handle;
 })
};
function _malloc(bytes) {
 var ptr = Runtime.dynamicAlloc(bytes + 8);
 return ptr + 8 & 4294967288;
}
Module["_malloc"] = _malloc;
function _free() {}
Module["_free"] = _free;
var _environ = STATICTOP;
STATICTOP += 16;
function ___buildEnvironment(env) {
 var MAX_ENV_VALUES = 64;
 var TOTAL_ENV_SIZE = 1024;
 var poolPtr;
 var envPtr;
 if (!___buildEnvironment.called) {
  ___buildEnvironment.called = true;
  ENV["USER"] = ENV["LOGNAME"] = "web_user";
  ENV["PATH"] = "/";
  ENV["PWD"] = "/";
  ENV["HOME"] = "/home/web_user";
  ENV["LANG"] = "C";
  ENV["_"] = Module["thisProgram"];
  poolPtr = allocate(TOTAL_ENV_SIZE, "i8", ALLOC_STATIC);
  envPtr = allocate(MAX_ENV_VALUES * 4, "i8*", ALLOC_STATIC);
  HEAP32[envPtr >> 2] = poolPtr;
  HEAP32[_environ >> 2] = envPtr;
 } else {
  envPtr = HEAP32[_environ >> 2];
  poolPtr = HEAP32[envPtr >> 2];
 }
 var strings = [];
 var totalSize = 0;
 for (var key in env) {
  if (typeof env[key] === "string") {
   var line = key + "=" + env[key];
   strings.push(line);
   totalSize += line.length;
  }
 }
 if (totalSize > TOTAL_ENV_SIZE) {
  throw new Error("Environment size exceeded TOTAL_ENV_SIZE!");
 }
 var ptrSize = 4;
 for (var i = 0; i < strings.length; i++) {
  var line = strings[i];
  writeAsciiToMemory(line, poolPtr);
  HEAP32[envPtr + i * ptrSize >> 2] = poolPtr;
  poolPtr += line.length + 1;
 }
 HEAP32[envPtr + strings.length * ptrSize >> 2] = 0;
}
var ENV = {};
function _getenv(name) {
 if (name === 0) return 0;
 name = Pointer_stringify(name);
 if (!ENV.hasOwnProperty(name)) return 0;
 if (_getenv.ret) _free(_getenv.ret);
 _getenv.ret = allocate(intArrayFromString(ENV[name]), "i8", ALLOC_NORMAL);
 return _getenv.ret;
}
function _putenv(string) {
 if (string === 0) {
  ___setErrNo(ERRNO_CODES.EINVAL);
  return -1;
 }
 string = Pointer_stringify(string);
 var splitPoint = string.indexOf("=");
 if (string === "" || string.indexOf("=") === -1) {
  ___setErrNo(ERRNO_CODES.EINVAL);
  return -1;
 }
 var name = string.slice(0, splitPoint);
 var value = string.slice(splitPoint + 1);
 if (!(name in ENV) || ENV[name] !== value) {
  ENV[name] = value;
  ___buildEnvironment(ENV);
 }
 return 0;
}
function _SDL_RWFromConstMem(mem, size) {
 var id = SDL.rwops.length;
 SDL.rwops.push({
  bytes: mem,
  count: size
 });
 return id;
}
function _TTF_FontHeight(font) {
 var fontData = SDL.fonts[font];
 return fontData.size;
}
function _TTF_SizeText(font, text, w, h) {
 var fontData = SDL.fonts[font];
 if (w) {
  HEAP32[w >> 2] = SDL.estimateTextWidth(fontData, Pointer_stringify(text));
 }
 if (h) {
  HEAP32[h >> 2] = fontData.size;
 }
 return 0;
}
function _TTF_RenderText_Solid(font, text, color) {
 text = Pointer_stringify(text) || " ";
 var fontData = SDL.fonts[font];
 var w = SDL.estimateTextWidth(fontData, text);
 var h = fontData.size;
 var color = SDL.loadColorToCSSRGB(color);
 var fontString = h + "px " + fontData.name;
 var surf = SDL.makeSurface(w, h, 0, false, "text:" + text);
 var surfData = SDL.surfaces[surf];
 surfData.ctx.save();
 surfData.ctx.fillStyle = color;
 surfData.ctx.font = fontString;
 surfData.ctx.textBaseline = "top";
 surfData.ctx.fillText(text, 0, 0);
 surfData.ctx.restore();
 return surf;
}
function _Mix_HaltMusic() {
 var audio = SDL.music.audio;
 if (audio) {
  audio.src = audio.src;
  audio.currentPosition = 0;
  audio.pause();
 }
 SDL.music.audio = null;
 if (SDL.hookMusicFinished) {
  Runtime.dynCall("v", SDL.hookMusicFinished);
 }
 return 0;
}
function _Mix_PlayMusic(id, loops) {
 if (SDL.music.audio) {
  if (!SDL.music.audio.paused) Module.printErr("Music is already playing. " + SDL.music.source);
  SDL.music.audio.pause();
 }
 var info = SDL.audios[id];
 var audio;
 if (info.webAudio) {
  audio = {};
  audio.resource = info;
  audio.paused = false;
  audio.currentPosition = 0;
  audio.play = (function() {
   SDL.playWebAudio(this);
  });
  audio.pause = (function() {
   SDL.pauseWebAudio(this);
  });
 } else if (info.audio) {
  audio = info.audio;
 }
 audio["onended"] = (function() {
  if (SDL.music.audio == this) _Mix_HaltMusic();
 });
 audio.loop = loops != 0;
 audio.volume = SDL.music.volume;
 SDL.music.audio = audio;
 audio.play();
 return 0;
}
function _Mix_FreeChunk(id) {
 SDL.audios[id] = null;
}
function _Mix_LoadWAV_RW(rwopsID, freesrc) {
 var rwops = SDL.rwops[rwopsID];
 if (rwops === undefined) return 0;
 var filename = "";
 var audio;
 var webAudio;
 var bytes;
 if (rwops.filename !== undefined) {
  filename = PATH.resolve(rwops.filename);
  var raw = Module["preloadedAudios"][filename];
  if (!raw) {
   if (raw === null) Module.printErr("Trying to reuse preloaded audio, but freePreloadedMediaOnUse is set!");
   if (!Module.noAudioDecoding) Runtime.warnOnce("Cannot find preloaded audio " + filename);
   try {
    bytes = FS.readFile(filename);
   } catch (e) {
    Module.printErr("Couldn't find file for: " + filename);
    return 0;
   }
  }
  if (Module["freePreloadedMediaOnUse"]) {
   Module["preloadedAudios"][filename] = null;
  }
  audio = raw;
 } else if (rwops.bytes !== undefined) {
  if (SDL.webAudioAvailable()) bytes = HEAPU8.buffer.slice(rwops.bytes, rwops.bytes + rwops.count); else bytes = HEAPU8.subarray(rwops.bytes, rwops.bytes + rwops.count);
 } else {
  return 0;
 }
 var arrayBuffer = bytes ? bytes.buffer || bytes : bytes;
 var canPlayWithWebAudio = Module["SDL_canPlayWithWebAudio"] === undefined || Module["SDL_canPlayWithWebAudio"](filename, arrayBuffer);
 if (bytes !== undefined && SDL.webAudioAvailable() && canPlayWithWebAudio) {
  audio = undefined;
  webAudio = {};
  webAudio.onDecodeComplete = [];
  function onDecodeComplete(data) {
   webAudio.decodedBuffer = data;
   webAudio.onDecodeComplete.forEach((function(e) {
    e();
   }));
   webAudio.onDecodeComplete = undefined;
  }
  SDL.audioContext["decodeAudioData"](arrayBuffer, onDecodeComplete);
 } else if (audio === undefined && bytes) {
  var blob = new Blob([ bytes ], {
   type: rwops.mimetype
  });
  var url = URL.createObjectURL(blob);
  audio = new Audio;
  audio.src = url;
  audio.mozAudioChannelType = "content";
 }
 var id = SDL.audios.length;
 SDL.audios.push({
  source: filename,
  audio: audio,
  webAudio: webAudio
 });
 return id;
}
function _Mix_PlayChannel(channel, id, loops) {
 var info = SDL.audios[id];
 if (!info) return -1;
 if (!info.audio && !info.webAudio) return -1;
 if (channel == -1) {
  for (var i = SDL.channelMinimumNumber; i < SDL.numChannels; i++) {
   if (!SDL.channels[i].audio) {
    channel = i;
    break;
   }
  }
  if (channel == -1) {
   Module.printErr("All " + SDL.numChannels + " channels in use!");
   return -1;
  }
 }
 var channelInfo = SDL.channels[channel];
 var audio;
 if (info.webAudio) {
  audio = {};
  audio.resource = info;
  audio.paused = false;
  audio.currentPosition = 0;
  audio.play = (function() {
   SDL.playWebAudio(this);
  });
  audio.pause = (function() {
   SDL.pauseWebAudio(this);
  });
 } else {
  audio = info.audio.cloneNode(true);
  audio.numChannels = info.audio.numChannels;
  audio.frequency = info.audio.frequency;
 }
 audio["onended"] = function SDL_audio_onended() {
  if (channelInfo.audio == this) {
   channelInfo.audio.paused = true;
   channelInfo.audio = null;
  }
  if (SDL.channelFinished) Runtime.getFuncWrapper(SDL.channelFinished, "vi")(channel);
 };
 channelInfo.audio = audio;
 audio.loop = loops != 0;
 audio.volume = channelInfo.volume;
 audio.play();
 return channel;
}
function _SDL_PauseAudio(pauseOn) {
 if (!SDL.audio) {
  return;
 }
 if (pauseOn) {
  if (SDL.audio.timer !== undefined) {
   clearTimeout(SDL.audio.timer);
   SDL.audio.numAudioTimersPending = 0;
   SDL.audio.timer = undefined;
  }
 } else if (!SDL.audio.timer) {
  SDL.audio.numAudioTimersPending = 1;
  SDL.audio.timer = Browser.safeSetTimeout(SDL.audio.caller, 1);
 }
 SDL.audio.paused = pauseOn;
}
function _SDL_CloseAudio() {
 if (SDL.audio) {
  _SDL_PauseAudio(1);
  _free(SDL.audio.buffer);
  SDL.audio = null;
  SDL.allocateChannels(0);
 }
}
function _SDL_LockSurface(surf) {
 var surfData = SDL.surfaces[surf];
 surfData.locked++;
 if (surfData.locked > 1) return 0;
 if (!surfData.buffer) {
  surfData.buffer = _malloc(surfData.width * surfData.height * 4);
  HEAP32[surf + 20 >> 2] = surfData.buffer;
 }
 HEAP32[surf + 20 >> 2] = surfData.buffer;
 if (surf == SDL.screen && Module.screenIsReadOnly && surfData.image) return 0;
 if (SDL.defaults.discardOnLock) {
  if (!surfData.image) {
   surfData.image = surfData.ctx.createImageData(surfData.width, surfData.height);
  }
  if (!SDL.defaults.opaqueFrontBuffer) return;
 } else {
  surfData.image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
 }
 if (surf == SDL.screen && SDL.defaults.opaqueFrontBuffer) {
  var data = surfData.image.data;
  var num = data.length;
  for (var i = 0; i < num / 4; i++) {
   data[i * 4 + 3] = 255;
  }
 }
 if (SDL.defaults.copyOnLock && !SDL.defaults.discardOnLock) {
  if (surfData.isFlagSet(2097152)) {
   throw "CopyOnLock is not supported for SDL_LockSurface with SDL_HWPALETTE flag set" + (new Error).stack;
  } else {
   HEAPU8.set(surfData.image.data, surfData.buffer);
  }
 }
 return 0;
}
function _SDL_FreeRW(rwopsID) {
 SDL.rwops[rwopsID] = null;
 while (SDL.rwops.length > 0 && SDL.rwops[SDL.rwops.length - 1] === null) {
  SDL.rwops.pop();
 }
}
function _IMG_Load_RW(rwopsID, freeSrc) {
 try {
  function cleanup() {
   if (rwops && freeSrc) _SDL_FreeRW(rwopsID);
  }
  function addCleanup(func) {
   var old = cleanup;
   cleanup = function added_cleanup() {
    old();
    func();
   };
  }
  var rwops = SDL.rwops[rwopsID];
  if (rwops === undefined) {
   return 0;
  }
  var filename = rwops.filename;
  if (filename === undefined) {
   Runtime.warnOnce("Only file names that have been preloaded are supported for IMG_Load_RW. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js), or package files with --use-preload-plugins");
   return 0;
  }
  if (!raw) {
   filename = PATH.resolve(filename);
   var raw = Module["preloadedImages"][filename];
   if (!raw) {
    if (raw === null) Module.printErr("Trying to reuse preloaded image, but freePreloadedMediaOnUse is set!");
    Runtime.warnOnce("Cannot find preloaded image " + filename);
    Runtime.warnOnce("Cannot find preloaded image " + filename + ". Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js), or package files with --use-preload-plugins");
    return 0;
   } else if (Module["freePreloadedMediaOnUse"]) {
    Module["preloadedImages"][filename] = null;
   }
  }
  var surf = SDL.makeSurface(raw.width, raw.height, 0, false, "load:" + filename);
  var surfData = SDL.surfaces[surf];
  surfData.ctx.globalCompositeOperation = "copy";
  if (!raw.rawData) {
   surfData.ctx.drawImage(raw, 0, 0, raw.width, raw.height, 0, 0, raw.width, raw.height);
  } else {
   var imageData = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
   if (raw.bpp == 4) {
    imageData.data.set(HEAPU8.subarray(raw.data, raw.data + raw.size));
   } else if (raw.bpp == 3) {
    var pixels = raw.size / 3;
    var data = imageData.data;
    var sourcePtr = raw.data;
    var destPtr = 0;
    for (var i = 0; i < pixels; i++) {
     data[destPtr++] = HEAPU8[sourcePtr++ >> 0];
     data[destPtr++] = HEAPU8[sourcePtr++ >> 0];
     data[destPtr++] = HEAPU8[sourcePtr++ >> 0];
     data[destPtr++] = 255;
    }
   } else if (raw.bpp == 1) {
    var pixels = raw.size;
    var data = imageData.data;
    var sourcePtr = raw.data;
    var destPtr = 0;
    for (var i = 0; i < pixels; i++) {
     var value = HEAPU8[sourcePtr++ >> 0];
     data[destPtr++] = value;
     data[destPtr++] = value;
     data[destPtr++] = value;
     data[destPtr++] = 255;
    }
   } else {
    Module.printErr("cannot handle bpp " + raw.bpp);
    return 0;
   }
   surfData.ctx.putImageData(imageData, 0, 0);
  }
  surfData.ctx.globalCompositeOperation = "source-over";
  _SDL_LockSurface(surf);
  surfData.locked--;
  if (SDL.GL) {
   surfData.canvas = surfData.ctx = null;
  }
  return surf;
 } finally {
  cleanup();
 }
}
function _SDL_RWFromFile(_name, mode) {
 var id = SDL.rwops.length;
 var name = Pointer_stringify(_name);
 SDL.rwops.push({
  filename: name,
  mimetype: Browser.getMimetype(name)
 });
 return id;
}
function _IMG_Load(filename) {
 var rwops = _SDL_RWFromFile(filename);
 var result = _IMG_Load_RW(rwops, 1);
 return result;
}
function _SDL_UpperBlitScaled(src, srcrect, dst, dstrect) {
 return SDL.blitSurface(src, srcrect, dst, dstrect, true);
}
function _SDL_UpperBlit(src, srcrect, dst, dstrect) {
 return SDL.blitSurface(src, srcrect, dst, dstrect, false);
}
function _SDL_GetTicks() {
 return Date.now() - SDL.startTime | 0;
}
var SDL = {
 defaults: {
  width: 320,
  height: 200,
  copyOnLock: true,
  discardOnLock: false,
  opaqueFrontBuffer: true
 },
 version: null,
 surfaces: {},
 canvasPool: [],
 events: [],
 fonts: [ null ],
 audios: [ null ],
 rwops: [ null ],
 music: {
  audio: null,
  volume: 1
 },
 mixerFrequency: 22050,
 mixerFormat: 32784,
 mixerNumChannels: 2,
 mixerChunkSize: 1024,
 channelMinimumNumber: 0,
 GL: false,
 glAttributes: {
  0: 3,
  1: 3,
  2: 2,
  3: 0,
  4: 0,
  5: 1,
  6: 16,
  7: 0,
  8: 0,
  9: 0,
  10: 0,
  11: 0,
  12: 0,
  13: 0,
  14: 0,
  15: 1,
  16: 0,
  17: 0,
  18: 0
 },
 keyboardState: null,
 keyboardMap: {},
 canRequestFullscreen: false,
 isRequestingFullscreen: false,
 textInput: false,
 startTime: null,
 initFlags: 0,
 buttonState: 0,
 modState: 0,
 DOMButtons: [ 0, 0, 0 ],
 DOMEventToSDLEvent: {},
 TOUCH_DEFAULT_ID: 0,
 eventHandler: null,
 eventHandlerContext: null,
 eventHandlerTemp: 0,
 keyCodes: {
  16: 1249,
  17: 1248,
  18: 1250,
  20: 1081,
  33: 1099,
  34: 1102,
  35: 1101,
  36: 1098,
  37: 1104,
  38: 1106,
  39: 1103,
  40: 1105,
  44: 316,
  45: 1097,
  46: 127,
  91: 1251,
  93: 1125,
  96: 1122,
  97: 1113,
  98: 1114,
  99: 1115,
  100: 1116,
  101: 1117,
  102: 1118,
  103: 1119,
  104: 1120,
  105: 1121,
  106: 1109,
  107: 1111,
  109: 1110,
  110: 1123,
  111: 1108,
  112: 1082,
  113: 1083,
  114: 1084,
  115: 1085,
  116: 1086,
  117: 1087,
  118: 1088,
  119: 1089,
  120: 1090,
  121: 1091,
  122: 1092,
  123: 1093,
  124: 1128,
  125: 1129,
  126: 1130,
  127: 1131,
  128: 1132,
  129: 1133,
  130: 1134,
  131: 1135,
  132: 1136,
  133: 1137,
  134: 1138,
  135: 1139,
  144: 1107,
  160: 94,
  161: 33,
  162: 34,
  163: 35,
  164: 36,
  165: 37,
  166: 38,
  167: 95,
  168: 40,
  169: 41,
  170: 42,
  171: 43,
  172: 124,
  173: 45,
  174: 123,
  175: 125,
  176: 126,
  181: 127,
  182: 129,
  183: 128,
  188: 44,
  190: 46,
  191: 47,
  192: 96,
  219: 91,
  220: 92,
  221: 93,
  222: 39,
  224: 1251
 },
 scanCodes: {
  8: 42,
  9: 43,
  13: 40,
  27: 41,
  32: 44,
  35: 204,
  39: 53,
  44: 54,
  46: 55,
  47: 56,
  48: 39,
  49: 30,
  50: 31,
  51: 32,
  52: 33,
  53: 34,
  54: 35,
  55: 36,
  56: 37,
  57: 38,
  58: 203,
  59: 51,
  61: 46,
  91: 47,
  92: 49,
  93: 48,
  96: 52,
  97: 4,
  98: 5,
  99: 6,
  100: 7,
  101: 8,
  102: 9,
  103: 10,
  104: 11,
  105: 12,
  106: 13,
  107: 14,
  108: 15,
  109: 16,
  110: 17,
  111: 18,
  112: 19,
  113: 20,
  114: 21,
  115: 22,
  116: 23,
  117: 24,
  118: 25,
  119: 26,
  120: 27,
  121: 28,
  122: 29,
  127: 76,
  305: 224,
  308: 226,
  316: 70
 },
 loadRect: (function(rect) {
  return {
   x: HEAP32[rect + 0 >> 2],
   y: HEAP32[rect + 4 >> 2],
   w: HEAP32[rect + 8 >> 2],
   h: HEAP32[rect + 12 >> 2]
  };
 }),
 updateRect: (function(rect, r) {
  HEAP32[rect >> 2] = r.x;
  HEAP32[rect + 4 >> 2] = r.y;
  HEAP32[rect + 8 >> 2] = r.w;
  HEAP32[rect + 12 >> 2] = r.h;
 }),
 intersectionOfRects: (function(first, second) {
  var leftX = Math.max(first.x, second.x);
  var leftY = Math.max(first.y, second.y);
  var rightX = Math.min(first.x + first.w, second.x + second.w);
  var rightY = Math.min(first.y + first.h, second.y + second.h);
  return {
   x: leftX,
   y: leftY,
   w: Math.max(leftX, rightX) - leftX,
   h: Math.max(leftY, rightY) - leftY
  };
 }),
 checkPixelFormat: (function(fmt) {}),
 loadColorToCSSRGB: (function(color) {
  var rgba = HEAP32[color >> 2];
  return "rgb(" + (rgba & 255) + "," + (rgba >> 8 & 255) + "," + (rgba >> 16 & 255) + ")";
 }),
 loadColorToCSSRGBA: (function(color) {
  var rgba = HEAP32[color >> 2];
  return "rgba(" + (rgba & 255) + "," + (rgba >> 8 & 255) + "," + (rgba >> 16 & 255) + "," + (rgba >> 24 & 255) / 255 + ")";
 }),
 translateColorToCSSRGBA: (function(rgba) {
  return "rgba(" + (rgba & 255) + "," + (rgba >> 8 & 255) + "," + (rgba >> 16 & 255) + "," + (rgba >>> 24) / 255 + ")";
 }),
 translateRGBAToCSSRGBA: (function(r, g, b, a) {
  return "rgba(" + (r & 255) + "," + (g & 255) + "," + (b & 255) + "," + (a & 255) / 255 + ")";
 }),
 translateRGBAToColor: (function(r, g, b, a) {
  return r | g << 8 | b << 16 | a << 24;
 }),
 makeSurface: (function(width, height, flags, usePageCanvas, source, rmask, gmask, bmask, amask) {
  flags = flags || 0;
  var is_SDL_HWSURFACE = flags & 1;
  var is_SDL_HWPALETTE = flags & 2097152;
  var is_SDL_OPENGL = flags & 67108864;
  var surf = _malloc(60);
  var pixelFormat = _malloc(44);
  var bpp = is_SDL_HWPALETTE ? 1 : 4;
  var buffer = 0;
  if (!is_SDL_HWSURFACE && !is_SDL_OPENGL) {
   buffer = _malloc(width * height * 4);
  }
  HEAP32[surf >> 2] = flags;
  HEAP32[surf + 4 >> 2] = pixelFormat;
  HEAP32[surf + 8 >> 2] = width;
  HEAP32[surf + 12 >> 2] = height;
  HEAP32[surf + 16 >> 2] = width * bpp;
  HEAP32[surf + 20 >> 2] = buffer;
  HEAP32[surf + 36 >> 2] = 0;
  HEAP32[surf + 40 >> 2] = 0;
  HEAP32[surf + 44 >> 2] = Module["canvas"].width;
  HEAP32[surf + 48 >> 2] = Module["canvas"].height;
  HEAP32[surf + 56 >> 2] = 1;
  HEAP32[pixelFormat >> 2] = -2042224636;
  HEAP32[pixelFormat + 4 >> 2] = 0;
  HEAP8[pixelFormat + 8 >> 0] = bpp * 8;
  HEAP8[pixelFormat + 9 >> 0] = bpp;
  HEAP32[pixelFormat + 12 >> 2] = rmask || 255;
  HEAP32[pixelFormat + 16 >> 2] = gmask || 65280;
  HEAP32[pixelFormat + 20 >> 2] = bmask || 16711680;
  HEAP32[pixelFormat + 24 >> 2] = amask || 4278190080;
  SDL.GL = SDL.GL || is_SDL_OPENGL;
  var canvas;
  if (!usePageCanvas) {
   if (SDL.canvasPool.length > 0) {
    canvas = SDL.canvasPool.pop();
   } else {
    canvas = document.createElement("canvas");
   }
   canvas.width = width;
   canvas.height = height;
  } else {
   canvas = Module["canvas"];
  }
  var webGLContextAttributes = {
   antialias: SDL.glAttributes[13] != 0 && SDL.glAttributes[14] > 1,
   depth: SDL.glAttributes[6] > 0,
   stencil: SDL.glAttributes[7] > 0,
   alpha: SDL.glAttributes[3] > 0
  };
  var ctx = Browser.createContext(canvas, is_SDL_OPENGL, usePageCanvas, webGLContextAttributes);
  SDL.surfaces[surf] = {
   width: width,
   height: height,
   canvas: canvas,
   ctx: ctx,
   surf: surf,
   buffer: buffer,
   pixelFormat: pixelFormat,
   alpha: 255,
   flags: flags,
   locked: 0,
   usePageCanvas: usePageCanvas,
   source: source,
   isFlagSet: (function(flag) {
    return flags & flag;
   })
  };
  return surf;
 }),
 copyIndexedColorData: (function(surfData, rX, rY, rW, rH) {
  if (!surfData.colors) {
   return;
  }
  var fullWidth = Module["canvas"].width;
  var fullHeight = Module["canvas"].height;
  var startX = rX || 0;
  var startY = rY || 0;
  var endX = (rW || fullWidth - startX) + startX;
  var endY = (rH || fullHeight - startY) + startY;
  var buffer = surfData.buffer;
  if (!surfData.image.data32) {
   surfData.image.data32 = new Uint32Array(surfData.image.data.buffer);
  }
  var data32 = surfData.image.data32;
  var colors32 = surfData.colors32;
  for (var y = startY; y < endY; ++y) {
   var base = y * fullWidth;
   for (var x = startX; x < endX; ++x) {
    data32[base + x] = colors32[HEAPU8[buffer + base + x >> 0]];
   }
  }
 }),
 freeSurface: (function(surf) {
  var refcountPointer = surf + 56;
  var refcount = HEAP32[refcountPointer >> 2];
  if (refcount > 1) {
   HEAP32[refcountPointer >> 2] = refcount - 1;
   return;
  }
  var info = SDL.surfaces[surf];
  if (!info.usePageCanvas && info.canvas) SDL.canvasPool.push(info.canvas);
  if (info.buffer) _free(info.buffer);
  _free(info.pixelFormat);
  _free(surf);
  SDL.surfaces[surf] = null;
  if (surf === SDL.screen) {
   SDL.screen = null;
  }
 }),
 blitSurface__deps: [ "SDL_LockSurface" ],
 blitSurface: (function(src, srcrect, dst, dstrect, scale) {
  var srcData = SDL.surfaces[src];
  var dstData = SDL.surfaces[dst];
  var sr, dr;
  if (srcrect) {
   sr = SDL.loadRect(srcrect);
  } else {
   sr = {
    x: 0,
    y: 0,
    w: srcData.width,
    h: srcData.height
   };
  }
  if (dstrect) {
   dr = SDL.loadRect(dstrect);
  } else {
   dr = {
    x: 0,
    y: 0,
    w: srcData.width,
    h: srcData.height
   };
  }
  if (dstData.clipRect) {
   var widthScale = !scale || sr.w === 0 ? 1 : sr.w / dr.w;
   var heightScale = !scale || sr.h === 0 ? 1 : sr.h / dr.h;
   dr = SDL.intersectionOfRects(dstData.clipRect, dr);
   sr.w = dr.w * widthScale;
   sr.h = dr.h * heightScale;
   if (dstrect) {
    SDL.updateRect(dstrect, dr);
   }
  }
  var blitw, blith;
  if (scale) {
   blitw = dr.w;
   blith = dr.h;
  } else {
   blitw = sr.w;
   blith = sr.h;
  }
  if (sr.w === 0 || sr.h === 0 || blitw === 0 || blith === 0) {
   return 0;
  }
  var oldAlpha = dstData.ctx.globalAlpha;
  dstData.ctx.globalAlpha = srcData.alpha / 255;
  dstData.ctx.drawImage(srcData.canvas, sr.x, sr.y, sr.w, sr.h, dr.x, dr.y, blitw, blith);
  dstData.ctx.globalAlpha = oldAlpha;
  if (dst != SDL.screen) {
   Runtime.warnOnce("WARNING: copying canvas data to memory for compatibility");
   _SDL_LockSurface(dst);
   dstData.locked--;
  }
  return 0;
 }),
 downFingers: {},
 savedKeydown: null,
 receiveEvent: (function(event) {
  function unpressAllPressedKeys() {
   for (var code in SDL.keyboardMap) {
    SDL.events.push({
     type: "keyup",
     keyCode: SDL.keyboardMap[code]
    });
   }
  }
  switch (event.type) {
  case "touchstart":
  case "touchmove":
   {
    event.preventDefault();
    var touches = [];
    if (event.type === "touchstart") {
     for (var i = 0; i < event.touches.length; i++) {
      var touch = event.touches[i];
      if (SDL.downFingers[touch.identifier] != true) {
       SDL.downFingers[touch.identifier] = true;
       touches.push(touch);
      }
     }
    } else {
     touches = event.touches;
    }
    var firstTouch = touches[0];
    if (event.type == "touchstart") {
     SDL.DOMButtons[0] = 1;
    }
    var mouseEventType;
    switch (event.type) {
    case "touchstart":
     mouseEventType = "mousedown";
     break;
    case "touchmove":
     mouseEventType = "mousemove";
     break;
    }
    var mouseEvent = {
     type: mouseEventType,
     button: 0,
     pageX: firstTouch.clientX,
     pageY: firstTouch.clientY
    };
    SDL.events.push(mouseEvent);
    for (var i = 0; i < touches.length; i++) {
     var touch = touches[i];
     SDL.events.push({
      type: event.type,
      touch: touch
     });
    }
    break;
   }
  case "touchend":
   {
    event.preventDefault();
    for (var i = 0; i < event.changedTouches.length; i++) {
     var touch = event.changedTouches[i];
     if (SDL.downFingers[touch.identifier] === true) {
      delete SDL.downFingers[touch.identifier];
     }
    }
    var mouseEvent = {
     type: "mouseup",
     button: 0,
     pageX: event.changedTouches[0].clientX,
     pageY: event.changedTouches[0].clientY
    };
    SDL.DOMButtons[0] = 0;
    SDL.events.push(mouseEvent);
    for (var i = 0; i < event.changedTouches.length; i++) {
     var touch = event.changedTouches[i];
     SDL.events.push({
      type: "touchend",
      touch: touch
     });
    }
    break;
   }
  case "DOMMouseScroll":
  case "mousewheel":
  case "wheel":
   var delta = -Browser.getMouseWheelDelta(event);
   delta = delta == 0 ? 0 : delta > 0 ? Math.max(delta, 1) : Math.min(delta, -1);
   var button = delta > 0 ? 3 : 4;
   SDL.events.push({
    type: "mousedown",
    button: button,
    pageX: event.pageX,
    pageY: event.pageY
   });
   SDL.events.push({
    type: "mouseup",
    button: button,
    pageX: event.pageX,
    pageY: event.pageY
   });
   SDL.events.push({
    type: "wheel",
    deltaX: 0,
    deltaY: delta
   });
   event.preventDefault();
   break;
  case "mousemove":
   if (SDL.DOMButtons[0] === 1) {
    SDL.events.push({
     type: "touchmove",
     touch: {
      identifier: 0,
      deviceID: -1,
      pageX: event.pageX,
      pageY: event.pageY
     }
    });
   }
   if (Browser.pointerLock) {
    if ("mozMovementX" in event) {
     event["movementX"] = event["mozMovementX"];
     event["movementY"] = event["mozMovementY"];
    }
    if (event["movementX"] == 0 && event["movementY"] == 0) {
     event.preventDefault();
     return;
    }
   }
  case "keydown":
  case "keyup":
  case "keypress":
  case "mousedown":
  case "mouseup":
   if (event.type !== "keydown" || !SDL.unicode && !SDL.textInput || event.keyCode === 8 || event.keyCode === 9) {
    event.preventDefault();
   }
   if (event.type == "mousedown") {
    SDL.DOMButtons[event.button] = 1;
    SDL.events.push({
     type: "touchstart",
     touch: {
      identifier: 0,
      deviceID: -1,
      pageX: event.pageX,
      pageY: event.pageY
     }
    });
   } else if (event.type == "mouseup") {
    if (!SDL.DOMButtons[event.button]) {
     return;
    }
    SDL.events.push({
     type: "touchend",
     touch: {
      identifier: 0,
      deviceID: -1,
      pageX: event.pageX,
      pageY: event.pageY
     }
    });
    SDL.DOMButtons[event.button] = 0;
   }
   if (event.type === "keydown" || event.type === "mousedown") {
    SDL.canRequestFullscreen = true;
   } else if (event.type === "keyup" || event.type === "mouseup") {
    if (SDL.isRequestingFullscreen) {
     Module["requestFullScreen"](true, true);
     SDL.isRequestingFullscreen = false;
    }
    SDL.canRequestFullscreen = false;
   }
   if (event.type === "keypress" && SDL.savedKeydown) {
    SDL.savedKeydown.keypressCharCode = event.charCode;
    SDL.savedKeydown = null;
   } else if (event.type === "keydown") {
    SDL.savedKeydown = event;
   }
   if (event.type !== "keypress" || SDL.textInput) {
    SDL.events.push(event);
   }
   break;
  case "mouseout":
   for (var i = 0; i < 3; i++) {
    if (SDL.DOMButtons[i]) {
     SDL.events.push({
      type: "mouseup",
      button: i,
      pageX: event.pageX,
      pageY: event.pageY
     });
     SDL.DOMButtons[i] = 0;
    }
   }
   event.preventDefault();
   break;
  case "focus":
   SDL.events.push(event);
   event.preventDefault();
   break;
  case "blur":
   SDL.events.push(event);
   unpressAllPressedKeys();
   event.preventDefault();
   break;
  case "visibilitychange":
   SDL.events.push({
    type: "visibilitychange",
    visible: !document.hidden
   });
   unpressAllPressedKeys();
   event.preventDefault();
   break;
  case "unload":
   if (Browser.mainLoop.runner) {
    SDL.events.push(event);
    Browser.mainLoop.runner();
   }
   return;
  case "resize":
   SDL.events.push(event);
   if (event.preventDefault) {
    event.preventDefault();
   }
   break;
  }
  if (SDL.events.length >= 1e4) {
   Module.printErr("SDL event queue full, dropping events");
   SDL.events = SDL.events.slice(0, 1e4);
  }
  SDL.flushEventsToHandler();
  return;
 }),
 lookupKeyCodeForEvent: (function(event) {
  var code = event.keyCode;
  if (code >= 65 && code <= 90) {
   code += 32;
  } else {
   code = SDL.keyCodes[event.keyCode] || event.keyCode;
   if (event.location === KeyboardEvent.DOM_KEY_LOCATION_RIGHT && code >= (224 | 1 << 10) && code <= (227 | 1 << 10)) {
    code += 4;
   }
  }
  return code;
 }),
 handleEvent: (function(event) {
  if (event.handled) return;
  event.handled = true;
  switch (event.type) {
  case "touchstart":
  case "touchend":
  case "touchmove":
   {
    Browser.calculateMouseEvent(event);
    break;
   }
  case "keydown":
  case "keyup":
   {
    var down = event.type === "keydown";
    var code = SDL.lookupKeyCodeForEvent(event);
    HEAP8[SDL.keyboardState + code >> 0] = down;
    SDL.modState = (HEAP8[SDL.keyboardState + 1248 >> 0] ? 64 : 0) | (HEAP8[SDL.keyboardState + 1249 >> 0] ? 1 : 0) | (HEAP8[SDL.keyboardState + 1250 >> 0] ? 256 : 0) | (HEAP8[SDL.keyboardState + 1252 >> 0] ? 128 : 0) | (HEAP8[SDL.keyboardState + 1253 >> 0] ? 2 : 0) | (HEAP8[SDL.keyboardState + 1254 >> 0] ? 512 : 0);
    if (down) {
     SDL.keyboardMap[code] = event.keyCode;
    } else {
     delete SDL.keyboardMap[code];
    }
    break;
   }
  case "mousedown":
  case "mouseup":
   if (event.type == "mousedown") {
    SDL.buttonState |= 1 << event.button;
   } else if (event.type == "mouseup") {
    SDL.buttonState &= ~(1 << event.button);
   }
  case "mousemove":
   {
    Browser.calculateMouseEvent(event);
    break;
   }
  }
 }),
 flushEventsToHandler: (function() {
  if (!SDL.eventHandler) return;
  while (SDL.pollEvent(SDL.eventHandlerTemp)) {
   Runtime.dynCall("iii", SDL.eventHandler, [ SDL.eventHandlerContext, SDL.eventHandlerTemp ]);
  }
 }),
 pollEvent: (function(ptr) {
  if (SDL.initFlags & 512 && SDL.joystickEventState) {
   SDL.queryJoysticks();
  }
  if (ptr) {
   while (SDL.events.length > 0) {
    if (SDL.makeCEvent(SDL.events.shift(), ptr) !== false) return 1;
   }
   return 0;
  } else {
   return SDL.events.length > 0;
  }
 }),
 makeCEvent: (function(event, ptr) {
  if (typeof event === "number") {
   _memcpy(ptr, event, 28);
   _free(event);
   return;
  }
  SDL.handleEvent(event);
  switch (event.type) {
  case "keydown":
  case "keyup":
   {
    var down = event.type === "keydown";
    var key = SDL.lookupKeyCodeForEvent(event);
    var scan;
    if (key >= 1024) {
     scan = key - 1024;
    } else {
     scan = SDL.scanCodes[key] || key;
    }
    HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
    HEAP8[ptr + 8 >> 0] = down ? 1 : 0;
    HEAP8[ptr + 9 >> 0] = 0;
    HEAP32[ptr + 12 >> 2] = scan;
    HEAP32[ptr + 16 >> 2] = key;
    HEAP16[ptr + 20 >> 1] = SDL.modState;
    HEAP32[ptr + 24 >> 2] = event.keypressCharCode || key;
    break;
   }
  case "keypress":
   {
    HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
    var cStr = intArrayFromString(String.fromCharCode(event.charCode));
    for (var i = 0; i < cStr.length; ++i) {
     HEAP8[ptr + (8 + i) >> 0] = cStr[i];
    }
    break;
   }
  case "mousedown":
  case "mouseup":
  case "mousemove":
   {
    if (event.type != "mousemove") {
     var down = event.type === "mousedown";
     HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
     HEAP32[ptr + 4 >> 2] = 0;
     HEAP32[ptr + 8 >> 2] = 0;
     HEAP32[ptr + 12 >> 2] = 0;
     HEAP8[ptr + 16 >> 0] = event.button + 1;
     HEAP8[ptr + 17 >> 0] = down ? 1 : 0;
     HEAP32[ptr + 20 >> 2] = Browser.mouseX;
     HEAP32[ptr + 24 >> 2] = Browser.mouseY;
    } else {
     HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
     HEAP32[ptr + 4 >> 2] = 0;
     HEAP32[ptr + 8 >> 2] = 0;
     HEAP32[ptr + 12 >> 2] = 0;
     HEAP32[ptr + 16 >> 2] = SDL.buttonState;
     HEAP32[ptr + 20 >> 2] = Browser.mouseX;
     HEAP32[ptr + 24 >> 2] = Browser.mouseY;
     HEAP32[ptr + 28 >> 2] = Browser.mouseMovementX;
     HEAP32[ptr + 32 >> 2] = Browser.mouseMovementY;
    }
    break;
   }
  case "wheel":
   {
    HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
    HEAP32[ptr + 16 >> 2] = event.deltaX;
    HEAP32[ptr + 20 >> 2] = event.deltaY;
    break;
   }
  case "touchstart":
  case "touchend":
  case "touchmove":
   {
    var touch = event.touch;
    if (!Browser.touches[touch.identifier]) break;
    var w = Module["canvas"].width;
    var h = Module["canvas"].height;
    var x = Browser.touches[touch.identifier].x / w;
    var y = Browser.touches[touch.identifier].y / h;
    var lx = Browser.lastTouches[touch.identifier].x / w;
    var ly = Browser.lastTouches[touch.identifier].y / h;
    var dx = x - lx;
    var dy = y - ly;
    if (touch["deviceID"] === undefined) touch.deviceID = SDL.TOUCH_DEFAULT_ID;
    if (dx === 0 && dy === 0 && event.type === "touchmove") return false;
    HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
    HEAP32[ptr + 4 >> 2] = _SDL_GetTicks();
    tempI64 = [ touch.deviceID >>> 0, (tempDouble = touch.deviceID, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], HEAP32[ptr + 8 >> 2] = tempI64[0], HEAP32[ptr + 12 >> 2] = tempI64[1];
    tempI64 = [ touch.identifier >>> 0, (tempDouble = touch.identifier, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], HEAP32[ptr + 16 >> 2] = tempI64[0], HEAP32[ptr + 20 >> 2] = tempI64[1];
    HEAPF32[ptr + 24 >> 2] = x;
    HEAPF32[ptr + 28 >> 2] = y;
    HEAPF32[ptr + 32 >> 2] = dx;
    HEAPF32[ptr + 36 >> 2] = dy;
    if (touch.force !== undefined) {
     HEAPF32[ptr + 40 >> 2] = touch.force;
    } else {
     HEAPF32[ptr + 40 >> 2] = event.type == "touchend" ? 0 : 1;
    }
    break;
   }
  case "unload":
   {
    HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
    break;
   }
  case "resize":
   {
    HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
    HEAP32[ptr + 4 >> 2] = event.w;
    HEAP32[ptr + 8 >> 2] = event.h;
    break;
   }
  case "joystick_button_up":
  case "joystick_button_down":
   {
    var state = event.type === "joystick_button_up" ? 0 : 1;
    HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
    HEAP8[ptr + 4 >> 0] = event.index;
    HEAP8[ptr + 5 >> 0] = event.button;
    HEAP8[ptr + 6 >> 0] = state;
    break;
   }
  case "joystick_axis_motion":
   {
    HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
    HEAP8[ptr + 4 >> 0] = event.index;
    HEAP8[ptr + 5 >> 0] = event.axis;
    HEAP32[ptr + 8 >> 2] = SDL.joystickAxisValueConversion(event.value);
    break;
   }
  case "focus":
   {
    var SDL_WINDOWEVENT_FOCUS_GAINED = 12;
    HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
    HEAP32[ptr + 4 >> 2] = 0;
    HEAP8[ptr + 8 >> 0] = SDL_WINDOWEVENT_FOCUS_GAINED;
    break;
   }
  case "blur":
   {
    var SDL_WINDOWEVENT_FOCUS_LOST = 13;
    HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
    HEAP32[ptr + 4 >> 2] = 0;
    HEAP8[ptr + 8 >> 0] = SDL_WINDOWEVENT_FOCUS_LOST;
    break;
   }
  case "visibilitychange":
   {
    var SDL_WINDOWEVENT_SHOWN = 1;
    var SDL_WINDOWEVENT_HIDDEN = 2;
    var visibilityEventID = event.visible ? SDL_WINDOWEVENT_SHOWN : SDL_WINDOWEVENT_HIDDEN;
    HEAP32[ptr >> 2] = SDL.DOMEventToSDLEvent[event.type];
    HEAP32[ptr + 4 >> 2] = 0;
    HEAP8[ptr + 8 >> 0] = visibilityEventID;
    break;
   }
  default:
   throw "Unhandled SDL event: " + event.type;
  }
 }),
 estimateTextWidth: (function(fontData, text) {
  var h = fontData.size;
  var fontString = h + "px " + fontData.name;
  var tempCtx = SDL.ttfContext;
  tempCtx.save();
  tempCtx.font = fontString;
  var ret = tempCtx.measureText(text).width | 0;
  tempCtx.restore();
  return ret;
 }),
 allocateChannels: (function(num) {
  if (SDL.numChannels && SDL.numChannels >= num && num != 0) return;
  SDL.numChannels = num;
  SDL.channels = [];
  for (var i = 0; i < num; i++) {
   SDL.channels[i] = {
    audio: null,
    volume: 1
   };
  }
 }),
 setGetVolume: (function(info, volume) {
  if (!info) return 0;
  var ret = info.volume * 128;
  if (volume != -1) {
   info.volume = Math.min(Math.max(volume, 0), 128) / 128;
   if (info.audio) {
    try {
     info.audio.volume = info.volume;
     if (info.audio.webAudioGainNode) info.audio.webAudioGainNode["gain"]["value"] = info.volume;
    } catch (e) {
     Module.printErr("setGetVolume failed to set audio volume: " + e);
    }
   }
  }
  return ret;
 }),
 setPannerPosition: (function(info, x, y, z) {
  if (!info) return;
  if (info.audio) {
   if (info.audio.webAudioPannerNode) {
    info.audio.webAudioPannerNode["setPosition"](x, y, z);
   }
  }
 }),
 playWebAudio: (function(audio) {
  if (!audio) return;
  if (audio.webAudioNode) return;
  if (!SDL.webAudioAvailable()) return;
  try {
   var webAudio = audio.resource.webAudio;
   audio.paused = false;
   if (!webAudio.decodedBuffer) {
    if (webAudio.onDecodeComplete === undefined) abort("Cannot play back audio object that was not loaded");
    webAudio.onDecodeComplete.push((function() {
     if (!audio.paused) SDL.playWebAudio(audio);
    }));
    return;
   }
   audio.webAudioNode = SDL.audioContext["createBufferSource"]();
   audio.webAudioNode["buffer"] = webAudio.decodedBuffer;
   audio.webAudioNode["loop"] = audio.loop;
   audio.webAudioNode["onended"] = (function() {
    audio["onended"]();
   });
   audio.webAudioPannerNode = SDL.audioContext["createPanner"]();
   audio.webAudioPannerNode["panningModel"] = "equalpower";
   audio.webAudioGainNode = SDL.audioContext["createGain"]();
   audio.webAudioGainNode["gain"]["value"] = audio.volume;
   audio.webAudioNode["connect"](audio.webAudioPannerNode);
   audio.webAudioPannerNode["connect"](audio.webAudioGainNode);
   audio.webAudioGainNode["connect"](SDL.audioContext["destination"]);
   audio.webAudioNode["start"](0, audio.currentPosition);
   audio.startTime = SDL.audioContext["currentTime"] - audio.currentPosition;
  } catch (e) {
   Module.printErr("playWebAudio failed: " + e);
  }
 }),
 pauseWebAudio: (function(audio) {
  if (!audio) return;
  if (audio.webAudioNode) {
   try {
    audio.currentPosition = (SDL.audioContext["currentTime"] - audio.startTime) % audio.resource.webAudio.decodedBuffer.duration;
    audio.webAudioNode["onended"] = undefined;
    audio.webAudioNode.stop(0);
    audio.webAudioNode = undefined;
   } catch (e) {
    Module.printErr("pauseWebAudio failed: " + e);
   }
  }
  audio.paused = true;
 }),
 openAudioContext: (function() {
  if (!SDL.audioContext) {
   if (typeof AudioContext !== "undefined") SDL.audioContext = new AudioContext; else if (typeof webkitAudioContext !== "undefined") SDL.audioContext = new webkitAudioContext;
  }
 }),
 webAudioAvailable: (function() {
  return !!SDL.audioContext;
 }),
 fillWebAudioBufferFromHeap: (function(heapPtr, sizeSamplesPerChannel, dstAudioBuffer) {
  var numChannels = SDL.audio.channels;
  for (var c = 0; c < numChannels; ++c) {
   var channelData = dstAudioBuffer["getChannelData"](c);
   if (channelData.length != sizeSamplesPerChannel) {
    throw "Web Audio output buffer length mismatch! Destination size: " + channelData.length + " samples vs expected " + sizeSamplesPerChannel + " samples!";
   }
   if (SDL.audio.format == 32784) {
    for (var j = 0; j < sizeSamplesPerChannel; ++j) {
     channelData[j] = HEAP16[heapPtr + (j * numChannels + c) * 2 >> 1] / 32768;
    }
   } else if (SDL.audio.format == 8) {
    for (var j = 0; j < sizeSamplesPerChannel; ++j) {
     var v = HEAP8[heapPtr + (j * numChannels + c) >> 0];
     channelData[j] = (v >= 0 ? v - 128 : v + 128) / 128;
    }
   }
  }
 }),
 debugSurface: (function(surfData) {
  console.log("dumping surface " + [ surfData.surf, surfData.source, surfData.width, surfData.height ]);
  var image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
  var data = image.data;
  var num = Math.min(surfData.width, surfData.height);
  for (var i = 0; i < num; i++) {
   console.log("   diagonal " + i + ":" + [ data[i * surfData.width * 4 + i * 4 + 0], data[i * surfData.width * 4 + i * 4 + 1], data[i * surfData.width * 4 + i * 4 + 2], data[i * surfData.width * 4 + i * 4 + 3] ]);
  }
 }),
 joystickEventState: 1,
 lastJoystickState: {},
 joystickNamePool: {},
 recordJoystickState: (function(joystick, state) {
  var buttons = new Array(state.buttons.length);
  for (var i = 0; i < state.buttons.length; i++) {
   buttons[i] = SDL.getJoystickButtonState(state.buttons[i]);
  }
  SDL.lastJoystickState[joystick] = {
   buttons: buttons,
   axes: state.axes.slice(0),
   timestamp: state.timestamp,
   index: state.index,
   id: state.id
  };
 }),
 getJoystickButtonState: (function(button) {
  if (typeof button === "object") {
   return button.pressed;
  } else {
   return button > 0;
  }
 }),
 queryJoysticks: (function() {
  for (var joystick in SDL.lastJoystickState) {
   var state = SDL.getGamepad(joystick - 1);
   var prevState = SDL.lastJoystickState[joystick];
   if (typeof state.timestamp !== "number" || state.timestamp !== prevState.timestamp) {
    var i;
    for (i = 0; i < state.buttons.length; i++) {
     var buttonState = SDL.getJoystickButtonState(state.buttons[i]);
     if (buttonState !== prevState.buttons[i]) {
      SDL.events.push({
       type: buttonState ? "joystick_button_down" : "joystick_button_up",
       joystick: joystick,
       index: joystick - 1,
       button: i
      });
     }
    }
    for (i = 0; i < state.axes.length; i++) {
     if (state.axes[i] !== prevState.axes[i]) {
      SDL.events.push({
       type: "joystick_axis_motion",
       joystick: joystick,
       index: joystick - 1,
       axis: i,
       value: state.axes[i]
      });
     }
    }
    SDL.recordJoystickState(joystick, state);
   }
  }
 }),
 joystickAxisValueConversion: (function(value) {
  value = Math.min(1, Math.max(value, -1));
  return Math.ceil((value + 1) * 32767.5 - 32768);
 }),
 getGamepads: (function() {
  var fcn = navigator.getGamepads || navigator.webkitGamepads || navigator.mozGamepads || navigator.gamepads || navigator.webkitGetGamepads;
  if (fcn !== undefined) {
   return fcn.apply(navigator);
  } else {
   return [];
  }
 }),
 getGamepad: (function(deviceIndex) {
  var gamepads = SDL.getGamepads();
  if (gamepads.length > deviceIndex && deviceIndex >= 0) {
   return gamepads[deviceIndex];
  }
  return null;
 })
};
function _Mix_VolumeMusic(volume) {
 return SDL.setGetVolume(SDL.music, volume);
}
function _emscripten_glColor4f(r, g, b, a) {
 r = Math.max(Math.min(r, 1), 0);
 g = Math.max(Math.min(g, 1), 0);
 b = Math.max(Math.min(b, 1), 0);
 a = Math.max(Math.min(a, 1), 0);
 if (GLImmediate.mode >= 0) {
  var start = GLImmediate.vertexCounter << 2;
  GLImmediate.vertexDataU8[start + 0] = r * 255;
  GLImmediate.vertexDataU8[start + 1] = g * 255;
  GLImmediate.vertexDataU8[start + 2] = b * 255;
  GLImmediate.vertexDataU8[start + 3] = a * 255;
  GLImmediate.vertexCounter++;
  GLImmediate.addRendererComponent(GLImmediate.COLOR, 4, GLctx.UNSIGNED_BYTE);
 } else {
  GLImmediate.clientColor[0] = r;
  GLImmediate.clientColor[1] = g;
  GLImmediate.clientColor[2] = b;
  GLImmediate.clientColor[3] = a;
 }
}
function _glColor4ub(r, g, b, a) {
 _emscripten_glColor4f((r & 255) / 255, (g & 255) / 255, (b & 255) / 255, (a & 255) / 255);
}
function _emscripten_glStencilMaskSeparate(x0, x1) {
 GLctx.stencilMaskSeparate(x0, x1);
}
function _SDL_DestroyMutex() {}
function _Mix_OpenAudio(frequency, format, channels, chunksize) {
 SDL.openAudioContext();
 SDL.allocateChannels(32);
 SDL.mixerFrequency = frequency;
 SDL.mixerFormat = format;
 SDL.mixerNumChannels = channels;
 SDL.mixerChunkSize = chunksize;
 return 0;
}
function _emscripten_glStencilMask(x0) {
 GLctx.stencilMask(x0);
}
function _glHint(x0, x1) {
 GLctx.hint(x0, x1);
}
function _emscripten_glStencilFunc(x0, x1, x2) {
 GLctx.stencilFunc(x0, x1, x2);
}
function _SDL_ShowCursor(toggle) {
 switch (toggle) {
 case 0:
  if (Browser.isFullScreen) {
   Module["canvas"].requestPointerLock();
   return 0;
  } else {
   return 1;
  }
  break;
 case 1:
  Module["canvas"].exitPointerLock();
  return 1;
  break;
 case -1:
  return !Browser.pointerLock;
  break;
 default:
  console.log("SDL_ShowCursor called with unknown toggle parameter value: " + toggle + ".");
  break;
 }
}
function _Mix_FadingChannel(channel) {
 return 0;
}
var GLImmediate = {
 MapTreeLib: null,
 spawnMapTreeLib: (function() {
  function CNaiveListMap() {
   var list = [];
   this.insert = function CNaiveListMap_insert(key, val) {
    if (this.contains(key | 0)) return false;
    list.push([ key, val ]);
    return true;
   };
   var __contains_i;
   this.contains = function CNaiveListMap_contains(key) {
    for (__contains_i = 0; __contains_i < list.length; ++__contains_i) {
     if (list[__contains_i][0] === key) return true;
    }
    return false;
   };
   var __get_i;
   this.get = function CNaiveListMap_get(key) {
    for (__get_i = 0; __get_i < list.length; ++__get_i) {
     if (list[__get_i][0] === key) return list[__get_i][1];
    }
    return undefined;
   };
  }
  function CMapTree() {
   function CNLNode() {
    var map = new CNaiveListMap;
    this.child = function CNLNode_child(keyFrag) {
     if (!map.contains(keyFrag | 0)) {
      map.insert(keyFrag | 0, new CNLNode);
     }
     return map.get(keyFrag | 0);
    };
    this.value = undefined;
    this.get = function CNLNode_get() {
     return this.value;
    };
    this.set = function CNLNode_set(val) {
     this.value = val;
    };
   }
   function CKeyView(root) {
    var cur;
    this.reset = function CKeyView_reset() {
     cur = root;
     return this;
    };
    this.reset();
    this.next = function CKeyView_next(keyFrag) {
     cur = cur.child(keyFrag);
     return this;
    };
    this.get = function CKeyView_get() {
     return cur.get();
    };
    this.set = function CKeyView_set(val) {
     cur.set(val);
    };
   }
   var root;
   var staticKeyView;
   this.createKeyView = function CNLNode_createKeyView() {
    return new CKeyView(root);
   };
   this.clear = function CNLNode_clear() {
    root = new CNLNode;
    staticKeyView = this.createKeyView();
   };
   this.clear();
   this.getStaticKeyView = function CNLNode_getStaticKeyView() {
    staticKeyView.reset();
    return staticKeyView;
   };
  }
  return {
   create: (function() {
    return new CMapTree;
   })
  };
 }),
 TexEnvJIT: null,
 spawnTexEnvJIT: (function() {
  var GL_TEXTURE0 = 33984;
  var GL_TEXTURE_1D = 3552;
  var GL_TEXTURE_2D = 3553;
  var GL_TEXTURE_3D = 32879;
  var GL_TEXTURE_CUBE_MAP = 34067;
  var GL_TEXTURE_ENV = 8960;
  var GL_TEXTURE_ENV_MODE = 8704;
  var GL_TEXTURE_ENV_COLOR = 8705;
  var GL_SRC0_RGB = 34176;
  var GL_SRC1_RGB = 34177;
  var GL_SRC2_RGB = 34178;
  var GL_SRC0_ALPHA = 34184;
  var GL_SRC1_ALPHA = 34185;
  var GL_SRC2_ALPHA = 34186;
  var GL_OPERAND0_RGB = 34192;
  var GL_OPERAND1_RGB = 34193;
  var GL_OPERAND2_RGB = 34194;
  var GL_OPERAND0_ALPHA = 34200;
  var GL_OPERAND1_ALPHA = 34201;
  var GL_OPERAND2_ALPHA = 34202;
  var GL_COMBINE_RGB = 34161;
  var GL_COMBINE_ALPHA = 34162;
  var GL_RGB_SCALE = 34163;
  var GL_ALPHA_SCALE = 3356;
  var GL_ADD = 260;
  var GL_BLEND = 3042;
  var GL_REPLACE = 7681;
  var GL_MODULATE = 8448;
  var GL_DECAL = 8449;
  var GL_COMBINE = 34160;
  var GL_SUBTRACT = 34023;
  var GL_INTERPOLATE = 34165;
  var GL_TEXTURE = 5890;
  var GL_CONSTANT = 34166;
  var GL_PRIMARY_COLOR = 34167;
  var GL_PREVIOUS = 34168;
  var GL_SRC_COLOR = 768;
  var GL_ONE_MINUS_SRC_COLOR = 769;
  var GL_SRC_ALPHA = 770;
  var GL_ONE_MINUS_SRC_ALPHA = 771;
  var TEXENVJIT_NAMESPACE_PREFIX = "tej_";
  var TEX_UNIT_UNIFORM_PREFIX = "uTexUnit";
  var TEX_COORD_VARYING_PREFIX = "vTexCoord";
  var PRIM_COLOR_VARYING = "vPrimColor";
  var TEX_MATRIX_UNIFORM_PREFIX = "uTexMatrix";
  var s_texUnits = null;
  var s_activeTexture = 0;
  var s_requiredTexUnitsForPass = [];
  function abort(info) {
   assert(false, "[TexEnvJIT] ABORT: " + info);
  }
  function abort_noSupport(info) {
   abort("No support: " + info);
  }
  function abort_sanity(info) {
   abort("Sanity failure: " + info);
  }
  function genTexUnitSampleExpr(texUnitID) {
   var texUnit = s_texUnits[texUnitID];
   var texType = texUnit.getTexType();
   var func = null;
   switch (texType) {
   case GL_TEXTURE_1D:
    func = "texture2D";
    break;
   case GL_TEXTURE_2D:
    func = "texture2D";
    break;
   case GL_TEXTURE_3D:
    return abort_noSupport("No support for 3D textures.");
   case GL_TEXTURE_CUBE_MAP:
    func = "textureCube";
    break;
   default:
    return abort_sanity("Unknown texType: 0x" + texType.toString(16));
   }
   var texCoordExpr = TEX_COORD_VARYING_PREFIX + texUnitID;
   if (TEX_MATRIX_UNIFORM_PREFIX != null) {
    texCoordExpr = "(" + TEX_MATRIX_UNIFORM_PREFIX + texUnitID + " * " + texCoordExpr + ")";
   }
   return func + "(" + TEX_UNIT_UNIFORM_PREFIX + texUnitID + ", " + texCoordExpr + ".xy)";
  }
  function getTypeFromCombineOp(op) {
   switch (op) {
   case GL_SRC_COLOR:
   case GL_ONE_MINUS_SRC_COLOR:
    return "vec3";
   case GL_SRC_ALPHA:
   case GL_ONE_MINUS_SRC_ALPHA:
    return "float";
   }
   return abort_noSupport("Unsupported combiner op: 0x" + op.toString(16));
  }
  function getCurTexUnit() {
   return s_texUnits[s_activeTexture];
  }
  function genCombinerSourceExpr(texUnitID, constantExpr, previousVar, src, op) {
   var srcExpr = null;
   switch (src) {
   case GL_TEXTURE:
    srcExpr = genTexUnitSampleExpr(texUnitID);
    break;
   case GL_CONSTANT:
    srcExpr = constantExpr;
    break;
   case GL_PRIMARY_COLOR:
    srcExpr = PRIM_COLOR_VARYING;
    break;
   case GL_PREVIOUS:
    srcExpr = previousVar;
    break;
   default:
    return abort_noSupport("Unsupported combiner src: 0x" + src.toString(16));
   }
   var expr = null;
   switch (op) {
   case GL_SRC_COLOR:
    expr = srcExpr + ".rgb";
    break;
   case GL_ONE_MINUS_SRC_COLOR:
    expr = "(vec3(1.0) - " + srcExpr + ".rgb)";
    break;
   case GL_SRC_ALPHA:
    expr = srcExpr + ".a";
    break;
   case GL_ONE_MINUS_SRC_ALPHA:
    expr = "(1.0 - " + srcExpr + ".a)";
    break;
   default:
    return abort_noSupport("Unsupported combiner op: 0x" + op.toString(16));
   }
   return expr;
  }
  function valToFloatLiteral(val) {
   if (val == Math.round(val)) return val + ".0";
   return val;
  }
  function CTexEnv() {
   this.mode = GL_MODULATE;
   this.colorCombiner = GL_MODULATE;
   this.alphaCombiner = GL_MODULATE;
   this.colorScale = 1;
   this.alphaScale = 1;
   this.envColor = [ 0, 0, 0, 0 ];
   this.colorSrc = [ GL_TEXTURE, GL_PREVIOUS, GL_CONSTANT ];
   this.alphaSrc = [ GL_TEXTURE, GL_PREVIOUS, GL_CONSTANT ];
   this.colorOp = [ GL_SRC_COLOR, GL_SRC_COLOR, GL_SRC_ALPHA ];
   this.alphaOp = [ GL_SRC_ALPHA, GL_SRC_ALPHA, GL_SRC_ALPHA ];
   this.traverseKey = {
    7681: 0,
    8448: 1,
    260: 2,
    3042: 3,
    8449: 4,
    34160: 5,
    34023: 3,
    34165: 4,
    5890: 0,
    34166: 1,
    34167: 2,
    34168: 3,
    768: 0,
    769: 1,
    770: 2,
    768: 3
   };
   this.key0 = -1;
   this.key1 = 0;
   this.key2 = 0;
   this.computeKey0 = (function() {
    var k = this.traverseKey;
    var key = k[this.mode] * 1638400;
    key += k[this.colorCombiner] * 327680;
    key += k[this.alphaCombiner] * 65536;
    key += (this.colorScale - 1) * 16384;
    key += (this.alphaScale - 1) * 4096;
    key += k[this.colorSrc[0]] * 1024;
    key += k[this.colorSrc[1]] * 256;
    key += k[this.colorSrc[2]] * 64;
    key += k[this.alphaSrc[0]] * 16;
    key += k[this.alphaSrc[1]] * 4;
    key += k[this.alphaSrc[2]];
    return key;
   });
   this.computeKey1 = (function() {
    var k = this.traverseKey;
    key = k[this.colorOp[0]] * 4096;
    key += k[this.colorOp[1]] * 1024;
    key += k[this.colorOp[2]] * 256;
    key += k[this.alphaOp[0]] * 16;
    key += k[this.alphaOp[1]] * 4;
    key += k[this.alphaOp[2]];
    return key;
   });
   this.computeKey2 = (function() {
    return this.envColor[0] * 16777216 + this.envColor[1] * 65536 + this.envColor[2] * 256 + 1 + this.envColor[3];
   });
   this.recomputeKey = (function() {
    this.key0 = this.computeKey0();
    this.key1 = this.computeKey1();
    this.key2 = this.computeKey2();
   });
   this.invalidateKey = (function() {
    this.key0 = -1;
    GLImmediate.currentRenderer = null;
   });
  }
  function CTexUnit() {
   this.env = new CTexEnv;
   this.enabled_tex1D = false;
   this.enabled_tex2D = false;
   this.enabled_tex3D = false;
   this.enabled_texCube = false;
   this.texTypesEnabled = 0;
   this.traverseState = function CTexUnit_traverseState(keyView) {
    if (this.texTypesEnabled) {
     if (this.env.key0 == -1) {
      this.env.recomputeKey();
     }
     keyView.next(this.texTypesEnabled | this.env.key0 << 4);
     keyView.next(this.env.key1);
     keyView.next(this.env.key2);
    } else {
     keyView.next(0);
    }
   };
  }
  CTexUnit.prototype.enabled = function CTexUnit_enabled() {
   return this.texTypesEnabled;
  };
  CTexUnit.prototype.genPassLines = function CTexUnit_genPassLines(passOutputVar, passInputVar, texUnitID) {
   if (!this.enabled()) {
    return [ "vec4 " + passOutputVar + " = " + passInputVar + ";" ];
   }
   var lines = this.env.genPassLines(passOutputVar, passInputVar, texUnitID).join("\n");
   var texLoadLines = "";
   var texLoadRegex = /(texture.*?\(.*?\))/g;
   var loadCounter = 0;
   var load;
   while (load = texLoadRegex.exec(lines)) {
    var texLoadExpr = load[1];
    var secondOccurrence = lines.slice(load.index + 1).indexOf(texLoadExpr);
    if (secondOccurrence != -1) {
     var prefix = TEXENVJIT_NAMESPACE_PREFIX + "env" + texUnitID + "_";
     var texLoadVar = prefix + "texload" + loadCounter++;
     var texLoadLine = "vec4 " + texLoadVar + " = " + texLoadExpr + ";\n";
     texLoadLines += texLoadLine + "\n";
     lines = lines.split(texLoadExpr).join(texLoadVar);
     texLoadRegex = /(texture.*\(.*\))/g;
    }
   }
   return [ texLoadLines + lines ];
  };
  CTexUnit.prototype.getTexType = function CTexUnit_getTexType() {
   if (this.enabled_texCube) {
    return GL_TEXTURE_CUBE_MAP;
   } else if (this.enabled_tex3D) {
    return GL_TEXTURE_3D;
   } else if (this.enabled_tex2D) {
    return GL_TEXTURE_2D;
   } else if (this.enabled_tex1D) {
    return GL_TEXTURE_1D;
   }
   return 0;
  };
  CTexEnv.prototype.genPassLines = function CTexEnv_genPassLines(passOutputVar, passInputVar, texUnitID) {
   switch (this.mode) {
   case GL_REPLACE:
    {
     return [ "vec4 " + passOutputVar + " = " + genTexUnitSampleExpr(texUnitID) + ";" ];
    }
   case GL_ADD:
    {
     var prefix = TEXENVJIT_NAMESPACE_PREFIX + "env" + texUnitID + "_";
     var texVar = prefix + "tex";
     var colorVar = prefix + "color";
     var alphaVar = prefix + "alpha";
     return [ "vec4 " + texVar + " = " + genTexUnitSampleExpr(texUnitID) + ";", "vec3 " + colorVar + " = " + passInputVar + ".rgb + " + texVar + ".rgb;", "float " + alphaVar + " = " + passInputVar + ".a * " + texVar + ".a;", "vec4 " + passOutputVar + " = vec4(" + colorVar + ", " + alphaVar + ");" ];
    }
   case GL_MODULATE:
    {
     var line = [ "vec4 " + passOutputVar, " = ", passInputVar, " * ", genTexUnitSampleExpr(texUnitID), ";" ];
     return [ line.join("") ];
    }
   case GL_DECAL:
    {
     var prefix = TEXENVJIT_NAMESPACE_PREFIX + "env" + texUnitID + "_";
     var texVar = prefix + "tex";
     var colorVar = prefix + "color";
     var alphaVar = prefix + "alpha";
     return [ "vec4 " + texVar + " = " + genTexUnitSampleExpr(texUnitID) + ";", [ "vec3 " + colorVar + " = ", passInputVar + ".rgb * (1.0 - " + texVar + ".a)", " + ", texVar + ".rgb * " + texVar + ".a", ";" ].join(""), "float " + alphaVar + " = " + passInputVar + ".a;", "vec4 " + passOutputVar + " = vec4(" + colorVar + ", " + alphaVar + ");" ];
    }
   case GL_BLEND:
    {
     var prefix = TEXENVJIT_NAMESPACE_PREFIX + "env" + texUnitID + "_";
     var texVar = prefix + "tex";
     var colorVar = prefix + "color";
     var alphaVar = prefix + "alpha";
     return [ "vec4 " + texVar + " = " + genTexUnitSampleExpr(texUnitID) + ";", [ "vec3 " + colorVar + " = ", passInputVar + ".rgb * (1.0 - " + texVar + ".rgb)", " + ", PRIM_COLOR_VARYING + ".rgb * " + texVar + ".rgb", ";" ].join(""), "float " + alphaVar + " = " + texVar + ".a;", "vec4 " + passOutputVar + " = vec4(" + colorVar + ", " + alphaVar + ");" ];
    }
   case GL_COMBINE:
    {
     var prefix = TEXENVJIT_NAMESPACE_PREFIX + "env" + texUnitID + "_";
     var colorVar = prefix + "color";
     var alphaVar = prefix + "alpha";
     var colorLines = this.genCombinerLines(true, colorVar, passInputVar, texUnitID, this.colorCombiner, this.colorSrc, this.colorOp);
     var alphaLines = this.genCombinerLines(false, alphaVar, passInputVar, texUnitID, this.alphaCombiner, this.alphaSrc, this.alphaOp);
     var scaledColor = this.colorScale == 1 ? colorVar : colorVar + " * " + valToFloatLiteral(this.colorScale);
     var scaledAlpha = this.alphaScale == 1 ? alphaVar : alphaVar + " * " + valToFloatLiteral(this.alphaScale);
     var line = [ "vec4 " + passOutputVar, " = ", "vec4(", scaledColor, ", ", scaledAlpha, ")", ";" ].join("");
     return [].concat(colorLines, alphaLines, [ line ]);
    }
   }
   return abort_noSupport("Unsupported TexEnv mode: 0x" + this.mode.toString(16));
  };
  CTexEnv.prototype.genCombinerLines = function CTexEnv_getCombinerLines(isColor, outputVar, passInputVar, texUnitID, combiner, srcArr, opArr) {
   var argsNeeded = null;
   switch (combiner) {
   case GL_REPLACE:
    argsNeeded = 1;
    break;
   case GL_MODULATE:
   case GL_ADD:
   case GL_SUBTRACT:
    argsNeeded = 2;
    break;
   case GL_INTERPOLATE:
    argsNeeded = 3;
    break;
   default:
    return abort_noSupport("Unsupported combiner: 0x" + combiner.toString(16));
   }
   var constantExpr = [ "vec4(", valToFloatLiteral(this.envColor[0]), ", ", valToFloatLiteral(this.envColor[1]), ", ", valToFloatLiteral(this.envColor[2]), ", ", valToFloatLiteral(this.envColor[3]), ")" ].join("");
   var src0Expr = argsNeeded >= 1 ? genCombinerSourceExpr(texUnitID, constantExpr, passInputVar, srcArr[0], opArr[0]) : null;
   var src1Expr = argsNeeded >= 2 ? genCombinerSourceExpr(texUnitID, constantExpr, passInputVar, srcArr[1], opArr[1]) : null;
   var src2Expr = argsNeeded >= 3 ? genCombinerSourceExpr(texUnitID, constantExpr, passInputVar, srcArr[2], opArr[2]) : null;
   var outputType = isColor ? "vec3" : "float";
   var lines = null;
   switch (combiner) {
   case GL_REPLACE:
    {
     var line = [ outputType + " " + outputVar, " = ", src0Expr, ";" ];
     lines = [ line.join("") ];
     break;
    }
   case GL_MODULATE:
    {
     var line = [ outputType + " " + outputVar + " = ", src0Expr + " * " + src1Expr, ";" ];
     lines = [ line.join("") ];
     break;
    }
   case GL_ADD:
    {
     var line = [ outputType + " " + outputVar + " = ", src0Expr + " + " + src1Expr, ";" ];
     lines = [ line.join("") ];
     break;
    }
   case GL_SUBTRACT:
    {
     var line = [ outputType + " " + outputVar + " = ", src0Expr + " - " + src1Expr, ";" ];
     lines = [ line.join("") ];
     break;
    }
   case GL_INTERPOLATE:
    {
     var prefix = TEXENVJIT_NAMESPACE_PREFIX + "env" + texUnitID + "_";
     var arg2Var = prefix + "colorSrc2";
     var arg2Line = getTypeFromCombineOp(this.colorOp[2]) + " " + arg2Var + " = " + src2Expr + ";";
     var line = [ outputType + " " + outputVar, " = ", src0Expr + " * " + arg2Var, " + ", src1Expr + " * (1.0 - " + arg2Var + ")", ";" ];
     lines = [ arg2Line, line.join("") ];
     break;
    }
   default:
    return abort_sanity("Unmatched TexEnv.colorCombiner?");
   }
   return lines;
  };
  return {
   init: (function(gl, specifiedMaxTextureImageUnits) {
    var maxTexUnits = 0;
    if (specifiedMaxTextureImageUnits) {
     maxTexUnits = specifiedMaxTextureImageUnits;
    } else if (gl) {
     maxTexUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);
    }
    s_texUnits = [];
    for (var i = 0; i < maxTexUnits; i++) {
     s_texUnits.push(new CTexUnit);
    }
   }),
   setGLSLVars: (function(uTexUnitPrefix, vTexCoordPrefix, vPrimColor, uTexMatrixPrefix) {
    TEX_UNIT_UNIFORM_PREFIX = uTexUnitPrefix;
    TEX_COORD_VARYING_PREFIX = vTexCoordPrefix;
    PRIM_COLOR_VARYING = vPrimColor;
    TEX_MATRIX_UNIFORM_PREFIX = uTexMatrixPrefix;
   }),
   genAllPassLines: (function(resultDest, indentSize) {
    indentSize = indentSize || 0;
    s_requiredTexUnitsForPass.length = 0;
    var lines = [];
    var lastPassVar = PRIM_COLOR_VARYING;
    for (var i = 0; i < s_texUnits.length; i++) {
     if (!s_texUnits[i].enabled()) continue;
     s_requiredTexUnitsForPass.push(i);
     var prefix = TEXENVJIT_NAMESPACE_PREFIX + "env" + i + "_";
     var passOutputVar = prefix + "result";
     var newLines = s_texUnits[i].genPassLines(passOutputVar, lastPassVar, i);
     lines = lines.concat(newLines, [ "" ]);
     lastPassVar = passOutputVar;
    }
    lines.push(resultDest + " = " + lastPassVar + ";");
    var indent = "";
    for (var i = 0; i < indentSize; i++) indent += " ";
    var output = indent + lines.join("\n" + indent);
    return output;
   }),
   getUsedTexUnitList: (function() {
    return s_requiredTexUnitsForPass;
   }),
   traverseState: (function(keyView) {
    for (var i = 0; i < s_texUnits.length; i++) {
     s_texUnits[i].traverseState(keyView);
    }
   }),
   getTexUnitType: (function(texUnitID) {
    return s_texUnits[texUnitID].getTexType();
   }),
   hook_activeTexture: (function(texture) {
    s_activeTexture = texture - GL_TEXTURE0;
   }),
   hook_enable: (function(cap) {
    var cur = getCurTexUnit();
    switch (cap) {
    case GL_TEXTURE_1D:
     if (!cur.enabled_tex1D) {
      GLImmediate.currentRenderer = null;
      cur.enabled_tex1D = true;
      cur.texTypesEnabled |= 1;
     }
     break;
    case GL_TEXTURE_2D:
     if (!cur.enabled_tex2D) {
      GLImmediate.currentRenderer = null;
      cur.enabled_tex2D = true;
      cur.texTypesEnabled |= 2;
     }
     break;
    case GL_TEXTURE_3D:
     if (!cur.enabled_tex3D) {
      GLImmediate.currentRenderer = null;
      cur.enabled_tex3D = true;
      cur.texTypesEnabled |= 4;
     }
     break;
    case GL_TEXTURE_CUBE_MAP:
     if (!cur.enabled_texCube) {
      GLImmediate.currentRenderer = null;
      cur.enabled_texCube = true;
      cur.texTypesEnabled |= 8;
     }
     break;
    }
   }),
   hook_disable: (function(cap) {
    var cur = getCurTexUnit();
    switch (cap) {
    case GL_TEXTURE_1D:
     if (cur.enabled_tex1D) {
      GLImmediate.currentRenderer = null;
      cur.enabled_tex1D = false;
      cur.texTypesEnabled &= ~1;
     }
     break;
    case GL_TEXTURE_2D:
     if (cur.enabled_tex2D) {
      GLImmediate.currentRenderer = null;
      cur.enabled_tex2D = false;
      cur.texTypesEnabled &= ~2;
     }
     break;
    case GL_TEXTURE_3D:
     if (cur.enabled_tex3D) {
      GLImmediate.currentRenderer = null;
      cur.enabled_tex3D = false;
      cur.texTypesEnabled &= ~4;
     }
     break;
    case GL_TEXTURE_CUBE_MAP:
     if (cur.enabled_texCube) {
      GLImmediate.currentRenderer = null;
      cur.enabled_texCube = false;
      cur.texTypesEnabled &= ~8;
     }
     break;
    }
   }),
   hook_texEnvf: (function(target, pname, param) {
    if (target != GL_TEXTURE_ENV) return;
    var env = getCurTexUnit().env;
    switch (pname) {
    case GL_RGB_SCALE:
     if (env.colorScale != param) {
      env.invalidateKey();
      env.colorScale = param;
     }
     break;
    case GL_ALPHA_SCALE:
     if (env.alphaScale != param) {
      env.invalidateKey();
      env.alphaScale = param;
     }
     break;
    default:
     Module.printErr("WARNING: Unhandled `pname` in call to `glTexEnvf`.");
    }
   }),
   hook_texEnvi: (function(target, pname, param) {
    if (target != GL_TEXTURE_ENV) return;
    var env = getCurTexUnit().env;
    switch (pname) {
    case GL_TEXTURE_ENV_MODE:
     if (env.mode != param) {
      env.invalidateKey();
      env.mode = param;
     }
     break;
    case GL_COMBINE_RGB:
     if (env.colorCombiner != param) {
      env.invalidateKey();
      env.colorCombiner = param;
     }
     break;
    case GL_COMBINE_ALPHA:
     if (env.alphaCombiner != param) {
      env.invalidateKey();
      env.alphaCombiner = param;
     }
     break;
    case GL_SRC0_RGB:
     if (env.colorSrc[0] != param) {
      env.invalidateKey();
      env.colorSrc[0] = param;
     }
     break;
    case GL_SRC1_RGB:
     if (env.colorSrc[1] != param) {
      env.invalidateKey();
      env.colorSrc[1] = param;
     }
     break;
    case GL_SRC2_RGB:
     if (env.colorSrc[2] != param) {
      env.invalidateKey();
      env.colorSrc[2] = param;
     }
     break;
    case GL_SRC0_ALPHA:
     if (env.alphaSrc[0] != param) {
      env.invalidateKey();
      env.alphaSrc[0] = param;
     }
     break;
    case GL_SRC1_ALPHA:
     if (env.alphaSrc[1] != param) {
      env.invalidateKey();
      env.alphaSrc[1] = param;
     }
     break;
    case GL_SRC2_ALPHA:
     if (env.alphaSrc[2] != param) {
      env.invalidateKey();
      env.alphaSrc[2] = param;
     }
     break;
    case GL_OPERAND0_RGB:
     if (env.colorOp[0] != param) {
      env.invalidateKey();
      env.colorOp[0] = param;
     }
     break;
    case GL_OPERAND1_RGB:
     if (env.colorOp[1] != param) {
      env.invalidateKey();
      env.colorOp[1] = param;
     }
     break;
    case GL_OPERAND2_RGB:
     if (env.colorOp[2] != param) {
      env.invalidateKey();
      env.colorOp[2] = param;
     }
     break;
    case GL_OPERAND0_ALPHA:
     if (env.alphaOp[0] != param) {
      env.invalidateKey();
      env.alphaOp[0] = param;
     }
     break;
    case GL_OPERAND1_ALPHA:
     if (env.alphaOp[1] != param) {
      env.invalidateKey();
      env.alphaOp[1] = param;
     }
     break;
    case GL_OPERAND2_ALPHA:
     if (env.alphaOp[2] != param) {
      env.invalidateKey();
      env.alphaOp[2] = param;
     }
     break;
    case GL_RGB_SCALE:
     if (env.colorScale != param) {
      env.invalidateKey();
      env.colorScale = param;
     }
     break;
    case GL_ALPHA_SCALE:
     if (env.alphaScale != param) {
      env.invalidateKey();
      env.alphaScale = param;
     }
     break;
    default:
     Module.printErr("WARNING: Unhandled `pname` in call to `glTexEnvi`.");
    }
   }),
   hook_texEnvfv: (function(target, pname, params) {
    if (target != GL_TEXTURE_ENV) return;
    var env = getCurTexUnit().env;
    switch (pname) {
    case GL_TEXTURE_ENV_COLOR:
     {
      for (var i = 0; i < 4; i++) {
       var param = HEAPF32[params + i * 4 >> 2];
       if (env.envColor[i] != param) {
        env.invalidateKey();
        env.envColor[i] = param;
       }
      }
      break;
     }
    default:
     Module.printErr("WARNING: Unhandled `pname` in call to `glTexEnvfv`.");
    }
   }),
   hook_getTexEnviv: (function(target, pname, param) {
    if (target != GL_TEXTURE_ENV) return;
    var env = getCurTexUnit().env;
    switch (pname) {
    case GL_TEXTURE_ENV_MODE:
     HEAP32[param >> 2] = env.mode;
     return;
    case GL_TEXTURE_ENV_COLOR:
     HEAP32[param >> 2] = Math.max(Math.min(env.envColor[0] * 255, 255, -255));
     HEAP32[param + 1 >> 2] = Math.max(Math.min(env.envColor[1] * 255, 255, -255));
     HEAP32[param + 2 >> 2] = Math.max(Math.min(env.envColor[2] * 255, 255, -255));
     HEAP32[param + 3 >> 2] = Math.max(Math.min(env.envColor[3] * 255, 255, -255));
     return;
    case GL_COMBINE_RGB:
     HEAP32[param >> 2] = env.colorCombiner;
     return;
    case GL_COMBINE_ALPHA:
     HEAP32[param >> 2] = env.alphaCombiner;
     return;
    case GL_SRC0_RGB:
     HEAP32[param >> 2] = env.colorSrc[0];
     return;
    case GL_SRC1_RGB:
     HEAP32[param >> 2] = env.colorSrc[1];
     return;
    case GL_SRC2_RGB:
     HEAP32[param >> 2] = env.colorSrc[2];
     return;
    case GL_SRC0_ALPHA:
     HEAP32[param >> 2] = env.alphaSrc[0];
     return;
    case GL_SRC1_ALPHA:
     HEAP32[param >> 2] = env.alphaSrc[1];
     return;
    case GL_SRC2_ALPHA:
     HEAP32[param >> 2] = env.alphaSrc[2];
     return;
    case GL_OPERAND0_RGB:
     HEAP32[param >> 2] = env.colorOp[0];
     return;
    case GL_OPERAND1_RGB:
     HEAP32[param >> 2] = env.colorOp[1];
     return;
    case GL_OPERAND2_RGB:
     HEAP32[param >> 2] = env.colorOp[2];
     return;
    case GL_OPERAND0_ALPHA:
     HEAP32[param >> 2] = env.alphaOp[0];
     return;
    case GL_OPERAND1_ALPHA:
     HEAP32[param >> 2] = env.alphaOp[1];
     return;
    case GL_OPERAND2_ALPHA:
     HEAP32[param >> 2] = env.alphaOp[2];
     return;
    case GL_RGB_SCALE:
     HEAP32[param >> 2] = env.colorScale;
     return;
    case GL_ALPHA_SCALE:
     HEAP32[param >> 2] = env.alphaScale;
     return;
    default:
     Module.printErr("WARNING: Unhandled `pname` in call to `glGetTexEnvi`.");
    }
   }),
   hook_getTexEnvfv: (function(target, pname, param) {
    if (target != GL_TEXTURE_ENV) return;
    var env = getCurTexUnit().env;
    switch (pname) {
    case GL_TEXTURE_ENV_COLOR:
     HEAPF32[param >> 2] = env.envColor[0];
     HEAPF32[param + 4 >> 2] = env.envColor[1];
     HEAPF32[param + 8 >> 2] = env.envColor[2];
     HEAPF32[param + 12 >> 2] = env.envColor[3];
     return;
    }
   })
  };
 }),
 vertexData: null,
 vertexDataU8: null,
 tempData: null,
 indexData: null,
 vertexCounter: 0,
 mode: -1,
 rendererCache: null,
 rendererComponents: [],
 rendererComponentPointer: 0,
 lastRenderer: null,
 lastArrayBuffer: null,
 lastProgram: null,
 lastStride: -1,
 matrix: [],
 matrixStack: [],
 currentMatrix: 0,
 tempMatrix: null,
 matricesModified: false,
 useTextureMatrix: false,
 VERTEX: 0,
 NORMAL: 1,
 COLOR: 2,
 TEXTURE0: 3,
 NUM_ATTRIBUTES: -1,
 MAX_TEXTURES: -1,
 totalEnabledClientAttributes: 0,
 enabledClientAttributes: [ 0, 0 ],
 clientAttributes: [],
 liveClientAttributes: [],
 currentRenderer: null,
 modifiedClientAttributes: false,
 clientActiveTexture: 0,
 clientColor: null,
 usedTexUnitList: [],
 fixedFunctionProgram: null,
 setClientAttribute: function setClientAttribute(name, size, type, stride, pointer) {
  var attrib = GLImmediate.clientAttributes[name];
  if (!attrib) {
   for (var i = 0; i <= name; i++) {
    if (!GLImmediate.clientAttributes[i]) {
     GLImmediate.clientAttributes[i] = {
      name: name,
      size: size,
      type: type,
      stride: stride,
      pointer: pointer,
      offset: 0
     };
    }
   }
  } else {
   attrib.name = name;
   attrib.size = size;
   attrib.type = type;
   attrib.stride = stride;
   attrib.pointer = pointer;
   attrib.offset = 0;
  }
  GLImmediate.modifiedClientAttributes = true;
 },
 addRendererComponent: function addRendererComponent(name, size, type) {
  if (!GLImmediate.rendererComponents[name]) {
   GLImmediate.rendererComponents[name] = 1;
   GLImmediate.enabledClientAttributes[name] = true;
   GLImmediate.setClientAttribute(name, size, type, 0, GLImmediate.rendererComponentPointer);
   GLImmediate.rendererComponentPointer += size * GL.byteSizeByType[type - GL.byteSizeByTypeRoot];
  } else {
   GLImmediate.rendererComponents[name]++;
  }
 },
 disableBeginEndClientAttributes: function disableBeginEndClientAttributes() {
  for (var i = 0; i < GLImmediate.NUM_ATTRIBUTES; i++) {
   if (GLImmediate.rendererComponents[i]) GLImmediate.enabledClientAttributes[i] = false;
  }
 },
 getRenderer: function getRenderer() {
  if (GLImmediate.currentRenderer) {
   return GLImmediate.currentRenderer;
  }
  var attributes = GLImmediate.liveClientAttributes;
  var cacheMap = GLImmediate.rendererCache;
  var keyView = cacheMap.getStaticKeyView().reset();
  var enabledAttributesKey = 0;
  for (var i = 0; i < attributes.length; i++) {
   enabledAttributesKey |= 1 << attributes[i].name;
  }
  var fogParam = 0;
  if (GLEmulation.fogEnabled) {
   switch (GLEmulation.fogMode) {
   case 2049:
    fogParam = 1;
    break;
   case 9729:
    fogParam = 2;
    break;
   default:
    fogParam = 3;
    break;
   }
  }
  keyView.next(enabledAttributesKey << 2 | fogParam);
  keyView.next(GL.currProgram);
  if (!GL.currProgram) {
   GLImmediate.TexEnvJIT.traverseState(keyView);
  }
  var renderer = keyView.get();
  if (!renderer) {
   renderer = GLImmediate.createRenderer();
   GLImmediate.currentRenderer = renderer;
   keyView.set(renderer);
   return renderer;
  }
  GLImmediate.currentRenderer = renderer;
  return renderer;
 },
 createRenderer: function createRenderer(renderer) {
  var useCurrProgram = !!GL.currProgram;
  var hasTextures = false;
  for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
   var texAttribName = GLImmediate.TEXTURE0 + i;
   if (!GLImmediate.enabledClientAttributes[texAttribName]) continue;
   hasTextures = true;
  }
  var ret = {
   init: function init() {
    var uTexUnitPrefix = "u_texUnit";
    var aTexCoordPrefix = "a_texCoord";
    var vTexCoordPrefix = "v_texCoord";
    var vPrimColor = "v_color";
    var uTexMatrixPrefix = GLImmediate.useTextureMatrix ? "u_textureMatrix" : null;
    if (useCurrProgram) {
     if (GL.shaderInfos[GL.programShaders[GL.currProgram][0]].type == GLctx.VERTEX_SHADER) {
      this.vertexShader = GL.shaders[GL.programShaders[GL.currProgram][0]];
      this.fragmentShader = GL.shaders[GL.programShaders[GL.currProgram][1]];
     } else {
      this.vertexShader = GL.shaders[GL.programShaders[GL.currProgram][1]];
      this.fragmentShader = GL.shaders[GL.programShaders[GL.currProgram][0]];
     }
     this.program = GL.programs[GL.currProgram];
     this.usedTexUnitList = [];
    } else {
     if (GLEmulation.fogEnabled) {
      switch (GLEmulation.fogMode) {
      case 2049:
       var fogFormula = "  float fog = exp(-u_fogDensity * u_fogDensity * ecDistance * ecDistance); \n";
       break;
      case 9729:
       var fogFormula = "  float fog = (u_fogEnd - ecDistance) * u_fogScale; \n";
       break;
      default:
       var fogFormula = "  float fog = exp(-u_fogDensity * ecDistance); \n";
       break;
      }
     }
     GLImmediate.TexEnvJIT.setGLSLVars(uTexUnitPrefix, vTexCoordPrefix, vPrimColor, uTexMatrixPrefix);
     var fsTexEnvPass = GLImmediate.TexEnvJIT.genAllPassLines("gl_FragColor", 2);
     var texUnitAttribList = "";
     var texUnitVaryingList = "";
     var texUnitUniformList = "";
     var vsTexCoordInits = "";
     this.usedTexUnitList = GLImmediate.TexEnvJIT.getUsedTexUnitList();
     for (var i = 0; i < this.usedTexUnitList.length; i++) {
      var texUnit = this.usedTexUnitList[i];
      texUnitAttribList += "attribute vec4 " + aTexCoordPrefix + texUnit + ";\n";
      texUnitVaryingList += "varying vec4 " + vTexCoordPrefix + texUnit + ";\n";
      texUnitUniformList += "uniform sampler2D " + uTexUnitPrefix + texUnit + ";\n";
      vsTexCoordInits += "  " + vTexCoordPrefix + texUnit + " = " + aTexCoordPrefix + texUnit + ";\n";
      if (GLImmediate.useTextureMatrix) {
       texUnitUniformList += "uniform mat4 " + uTexMatrixPrefix + texUnit + ";\n";
      }
     }
     var vsFogVaryingInit = null;
     if (GLEmulation.fogEnabled) {
      vsFogVaryingInit = "  v_fogFragCoord = abs(ecPosition.z);\n";
     }
     var vsSource = [ "attribute vec4 a_position;", "attribute vec4 a_color;", "varying vec4 v_color;", texUnitAttribList, texUnitVaryingList, GLEmulation.fogEnabled ? "varying float v_fogFragCoord;" : null, "uniform mat4 u_modelView;", "uniform mat4 u_projection;", "void main()", "{", "  vec4 ecPosition = u_modelView * a_position;", "  gl_Position = u_projection * ecPosition;", "  v_color = a_color;", vsTexCoordInits, vsFogVaryingInit, "}", "" ].join("\n").replace(/\n\n+/g, "\n");
     this.vertexShader = GLctx.createShader(GLctx.VERTEX_SHADER);
     GLctx.shaderSource(this.vertexShader, vsSource);
     GLctx.compileShader(this.vertexShader);
     var fogHeaderIfNeeded = null;
     if (GLEmulation.fogEnabled) {
      fogHeaderIfNeeded = [ "", "varying float v_fogFragCoord; ", "uniform vec4 u_fogColor;      ", "uniform float u_fogEnd;       ", "uniform float u_fogScale;     ", "uniform float u_fogDensity;   ", "float ffog(in float ecDistance) { ", fogFormula, "  fog = clamp(fog, 0.0, 1.0); ", "  return fog;                 ", "}", "" ].join("\n");
     }
     var fogPass = null;
     if (GLEmulation.fogEnabled) {
      fogPass = "gl_FragColor = vec4(mix(u_fogColor.rgb, gl_FragColor.rgb, ffog(v_fogFragCoord)), gl_FragColor.a);\n";
     }
     var fsSource = [ "precision mediump float;", texUnitVaryingList, texUnitUniformList, "varying vec4 v_color;", fogHeaderIfNeeded, "void main()", "{", fsTexEnvPass, fogPass, "}", "" ].join("\n").replace(/\n\n+/g, "\n");
     this.fragmentShader = GLctx.createShader(GLctx.FRAGMENT_SHADER);
     GLctx.shaderSource(this.fragmentShader, fsSource);
     GLctx.compileShader(this.fragmentShader);
     this.program = GLctx.createProgram();
     GLctx.attachShader(this.program, this.vertexShader);
     GLctx.attachShader(this.program, this.fragmentShader);
     GLctx.bindAttribLocation(this.program, GLImmediate.VERTEX, "a_position");
     GLctx.bindAttribLocation(this.program, GLImmediate.COLOR, "a_color");
     GLctx.bindAttribLocation(this.program, GLImmediate.NORMAL, "a_normal");
     var maxVertexAttribs = GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);
     for (var i = 0; i < GLImmediate.MAX_TEXTURES && GLImmediate.TEXTURE0 + i < maxVertexAttribs; i++) {
      GLctx.bindAttribLocation(this.program, GLImmediate.TEXTURE0 + i, "a_texCoord" + i);
      GLctx.bindAttribLocation(this.program, GLImmediate.TEXTURE0 + i, aTexCoordPrefix + i);
     }
     GLctx.linkProgram(this.program);
    }
    this.textureMatrixVersion = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];
    this.positionLocation = GLctx.getAttribLocation(this.program, "a_position");
    this.texCoordLocations = [];
    for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
     if (!GLImmediate.enabledClientAttributes[GLImmediate.TEXTURE0 + i]) {
      this.texCoordLocations[i] = -1;
      continue;
     }
     if (useCurrProgram) {
      this.texCoordLocations[i] = GLctx.getAttribLocation(this.program, "a_texCoord" + i);
     } else {
      this.texCoordLocations[i] = GLctx.getAttribLocation(this.program, aTexCoordPrefix + i);
     }
    }
    this.colorLocation = GLctx.getAttribLocation(this.program, "a_color");
    if (!useCurrProgram) {
     var prevBoundProg = GLctx.getParameter(GLctx.CURRENT_PROGRAM);
     GLctx.useProgram(this.program);
     {
      for (var i = 0; i < this.usedTexUnitList.length; i++) {
       var texUnitID = this.usedTexUnitList[i];
       var texSamplerLoc = GLctx.getUniformLocation(this.program, uTexUnitPrefix + texUnitID);
       GLctx.uniform1i(texSamplerLoc, texUnitID);
      }
     }
     GLctx.vertexAttrib4fv(this.colorLocation, [ 1, 1, 1, 1 ]);
     GLctx.useProgram(prevBoundProg);
    }
    this.textureMatrixLocations = [];
    for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
     this.textureMatrixLocations[i] = GLctx.getUniformLocation(this.program, "u_textureMatrix" + i);
    }
    this.normalLocation = GLctx.getAttribLocation(this.program, "a_normal");
    this.modelViewLocation = GLctx.getUniformLocation(this.program, "u_modelView");
    this.projectionLocation = GLctx.getUniformLocation(this.program, "u_projection");
    this.hasTextures = hasTextures;
    this.hasNormal = GLImmediate.enabledClientAttributes[GLImmediate.NORMAL] && GLImmediate.clientAttributes[GLImmediate.NORMAL].size > 0 && this.normalLocation >= 0;
    this.hasColor = this.colorLocation === 0 || this.colorLocation > 0;
    this.floatType = GLctx.FLOAT;
    this.fogColorLocation = GLctx.getUniformLocation(this.program, "u_fogColor");
    this.fogEndLocation = GLctx.getUniformLocation(this.program, "u_fogEnd");
    this.fogScaleLocation = GLctx.getUniformLocation(this.program, "u_fogScale");
    this.fogDensityLocation = GLctx.getUniformLocation(this.program, "u_fogDensity");
    this.hasFog = !!(this.fogColorLocation || this.fogEndLocation || this.fogScaleLocation || this.fogDensityLocation);
   },
   prepare: function prepare() {
    var arrayBuffer;
    if (!GL.currArrayBuffer) {
     var start = GLImmediate.firstVertex * GLImmediate.stride;
     var end = GLImmediate.lastVertex * GLImmediate.stride;
     arrayBuffer = GL.getTempVertexBuffer(end);
    } else {
     arrayBuffer = GL.currArrayBuffer;
    }
    var lastRenderer = GLImmediate.lastRenderer;
    var canSkip = this == lastRenderer && arrayBuffer == GLImmediate.lastArrayBuffer && (GL.currProgram || this.program) == GLImmediate.lastProgram && GLImmediate.stride == GLImmediate.lastStride && !GLImmediate.matricesModified;
    if (!canSkip && lastRenderer) lastRenderer.cleanup();
    if (!GL.currArrayBuffer) {
     if (arrayBuffer != GLImmediate.lastArrayBuffer) {
      GLctx.bindBuffer(GLctx.ARRAY_BUFFER, arrayBuffer);
      GLImmediate.lastArrayBuffer = arrayBuffer;
     }
     GLctx.bufferSubData(GLctx.ARRAY_BUFFER, start, GLImmediate.vertexData.subarray(start >> 2, end >> 2));
    }
    if (canSkip) return;
    GLImmediate.lastRenderer = this;
    GLImmediate.lastProgram = GL.currProgram || this.program;
    GLImmediate.lastStride == GLImmediate.stride;
    GLImmediate.matricesModified = false;
    if (!GL.currProgram) {
     if (GLImmediate.fixedFunctionProgram != this.program) {
      GLctx.useProgram(this.program);
      GLImmediate.fixedFunctionProgram = this.program;
     }
    }
    if (this.modelViewLocation && this.modelViewMatrixVersion != GLImmediate.matrixVersion[0]) {
     this.modelViewMatrixVersion = GLImmediate.matrixVersion[0];
     GLctx.uniformMatrix4fv(this.modelViewLocation, false, GLImmediate.matrix[0]);
    }
    if (this.projectionLocation && this.projectionMatrixVersion != GLImmediate.matrixVersion[1]) {
     this.projectionMatrixVersion = GLImmediate.matrixVersion[1];
     GLctx.uniformMatrix4fv(this.projectionLocation, false, GLImmediate.matrix[1]);
    }
    var clientAttributes = GLImmediate.clientAttributes;
    var posAttr = clientAttributes[GLImmediate.VERTEX];
    GLctx.vertexAttribPointer(this.positionLocation, posAttr.size, posAttr.type, false, GLImmediate.stride, posAttr.offset);
    GLctx.enableVertexAttribArray(this.positionLocation);
    if (this.hasNormal) {
     var normalAttr = clientAttributes[GLImmediate.NORMAL];
     GLctx.vertexAttribPointer(this.normalLocation, normalAttr.size, normalAttr.type, true, GLImmediate.stride, normalAttr.offset);
     GLctx.enableVertexAttribArray(this.normalLocation);
    }
    if (this.hasTextures) {
     for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
      var attribLoc = this.texCoordLocations[i];
      if (attribLoc === undefined || attribLoc < 0) continue;
      var texAttr = clientAttributes[GLImmediate.TEXTURE0 + i];
      if (texAttr.size) {
       GLctx.vertexAttribPointer(attribLoc, texAttr.size, texAttr.type, false, GLImmediate.stride, texAttr.offset);
       GLctx.enableVertexAttribArray(attribLoc);
      } else {
       GLctx.vertexAttrib4f(attribLoc, 0, 0, 0, 1);
       GLctx.disableVertexAttribArray(attribLoc);
      }
      var t = 2 + i;
      if (this.textureMatrixLocations[i] && this.textureMatrixVersion[t] != GLImmediate.matrixVersion[t]) {
       this.textureMatrixVersion[t] = GLImmediate.matrixVersion[t];
       GLctx.uniformMatrix4fv(this.textureMatrixLocations[i], false, GLImmediate.matrix[t]);
      }
     }
    }
    if (GLImmediate.enabledClientAttributes[GLImmediate.COLOR]) {
     var colorAttr = clientAttributes[GLImmediate.COLOR];
     GLctx.vertexAttribPointer(this.colorLocation, colorAttr.size, colorAttr.type, true, GLImmediate.stride, colorAttr.offset);
     GLctx.enableVertexAttribArray(this.colorLocation);
    } else if (this.hasColor) {
     GLctx.disableVertexAttribArray(this.colorLocation);
     GLctx.vertexAttrib4fv(this.colorLocation, GLImmediate.clientColor);
    }
    if (this.hasFog) {
     if (this.fogColorLocation) GLctx.uniform4fv(this.fogColorLocation, GLEmulation.fogColor);
     if (this.fogEndLocation) GLctx.uniform1f(this.fogEndLocation, GLEmulation.fogEnd);
     if (this.fogScaleLocation) GLctx.uniform1f(this.fogScaleLocation, 1 / (GLEmulation.fogEnd - GLEmulation.fogStart));
     if (this.fogDensityLocation) GLctx.uniform1f(this.fogDensityLocation, GLEmulation.fogDensity);
    }
   },
   cleanup: function cleanup() {
    GLctx.disableVertexAttribArray(this.positionLocation);
    if (this.hasTextures) {
     for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
      if (GLImmediate.enabledClientAttributes[GLImmediate.TEXTURE0 + i] && this.texCoordLocations[i] >= 0) {
       GLctx.disableVertexAttribArray(this.texCoordLocations[i]);
      }
     }
    }
    if (this.hasColor) {
     GLctx.disableVertexAttribArray(this.colorLocation);
    }
    if (this.hasNormal) {
     GLctx.disableVertexAttribArray(this.normalLocation);
    }
    if (!GL.currProgram) {
     GLctx.useProgram(null);
     GLImmediate.fixedFunctionProgram = 0;
    }
    if (!GL.currArrayBuffer) {
     GLctx.bindBuffer(GLctx.ARRAY_BUFFER, null);
     GLImmediate.lastArrayBuffer = null;
    }
    GLImmediate.lastRenderer = null;
    GLImmediate.lastProgram = null;
    GLImmediate.matricesModified = true;
   }
  };
  ret.init();
  return ret;
 },
 setupFuncs: (function() {
  _glDrawArrays = _emscripten_glDrawArrays = function _glDrawArrays(mode, first, count) {
   if (GLImmediate.totalEnabledClientAttributes == 0 && mode <= 6) {
    GLctx.drawArrays(mode, first, count);
    return;
   }
   GLImmediate.prepareClientAttributes(count, false);
   GLImmediate.mode = mode;
   if (!GL.currArrayBuffer) {
    GLImmediate.vertexData = HEAPF32.subarray(GLImmediate.vertexPointer >> 2, GLImmediate.vertexPointer + (first + count) * GLImmediate.stride >> 2);
    GLImmediate.firstVertex = first;
    GLImmediate.lastVertex = first + count;
   }
   GLImmediate.flush(null, first);
   GLImmediate.mode = -1;
  };
  _glDrawElements = _emscripten_glDrawElements = function _glDrawElements(mode, count, type, indices, start, end) {
   if (GLImmediate.totalEnabledClientAttributes == 0 && mode <= 6 && GL.currElementArrayBuffer) {
    GLctx.drawElements(mode, count, type, indices);
    return;
   }
   GLImmediate.prepareClientAttributes(count, false);
   GLImmediate.mode = mode;
   if (!GL.currArrayBuffer) {
    GLImmediate.firstVertex = end ? start : TOTAL_MEMORY;
    GLImmediate.lastVertex = end ? end + 1 : 0;
    GLImmediate.vertexData = HEAPF32.subarray(GLImmediate.vertexPointer >> 2, end ? GLImmediate.vertexPointer + (end + 1) * GLImmediate.stride >> 2 : undefined);
   }
   GLImmediate.flush(count, 0, indices);
   GLImmediate.mode = -1;
  };
  GLImmediate.MapTreeLib = GLImmediate.spawnMapTreeLib();
  GLImmediate.spawnMapTreeLib = null;
  GLImmediate.TexEnvJIT = GLImmediate.spawnTexEnvJIT();
  GLImmediate.spawnTexEnvJIT = null;
  GLImmediate.setupHooks();
 }),
 setupHooks: (function() {
  if (!GLEmulation.hasRunInit) {
   GLEmulation.init();
  }
  var glActiveTexture = _glActiveTexture;
  _glActiveTexture = _emscripten_glActiveTexture = function _glActiveTexture(texture) {
   GLImmediate.TexEnvJIT.hook_activeTexture(texture);
   glActiveTexture(texture);
  };
  var glEnable = _glEnable;
  _glEnable = _emscripten_glEnable = function _glEnable(cap) {
   GLImmediate.TexEnvJIT.hook_enable(cap);
   glEnable(cap);
  };
  var glDisable = _glDisable;
  _glDisable = _emscripten_glDisable = function _glDisable(cap) {
   GLImmediate.TexEnvJIT.hook_disable(cap);
   glDisable(cap);
  };
  var glTexEnvf = typeof _glTexEnvf != "undefined" ? _glTexEnvf : (function() {});
  _glTexEnvf = _emscripten_glTexEnvf = function _glTexEnvf(target, pname, param) {
   GLImmediate.TexEnvJIT.hook_texEnvf(target, pname, param);
  };
  var glTexEnvi = typeof _glTexEnvi != "undefined" ? _glTexEnvi : (function() {});
  _glTexEnvi = _emscripten_glTexEnvi = function _glTexEnvi(target, pname, param) {
   GLImmediate.TexEnvJIT.hook_texEnvi(target, pname, param);
  };
  var glTexEnvfv = typeof _glTexEnvfv != "undefined" ? _glTexEnvfv : (function() {});
  _glTexEnvfv = _emscripten_glTexEnvfv = function _glTexEnvfv(target, pname, param) {
   GLImmediate.TexEnvJIT.hook_texEnvfv(target, pname, param);
  };
  _glGetTexEnviv = function _glGetTexEnviv(target, pname, param) {
   GLImmediate.TexEnvJIT.hook_getTexEnviv(target, pname, param);
  };
  _glGetTexEnvfv = function _glGetTexEnvfv(target, pname, param) {
   GLImmediate.TexEnvJIT.hook_getTexEnvfv(target, pname, param);
  };
  var glGetIntegerv = _glGetIntegerv;
  _glGetIntegerv = _emscripten_glGetIntegerv = function _glGetIntegerv(pname, params) {
   switch (pname) {
   case 35725:
    {
     var cur = GLctx.getParameter(GLctx.CURRENT_PROGRAM);
     if (cur == GLImmediate.fixedFunctionProgram) {
      HEAP32[params >> 2] = 0;
      return;
     }
     break;
    }
   }
   glGetIntegerv(pname, params);
  };
 }),
 initted: false,
 init: (function() {
  Module.printErr("WARNING: using emscripten GL immediate mode emulation. This is very limited in what it supports");
  GLImmediate.initted = true;
  if (!Module.useWebGL) return;
  GLImmediate.MAX_TEXTURES = Module["GL_MAX_TEXTURE_IMAGE_UNITS"] || GLctx.getParameter(GLctx.MAX_TEXTURE_IMAGE_UNITS);
  GLImmediate.TexEnvJIT.init(GLctx, GLImmediate.MAX_TEXTURES);
  GLImmediate.NUM_ATTRIBUTES = 3 + GLImmediate.MAX_TEXTURES;
  GLImmediate.clientAttributes = [];
  GLEmulation.enabledClientAttribIndices = [];
  for (var i = 0; i < GLImmediate.NUM_ATTRIBUTES; i++) {
   GLImmediate.clientAttributes.push({});
   GLEmulation.enabledClientAttribIndices.push(false);
  }
  GLImmediate.matrix = [];
  GLImmediate.matrixStack = [];
  GLImmediate.matrixVersion = [];
  for (var i = 0; i < 2 + GLImmediate.MAX_TEXTURES; i++) {
   GLImmediate.matrixStack.push([]);
   GLImmediate.matrixVersion.push(0);
   GLImmediate.matrix.push(GLImmediate.matrixLib.mat4.create());
   GLImmediate.matrixLib.mat4.identity(GLImmediate.matrix[i]);
  }
  GLImmediate.rendererCache = GLImmediate.MapTreeLib.create();
  GLImmediate.tempData = new Float32Array(GL.MAX_TEMP_BUFFER_SIZE >> 2);
  GLImmediate.indexData = new Uint16Array(GL.MAX_TEMP_BUFFER_SIZE >> 1);
  GLImmediate.vertexDataU8 = new Uint8Array(GLImmediate.tempData.buffer);
  GL.generateTempBuffers(true, GL.currentContext);
  GLImmediate.clientColor = new Float32Array([ 1, 1, 1, 1 ]);
 }),
 prepareClientAttributes: function prepareClientAttributes(count, beginEnd) {
  if (!GLImmediate.modifiedClientAttributes) {
   GLImmediate.vertexCounter = GLImmediate.stride * count / 4;
   return;
  }
  GLImmediate.modifiedClientAttributes = false;
  var clientStartPointer = 2147483647;
  var bytes = 0;
  var minStride = 2147483647;
  var maxStride = 0;
  var attributes = GLImmediate.liveClientAttributes;
  attributes.length = 0;
  for (var i = 0; i < 3 + GLImmediate.MAX_TEXTURES; i++) {
   if (GLImmediate.enabledClientAttributes[i]) {
    var attr = GLImmediate.clientAttributes[i];
    attributes.push(attr);
    clientStartPointer = Math.min(clientStartPointer, attr.pointer);
    attr.sizeBytes = attr.size * GL.byteSizeByType[attr.type - GL.byteSizeByTypeRoot];
    bytes += attr.sizeBytes;
    minStride = Math.min(minStride, attr.stride);
    maxStride = Math.max(maxStride, attr.stride);
   }
  }
  if ((minStride != maxStride || maxStride < bytes) && !beginEnd) {
   if (!GLImmediate.restrideBuffer) GLImmediate.restrideBuffer = _malloc(GL.MAX_TEMP_BUFFER_SIZE);
   var start = GLImmediate.restrideBuffer;
   bytes = 0;
   for (var i = 0; i < attributes.length; i++) {
    var attr = attributes[i];
    var size = attr.sizeBytes;
    if (size % 4 != 0) size += 4 - size % 4;
    attr.offset = bytes;
    bytes += size;
   }
   for (var i = 0; i < attributes.length; i++) {
    var attr = attributes[i];
    var srcStride = Math.max(attr.sizeBytes, attr.stride);
    if ((srcStride & 3) == 0 && (attr.sizeBytes & 3) == 0) {
     var size4 = attr.sizeBytes >> 2;
     var srcStride4 = Math.max(attr.sizeBytes, attr.stride) >> 2;
     for (var j = 0; j < count; j++) {
      for (var k = 0; k < size4; k++) {
       HEAP32[(start + attr.offset + bytes * j >> 2) + k] = HEAP32[(attr.pointer >> 2) + j * srcStride4 + k];
      }
     }
    } else {
     for (var j = 0; j < count; j++) {
      for (var k = 0; k < attr.sizeBytes; k++) {
       HEAP8[start + attr.offset + bytes * j + k] = HEAP8[attr.pointer + j * srcStride + k];
      }
     }
    }
    attr.pointer = start + attr.offset;
   }
   GLImmediate.stride = bytes;
   GLImmediate.vertexPointer = start;
  } else {
   if (GL.currArrayBuffer) {
    GLImmediate.vertexPointer = 0;
   } else {
    GLImmediate.vertexPointer = clientStartPointer;
   }
   for (var i = 0; i < attributes.length; i++) {
    var attr = attributes[i];
    attr.offset = attr.pointer - GLImmediate.vertexPointer;
   }
   GLImmediate.stride = Math.max(maxStride, bytes);
  }
  if (!beginEnd) {
   GLImmediate.vertexCounter = GLImmediate.stride * count / 4;
  }
 },
 flush: function flush(numProvidedIndexes, startIndex, ptr) {
  startIndex = startIndex || 0;
  ptr = ptr || 0;
  var renderer = GLImmediate.getRenderer();
  var numVertexes = 4 * GLImmediate.vertexCounter / GLImmediate.stride;
  if (!numVertexes) return;
  var emulatedElementArrayBuffer = false;
  var numIndexes = 0;
  if (numProvidedIndexes) {
   numIndexes = numProvidedIndexes;
   if (!GL.currArrayBuffer && GLImmediate.firstVertex > GLImmediate.lastVertex) {
    for (var i = 0; i < numProvidedIndexes; i++) {
     var currIndex = HEAPU16[ptr + i * 2 >> 1];
     GLImmediate.firstVertex = Math.min(GLImmediate.firstVertex, currIndex);
     GLImmediate.lastVertex = Math.max(GLImmediate.lastVertex, currIndex + 1);
    }
   }
   if (!GL.currElementArrayBuffer) {
    var indexBuffer = GL.getTempIndexBuffer(numProvidedIndexes << 1);
    GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, indexBuffer);
    GLctx.bufferSubData(GLctx.ELEMENT_ARRAY_BUFFER, 0, HEAPU16.subarray(ptr >> 1, ptr + (numProvidedIndexes << 1) >> 1));
    ptr = 0;
    emulatedElementArrayBuffer = true;
   }
  } else if (GLImmediate.mode > 6) {
   if (GLImmediate.mode != 7) throw "unsupported immediate mode " + GLImmediate.mode;
   ptr = GLImmediate.firstVertex * 3;
   var numQuads = numVertexes / 4;
   numIndexes = numQuads * 6;
   GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.currentContext.tempQuadIndexBuffer);
   emulatedElementArrayBuffer = true;
  }
  renderer.prepare();
  if (numIndexes) {
   GLctx.drawElements(GLctx.TRIANGLES, numIndexes, GLctx.UNSIGNED_SHORT, ptr);
  } else {
   GLctx.drawArrays(GLImmediate.mode, startIndex, numVertexes);
  }
  if (emulatedElementArrayBuffer) {
   GLctx.bindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, GL.buffers[GL.currElementArrayBuffer] || null);
  }
 }
};
GLImmediate.matrixLib = (function() {
 var vec3 = {};
 var mat3 = {};
 var mat4 = {};
 var quat4 = {};
 var MatrixArray = Float32Array;
 vec3.create = (function(vec) {
  var dest = new MatrixArray(3);
  if (vec) {
   dest[0] = vec[0];
   dest[1] = vec[1];
   dest[2] = vec[2];
  } else {
   dest[0] = dest[1] = dest[2] = 0;
  }
  return dest;
 });
 vec3.set = (function(vec, dest) {
  dest[0] = vec[0];
  dest[1] = vec[1];
  dest[2] = vec[2];
  return dest;
 });
 vec3.add = (function(vec, vec2, dest) {
  if (!dest || vec === dest) {
   vec[0] += vec2[0];
   vec[1] += vec2[1];
   vec[2] += vec2[2];
   return vec;
  }
  dest[0] = vec[0] + vec2[0];
  dest[1] = vec[1] + vec2[1];
  dest[2] = vec[2] + vec2[2];
  return dest;
 });
 vec3.subtract = (function(vec, vec2, dest) {
  if (!dest || vec === dest) {
   vec[0] -= vec2[0];
   vec[1] -= vec2[1];
   vec[2] -= vec2[2];
   return vec;
  }
  dest[0] = vec[0] - vec2[0];
  dest[1] = vec[1] - vec2[1];
  dest[2] = vec[2] - vec2[2];
  return dest;
 });
 vec3.multiply = (function(vec, vec2, dest) {
  if (!dest || vec === dest) {
   vec[0] *= vec2[0];
   vec[1] *= vec2[1];
   vec[2] *= vec2[2];
   return vec;
  }
  dest[0] = vec[0] * vec2[0];
  dest[1] = vec[1] * vec2[1];
  dest[2] = vec[2] * vec2[2];
  return dest;
 });
 vec3.negate = (function(vec, dest) {
  if (!dest) {
   dest = vec;
  }
  dest[0] = -vec[0];
  dest[1] = -vec[1];
  dest[2] = -vec[2];
  return dest;
 });
 vec3.scale = (function(vec, val, dest) {
  if (!dest || vec === dest) {
   vec[0] *= val;
   vec[1] *= val;
   vec[2] *= val;
   return vec;
  }
  dest[0] = vec[0] * val;
  dest[1] = vec[1] * val;
  dest[2] = vec[2] * val;
  return dest;
 });
 vec3.normalize = (function(vec, dest) {
  if (!dest) {
   dest = vec;
  }
  var x = vec[0], y = vec[1], z = vec[2], len = Math.sqrt(x * x + y * y + z * z);
  if (!len) {
   dest[0] = 0;
   dest[1] = 0;
   dest[2] = 0;
   return dest;
  } else if (len === 1) {
   dest[0] = x;
   dest[1] = y;
   dest[2] = z;
   return dest;
  }
  len = 1 / len;
  dest[0] = x * len;
  dest[1] = y * len;
  dest[2] = z * len;
  return dest;
 });
 vec3.cross = (function(vec, vec2, dest) {
  if (!dest) {
   dest = vec;
  }
  var x = vec[0], y = vec[1], z = vec[2], x2 = vec2[0], y2 = vec2[1], z2 = vec2[2];
  dest[0] = y * z2 - z * y2;
  dest[1] = z * x2 - x * z2;
  dest[2] = x * y2 - y * x2;
  return dest;
 });
 vec3.length = (function(vec) {
  var x = vec[0], y = vec[1], z = vec[2];
  return Math.sqrt(x * x + y * y + z * z);
 });
 vec3.dot = (function(vec, vec2) {
  return vec[0] * vec2[0] + vec[1] * vec2[1] + vec[2] * vec2[2];
 });
 vec3.direction = (function(vec, vec2, dest) {
  if (!dest) {
   dest = vec;
  }
  var x = vec[0] - vec2[0], y = vec[1] - vec2[1], z = vec[2] - vec2[2], len = Math.sqrt(x * x + y * y + z * z);
  if (!len) {
   dest[0] = 0;
   dest[1] = 0;
   dest[2] = 0;
   return dest;
  }
  len = 1 / len;
  dest[0] = x * len;
  dest[1] = y * len;
  dest[2] = z * len;
  return dest;
 });
 vec3.lerp = (function(vec, vec2, lerp, dest) {
  if (!dest) {
   dest = vec;
  }
  dest[0] = vec[0] + lerp * (vec2[0] - vec[0]);
  dest[1] = vec[1] + lerp * (vec2[1] - vec[1]);
  dest[2] = vec[2] + lerp * (vec2[2] - vec[2]);
  return dest;
 });
 vec3.dist = (function(vec, vec2) {
  var x = vec2[0] - vec[0], y = vec2[1] - vec[1], z = vec2[2] - vec[2];
  return Math.sqrt(x * x + y * y + z * z);
 });
 vec3.unproject = (function(vec, view, proj, viewport, dest) {
  if (!dest) {
   dest = vec;
  }
  var m = mat4.create();
  var v = new MatrixArray(4);
  v[0] = (vec[0] - viewport[0]) * 2 / viewport[2] - 1;
  v[1] = (vec[1] - viewport[1]) * 2 / viewport[3] - 1;
  v[2] = 2 * vec[2] - 1;
  v[3] = 1;
  mat4.multiply(proj, view, m);
  if (!mat4.inverse(m)) {
   return null;
  }
  mat4.multiplyVec4(m, v);
  if (v[3] === 0) {
   return null;
  }
  dest[0] = v[0] / v[3];
  dest[1] = v[1] / v[3];
  dest[2] = v[2] / v[3];
  return dest;
 });
 vec3.str = (function(vec) {
  return "[" + vec[0] + ", " + vec[1] + ", " + vec[2] + "]";
 });
 mat3.create = (function(mat) {
  var dest = new MatrixArray(9);
  if (mat) {
   dest[0] = mat[0];
   dest[1] = mat[1];
   dest[2] = mat[2];
   dest[3] = mat[3];
   dest[4] = mat[4];
   dest[5] = mat[5];
   dest[6] = mat[6];
   dest[7] = mat[7];
   dest[8] = mat[8];
  }
  return dest;
 });
 mat3.set = (function(mat, dest) {
  dest[0] = mat[0];
  dest[1] = mat[1];
  dest[2] = mat[2];
  dest[3] = mat[3];
  dest[4] = mat[4];
  dest[5] = mat[5];
  dest[6] = mat[6];
  dest[7] = mat[7];
  dest[8] = mat[8];
  return dest;
 });
 mat3.identity = (function(dest) {
  if (!dest) {
   dest = mat3.create();
  }
  dest[0] = 1;
  dest[1] = 0;
  dest[2] = 0;
  dest[3] = 0;
  dest[4] = 1;
  dest[5] = 0;
  dest[6] = 0;
  dest[7] = 0;
  dest[8] = 1;
  return dest;
 });
 mat3.transpose = (function(mat, dest) {
  if (!dest || mat === dest) {
   var a01 = mat[1], a02 = mat[2], a12 = mat[5];
   mat[1] = mat[3];
   mat[2] = mat[6];
   mat[3] = a01;
   mat[5] = mat[7];
   mat[6] = a02;
   mat[7] = a12;
   return mat;
  }
  dest[0] = mat[0];
  dest[1] = mat[3];
  dest[2] = mat[6];
  dest[3] = mat[1];
  dest[4] = mat[4];
  dest[5] = mat[7];
  dest[6] = mat[2];
  dest[7] = mat[5];
  dest[8] = mat[8];
  return dest;
 });
 mat3.toMat4 = (function(mat, dest) {
  if (!dest) {
   dest = mat4.create();
  }
  dest[15] = 1;
  dest[14] = 0;
  dest[13] = 0;
  dest[12] = 0;
  dest[11] = 0;
  dest[10] = mat[8];
  dest[9] = mat[7];
  dest[8] = mat[6];
  dest[7] = 0;
  dest[6] = mat[5];
  dest[5] = mat[4];
  dest[4] = mat[3];
  dest[3] = 0;
  dest[2] = mat[2];
  dest[1] = mat[1];
  dest[0] = mat[0];
  return dest;
 });
 mat3.str = (function(mat) {
  return "[" + mat[0] + ", " + mat[1] + ", " + mat[2] + ", " + mat[3] + ", " + mat[4] + ", " + mat[5] + ", " + mat[6] + ", " + mat[7] + ", " + mat[8] + "]";
 });
 mat4.create = (function(mat) {
  var dest = new MatrixArray(16);
  if (mat) {
   dest[0] = mat[0];
   dest[1] = mat[1];
   dest[2] = mat[2];
   dest[3] = mat[3];
   dest[4] = mat[4];
   dest[5] = mat[5];
   dest[6] = mat[6];
   dest[7] = mat[7];
   dest[8] = mat[8];
   dest[9] = mat[9];
   dest[10] = mat[10];
   dest[11] = mat[11];
   dest[12] = mat[12];
   dest[13] = mat[13];
   dest[14] = mat[14];
   dest[15] = mat[15];
  }
  return dest;
 });
 mat4.set = (function(mat, dest) {
  dest[0] = mat[0];
  dest[1] = mat[1];
  dest[2] = mat[2];
  dest[3] = mat[3];
  dest[4] = mat[4];
  dest[5] = mat[5];
  dest[6] = mat[6];
  dest[7] = mat[7];
  dest[8] = mat[8];
  dest[9] = mat[9];
  dest[10] = mat[10];
  dest[11] = mat[11];
  dest[12] = mat[12];
  dest[13] = mat[13];
  dest[14] = mat[14];
  dest[15] = mat[15];
  return dest;
 });
 mat4.identity = (function(dest) {
  if (!dest) {
   dest = mat4.create();
  }
  dest[0] = 1;
  dest[1] = 0;
  dest[2] = 0;
  dest[3] = 0;
  dest[4] = 0;
  dest[5] = 1;
  dest[6] = 0;
  dest[7] = 0;
  dest[8] = 0;
  dest[9] = 0;
  dest[10] = 1;
  dest[11] = 0;
  dest[12] = 0;
  dest[13] = 0;
  dest[14] = 0;
  dest[15] = 1;
  return dest;
 });
 mat4.transpose = (function(mat, dest) {
  if (!dest || mat === dest) {
   var a01 = mat[1], a02 = mat[2], a03 = mat[3], a12 = mat[6], a13 = mat[7], a23 = mat[11];
   mat[1] = mat[4];
   mat[2] = mat[8];
   mat[3] = mat[12];
   mat[4] = a01;
   mat[6] = mat[9];
   mat[7] = mat[13];
   mat[8] = a02;
   mat[9] = a12;
   mat[11] = mat[14];
   mat[12] = a03;
   mat[13] = a13;
   mat[14] = a23;
   return mat;
  }
  dest[0] = mat[0];
  dest[1] = mat[4];
  dest[2] = mat[8];
  dest[3] = mat[12];
  dest[4] = mat[1];
  dest[5] = mat[5];
  dest[6] = mat[9];
  dest[7] = mat[13];
  dest[8] = mat[2];
  dest[9] = mat[6];
  dest[10] = mat[10];
  dest[11] = mat[14];
  dest[12] = mat[3];
  dest[13] = mat[7];
  dest[14] = mat[11];
  dest[15] = mat[15];
  return dest;
 });
 mat4.determinant = (function(mat) {
  var a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3], a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7], a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11], a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15];
  return a30 * a21 * a12 * a03 - a20 * a31 * a12 * a03 - a30 * a11 * a22 * a03 + a10 * a31 * a22 * a03 + a20 * a11 * a32 * a03 - a10 * a21 * a32 * a03 - a30 * a21 * a02 * a13 + a20 * a31 * a02 * a13 + a30 * a01 * a22 * a13 - a00 * a31 * a22 * a13 - a20 * a01 * a32 * a13 + a00 * a21 * a32 * a13 + a30 * a11 * a02 * a23 - a10 * a31 * a02 * a23 - a30 * a01 * a12 * a23 + a00 * a31 * a12 * a23 + a10 * a01 * a32 * a23 - a00 * a11 * a32 * a23 - a20 * a11 * a02 * a33 + a10 * a21 * a02 * a33 + a20 * a01 * a12 * a33 - a00 * a21 * a12 * a33 - a10 * a01 * a22 * a33 + a00 * a11 * a22 * a33;
 });
 mat4.inverse = (function(mat, dest) {
  if (!dest) {
   dest = mat;
  }
  var a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3], a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7], a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11], a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15], b00 = a00 * a11 - a01 * a10, b01 = a00 * a12 - a02 * a10, b02 = a00 * a13 - a03 * a10, b03 = a01 * a12 - a02 * a11, b04 = a01 * a13 - a03 * a11, b05 = a02 * a13 - a03 * a12, b06 = a20 * a31 - a21 * a30, b07 = a20 * a32 - a22 * a30, b08 = a20 * a33 - a23 * a30, b09 = a21 * a32 - a22 * a31, b10 = a21 * a33 - a23 * a31, b11 = a22 * a33 - a23 * a32, d = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06, invDet;
  if (!d) {
   return null;
  }
  invDet = 1 / d;
  dest[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;
  dest[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;
  dest[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;
  dest[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;
  dest[4] = (-a10 * b11 + a12 * b08 - a13 * b07) * invDet;
  dest[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;
  dest[6] = (-a30 * b05 + a32 * b02 - a33 * b01) * invDet;
  dest[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;
  dest[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;
  dest[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;
  dest[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;
  dest[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;
  dest[12] = (-a10 * b09 + a11 * b07 - a12 * b06) * invDet;
  dest[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;
  dest[14] = (-a30 * b03 + a31 * b01 - a32 * b00) * invDet;
  dest[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;
  return dest;
 });
 mat4.toRotationMat = (function(mat, dest) {
  if (!dest) {
   dest = mat4.create();
  }
  dest[0] = mat[0];
  dest[1] = mat[1];
  dest[2] = mat[2];
  dest[3] = mat[3];
  dest[4] = mat[4];
  dest[5] = mat[5];
  dest[6] = mat[6];
  dest[7] = mat[7];
  dest[8] = mat[8];
  dest[9] = mat[9];
  dest[10] = mat[10];
  dest[11] = mat[11];
  dest[12] = 0;
  dest[13] = 0;
  dest[14] = 0;
  dest[15] = 1;
  return dest;
 });
 mat4.toMat3 = (function(mat, dest) {
  if (!dest) {
   dest = mat3.create();
  }
  dest[0] = mat[0];
  dest[1] = mat[1];
  dest[2] = mat[2];
  dest[3] = mat[4];
  dest[4] = mat[5];
  dest[5] = mat[6];
  dest[6] = mat[8];
  dest[7] = mat[9];
  dest[8] = mat[10];
  return dest;
 });
 mat4.toInverseMat3 = (function(mat, dest) {
  var a00 = mat[0], a01 = mat[1], a02 = mat[2], a10 = mat[4], a11 = mat[5], a12 = mat[6], a20 = mat[8], a21 = mat[9], a22 = mat[10], b01 = a22 * a11 - a12 * a21, b11 = -a22 * a10 + a12 * a20, b21 = a21 * a10 - a11 * a20, d = a00 * b01 + a01 * b11 + a02 * b21, id;
  if (!d) {
   return null;
  }
  id = 1 / d;
  if (!dest) {
   dest = mat3.create();
  }
  dest[0] = b01 * id;
  dest[1] = (-a22 * a01 + a02 * a21) * id;
  dest[2] = (a12 * a01 - a02 * a11) * id;
  dest[3] = b11 * id;
  dest[4] = (a22 * a00 - a02 * a20) * id;
  dest[5] = (-a12 * a00 + a02 * a10) * id;
  dest[6] = b21 * id;
  dest[7] = (-a21 * a00 + a01 * a20) * id;
  dest[8] = (a11 * a00 - a01 * a10) * id;
  return dest;
 });
 mat4.multiply = (function(mat, mat2, dest) {
  if (!dest) {
   dest = mat;
  }
  var a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3], a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7], a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11], a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15], b00 = mat2[0], b01 = mat2[1], b02 = mat2[2], b03 = mat2[3], b10 = mat2[4], b11 = mat2[5], b12 = mat2[6], b13 = mat2[7], b20 = mat2[8], b21 = mat2[9], b22 = mat2[10], b23 = mat2[11], b30 = mat2[12], b31 = mat2[13], b32 = mat2[14], b33 = mat2[15];
  dest[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;
  dest[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;
  dest[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;
  dest[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;
  dest[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;
  dest[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;
  dest[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;
  dest[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;
  dest[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;
  dest[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;
  dest[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;
  dest[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;
  dest[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;
  dest[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;
  dest[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;
  dest[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;
  return dest;
 });
 mat4.multiplyVec3 = (function(mat, vec, dest) {
  if (!dest) {
   dest = vec;
  }
  var x = vec[0], y = vec[1], z = vec[2];
  dest[0] = mat[0] * x + mat[4] * y + mat[8] * z + mat[12];
  dest[1] = mat[1] * x + mat[5] * y + mat[9] * z + mat[13];
  dest[2] = mat[2] * x + mat[6] * y + mat[10] * z + mat[14];
  return dest;
 });
 mat4.multiplyVec4 = (function(mat, vec, dest) {
  if (!dest) {
   dest = vec;
  }
  var x = vec[0], y = vec[1], z = vec[2], w = vec[3];
  dest[0] = mat[0] * x + mat[4] * y + mat[8] * z + mat[12] * w;
  dest[1] = mat[1] * x + mat[5] * y + mat[9] * z + mat[13] * w;
  dest[2] = mat[2] * x + mat[6] * y + mat[10] * z + mat[14] * w;
  dest[3] = mat[3] * x + mat[7] * y + mat[11] * z + mat[15] * w;
  return dest;
 });
 mat4.translate = (function(mat, vec, dest) {
  var x = vec[0], y = vec[1], z = vec[2], a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23;
  if (!dest || mat === dest) {
   mat[12] = mat[0] * x + mat[4] * y + mat[8] * z + mat[12];
   mat[13] = mat[1] * x + mat[5] * y + mat[9] * z + mat[13];
   mat[14] = mat[2] * x + mat[6] * y + mat[10] * z + mat[14];
   mat[15] = mat[3] * x + mat[7] * y + mat[11] * z + mat[15];
   return mat;
  }
  a00 = mat[0];
  a01 = mat[1];
  a02 = mat[2];
  a03 = mat[3];
  a10 = mat[4];
  a11 = mat[5];
  a12 = mat[6];
  a13 = mat[7];
  a20 = mat[8];
  a21 = mat[9];
  a22 = mat[10];
  a23 = mat[11];
  dest[0] = a00;
  dest[1] = a01;
  dest[2] = a02;
  dest[3] = a03;
  dest[4] = a10;
  dest[5] = a11;
  dest[6] = a12;
  dest[7] = a13;
  dest[8] = a20;
  dest[9] = a21;
  dest[10] = a22;
  dest[11] = a23;
  dest[12] = a00 * x + a10 * y + a20 * z + mat[12];
  dest[13] = a01 * x + a11 * y + a21 * z + mat[13];
  dest[14] = a02 * x + a12 * y + a22 * z + mat[14];
  dest[15] = a03 * x + a13 * y + a23 * z + mat[15];
  return dest;
 });
 mat4.scale = (function(mat, vec, dest) {
  var x = vec[0], y = vec[1], z = vec[2];
  if (!dest || mat === dest) {
   mat[0] *= x;
   mat[1] *= x;
   mat[2] *= x;
   mat[3] *= x;
   mat[4] *= y;
   mat[5] *= y;
   mat[6] *= y;
   mat[7] *= y;
   mat[8] *= z;
   mat[9] *= z;
   mat[10] *= z;
   mat[11] *= z;
   return mat;
  }
  dest[0] = mat[0] * x;
  dest[1] = mat[1] * x;
  dest[2] = mat[2] * x;
  dest[3] = mat[3] * x;
  dest[4] = mat[4] * y;
  dest[5] = mat[5] * y;
  dest[6] = mat[6] * y;
  dest[7] = mat[7] * y;
  dest[8] = mat[8] * z;
  dest[9] = mat[9] * z;
  dest[10] = mat[10] * z;
  dest[11] = mat[11] * z;
  dest[12] = mat[12];
  dest[13] = mat[13];
  dest[14] = mat[14];
  dest[15] = mat[15];
  return dest;
 });
 mat4.rotate = (function(mat, angle, axis, dest) {
  var x = axis[0], y = axis[1], z = axis[2], len = Math.sqrt(x * x + y * y + z * z), s, c, t, a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, b00, b01, b02, b10, b11, b12, b20, b21, b22;
  if (!len) {
   return null;
  }
  if (len !== 1) {
   len = 1 / len;
   x *= len;
   y *= len;
   z *= len;
  }
  s = Math.sin(angle);
  c = Math.cos(angle);
  t = 1 - c;
  a00 = mat[0];
  a01 = mat[1];
  a02 = mat[2];
  a03 = mat[3];
  a10 = mat[4];
  a11 = mat[5];
  a12 = mat[6];
  a13 = mat[7];
  a20 = mat[8];
  a21 = mat[9];
  a22 = mat[10];
  a23 = mat[11];
  b00 = x * x * t + c;
  b01 = y * x * t + z * s;
  b02 = z * x * t - y * s;
  b10 = x * y * t - z * s;
  b11 = y * y * t + c;
  b12 = z * y * t + x * s;
  b20 = x * z * t + y * s;
  b21 = y * z * t - x * s;
  b22 = z * z * t + c;
  if (!dest) {
   dest = mat;
  } else if (mat !== dest) {
   dest[12] = mat[12];
   dest[13] = mat[13];
   dest[14] = mat[14];
   dest[15] = mat[15];
  }
  dest[0] = a00 * b00 + a10 * b01 + a20 * b02;
  dest[1] = a01 * b00 + a11 * b01 + a21 * b02;
  dest[2] = a02 * b00 + a12 * b01 + a22 * b02;
  dest[3] = a03 * b00 + a13 * b01 + a23 * b02;
  dest[4] = a00 * b10 + a10 * b11 + a20 * b12;
  dest[5] = a01 * b10 + a11 * b11 + a21 * b12;
  dest[6] = a02 * b10 + a12 * b11 + a22 * b12;
  dest[7] = a03 * b10 + a13 * b11 + a23 * b12;
  dest[8] = a00 * b20 + a10 * b21 + a20 * b22;
  dest[9] = a01 * b20 + a11 * b21 + a21 * b22;
  dest[10] = a02 * b20 + a12 * b21 + a22 * b22;
  dest[11] = a03 * b20 + a13 * b21 + a23 * b22;
  return dest;
 });
 mat4.rotateX = (function(mat, angle, dest) {
  var s = Math.sin(angle), c = Math.cos(angle), a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7], a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11];
  if (!dest) {
   dest = mat;
  } else if (mat !== dest) {
   dest[0] = mat[0];
   dest[1] = mat[1];
   dest[2] = mat[2];
   dest[3] = mat[3];
   dest[12] = mat[12];
   dest[13] = mat[13];
   dest[14] = mat[14];
   dest[15] = mat[15];
  }
  dest[4] = a10 * c + a20 * s;
  dest[5] = a11 * c + a21 * s;
  dest[6] = a12 * c + a22 * s;
  dest[7] = a13 * c + a23 * s;
  dest[8] = a10 * -s + a20 * c;
  dest[9] = a11 * -s + a21 * c;
  dest[10] = a12 * -s + a22 * c;
  dest[11] = a13 * -s + a23 * c;
  return dest;
 });
 mat4.rotateY = (function(mat, angle, dest) {
  var s = Math.sin(angle), c = Math.cos(angle), a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3], a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11];
  if (!dest) {
   dest = mat;
  } else if (mat !== dest) {
   dest[4] = mat[4];
   dest[5] = mat[5];
   dest[6] = mat[6];
   dest[7] = mat[7];
   dest[12] = mat[12];
   dest[13] = mat[13];
   dest[14] = mat[14];
   dest[15] = mat[15];
  }
  dest[0] = a00 * c + a20 * -s;
  dest[1] = a01 * c + a21 * -s;
  dest[2] = a02 * c + a22 * -s;
  dest[3] = a03 * c + a23 * -s;
  dest[8] = a00 * s + a20 * c;
  dest[9] = a01 * s + a21 * c;
  dest[10] = a02 * s + a22 * c;
  dest[11] = a03 * s + a23 * c;
  return dest;
 });
 mat4.rotateZ = (function(mat, angle, dest) {
  var s = Math.sin(angle), c = Math.cos(angle), a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3], a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7];
  if (!dest) {
   dest = mat;
  } else if (mat !== dest) {
   dest[8] = mat[8];
   dest[9] = mat[9];
   dest[10] = mat[10];
   dest[11] = mat[11];
   dest[12] = mat[12];
   dest[13] = mat[13];
   dest[14] = mat[14];
   dest[15] = mat[15];
  }
  dest[0] = a00 * c + a10 * s;
  dest[1] = a01 * c + a11 * s;
  dest[2] = a02 * c + a12 * s;
  dest[3] = a03 * c + a13 * s;
  dest[4] = a00 * -s + a10 * c;
  dest[5] = a01 * -s + a11 * c;
  dest[6] = a02 * -s + a12 * c;
  dest[7] = a03 * -s + a13 * c;
  return dest;
 });
 mat4.frustum = (function(left, right, bottom, top, near, far, dest) {
  if (!dest) {
   dest = mat4.create();
  }
  var rl = right - left, tb = top - bottom, fn = far - near;
  dest[0] = near * 2 / rl;
  dest[1] = 0;
  dest[2] = 0;
  dest[3] = 0;
  dest[4] = 0;
  dest[5] = near * 2 / tb;
  dest[6] = 0;
  dest[7] = 0;
  dest[8] = (right + left) / rl;
  dest[9] = (top + bottom) / tb;
  dest[10] = -(far + near) / fn;
  dest[11] = -1;
  dest[12] = 0;
  dest[13] = 0;
  dest[14] = -(far * near * 2) / fn;
  dest[15] = 0;
  return dest;
 });
 mat4.perspective = (function(fovy, aspect, near, far, dest) {
  var top = near * Math.tan(fovy * Math.PI / 360), right = top * aspect;
  return mat4.frustum(-right, right, -top, top, near, far, dest);
 });
 mat4.ortho = (function(left, right, bottom, top, near, far, dest) {
  if (!dest) {
   dest = mat4.create();
  }
  var rl = right - left, tb = top - bottom, fn = far - near;
  dest[0] = 2 / rl;
  dest[1] = 0;
  dest[2] = 0;
  dest[3] = 0;
  dest[4] = 0;
  dest[5] = 2 / tb;
  dest[6] = 0;
  dest[7] = 0;
  dest[8] = 0;
  dest[9] = 0;
  dest[10] = -2 / fn;
  dest[11] = 0;
  dest[12] = -(left + right) / rl;
  dest[13] = -(top + bottom) / tb;
  dest[14] = -(far + near) / fn;
  dest[15] = 1;
  return dest;
 });
 mat4.lookAt = (function(eye, center, up, dest) {
  if (!dest) {
   dest = mat4.create();
  }
  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len, eyex = eye[0], eyey = eye[1], eyez = eye[2], upx = up[0], upy = up[1], upz = up[2], centerx = center[0], centery = center[1], centerz = center[2];
  if (eyex === centerx && eyey === centery && eyez === centerz) {
   return mat4.identity(dest);
  }
  z0 = eyex - centerx;
  z1 = eyey - centery;
  z2 = eyez - centerz;
  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);
  z0 *= len;
  z1 *= len;
  z2 *= len;
  x0 = upy * z2 - upz * z1;
  x1 = upz * z0 - upx * z2;
  x2 = upx * z1 - upy * z0;
  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);
  if (!len) {
   x0 = 0;
   x1 = 0;
   x2 = 0;
  } else {
   len = 1 / len;
   x0 *= len;
   x1 *= len;
   x2 *= len;
  }
  y0 = z1 * x2 - z2 * x1;
  y1 = z2 * x0 - z0 * x2;
  y2 = z0 * x1 - z1 * x0;
  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);
  if (!len) {
   y0 = 0;
   y1 = 0;
   y2 = 0;
  } else {
   len = 1 / len;
   y0 *= len;
   y1 *= len;
   y2 *= len;
  }
  dest[0] = x0;
  dest[1] = y0;
  dest[2] = z0;
  dest[3] = 0;
  dest[4] = x1;
  dest[5] = y1;
  dest[6] = z1;
  dest[7] = 0;
  dest[8] = x2;
  dest[9] = y2;
  dest[10] = z2;
  dest[11] = 0;
  dest[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);
  dest[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);
  dest[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);
  dest[15] = 1;
  return dest;
 });
 mat4.fromRotationTranslation = (function(quat, vec, dest) {
  if (!dest) {
   dest = mat4.create();
  }
  var x = quat[0], y = quat[1], z = quat[2], w = quat[3], x2 = x + x, y2 = y + y, z2 = z + z, xx = x * x2, xy = x * y2, xz = x * z2, yy = y * y2, yz = y * z2, zz = z * z2, wx = w * x2, wy = w * y2, wz = w * z2;
  dest[0] = 1 - (yy + zz);
  dest[1] = xy + wz;
  dest[2] = xz - wy;
  dest[3] = 0;
  dest[4] = xy - wz;
  dest[5] = 1 - (xx + zz);
  dest[6] = yz + wx;
  dest[7] = 0;
  dest[8] = xz + wy;
  dest[9] = yz - wx;
  dest[10] = 1 - (xx + yy);
  dest[11] = 0;
  dest[12] = vec[0];
  dest[13] = vec[1];
  dest[14] = vec[2];
  dest[15] = 1;
  return dest;
 });
 mat4.str = (function(mat) {
  return "[" + mat[0] + ", " + mat[1] + ", " + mat[2] + ", " + mat[3] + ", " + mat[4] + ", " + mat[5] + ", " + mat[6] + ", " + mat[7] + ", " + mat[8] + ", " + mat[9] + ", " + mat[10] + ", " + mat[11] + ", " + mat[12] + ", " + mat[13] + ", " + mat[14] + ", " + mat[15] + "]";
 });
 quat4.create = (function(quat) {
  var dest = new MatrixArray(4);
  if (quat) {
   dest[0] = quat[0];
   dest[1] = quat[1];
   dest[2] = quat[2];
   dest[3] = quat[3];
  }
  return dest;
 });
 quat4.set = (function(quat, dest) {
  dest[0] = quat[0];
  dest[1] = quat[1];
  dest[2] = quat[2];
  dest[3] = quat[3];
  return dest;
 });
 quat4.calculateW = (function(quat, dest) {
  var x = quat[0], y = quat[1], z = quat[2];
  if (!dest || quat === dest) {
   quat[3] = -Math.sqrt(Math.abs(1 - x * x - y * y - z * z));
   return quat;
  }
  dest[0] = x;
  dest[1] = y;
  dest[2] = z;
  dest[3] = -Math.sqrt(Math.abs(1 - x * x - y * y - z * z));
  return dest;
 });
 quat4.dot = (function(quat, quat2) {
  return quat[0] * quat2[0] + quat[1] * quat2[1] + quat[2] * quat2[2] + quat[3] * quat2[3];
 });
 quat4.inverse = (function(quat, dest) {
  var q0 = quat[0], q1 = quat[1], q2 = quat[2], q3 = quat[3], dot = q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3, invDot = dot ? 1 / dot : 0;
  if (!dest || quat === dest) {
   quat[0] *= -invDot;
   quat[1] *= -invDot;
   quat[2] *= -invDot;
   quat[3] *= invDot;
   return quat;
  }
  dest[0] = -quat[0] * invDot;
  dest[1] = -quat[1] * invDot;
  dest[2] = -quat[2] * invDot;
  dest[3] = quat[3] * invDot;
  return dest;
 });
 quat4.conjugate = (function(quat, dest) {
  if (!dest || quat === dest) {
   quat[0] *= -1;
   quat[1] *= -1;
   quat[2] *= -1;
   return quat;
  }
  dest[0] = -quat[0];
  dest[1] = -quat[1];
  dest[2] = -quat[2];
  dest[3] = quat[3];
  return dest;
 });
 quat4.length = (function(quat) {
  var x = quat[0], y = quat[1], z = quat[2], w = quat[3];
  return Math.sqrt(x * x + y * y + z * z + w * w);
 });
 quat4.normalize = (function(quat, dest) {
  if (!dest) {
   dest = quat;
  }
  var x = quat[0], y = quat[1], z = quat[2], w = quat[3], len = Math.sqrt(x * x + y * y + z * z + w * w);
  if (len === 0) {
   dest[0] = 0;
   dest[1] = 0;
   dest[2] = 0;
   dest[3] = 0;
   return dest;
  }
  len = 1 / len;
  dest[0] = x * len;
  dest[1] = y * len;
  dest[2] = z * len;
  dest[3] = w * len;
  return dest;
 });
 quat4.add = (function(quat, quat2, dest) {
  if (!dest || quat === dest) {
   quat[0] += quat2[0];
   quat[1] += quat2[1];
   quat[2] += quat2[2];
   quat[3] += quat2[3];
   return quat;
  }
  dest[0] = quat[0] + quat2[0];
  dest[1] = quat[1] + quat2[1];
  dest[2] = quat[2] + quat2[2];
  dest[3] = quat[3] + quat2[3];
  return dest;
 });
 quat4.multiply = (function(quat, quat2, dest) {
  if (!dest) {
   dest = quat;
  }
  var qax = quat[0], qay = quat[1], qaz = quat[2], qaw = quat[3], qbx = quat2[0], qby = quat2[1], qbz = quat2[2], qbw = quat2[3];
  dest[0] = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
  dest[1] = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
  dest[2] = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
  dest[3] = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;
  return dest;
 });
 quat4.multiplyVec3 = (function(quat, vec, dest) {
  if (!dest) {
   dest = vec;
  }
  var x = vec[0], y = vec[1], z = vec[2], qx = quat[0], qy = quat[1], qz = quat[2], qw = quat[3], ix = qw * x + qy * z - qz * y, iy = qw * y + qz * x - qx * z, iz = qw * z + qx * y - qy * x, iw = -qx * x - qy * y - qz * z;
  dest[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
  dest[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
  dest[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
  return dest;
 });
 quat4.scale = (function(quat, val, dest) {
  if (!dest || quat === dest) {
   quat[0] *= val;
   quat[1] *= val;
   quat[2] *= val;
   quat[3] *= val;
   return quat;
  }
  dest[0] = quat[0] * val;
  dest[1] = quat[1] * val;
  dest[2] = quat[2] * val;
  dest[3] = quat[3] * val;
  return dest;
 });
 quat4.toMat3 = (function(quat, dest) {
  if (!dest) {
   dest = mat3.create();
  }
  var x = quat[0], y = quat[1], z = quat[2], w = quat[3], x2 = x + x, y2 = y + y, z2 = z + z, xx = x * x2, xy = x * y2, xz = x * z2, yy = y * y2, yz = y * z2, zz = z * z2, wx = w * x2, wy = w * y2, wz = w * z2;
  dest[0] = 1 - (yy + zz);
  dest[1] = xy + wz;
  dest[2] = xz - wy;
  dest[3] = xy - wz;
  dest[4] = 1 - (xx + zz);
  dest[5] = yz + wx;
  dest[6] = xz + wy;
  dest[7] = yz - wx;
  dest[8] = 1 - (xx + yy);
  return dest;
 });
 quat4.toMat4 = (function(quat, dest) {
  if (!dest) {
   dest = mat4.create();
  }
  var x = quat[0], y = quat[1], z = quat[2], w = quat[3], x2 = x + x, y2 = y + y, z2 = z + z, xx = x * x2, xy = x * y2, xz = x * z2, yy = y * y2, yz = y * z2, zz = z * z2, wx = w * x2, wy = w * y2, wz = w * z2;
  dest[0] = 1 - (yy + zz);
  dest[1] = xy + wz;
  dest[2] = xz - wy;
  dest[3] = 0;
  dest[4] = xy - wz;
  dest[5] = 1 - (xx + zz);
  dest[6] = yz + wx;
  dest[7] = 0;
  dest[8] = xz + wy;
  dest[9] = yz - wx;
  dest[10] = 1 - (xx + yy);
  dest[11] = 0;
  dest[12] = 0;
  dest[13] = 0;
  dest[14] = 0;
  dest[15] = 1;
  return dest;
 });
 quat4.slerp = (function(quat, quat2, slerp, dest) {
  if (!dest) {
   dest = quat;
  }
  var cosHalfTheta = quat[0] * quat2[0] + quat[1] * quat2[1] + quat[2] * quat2[2] + quat[3] * quat2[3], halfTheta, sinHalfTheta, ratioA, ratioB;
  if (Math.abs(cosHalfTheta) >= 1) {
   if (dest !== quat) {
    dest[0] = quat[0];
    dest[1] = quat[1];
    dest[2] = quat[2];
    dest[3] = quat[3];
   }
   return dest;
  }
  halfTheta = Math.acos(cosHalfTheta);
  sinHalfTheta = Math.sqrt(1 - cosHalfTheta * cosHalfTheta);
  if (Math.abs(sinHalfTheta) < .001) {
   dest[0] = quat[0] * .5 + quat2[0] * .5;
   dest[1] = quat[1] * .5 + quat2[1] * .5;
   dest[2] = quat[2] * .5 + quat2[2] * .5;
   dest[3] = quat[3] * .5 + quat2[3] * .5;
   return dest;
  }
  ratioA = Math.sin((1 - slerp) * halfTheta) / sinHalfTheta;
  ratioB = Math.sin(slerp * halfTheta) / sinHalfTheta;
  dest[0] = quat[0] * ratioA + quat2[0] * ratioB;
  dest[1] = quat[1] * ratioA + quat2[1] * ratioB;
  dest[2] = quat[2] * ratioA + quat2[2] * ratioB;
  dest[3] = quat[3] * ratioA + quat2[3] * ratioB;
  return dest;
 });
 quat4.str = (function(quat) {
  return "[" + quat[0] + ", " + quat[1] + ", " + quat[2] + ", " + quat[3] + "]";
 });
 return {
  vec3: vec3,
  mat3: mat3,
  mat4: mat4,
  quat4: quat4
 };
})();
var GLImmediateSetup = {};
function _glEnable(x0) {
 GLctx.enable(x0);
}
function _glDisable(x0) {
 GLctx.disable(x0);
}
function _glIsEnabled(x0) {
 return GLctx.isEnabled(x0);
}
function emscriptenWebGLGet(name_, p, type) {
 if (!p) {
  GL.recordError(1281);
  return;
 }
 var ret = undefined;
 switch (name_) {
 case 36346:
  ret = 1;
  break;
 case 36344:
  if (type !== "Integer" && type !== "Integer64") {
   GL.recordError(1280);
  }
  return;
 case 36345:
  ret = 0;
  break;
 case 34466:
  var formats = GLctx.getParameter(34467);
  ret = formats.length;
  break;
 case 35738:
  ret = 5121;
  break;
 case 35739:
  ret = 6408;
  break;
 }
 if (ret === undefined) {
  var result = GLctx.getParameter(name_);
  switch (typeof result) {
  case "number":
   ret = result;
   break;
  case "boolean":
   ret = result ? 1 : 0;
   break;
  case "string":
   GL.recordError(1280);
   return;
  case "object":
   if (result === null) {
    switch (name_) {
    case 34964:
    case 35725:
    case 34965:
    case 36006:
    case 36007:
    case 32873:
    case 34068:
     {
      ret = 0;
      break;
     }
    default:
     {
      GL.recordError(1280);
      return;
     }
    }
   } else if (result instanceof Float32Array || result instanceof Uint32Array || result instanceof Int32Array || result instanceof Array) {
    for (var i = 0; i < result.length; ++i) {
     switch (type) {
     case "Integer":
      HEAP32[p + i * 4 >> 2] = result[i];
      break;
     case "Float":
      HEAPF32[p + i * 4 >> 2] = result[i];
      break;
     case "Boolean":
      HEAP8[p + i >> 0] = result[i] ? 1 : 0;
      break;
     default:
      throw "internal glGet error, bad type: " + type;
     }
    }
    return;
   } else if (result instanceof WebGLBuffer || result instanceof WebGLProgram || result instanceof WebGLFramebuffer || result instanceof WebGLRenderbuffer || result instanceof WebGLTexture) {
    ret = result.name | 0;
   } else {
    GL.recordError(1280);
    return;
   }
   break;
  default:
   GL.recordError(1280);
   return;
  }
 }
 switch (type) {
 case "Integer64":
  tempI64 = [ ret >>> 0, (tempDouble = ret, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], HEAP32[p >> 2] = tempI64[0], HEAP32[p + 4 >> 2] = tempI64[1];
  break;
 case "Integer":
  HEAP32[p >> 2] = ret;
  break;
 case "Float":
  HEAPF32[p >> 2] = ret;
  break;
 case "Boolean":
  HEAP8[p >> 0] = ret ? 1 : 0;
  break;
 default:
  throw "internal glGet error, bad type: " + type;
 }
}
function _glGetBooleanv(name_, p) {
 emscriptenWebGLGet(name_, p, "Boolean");
}
function _glGetIntegerv(name_, p) {
 emscriptenWebGLGet(name_, p, "Integer");
}
function _glGetString(name_) {
 if (GL.stringCache[name_]) return GL.stringCache[name_];
 var ret;
 switch (name_) {
 case 7936:
 case 7937:
 case 7938:
  ret = allocate(intArrayFromString(GLctx.getParameter(name_)), "i8", ALLOC_NORMAL);
  break;
 case 7939:
  var exts = GLctx.getSupportedExtensions();
  var gl_exts = [];
  for (var i in exts) {
   gl_exts.push(exts[i]);
   gl_exts.push("GL_" + exts[i]);
  }
  ret = allocate(intArrayFromString(gl_exts.join(" ")), "i8", ALLOC_NORMAL);
  break;
 case 35724:
  var glslVersion = GLctx.getParameter(GLctx.SHADING_LANGUAGE_VERSION);
  if (glslVersion.indexOf("WebGL GLSL ES 1.0") != -1) glslVersion = "OpenGL ES GLSL ES 1.00 (WebGL)";
  ret = allocate(intArrayFromString(glslVersion), "i8", ALLOC_NORMAL);
  break;
 default:
  GL.recordError(1280);
  return 0;
 }
 GL.stringCache[name_] = ret;
 return ret;
}
function _glCreateShader(shaderType) {
 var id = GL.getNewId(GL.shaders);
 GL.shaders[id] = GLctx.createShader(shaderType);
 return id;
}
function _glShaderSource(shader, count, string, length) {
 var source = GL.getSource(shader, count, string, length);
 GLctx.shaderSource(GL.shaders[shader], source);
}
function _glCompileShader(shader) {
 GLctx.compileShader(GL.shaders[shader]);
}
function _glAttachShader(program, shader) {
 GLctx.attachShader(GL.programs[program], GL.shaders[shader]);
}
function _glDetachShader(program, shader) {
 GLctx.detachShader(GL.programs[program], GL.shaders[shader]);
}
function _glUseProgram(program) {
 GLctx.useProgram(program ? GL.programs[program] : null);
}
function _glDeleteProgram(id) {
 if (!id) return;
 var program = GL.programs[id];
 if (!program) {
  GL.recordError(1281);
  return;
 }
 GLctx.deleteProgram(program);
 program.name = 0;
 GL.programs[id] = null;
 GL.programInfos[id] = null;
}
function _glBindAttribLocation(program, index, name) {
 name = Pointer_stringify(name);
 GLctx.bindAttribLocation(GL.programs[program], index, name);
}
function _glLinkProgram(program) {
 GLctx.linkProgram(GL.programs[program]);
 GL.programInfos[program] = null;
 GL.populateUniformTable(program);
}
function _glBindBuffer(target, buffer) {
 var bufferObj = buffer ? GL.buffers[buffer] : null;
 if (target == GLctx.ARRAY_BUFFER) {
  GL.currArrayBuffer = buffer;
  GLImmediate.lastArrayBuffer = buffer;
 } else if (target == GLctx.ELEMENT_ARRAY_BUFFER) {
  GL.currElementArrayBuffer = buffer;
 }
 GLctx.bindBuffer(target, bufferObj);
}
function _glGetFloatv(name_, p) {
 emscriptenWebGLGet(name_, p, "Float");
}
function _glEnableVertexAttribArray(index) {
 GLctx.enableVertexAttribArray(index);
}
function _glDisableVertexAttribArray(index) {
 GLctx.disableVertexAttribArray(index);
}
function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {
 GLctx.vertexAttribPointer(index, size, type, normalized, stride, ptr);
}
function _glActiveTexture(x0) {
 GLctx.activeTexture(x0);
}
var GLEmulation = {
 fogStart: 0,
 fogEnd: 1,
 fogDensity: 1,
 fogColor: null,
 fogMode: 2048,
 fogEnabled: false,
 vaos: [],
 currentVao: null,
 enabledVertexAttribArrays: {},
 hasRunInit: false,
 init: (function() {
  if (GLEmulation.hasRunInit) {
   return;
  }
  GLEmulation.hasRunInit = true;
  GLEmulation.fogColor = new Float32Array(4);
  Module.printErr("WARNING: using emscripten GL emulation. This is a collection of limited workarounds, do not expect it to work.");
  Module.printErr("WARNING: using emscripten GL emulation unsafe opts. If weirdness happens, try -s GL_UNSAFE_OPTS=0");
  var validCapabilities = {
   2884: 1,
   3042: 1,
   3024: 1,
   2960: 1,
   2929: 1,
   3089: 1,
   32823: 1,
   32926: 1,
   32928: 1
  };
  var glEnable = _glEnable;
  _glEnable = _emscripten_glEnable = function _glEnable(cap) {
   if (GLImmediate.lastRenderer) GLImmediate.lastRenderer.cleanup();
   if (cap == 2912) {
    if (GLEmulation.fogEnabled != true) {
     GLImmediate.currentRenderer = null;
     GLEmulation.fogEnabled = true;
    }
    return;
   } else if (cap == 3553) {
    return;
   } else if (!(cap in validCapabilities)) {
    return;
   }
   glEnable(cap);
  };
  var glDisable = _glDisable;
  _glDisable = _emscripten_glDisable = function _glDisable(cap) {
   if (GLImmediate.lastRenderer) GLImmediate.lastRenderer.cleanup();
   if (cap == 2912) {
    if (GLEmulation.fogEnabled != false) {
     GLImmediate.currentRenderer = null;
     GLEmulation.fogEnabled = false;
    }
    return;
   } else if (cap == 3553) {
    return;
   } else if (!(cap in validCapabilities)) {
    return;
   }
   glDisable(cap);
  };
  _glIsEnabled = _emscripten_glIsEnabled = function _glIsEnabled(cap) {
   if (cap == 2912) {
    return GLEmulation.fogEnabled ? 1 : 0;
   } else if (!(cap in validCapabilities)) {
    return 0;
   }
   return GLctx.isEnabled(cap);
  };
  var glGetBooleanv = _glGetBooleanv;
  _glGetBooleanv = _emscripten_glGetBooleanv = function _glGetBooleanv(pname, p) {
   var attrib = GLEmulation.getAttributeFromCapability(pname);
   if (attrib !== null) {
    var result = GLImmediate.enabledClientAttributes[attrib];
    HEAP8[p >> 0] = result === true ? 1 : 0;
    return;
   }
   glGetBooleanv(pname, p);
  };
  var glGetIntegerv = _glGetIntegerv;
  _glGetIntegerv = _emscripten_glGetIntegerv = function _glGetIntegerv(pname, params) {
   switch (pname) {
   case 34018:
    pname = GLctx.MAX_TEXTURE_IMAGE_UNITS;
    break;
   case 35658:
    {
     var result = GLctx.getParameter(GLctx.MAX_VERTEX_UNIFORM_VECTORS);
     HEAP32[params >> 2] = result * 4;
     return;
    }
   case 35657:
    {
     var result = GLctx.getParameter(GLctx.MAX_FRAGMENT_UNIFORM_VECTORS);
     HEAP32[params >> 2] = result * 4;
     return;
    }
   case 35659:
    {
     var result = GLctx.getParameter(GLctx.MAX_VARYING_VECTORS);
     HEAP32[params >> 2] = result * 4;
     return;
    }
   case 34929:
    pname = GLctx.MAX_COMBINED_TEXTURE_IMAGE_UNITS;
    break;
   case 32890:
    {
     var attribute = GLImmediate.clientAttributes[GLImmediate.VERTEX];
     HEAP32[params >> 2] = attribute ? attribute.size : 0;
     return;
    }
   case 32891:
    {
     var attribute = GLImmediate.clientAttributes[GLImmediate.VERTEX];
     HEAP32[params >> 2] = attribute ? attribute.type : 0;
     return;
    }
   case 32892:
    {
     var attribute = GLImmediate.clientAttributes[GLImmediate.VERTEX];
     HEAP32[params >> 2] = attribute ? attribute.stride : 0;
     return;
    }
   case 32897:
    {
     var attribute = GLImmediate.clientAttributes[GLImmediate.COLOR];
     HEAP32[params >> 2] = attribute ? attribute.size : 0;
     return;
    }
   case 32898:
    {
     var attribute = GLImmediate.clientAttributes[GLImmediate.COLOR];
     HEAP32[params >> 2] = attribute ? attribute.type : 0;
     return;
    }
   case 32899:
    {
     var attribute = GLImmediate.clientAttributes[GLImmediate.COLOR];
     HEAP32[params >> 2] = attribute ? attribute.stride : 0;
     return;
    }
   case 32904:
    {
     var attribute = GLImmediate.clientAttributes[GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture];
     HEAP32[params >> 2] = attribute ? attribute.size : 0;
     return;
    }
   case 32905:
    {
     var attribute = GLImmediate.clientAttributes[GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture];
     HEAP32[params >> 2] = attribute ? attribute.type : 0;
     return;
    }
   case 32906:
    {
     var attribute = GLImmediate.clientAttributes[GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture];
     HEAP32[params >> 2] = attribute ? attribute.stride : 0;
     return;
    }
   }
   glGetIntegerv(pname, params);
  };
  var glGetString = _glGetString;
  _glGetString = _emscripten_glGetString = function _glGetString(name_) {
   if (GL.stringCache[name_]) return GL.stringCache[name_];
   switch (name_) {
   case 7939:
    var ret = allocate(intArrayFromString(GLctx.getSupportedExtensions().join(" ") + " GL_EXT_texture_env_combine GL_ARB_texture_env_crossbar GL_ATI_texture_env_combine3 GL_NV_texture_env_combine4 GL_EXT_texture_env_dot3 GL_ARB_multitexture GL_ARB_vertex_buffer_object GL_EXT_framebuffer_object GL_ARB_vertex_program GL_ARB_fragment_program GL_ARB_shading_language_100 GL_ARB_shader_objects GL_ARB_vertex_shader GL_ARB_fragment_shader GL_ARB_texture_cube_map GL_EXT_draw_range_elements" + (GL.currentContext.compressionExt ? " GL_ARB_texture_compression GL_EXT_texture_compression_s3tc" : "") + (GL.currentContext.anisotropicExt ? " GL_EXT_texture_filter_anisotropic" : "")), "i8", ALLOC_NORMAL);
    GL.stringCache[name_] = ret;
    return ret;
   }
   return glGetString(name_);
  };
  GL.shaderInfos = {};
  var glCreateShader = _glCreateShader;
  _glCreateShader = _emscripten_glCreateShader = function _glCreateShader(shaderType) {
   var id = glCreateShader(shaderType);
   GL.shaderInfos[id] = {
    type: shaderType,
    ftransform: false
   };
   return id;
  };
  function ensurePrecision(source) {
   if (!/precision +(low|medium|high)p +float *;/.test(source)) {
    source = "precision mediump float;\n" + source;
   }
   return source;
  }
  _glShaderSource = _emscripten_glShaderSource = function _glShaderSource(shader, count, string, length) {
   var source = GL.getSource(shader, count, string, length);
   if (GL.shaderInfos[shader].type == GLctx.VERTEX_SHADER) {
    var has_pm = source.search(/u_projection/) >= 0;
    var has_mm = source.search(/u_modelView/) >= 0;
    var has_pv = source.search(/a_position/) >= 0;
    var need_pm = 0, need_mm = 0, need_pv = 0;
    var old = source;
    source = source.replace(/ftransform\(\)/g, "(u_projection * u_modelView * a_position)");
    if (old != source) need_pm = need_mm = need_pv = 1;
    old = source;
    source = source.replace(/gl_ProjectionMatrix/g, "u_projection");
    if (old != source) need_pm = 1;
    old = source;
    source = source.replace(/gl_ModelViewMatrixTranspose\[2\]/g, "vec4(u_modelView[0][2], u_modelView[1][2], u_modelView[2][2], u_modelView[3][2])");
    if (old != source) need_mm = 1;
    old = source;
    source = source.replace(/gl_ModelViewMatrix/g, "u_modelView");
    if (old != source) need_mm = 1;
    old = source;
    source = source.replace(/gl_Vertex/g, "a_position");
    if (old != source) need_pv = 1;
    old = source;
    source = source.replace(/gl_ModelViewProjectionMatrix/g, "(u_projection * u_modelView)");
    if (old != source) need_pm = need_mm = 1;
    if (need_pv && !has_pv) source = "attribute vec4 a_position; \n" + source;
    if (need_mm && !has_mm) source = "uniform mat4 u_modelView; \n" + source;
    if (need_pm && !has_pm) source = "uniform mat4 u_projection; \n" + source;
    GL.shaderInfos[shader].ftransform = need_pm || need_mm || need_pv;
    for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
     var old = source;
     var need_vtc = source.search("v_texCoord" + i) == -1;
     source = source.replace(new RegExp("gl_TexCoord\\[" + i + "\\]", "g"), "v_texCoord" + i).replace(new RegExp("gl_MultiTexCoord" + i, "g"), "a_texCoord" + i);
     if (source != old) {
      source = "attribute vec4 a_texCoord" + i + "; \n" + source;
      if (need_vtc) {
       source = "varying vec4 v_texCoord" + i + ";   \n" + source;
      }
     }
     old = source;
     source = source.replace(new RegExp("gl_TextureMatrix\\[" + i + "\\]", "g"), "u_textureMatrix" + i);
     if (source != old) {
      source = "uniform mat4 u_textureMatrix" + i + "; \n" + source;
     }
    }
    if (source.indexOf("gl_FrontColor") >= 0) {
     source = "varying vec4 v_color; \n" + source.replace(/gl_FrontColor/g, "v_color");
    }
    if (source.indexOf("gl_Color") >= 0) {
     source = "attribute vec4 a_color; \n" + source.replace(/gl_Color/g, "a_color");
    }
    if (source.indexOf("gl_Normal") >= 0) {
     source = "attribute vec3 a_normal; \n" + source.replace(/gl_Normal/g, "a_normal");
    }
    if (source.indexOf("gl_FogFragCoord") >= 0) {
     source = "varying float v_fogFragCoord;   \n" + source.replace(/gl_FogFragCoord/g, "v_fogFragCoord");
    }
    source = ensurePrecision(source);
   } else {
    for (var i = 0; i < GLImmediate.MAX_TEXTURES; i++) {
     var old = source;
     source = source.replace(new RegExp("gl_TexCoord\\[" + i + "\\]", "g"), "v_texCoord" + i);
     if (source != old) {
      source = "varying vec4 v_texCoord" + i + ";   \n" + source;
     }
    }
    if (source.indexOf("gl_Color") >= 0) {
     source = "varying vec4 v_color; \n" + source.replace(/gl_Color/g, "v_color");
    }
    if (source.indexOf("gl_Fog.color") >= 0) {
     source = "uniform vec4 u_fogColor;   \n" + source.replace(/gl_Fog.color/g, "u_fogColor");
    }
    if (source.indexOf("gl_Fog.end") >= 0) {
     source = "uniform float u_fogEnd;   \n" + source.replace(/gl_Fog.end/g, "u_fogEnd");
    }
    if (source.indexOf("gl_Fog.scale") >= 0) {
     source = "uniform float u_fogScale;   \n" + source.replace(/gl_Fog.scale/g, "u_fogScale");
    }
    if (source.indexOf("gl_Fog.density") >= 0) {
     source = "uniform float u_fogDensity;   \n" + source.replace(/gl_Fog.density/g, "u_fogDensity");
    }
    if (source.indexOf("gl_FogFragCoord") >= 0) {
     source = "varying float v_fogFragCoord;   \n" + source.replace(/gl_FogFragCoord/g, "v_fogFragCoord");
    }
    source = ensurePrecision(source);
   }
   GLctx.shaderSource(GL.shaders[shader], source);
  };
  _glCompileShader = _emscripten_glCompileShader = function _glCompileShader(shader) {
   GLctx.compileShader(GL.shaders[shader]);
  };
  GL.programShaders = {};
  var glAttachShader = _glAttachShader;
  _glAttachShader = _emscripten_glAttachShader = function _glAttachShader(program, shader) {
   if (!GL.programShaders[program]) GL.programShaders[program] = [];
   GL.programShaders[program].push(shader);
   glAttachShader(program, shader);
  };
  var glDetachShader = _glDetachShader;
  _glDetachShader = _emscripten_glDetachShader = function _glDetachShader(program, shader) {
   var programShader = GL.programShaders[program];
   if (!programShader) {
    Module.printErr("WARNING: _glDetachShader received invalid program: " + program);
    return;
   }
   var index = programShader.indexOf(shader);
   programShader.splice(index, 1);
   glDetachShader(program, shader);
  };
  var glUseProgram = _glUseProgram;
  _glUseProgram = _emscripten_glUseProgram = function _glUseProgram(program) {
   if (GL.currProgram != program) {
    GLImmediate.currentRenderer = null;
    GL.currProgram = program;
    GLImmediate.fixedFunctionProgram = 0;
    glUseProgram(program);
   }
  };
  var glDeleteProgram = _glDeleteProgram;
  _glDeleteProgram = _emscripten_glDeleteProgram = function _glDeleteProgram(program) {
   glDeleteProgram(program);
   if (program == GL.currProgram) {
    GLImmediate.currentRenderer = null;
    GL.currProgram = 0;
   }
  };
  var zeroUsedPrograms = {};
  var glBindAttribLocation = _glBindAttribLocation;
  _glBindAttribLocation = _emscripten_glBindAttribLocation = function _glBindAttribLocation(program, index, name) {
   if (index == 0) zeroUsedPrograms[program] = true;
   glBindAttribLocation(program, index, name);
  };
  var glLinkProgram = _glLinkProgram;
  _glLinkProgram = _emscripten_glLinkProgram = function _glLinkProgram(program) {
   if (!(program in zeroUsedPrograms)) {
    GLctx.bindAttribLocation(GL.programs[program], 0, "a_position");
   }
   glLinkProgram(program);
  };
  var glBindBuffer = _glBindBuffer;
  _glBindBuffer = _emscripten_glBindBuffer = function _glBindBuffer(target, buffer) {
   glBindBuffer(target, buffer);
   if (target == GLctx.ARRAY_BUFFER) {
    if (GLEmulation.currentVao) {
     GLEmulation.currentVao.arrayBuffer = buffer;
    }
   } else if (target == GLctx.ELEMENT_ARRAY_BUFFER) {
    if (GLEmulation.currentVao) GLEmulation.currentVao.elementArrayBuffer = buffer;
   }
  };
  var glGetFloatv = _glGetFloatv;
  _glGetFloatv = _emscripten_glGetFloatv = function _glGetFloatv(pname, params) {
   if (pname == 2982) {
    HEAPF32.set(GLImmediate.matrix[0], params >> 2);
   } else if (pname == 2983) {
    HEAPF32.set(GLImmediate.matrix[1], params >> 2);
   } else if (pname == 2984) {
    HEAPF32.set(GLImmediate.matrix[2 + GLImmediate.clientActiveTexture], params >> 2);
   } else if (pname == 2918) {
    HEAPF32.set(GLEmulation.fogColor, params >> 2);
   } else if (pname == 2915) {
    HEAPF32[params >> 2] = GLEmulation.fogStart;
   } else if (pname == 2916) {
    HEAPF32[params >> 2] = GLEmulation.fogEnd;
   } else if (pname == 2914) {
    HEAPF32[params >> 2] = GLEmulation.fogDensity;
   } else if (pname == 2917) {
    HEAPF32[params >> 2] = GLEmulation.fogMode;
   } else {
    glGetFloatv(pname, params);
   }
  };
  var glHint = _glHint;
  _glHint = _emscripten_glHint = function _glHint(target, mode) {
   if (target == 34031) {
    return;
   }
   glHint(target, mode);
  };
  var glEnableVertexAttribArray = _glEnableVertexAttribArray;
  _glEnableVertexAttribArray = _emscripten_glEnableVertexAttribArray = function _glEnableVertexAttribArray(index) {
   glEnableVertexAttribArray(index);
   GLEmulation.enabledVertexAttribArrays[index] = 1;
   if (GLEmulation.currentVao) GLEmulation.currentVao.enabledVertexAttribArrays[index] = 1;
  };
  var glDisableVertexAttribArray = _glDisableVertexAttribArray;
  _glDisableVertexAttribArray = _emscripten_glDisableVertexAttribArray = function _glDisableVertexAttribArray(index) {
   glDisableVertexAttribArray(index);
   delete GLEmulation.enabledVertexAttribArrays[index];
   if (GLEmulation.currentVao) delete GLEmulation.currentVao.enabledVertexAttribArrays[index];
  };
  var glVertexAttribPointer = _glVertexAttribPointer;
  _glVertexAttribPointer = _emscripten_glVertexAttribPointer = function _glVertexAttribPointer(index, size, type, normalized, stride, pointer) {
   glVertexAttribPointer(index, size, type, normalized, stride, pointer);
   if (GLEmulation.currentVao) {
    GLEmulation.currentVao.vertexAttribPointers[index] = [ index, size, type, normalized, stride, pointer ];
   }
  };
 }),
 getAttributeFromCapability: (function(cap) {
  var attrib = null;
  switch (cap) {
  case 3553:
  case 32888:
   attrib = GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture;
   break;
  case 32884:
   attrib = GLImmediate.VERTEX;
   break;
  case 32885:
   attrib = GLImmediate.NORMAL;
   break;
  case 32886:
   attrib = GLImmediate.COLOR;
   break;
  }
  return attrib;
 })
};
function _emscripten_glVertexPointer(size, type, stride, pointer) {
 GLImmediate.setClientAttribute(GLImmediate.VERTEX, size, type, stride, pointer);
}
function _Mix_FreeMusic() {
 return _Mix_FreeChunk.apply(null, arguments);
}
function _emscripten_glShaderSource(shader, count, string, length) {
 var source = GL.getSource(shader, count, string, length);
 GLctx.shaderSource(GL.shaders[shader], source);
}
function _SDL_DestroyCond() {}
function _Mix_SetPanning(channel, left, right) {
 left /= 255;
 right /= 255;
 SDL.setPannerPosition(SDL.channels[channel], right - left, 0, .1);
 return 1;
}
function _glScalef(x, y, z) {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.scale(GLImmediate.matrix[GLImmediate.currentMatrix], [ x, y, z ]);
}
function _emscripten_glReleaseShaderCompiler() {}
function _glLineWidth(x0) {
 GLctx.lineWidth(x0);
}
function _Mix_QuerySpec() {
 throw "Mix_QuerySpec: TODO";
}
function _emscripten_glTexParameterf(x0, x1, x2) {
 GLctx.texParameterf(x0, x1, x2);
}
function _glAlphaFunc() {}
function _SDL_SetAlpha(surf, flag, alpha) {
 var surfData = SDL.surfaces[surf];
 surfData.alpha = alpha;
 if (!(flag & 65536)) {
  surfData.alpha = 255;
 }
}
function _emscripten_glTexParameteri(x0, x1, x2) {
 GLctx.texParameteri(x0, x1, x2);
}
var SYSCALLS = {
 DEFAULT_POLLMASK: 5,
 mappings: {},
 umask: 511,
 calculateAt: (function(dirfd, path) {
  if (path[0] !== "/") {
   var dir;
   if (dirfd === -100) {
    dir = FS.cwd();
   } else {
    var dirstream = FS.getStream(dirfd);
    if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    dir = dirstream.path;
   }
   path = PATH.join2(dir, path);
  }
  return path;
 }),
 doStat: (function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -ERRNO_CODES.ENOTDIR;
   }
   throw e;
  }
  HEAP32[buf >> 2] = stat.dev;
  HEAP32[buf + 4 >> 2] = 0;
  HEAP32[buf + 8 >> 2] = stat.ino;
  HEAP32[buf + 12 >> 2] = stat.mode;
  HEAP32[buf + 16 >> 2] = stat.nlink;
  HEAP32[buf + 20 >> 2] = stat.uid;
  HEAP32[buf + 24 >> 2] = stat.gid;
  HEAP32[buf + 28 >> 2] = stat.rdev;
  HEAP32[buf + 32 >> 2] = 0;
  HEAP32[buf + 36 >> 2] = stat.size;
  HEAP32[buf + 40 >> 2] = 4096;
  HEAP32[buf + 44 >> 2] = stat.blocks;
  HEAP32[buf + 48 >> 2] = stat.atime.getTime() / 1e3 | 0;
  HEAP32[buf + 52 >> 2] = 0;
  HEAP32[buf + 56 >> 2] = stat.mtime.getTime() / 1e3 | 0;
  HEAP32[buf + 60 >> 2] = 0;
  HEAP32[buf + 64 >> 2] = stat.ctime.getTime() / 1e3 | 0;
  HEAP32[buf + 68 >> 2] = 0;
  HEAP32[buf + 72 >> 2] = stat.ino;
  return 0;
 }),
 doMsync: (function(addr, stream, len, flags) {
  var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
  FS.msync(stream, buffer, 0, len, flags);
 }),
 doMkdir: (function(path, mode) {
  path = PATH.normalize(path);
  if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
  FS.mkdir(path, mode, 0);
  return 0;
 }),
 doMknod: (function(path, mode, dev) {
  switch (mode & 61440) {
  case 32768:
  case 8192:
  case 24576:
  case 4096:
  case 49152:
   break;
  default:
   return -ERRNO_CODES.EINVAL;
  }
  FS.mknod(path, mode, dev);
  return 0;
 }),
 doReadlink: (function(path, buf, bufsize) {
  if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
  var ret = FS.readlink(path);
  ret = ret.slice(0, Math.max(0, bufsize));
  writeStringToMemory(ret, buf, true);
  return ret.length;
 }),
 doAccess: (function(path, amode) {
  if (amode & ~7) {
   return -ERRNO_CODES.EINVAL;
  }
  var node;
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  node = lookup.node;
  var perms = "";
  if (amode & 4) perms += "r";
  if (amode & 2) perms += "w";
  if (amode & 1) perms += "x";
  if (perms && FS.nodePermissions(node, perms)) {
   return -ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 doDup: (function(path, flags, suggestFD) {
  var suggest = FS.getStream(suggestFD);
  if (suggest) FS.close(suggest);
  return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
 }),
 doReadv: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.read(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
   if (curr < len) break;
  }
  return ret;
 }),
 doWritev: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.write(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
  }
  return ret;
 }),
 varargs: 0,
 get: (function(varargs) {
  SYSCALLS.varargs += 4;
  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
  return ret;
 }),
 getStr: (function() {
  var ret = Pointer_stringify(SYSCALLS.get());
  return ret;
 }),
 getStreamFromFD: (function() {
  var stream = FS.getStream(SYSCALLS.get());
  if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return stream;
 }),
 getSocketFromFD: (function() {
  var socket = SOCKFS.getSocket(SYSCALLS.get());
  if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return socket;
 }),
 getSocketAddress: (function(allowNull) {
  var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
  if (allowNull && addrp === 0) return null;
  var info = __read_sockaddr(addrp, addrlen);
  if (info.errno) throw new FS.ErrnoError(info.errno);
  info.addr = DNS.lookup_addr(info.addr) || info.addr;
  return info;
 }),
 get64: (function() {
  var low = SYSCALLS.get(), high = SYSCALLS.get();
  if (low >= 0) assert(high === 0); else assert(high === -1);
  return low;
 }),
 getZero: (function() {
  assert(SYSCALLS.get() === 0);
 })
};
function ___syscall54(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
  switch (op) {
  case 21505:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21506:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21519:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    var argp = SYSCALLS.get();
    HEAP32[argp >> 2] = 0;
    return 0;
   }
  case 21520:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return -ERRNO_CODES.EINVAL;
   }
  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }
  default:
   abort("bad ioctl syscall " + op);
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
var ___tm_current = STATICTOP;
STATICTOP += 48;
var ___tm_timezone = allocate(intArrayFromString("GMT"), "i8", ALLOC_STATIC);
var _tzname = STATICTOP;
STATICTOP += 16;
var _daylight = STATICTOP;
STATICTOP += 16;
var _timezone = STATICTOP;
STATICTOP += 16;
function _tzset() {
 if (_tzset.called) return;
 _tzset.called = true;
 HEAP32[_timezone >> 2] = -(new Date).getTimezoneOffset() * 60;
 var winter = new Date(2e3, 0, 1);
 var summer = new Date(2e3, 6, 1);
 HEAP32[_daylight >> 2] = Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
 function extractZone(date) {
  var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
  return match ? match[1] : "GMT";
 }
 var winterName = extractZone(winter);
 var summerName = extractZone(summer);
 var winterNamePtr = allocate(intArrayFromString(winterName), "i8", ALLOC_NORMAL);
 var summerNamePtr = allocate(intArrayFromString(summerName), "i8", ALLOC_NORMAL);
 if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
  HEAP32[_tzname >> 2] = winterNamePtr;
  HEAP32[_tzname + 4 >> 2] = summerNamePtr;
 } else {
  HEAP32[_tzname >> 2] = summerNamePtr;
  HEAP32[_tzname + 4 >> 2] = winterNamePtr;
 }
}
function _localtime_r(time, tmPtr) {
 _tzset();
 var date = new Date(HEAP32[time >> 2] * 1e3);
 HEAP32[tmPtr >> 2] = date.getSeconds();
 HEAP32[tmPtr + 4 >> 2] = date.getMinutes();
 HEAP32[tmPtr + 8 >> 2] = date.getHours();
 HEAP32[tmPtr + 12 >> 2] = date.getDate();
 HEAP32[tmPtr + 16 >> 2] = date.getMonth();
 HEAP32[tmPtr + 20 >> 2] = date.getFullYear() - 1900;
 HEAP32[tmPtr + 24 >> 2] = date.getDay();
 var start = new Date(date.getFullYear(), 0, 1);
 var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;
 HEAP32[tmPtr + 28 >> 2] = yday;
 HEAP32[tmPtr + 36 >> 2] = -(date.getTimezoneOffset() * 60);
 var summerOffset = (new Date(2e3, 6, 1)).getTimezoneOffset();
 var winterOffset = start.getTimezoneOffset();
 var dst = date.getTimezoneOffset() == Math.min(winterOffset, summerOffset) | 0;
 HEAP32[tmPtr + 32 >> 2] = dst;
 var zonePtr = HEAP32[_tzname + (dst ? Runtime.QUANTUM_SIZE : 0) >> 2];
 HEAP32[tmPtr + 40 >> 2] = zonePtr;
 return tmPtr;
}
function _localtime(time) {
 return _localtime_r(time, ___tm_current);
}
function _glDeleteTextures(n, textures) {
 for (var i = 0; i < n; i++) {
  var id = HEAP32[textures + i * 4 >> 2];
  var texture = GL.textures[id];
  if (!texture) continue;
  GLctx.deleteTexture(texture);
  texture.name = 0;
  GL.textures[id] = null;
 }
}
function _emscripten_glFrustum(left, right, bottom, top_, nearVal, farVal) {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.multiply(GLImmediate.matrix[GLImmediate.currentMatrix], GLImmediate.matrixLib.mat4.frustum(left, right, bottom, top_, nearVal, farVal));
}
function _SDL_WM_GrabInput() {}
function _emscripten_glGetTexParameterfv(target, pname, params) {
 if (!params) {
  GL.recordError(1281);
  return;
 }
 HEAPF32[params >> 2] = GLctx.getTexParameter(target, pname);
}
function _emscripten_glUniform4i(location, v0, v1, v2, v3) {
 location = GL.uniforms[location];
 GLctx.uniform4i(location, v0, v1, v2, v3);
}
function _emscripten_glBindRenderbuffer(target, renderbuffer) {
 GLctx.bindRenderbuffer(target, renderbuffer ? GL.renderbuffers[renderbuffer] : null);
}
function _emscripten_glViewport(x0, x1, x2, x3) {
 GLctx.viewport(x0, x1, x2, x3);
}
function _SDL_PumpEvents() {
 SDL.events.forEach((function(event) {
  SDL.handleEvent(event);
 }));
}
function _emscripten_memcpy_big(dest, src, num) {
 HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
 return dest;
}
Module["_memcpy"] = _memcpy;
var _llvm_pow_f64 = Math_pow;
function _emscripten_glFogf(pname, param) {
 switch (pname) {
 case 2915:
  GLEmulation.fogStart = param;
  break;
 case 2916:
  GLEmulation.fogEnd = param;
  break;
 case 2914:
  GLEmulation.fogDensity = param;
  break;
 case 2917:
  switch (param) {
  case 2049:
  case 9729:
   if (GLEmulation.fogMode != param) {
    GLImmediate.currentRenderer = null;
    GLEmulation.fogMode = param;
   }
   break;
  default:
   if (GLEmulation.fogMode != 2048) {
    GLImmediate.currentRenderer = null;
    GLEmulation.fogMode = 2048;
   }
   break;
  }
  break;
 }
}
function _glFogfv(pname, param) {
 switch (pname) {
 case 2918:
  GLEmulation.fogColor[0] = HEAPF32[param >> 2];
  GLEmulation.fogColor[1] = HEAPF32[param + 4 >> 2];
  GLEmulation.fogColor[2] = HEAPF32[param + 8 >> 2];
  GLEmulation.fogColor[3] = HEAPF32[param + 12 >> 2];
  break;
 case 2915:
 case 2916:
  _emscripten_glFogf(pname, HEAPF32[param >> 2]);
  break;
 }
}
function _emscripten_glTexParameterfv(target, pname, params) {
 var param = HEAPF32[params >> 2];
 GLctx.texParameterf(target, pname, param);
}
function _Mix_Linked_Version() {
 throw "Mix_Linked_Version: TODO";
}
function _emscripten_glDepthRangef(x0, x1) {
 GLctx.depthRange(x0, x1);
}
function ___syscall168(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var fds = SYSCALLS.get(), nfds = SYSCALLS.get(), timeout = SYSCALLS.get();
  var nonzero = 0;
  for (var i = 0; i < nfds; i++) {
   var pollfd = fds + 8 * i;
   var fd = HEAP32[pollfd >> 2];
   var events = HEAP16[pollfd + 4 >> 1];
   var mask = 32;
   var stream = FS.getStream(fd);
   if (stream) {
    mask = SYSCALLS.DEFAULT_POLLMASK;
    if (stream.stream_ops.poll) {
     mask = stream.stream_ops.poll(stream);
    }
   }
   mask &= events | 8 | 16;
   if (mask) nonzero++;
   HEAP16[pollfd + 6 >> 1] = mask;
  }
  return nonzero;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _emscripten_glUniform3f(location, v0, v1, v2) {
 location = GL.uniforms[location];
 GLctx.uniform3f(location, v0, v1, v2);
}
function _emscripten_set_main_loop_expected_blockers(num) {
 Browser.mainLoop.expectedBlockers = num;
 Browser.mainLoop.remainingBlockers = num;
 Browser.mainLoop.updateStatus();
}
function _emscripten_glGetProgramiv(program, pname, p) {
 if (!p) {
  GL.recordError(1281);
  return;
 }
 if (pname == 35716) {
  var log = GLctx.getProgramInfoLog(GL.programs[program]);
  if (log === null) log = "(unknown error)";
  HEAP32[p >> 2] = log.length + 1;
 } else if (pname == 35719) {
  var ptable = GL.programInfos[program];
  if (ptable) {
   HEAP32[p >> 2] = ptable.maxUniformLength;
   return;
  } else if (program < GL.counter) {
   GL.recordError(1282);
  } else {
   GL.recordError(1281);
  }
 } else if (pname == 35722) {
  var ptable = GL.programInfos[program];
  if (ptable) {
   if (ptable.maxAttributeLength == -1) {
    var program = GL.programs[program];
    var numAttribs = GLctx.getProgramParameter(program, GLctx.ACTIVE_ATTRIBUTES);
    ptable.maxAttributeLength = 0;
    for (var i = 0; i < numAttribs; ++i) {
     var activeAttrib = GLctx.getActiveAttrib(program, i);
     ptable.maxAttributeLength = Math.max(ptable.maxAttributeLength, activeAttrib.name.length + 1);
    }
   }
   HEAP32[p >> 2] = ptable.maxAttributeLength;
   return;
  } else if (program < GL.counter) {
   GL.recordError(1282);
  } else {
   GL.recordError(1281);
  }
 } else {
  HEAP32[p >> 2] = GLctx.getProgramParameter(GL.programs[program], pname);
 }
}
function _emscripten_glGetShaderiv(shader, pname, p) {
 if (!p) {
  GL.recordError(1281);
  return;
 }
 if (pname == 35716) {
  var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
  if (log === null) log = "(unknown error)";
  HEAP32[p >> 2] = log.length + 1;
 } else {
  HEAP32[p >> 2] = GLctx.getShaderParameter(GL.shaders[shader], pname);
 }
}
function _emscripten_glGetObjectParameterivARB(id, type, result) {
 if (GL.programs[id]) {
  if (type == 35716) {
   var log = GLctx.getProgramInfoLog(GL.programs[id]);
   if (log === null) log = "(unknown error)";
   HEAP32[result >> 2] = log.length;
   return;
  }
  _emscripten_glGetProgramiv(id, type, result);
 } else if (GL.shaders[id]) {
  if (type == 35716) {
   var log = GLctx.getShaderInfoLog(GL.shaders[id]);
   if (log === null) log = "(unknown error)";
   HEAP32[result >> 2] = log.length;
   return;
  } else if (type == 35720) {
   var source = GLctx.getShaderSource(GL.shaders[id]);
   if (source === null) return;
   HEAP32[result >> 2] = source.length;
   return;
  }
  _emscripten_glGetShaderiv(id, type, result);
 } else {
  Module.printErr("WARNING: getObjectParameteriv received invalid id: " + id);
 }
}
function _emscripten_glBlendFunc(x0, x1) {
 GLctx.blendFunc(x0, x1);
}
function _emscripten_glUniform3i(location, v0, v1, v2) {
 location = GL.uniforms[location];
 GLctx.uniform3i(location, v0, v1, v2);
}
function _emscripten_glStencilOp(x0, x1, x2) {
 GLctx.stencilOp(x0, x1, x2);
}
function _Mix_Volume(channel, volume) {
 if (channel == -1) {
  for (var i = 0; i < SDL.numChannels - 1; i++) {
   _Mix_Volume(i, volume);
  }
  return _Mix_Volume(SDL.numChannels - 1, volume);
 }
 return SDL.setGetVolume(SDL.channels[channel], volume);
}
function _emscripten_glBindAttribLocation(program, index, name) {
 name = Pointer_stringify(name);
 GLctx.bindAttribLocation(GL.programs[program], index, name);
}
function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) {
 GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7);
}
function emscriptenWebGLComputeImageSize(width, height, sizePerPixel, alignment) {
 function roundedToNextMultipleOf(x, y) {
  return Math.floor((x + y - 1) / y) * y;
 }
 var plainRowSize = width * sizePerPixel;
 var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);
 return height <= 0 ? 0 : (height - 1) * alignedRowSize + plainRowSize;
}
function emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) {
 var sizePerPixel;
 var numChannels;
 switch (format) {
 case 6406:
 case 6409:
 case 6402:
 case 6403:
  numChannels = 1;
  break;
 case 6410:
 case 33319:
  numChannels = 2;
  break;
 case 6407:
 case 35904:
  numChannels = 3;
  break;
 case 6408:
 case 35906:
  numChannels = 4;
  break;
 default:
  GL.recordError(1280);
  return {
   pixels: null,
   internalFormat: 0
  };
 }
 switch (type) {
 case 5121:
  sizePerPixel = numChannels * 1;
  break;
 case 5123:
 case 36193:
  sizePerPixel = numChannels * 2;
  break;
 case 5125:
 case 5126:
  sizePerPixel = numChannels * 4;
  break;
 case 34042:
  sizePerPixel = 4;
  break;
 case 33635:
 case 32819:
 case 32820:
  sizePerPixel = 2;
  break;
 default:
  GL.recordError(1280);
  return {
   pixels: null,
   internalFormat: 0
  };
 }
 var bytes = emscriptenWebGLComputeImageSize(width, height, sizePerPixel, GL.unpackAlignment);
 if (type == 5121) {
  pixels = HEAPU8.subarray(pixels, pixels + bytes);
 } else if (type == 5126) {
  pixels = HEAPF32.subarray(pixels >> 2, pixels + bytes >> 2);
 } else if (type == 5125 || type == 34042) {
  pixels = HEAPU32.subarray(pixels >> 2, pixels + bytes >> 2);
 } else {
  pixels = HEAPU16.subarray(pixels >> 1, pixels + bytes >> 1);
 }
 return {
  pixels: pixels,
  internalFormat: internalFormat
 };
}
function _glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {
 var pixelData;
 if (pixels) {
  pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, -1).pixels;
 } else {
  pixelData = null;
 }
 GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);
}
function _emscripten_glEnableVertexAttribArray(index) {
 GLctx.enableVertexAttribArray(index);
}
Module["_memset"] = _memset;
function _emscripten_glUniform1i(location, v0) {
 location = GL.uniforms[location];
 GLctx.uniform1i(location, v0);
}
function _glBindTexture(target, texture) {
 GLctx.bindTexture(target, texture ? GL.textures[texture] : null);
}
function _Mix_FadeInChannelTimed() {
 throw "Mix_FadeInChannelTimed";
}
function _emscripten_glTexCoord2i(u, v) {
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = u;
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = v;
 GLImmediate.addRendererComponent(GLImmediate.TEXTURE0, 2, GLctx.FLOAT);
}
function _glTexCoord2fv(v) {
 _emscripten_glTexCoord2i(HEAPF32[v >> 2], HEAPF32[v + 4 >> 2]);
}
function emscriptenWebGLGetVertexAttrib(index, pname, params, type) {
 if (!params) {
  GL.recordError(1281);
  return;
 }
 var data = GLctx.getVertexAttrib(index, pname);
 if (typeof data == "number" || typeof data == "boolean") {
  switch (type) {
  case "Integer":
   HEAP32[params >> 2] = data;
   break;
  case "Float":
   HEAPF32[params >> 2] = data;
   break;
  case "FloatToInteger":
   HEAP32[params >> 2] = Math.fround(data);
   break;
  default:
   throw "internal emscriptenWebGLGetVertexAttrib() error, bad type: " + type;
  }
 } else {
  for (var i = 0; i < data.length; i++) {
   switch (type) {
   case "Integer":
    HEAP32[params + i >> 2] = data[i];
    break;
   case "Float":
    HEAPF32[params + i >> 2] = data[i];
    break;
   case "FloatToInteger":
    HEAP32[params + i >> 2] = Math.fround(data[i]);
    break;
   default:
    throw "internal emscriptenWebGLGetVertexAttrib() error, bad type: " + type;
   }
  }
 }
}
function _emscripten_glGetVertexAttribfv(index, pname, params) {
 emscriptenWebGLGetVertexAttrib(index, pname, params, "Float");
}
function ___lock() {}
function _emscripten_glBlendFuncSeparate(x0, x1, x2, x3) {
 GLctx.blendFuncSeparate(x0, x1, x2, x3);
}
function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) {
 GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7);
}
function _emscripten_glGetVertexAttribPointerv(index, pname, pointer) {
 if (!pointer) {
  GL.recordError(1281);
  return;
 }
 HEAP32[pointer >> 2] = GLctx.getVertexAttribOffset(index, pname);
}
function _Mix_LoadWAV(filename) {
 var rwops = _SDL_RWFromFile(filename);
 var result = _Mix_LoadWAV_RW(rwops);
 _SDL_FreeRW(rwops);
 return result;
}
function _Mix_CloseAudio() {
 return _SDL_CloseAudio.apply(null, arguments);
}
function _glTexGeni() {
 throw "glTexGeni: TODO";
}
function _emscripten_glNormalPointer(type, stride, pointer) {
 GLImmediate.setClientAttribute(GLImmediate.NORMAL, 3, type, stride, pointer);
}
function _glLoadIdentity() {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.identity(GLImmediate.matrix[GLImmediate.currentMatrix]);
}
function _glColor3f(r, g, b) {
 _emscripten_glColor4f(r, g, b, 1);
}
function _glVertex3f(x, y, z) {
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = x;
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = y;
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = z || 0;
 GLImmediate.addRendererComponent(GLImmediate.VERTEX, 3, GLctx.FLOAT);
}
function _emscripten_glVertexAttrib3f(x0, x1, x2, x3) {
 GLctx.vertexAttrib3f(x0, x1, x2, x3);
}
function _SDL_GetThreadID() {
 throw "SDL_GetThreadID";
}
function ___cxa_guard_release() {}
function _emscripten_glDeleteShader(id) {
 if (!id) return;
 var shader = GL.shaders[id];
 if (!shader) {
  GL.recordError(1281);
  return;
 }
 GLctx.deleteShader(shader);
 GL.shaders[id] = null;
}
function ___cxa_guard_acquire(variable) {
 if (!HEAP8[variable >> 0]) {
  HEAP8[variable >> 0] = 1;
  return 1;
 }
 return 0;
}
var _emscripten_GetProcAddress = undefined;
Module["_emscripten_GetProcAddress"] = _emscripten_GetProcAddress;
function _SDL_GL_GetProcAddress(name_) {
 return _emscripten_GetProcAddress(name_);
}
function _emscripten_glDeleteBuffers(n, buffers) {
 for (var i = 0; i < n; i++) {
  var id = HEAP32[buffers + i * 4 >> 2];
  var buffer = GL.buffers[id];
  if (!buffer) continue;
  GLctx.deleteBuffer(buffer);
  buffer.name = 0;
  GL.buffers[id] = null;
  if (id == GL.currArrayBuffer) GL.currArrayBuffer = 0;
  if (id == GL.currElementArrayBuffer) GL.currElementArrayBuffer = 0;
 }
}
function _emscripten_glTexParameteriv(target, pname, params) {
 var param = HEAP32[params >> 2];
 GLctx.texParameteri(target, pname, param);
}
function _glDrawElements(mode, count, type, indices) {
 GLctx.drawElements(mode, count, type, indices);
}
function _SDL_CreateCond() {
 return 0;
}
function _emscripten_glUniformMatrix2fv(location, count, transpose, value) {
 location = GL.uniforms[location];
 var view;
 if (4 * count <= GL.MINI_TEMP_BUFFER_SIZE) {
  view = GL.miniTempBufferViews[4 * count - 1];
  for (var i = 0; i < 4 * count; i += 4) {
   view[i] = HEAPF32[value + 4 * i >> 2];
   view[i + 1] = HEAPF32[value + (4 * i + 4) >> 2];
   view[i + 2] = HEAPF32[value + (4 * i + 8) >> 2];
   view[i + 3] = HEAPF32[value + (4 * i + 12) >> 2];
  }
 } else {
  view = HEAPF32.subarray(value >> 2, value + count * 16 >> 2);
 }
 GLctx.uniformMatrix2fv(location, transpose, view);
}
function _glEnableClientState(cap) {
 var attrib = GLEmulation.getAttributeFromCapability(cap);
 if (attrib === null) {
  return;
 }
 if (!GLImmediate.enabledClientAttributes[attrib]) {
  GLImmediate.enabledClientAttributes[attrib] = true;
  GLImmediate.totalEnabledClientAttributes++;
  GLImmediate.currentRenderer = null;
  if (GLEmulation.currentVao) GLEmulation.currentVao.enabledClientStates[cap] = 1;
  GLImmediate.modifiedClientAttributes = true;
 }
}
function _emscripten_glUniform3iv(location, count, value) {
 location = GL.uniforms[location];
 count *= 3;
 value = HEAP32.subarray(value >> 2, value + count * 4 >> 2);
 GLctx.uniform3iv(location, value);
}
function _SDL_GL_SwapBuffers() {
 if (Browser.doSwapBuffers) Browser.doSwapBuffers();
}
function _glTexCoordPointer(size, type, stride, pointer) {
 GLImmediate.setClientAttribute(GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture, size, type, stride, pointer);
}
function _glTexEnvfv() {
 Runtime.warnOnce("glTexEnvfv: TODO");
}
function _emscripten_glGetVertexAttribiv(index, pname, params) {
 emscriptenWebGLGetVertexAttrib(index, pname, params, "FloatToInteger");
}
function _glReadBuffer() {
 throw "glReadBuffer: TODO";
}
function _emscripten_glUniformMatrix4fv(location, count, transpose, value) {
 location = GL.uniforms[location];
 var view;
 if (16 * count <= GL.MINI_TEMP_BUFFER_SIZE) {
  view = GL.miniTempBufferViews[16 * count - 1];
  for (var i = 0; i < 16 * count; i += 16) {
   view[i] = HEAPF32[value + 4 * i >> 2];
   view[i + 1] = HEAPF32[value + (4 * i + 4) >> 2];
   view[i + 2] = HEAPF32[value + (4 * i + 8) >> 2];
   view[i + 3] = HEAPF32[value + (4 * i + 12) >> 2];
   view[i + 4] = HEAPF32[value + (4 * i + 16) >> 2];
   view[i + 5] = HEAPF32[value + (4 * i + 20) >> 2];
   view[i + 6] = HEAPF32[value + (4 * i + 24) >> 2];
   view[i + 7] = HEAPF32[value + (4 * i + 28) >> 2];
   view[i + 8] = HEAPF32[value + (4 * i + 32) >> 2];
   view[i + 9] = HEAPF32[value + (4 * i + 36) >> 2];
   view[i + 10] = HEAPF32[value + (4 * i + 40) >> 2];
   view[i + 11] = HEAPF32[value + (4 * i + 44) >> 2];
   view[i + 12] = HEAPF32[value + (4 * i + 48) >> 2];
   view[i + 13] = HEAPF32[value + (4 * i + 52) >> 2];
   view[i + 14] = HEAPF32[value + (4 * i + 56) >> 2];
   view[i + 15] = HEAPF32[value + (4 * i + 60) >> 2];
  }
 } else {
  view = HEAPF32.subarray(value >> 2, value + count * 64 >> 2);
 }
 GLctx.uniformMatrix4fv(location, transpose, view);
}
function _emscripten_glDrawArraysInstanced(mode, first, count, primcount) {
 GLctx["drawArraysInstanced"](mode, first, count, primcount);
}
function _emscripten_glEnableClientState(cap) {
 var attrib = GLEmulation.getAttributeFromCapability(cap);
 if (attrib === null) {
  return;
 }
 if (!GLImmediate.enabledClientAttributes[attrib]) {
  GLImmediate.enabledClientAttributes[attrib] = true;
  GLImmediate.totalEnabledClientAttributes++;
  GLImmediate.currentRenderer = null;
  if (GLEmulation.currentVao) GLEmulation.currentVao.enabledClientStates[cap] = 1;
  GLImmediate.modifiedClientAttributes = true;
 }
}
function ___syscall265(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _emscripten_glGetPointerv(name, p) {
 var attribute;
 switch (name) {
 case 32910:
  attribute = GLImmediate.clientAttributes[GLImmediate.VERTEX];
  break;
 case 32912:
  attribute = GLImmediate.clientAttributes[GLImmediate.COLOR];
  break;
 case 32914:
  attribute = GLImmediate.clientAttributes[GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture];
  break;
 default:
  GL.recordError(1280);
  return;
 }
 HEAP32[p >> 2] = attribute ? attribute.pointer : 0;
}
function ___syscall142(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var nfds = SYSCALLS.get(), readfds = SYSCALLS.get(), writefds = SYSCALLS.get(), exceptfds = SYSCALLS.get(), timeout = SYSCALLS.get();
  assert(nfds <= 64, "nfds must be less than or equal to 64");
  assert(!exceptfds, "exceptfds not supported");
  var total = 0;
  var srcReadLow = readfds ? HEAP32[readfds >> 2] : 0, srcReadHigh = readfds ? HEAP32[readfds + 4 >> 2] : 0;
  var srcWriteLow = writefds ? HEAP32[writefds >> 2] : 0, srcWriteHigh = writefds ? HEAP32[writefds + 4 >> 2] : 0;
  var srcExceptLow = exceptfds ? HEAP32[exceptfds >> 2] : 0, srcExceptHigh = exceptfds ? HEAP32[exceptfds + 4 >> 2] : 0;
  var dstReadLow = 0, dstReadHigh = 0;
  var dstWriteLow = 0, dstWriteHigh = 0;
  var dstExceptLow = 0, dstExceptHigh = 0;
  var allLow = (readfds ? HEAP32[readfds >> 2] : 0) | (writefds ? HEAP32[writefds >> 2] : 0) | (exceptfds ? HEAP32[exceptfds >> 2] : 0);
  var allHigh = (readfds ? HEAP32[readfds + 4 >> 2] : 0) | (writefds ? HEAP32[writefds + 4 >> 2] : 0) | (exceptfds ? HEAP32[exceptfds + 4 >> 2] : 0);
  function check(fd, low, high, val) {
   return fd < 32 ? low & val : high & val;
  }
  for (var fd = 0; fd < nfds; fd++) {
   var mask = 1 << fd % 32;
   if (!check(fd, allLow, allHigh, mask)) {
    continue;
   }
   var stream = FS.getStream(fd);
   if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
   var flags = SYSCALLS.DEFAULT_POLLMASK;
   if (stream.stream_ops.poll) {
    flags = stream.stream_ops.poll(stream);
   }
   if (flags & 1 && check(fd, srcReadLow, srcReadHigh, mask)) {
    fd < 32 ? dstReadLow = dstReadLow | mask : dstReadHigh = dstReadHigh | mask;
    total++;
   }
   if (flags & 4 && check(fd, srcWriteLow, srcWriteHigh, mask)) {
    fd < 32 ? dstWriteLow = dstWriteLow | mask : dstWriteHigh = dstWriteHigh | mask;
    total++;
   }
   if (flags & 2 && check(fd, srcExceptLow, srcExceptHigh, mask)) {
    fd < 32 ? dstExceptLow = dstExceptLow | mask : dstExceptHigh = dstExceptHigh | mask;
    total++;
   }
  }
  if (readfds) {
   HEAP32[readfds >> 2] = dstReadLow;
   HEAP32[readfds + 4 >> 2] = dstReadHigh;
  }
  if (writefds) {
   HEAP32[writefds >> 2] = dstWriteLow;
   HEAP32[writefds + 4 >> 2] = dstWriteHigh;
  }
  if (exceptfds) {
   HEAP32[exceptfds >> 2] = dstExceptLow;
   HEAP32[exceptfds + 4 >> 2] = dstExceptHigh;
  }
  return total;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall140(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
  var offset = offset_low;
  assert(offset_high === 0);
  FS.llseek(stream, offset, whence);
  HEAP32[result >> 2] = stream.position;
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _glLightModelfv() {
 throw "glLightModelfv: TODO";
}
function __isLeapYear(year) {
 return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function __arraySum(array, index) {
 var sum = 0;
 for (var i = 0; i <= index; sum += array[i++]) ;
 return sum;
}
var __MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
var __MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
function __addDays(date, days) {
 var newDate = new Date(date.getTime());
 while (days > 0) {
  var leap = __isLeapYear(newDate.getFullYear());
  var currentMonth = newDate.getMonth();
  var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  if (days > daysInCurrentMonth - newDate.getDate()) {
   days -= daysInCurrentMonth - newDate.getDate() + 1;
   newDate.setDate(1);
   if (currentMonth < 11) {
    newDate.setMonth(currentMonth + 1);
   } else {
    newDate.setMonth(0);
    newDate.setFullYear(newDate.getFullYear() + 1);
   }
  } else {
   newDate.setDate(newDate.getDate() + days);
   return newDate;
  }
 }
 return newDate;
}
function _strftime(s, maxsize, format, tm) {
 var tm_zone = HEAP32[tm + 40 >> 2];
 var date = {
  tm_sec: HEAP32[tm >> 2],
  tm_min: HEAP32[tm + 4 >> 2],
  tm_hour: HEAP32[tm + 8 >> 2],
  tm_mday: HEAP32[tm + 12 >> 2],
  tm_mon: HEAP32[tm + 16 >> 2],
  tm_year: HEAP32[tm + 20 >> 2],
  tm_wday: HEAP32[tm + 24 >> 2],
  tm_yday: HEAP32[tm + 28 >> 2],
  tm_isdst: HEAP32[tm + 32 >> 2],
  tm_gmtoff: HEAP32[tm + 36 >> 2],
  tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ""
 };
 var pattern = Pointer_stringify(format);
 var EXPANSION_RULES_1 = {
  "%c": "%a %b %d %H:%M:%S %Y",
  "%D": "%m/%d/%y",
  "%F": "%Y-%m-%d",
  "%h": "%b",
  "%r": "%I:%M:%S %p",
  "%R": "%H:%M",
  "%T": "%H:%M:%S",
  "%x": "%m/%d/%y",
  "%X": "%H:%M:%S"
 };
 for (var rule in EXPANSION_RULES_1) {
  pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
 }
 var WEEKDAYS = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
 var MONTHS = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
 function leadingSomething(value, digits, character) {
  var str = typeof value === "number" ? value.toString() : value || "";
  while (str.length < digits) {
   str = character[0] + str;
  }
  return str;
 }
 function leadingNulls(value, digits) {
  return leadingSomething(value, digits, "0");
 }
 function compareByDay(date1, date2) {
  function sgn(value) {
   return value < 0 ? -1 : value > 0 ? 1 : 0;
  }
  var compare;
  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
    compare = sgn(date1.getDate() - date2.getDate());
   }
  }
  return compare;
 }
 function getFirstWeekStartDate(janFourth) {
  switch (janFourth.getDay()) {
  case 0:
   return new Date(janFourth.getFullYear() - 1, 11, 29);
  case 1:
   return janFourth;
  case 2:
   return new Date(janFourth.getFullYear(), 0, 3);
  case 3:
   return new Date(janFourth.getFullYear(), 0, 2);
  case 4:
   return new Date(janFourth.getFullYear(), 0, 1);
  case 5:
   return new Date(janFourth.getFullYear() - 1, 11, 31);
  case 6:
   return new Date(janFourth.getFullYear() - 1, 11, 30);
  }
 }
 function getWeekBasedYear(date) {
  var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
    return thisDate.getFullYear() + 1;
   } else {
    return thisDate.getFullYear();
   }
  } else {
   return thisDate.getFullYear() - 1;
  }
 }
 var EXPANSION_RULES_2 = {
  "%a": (function(date) {
   return WEEKDAYS[date.tm_wday].substring(0, 3);
  }),
  "%A": (function(date) {
   return WEEKDAYS[date.tm_wday];
  }),
  "%b": (function(date) {
   return MONTHS[date.tm_mon].substring(0, 3);
  }),
  "%B": (function(date) {
   return MONTHS[date.tm_mon];
  }),
  "%C": (function(date) {
   var year = date.tm_year + 1900;
   return leadingNulls(year / 100 | 0, 2);
  }),
  "%d": (function(date) {
   return leadingNulls(date.tm_mday, 2);
  }),
  "%e": (function(date) {
   return leadingSomething(date.tm_mday, 2, " ");
  }),
  "%g": (function(date) {
   return getWeekBasedYear(date).toString().substring(2);
  }),
  "%G": (function(date) {
   return getWeekBasedYear(date);
  }),
  "%H": (function(date) {
   return leadingNulls(date.tm_hour, 2);
  }),
  "%I": (function(date) {
   var twelveHour = date.tm_hour;
   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;
   return leadingNulls(twelveHour, 2);
  }),
  "%j": (function(date) {
   return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
  }),
  "%m": (function(date) {
   return leadingNulls(date.tm_mon + 1, 2);
  }),
  "%M": (function(date) {
   return leadingNulls(date.tm_min, 2);
  }),
  "%n": (function() {
   return "\n";
  }),
  "%p": (function(date) {
   if (date.tm_hour >= 0 && date.tm_hour < 12) {
    return "AM";
   } else {
    return "PM";
   }
  }),
  "%S": (function(date) {
   return leadingNulls(date.tm_sec, 2);
  }),
  "%t": (function() {
   return "\t";
  }),
  "%u": (function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay() || 7;
  }),
  "%U": (function(date) {
   var janFirst = new Date(date.tm_year + 1900, 0, 1);
   var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstSunday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();
    var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstSunday, janFirst) === 0 ? "01" : "00";
  }),
  "%V": (function(date) {
   var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);
   var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);
   var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
   var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
   var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
   if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
    return "53";
   }
   if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
    return "01";
   }
   var daysDifference;
   if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {
    daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();
   } else {
    daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();
   }
   return leadingNulls(Math.ceil(daysDifference / 7), 2);
  }),
  "%w": (function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay();
  }),
  "%W": (function(date) {
   var janFirst = new Date(date.tm_year, 0, 1);
   var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstMonday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();
    var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstMonday, janFirst) === 0 ? "01" : "00";
  }),
  "%y": (function(date) {
   return (date.tm_year + 1900).toString().substring(2);
  }),
  "%Y": (function(date) {
   return date.tm_year + 1900;
  }),
  "%z": (function(date) {
   var off = date.tm_gmtoff;
   var ahead = off >= 0;
   off = Math.abs(off) / 60;
   off = off / 60 * 100 + off % 60;
   return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
  }),
  "%Z": (function(date) {
   return date.tm_zone;
  }),
  "%%": (function() {
   return "%";
  })
 };
 for (var rule in EXPANSION_RULES_2) {
  if (pattern.indexOf(rule) >= 0) {
   pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
  }
 }
 var bytes = intArrayFromString(pattern, false);
 if (bytes.length > maxsize) {
  return 0;
 }
 writeArrayToMemory(bytes, s);
 return bytes.length - 1;
}
function ___syscall145(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doReadv(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _glNormalPointer(type, stride, pointer) {
 GLImmediate.setClientAttribute(GLImmediate.NORMAL, 3, type, stride, pointer);
}
function _emscripten_glStencilFuncSeparate(x0, x1, x2, x3) {
 GLctx.stencilFuncSeparate(x0, x1, x2, x3);
}
function _glPopMatrix() {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrix[GLImmediate.currentMatrix] = GLImmediate.matrixStack[GLImmediate.currentMatrix].pop();
}
function _glTexCoord2f(u, v) {
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = u;
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = v;
 GLImmediate.addRendererComponent(GLImmediate.TEXTURE0, 2, GLctx.FLOAT);
}
Module["_i64Subtract"] = _i64Subtract;
function _Mix_LoadMUS_RW() {
 return _Mix_LoadWAV_RW.apply(null, arguments);
}
function _SDL_CreateRGBSurfaceFrom(pixels, width, height, depth, pitch, rmask, gmask, bmask, amask) {
 var surf = SDL.makeSurface(width, height, 0, false, "CreateRGBSurfaceFrom", rmask, gmask, bmask, amask);
 if (depth !== 32) {
  console.log("TODO: Partially unimplemented SDL_CreateRGBSurfaceFrom called!");
  return surf;
 }
 var data = SDL.surfaces[surf];
 var image = data.ctx.createImageData(width, height);
 var pitchOfDst = width * 4;
 for (var row = 0; row < height; ++row) {
  var baseOfDst = row * pitchOfDst;
  for (var col = 0; col < width * 4; ++col) {
   image.data[baseOfDst + col] = HEAPU8[pixels + (baseOfDst + col) >> 0];
  }
 }
 data.ctx.putImageData(image, 0, 0);
 return surf;
}
function _glFogi(pname, param) {
 return _emscripten_glFogf(pname, param);
}
function _glBegin(mode) {
 GLImmediate.enabledClientAttributes_preBegin = GLImmediate.enabledClientAttributes;
 GLImmediate.enabledClientAttributes = [];
 GLImmediate.clientAttributes_preBegin = GLImmediate.clientAttributes;
 GLImmediate.clientAttributes = [];
 for (var i = 0; i < GLImmediate.clientAttributes_preBegin.length; i++) {
  GLImmediate.clientAttributes.push({});
 }
 GLImmediate.mode = mode;
 GLImmediate.vertexCounter = 0;
 var components = GLImmediate.rendererComponents = [];
 for (var i = 0; i < GLImmediate.NUM_ATTRIBUTES; i++) {
  components[i] = 0;
 }
 GLImmediate.rendererComponentPointer = 0;
 GLImmediate.vertexData = GLImmediate.tempData;
}
function _emscripten_glDisableVertexAttribArray(index) {
 GLctx.disableVertexAttribArray(index);
}
function _emscripten_glColor4ub(r, g, b, a) {
 _emscripten_glColor4f((r & 255) / 255, (g & 255) / 255, (b & 255) / 255, (a & 255) / 255);
}
function _emscripten_glColor3ub(r, g, b) {
 _emscripten_glColor4ub(r, g, b, 255);
}
function _glColor3ubv(p) {
 _emscripten_glColor3ub(HEAP8[p >> 0], HEAP8[p + 1 >> 0], HEAP8[p + 2 >> 0]);
}
function _emscripten_glVertexAttrib1f(x0, x1) {
 GLctx.vertexAttrib1f(x0, x1);
}
function _glVertexPointer(size, type, stride, pointer) {
 GLImmediate.setClientAttribute(GLImmediate.VERTEX, size, type, stride, pointer);
}
function _emscripten_glGenRenderbuffers(n, renderbuffers) {
 for (var i = 0; i < n; i++) {
  var renderbuffer = GLctx.createRenderbuffer();
  if (!renderbuffer) {
   GL.recordError(1282);
   while (i < n) HEAP32[renderbuffers + i++ * 4 >> 2] = 0;
   return;
  }
  var id = GL.getNewId(GL.renderbuffers);
  renderbuffer.name = id;
  GL.renderbuffers[id] = renderbuffer;
  HEAP32[renderbuffers + i * 4 >> 2] = id;
 }
}
function _glFogf(pname, param) {
 switch (pname) {
 case 2915:
  GLEmulation.fogStart = param;
  break;
 case 2916:
  GLEmulation.fogEnd = param;
  break;
 case 2914:
  GLEmulation.fogDensity = param;
  break;
 case 2917:
  switch (param) {
  case 2049:
  case 9729:
   if (GLEmulation.fogMode != param) {
    GLImmediate.currentRenderer = null;
    GLEmulation.fogMode = param;
   }
   break;
  default:
   if (GLEmulation.fogMode != 2048) {
    GLImmediate.currentRenderer = null;
    GLEmulation.fogMode = 2048;
   }
   break;
  }
  break;
 }
}
function _emscripten_glDepthFunc(x0) {
 GLctx.depthFunc(x0);
}
function _SDL_GL_SetAttribute(attr, value) {
 if (!(attr in SDL.glAttributes)) {
  abort("Unknown SDL GL attribute (" + attr + "). Please check if your SDL version is supported.");
 }
 SDL.glAttributes[attr] = value;
}
function _emscripten_glHint(x0, x1) {
 GLctx.hint(x0, x1);
}
function _glLightfv() {
 throw "glLightfv: TODO";
}
function ___syscall5(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get();
  var stream = FS.open(pathname, flags, mode);
  return stream.fd;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _emscripten_glUniform4iv(location, count, value) {
 location = GL.uniforms[location];
 count *= 4;
 value = HEAP32.subarray(value >> 2, value + count * 4 >> 2);
 GLctx.uniform4iv(location, value);
}
function _glClear(x0) {
 GLctx.clear(x0);
}
function _emscripten_glLoadIdentity() {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.identity(GLImmediate.matrix[GLImmediate.currentMatrix]);
}
function _emscripten_glUniform3fv(location, count, value) {
 location = GL.uniforms[location];
 var view;
 if (3 * count <= GL.MINI_TEMP_BUFFER_SIZE) {
  view = GL.miniTempBufferViews[3 * count - 1];
  for (var i = 0; i < 3 * count; i += 3) {
   view[i] = HEAPF32[value + 4 * i >> 2];
   view[i + 1] = HEAPF32[value + (4 * i + 4) >> 2];
   view[i + 2] = HEAPF32[value + (4 * i + 8) >> 2];
  }
 } else {
  view = HEAPF32.subarray(value >> 2, value + count * 12 >> 2);
 }
 GLctx.uniform3fv(location, view);
}
function _emscripten_glIsTexture(texture) {
 var texture = GL.textures[texture];
 if (!texture) return 0;
 return GLctx.isTexture(texture);
}
function _emscripten_glAttachShader(program, shader) {
 GLctx.attachShader(GL.programs[program], GL.shaders[shader]);
}
function _glReadPixels(x, y, width, height, format, type, pixels) {
 var data = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);
 if (!data.pixels) {
  GL.recordError(1280);
  return;
 }
 GLctx.readPixels(x, y, width, height, format, type, data.pixels);
}
function ___syscall6(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD();
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _SDL_GetError() {
 if (!SDL.errorMessage) {
  SDL.errorMessage = allocate(intArrayFromString("unknown SDL-emscripten error"), "i8", ALLOC_NORMAL);
 }
 return SDL.errorMessage;
}
function _glTranslatef(x, y, z) {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.translate(GLImmediate.matrix[GLImmediate.currentMatrix], [ x, y, z ]);
}
function _glShadeModel() {
 Runtime.warnOnce("TODO: glShadeModel");
}
function _glTexImage1D() {
 throw "glTexImage1D: TODO";
}
function _glDisableClientState(cap) {
 var attrib = GLEmulation.getAttributeFromCapability(cap);
 if (attrib === null) {
  return;
 }
 if (GLImmediate.enabledClientAttributes[attrib]) {
  GLImmediate.enabledClientAttributes[attrib] = false;
  GLImmediate.totalEnabledClientAttributes--;
  GLImmediate.currentRenderer = null;
  if (GLEmulation.currentVao) delete GLEmulation.currentVao.enabledClientStates[cap];
  GLImmediate.modifiedClientAttributes = true;
 }
}
function _SDL_CreateThread() {
 throw "SDL threads cannot be supported in the web platform because they assume shared state. See emscripten_create_worker etc. for a message-passing concurrency model that does let you run code in another thread.";
}
function _gettimeofday(ptr) {
 var now = Date.now();
 HEAP32[ptr >> 2] = now / 1e3 | 0;
 HEAP32[ptr + 4 >> 2] = now % 1e3 * 1e3 | 0;
 return 0;
}
function _emscripten_glClearStencil(x0) {
 GLctx.clearStencil(x0);
}
function _emscripten_glGetError() {
 if (GL.lastError) {
  var error = GL.lastError;
  GL.lastError = 0;
  return error;
 } else {
  return GLctx.getError();
 }
}
function _SDL_WM_SetCaption(title, icon) {
 if (title && typeof Module["setWindowTitle"] !== "undefined") {
  Module["setWindowTitle"](Pointer_stringify(title));
 }
 icon = icon && Pointer_stringify(icon);
}
function _emscripten_glDetachShader(program, shader) {
 GLctx.detachShader(GL.programs[program], GL.shaders[shader]);
}
function _emulGlDeleteVertexArrays(n, vaos) {
 for (var i = 0; i < n; i++) {
  var id = HEAP32[vaos + i * 4 >> 2];
  GLEmulation.vaos[id] = null;
  if (GLEmulation.currentVao && GLEmulation.currentVao.id == id) GLEmulation.currentVao = null;
 }
}
function _emscripten_glDeleteVertexArrays(n, vaos) {
 _emulGlDeleteVertexArrays(n, vaos);
}
function _SDL_SaveBMP_RW() {
 throw "SDL_SaveBMP_RW: TODO";
}
function _emscripten_glGetTexParameteriv(target, pname, params) {
 if (!params) {
  GL.recordError(1281);
  return;
 }
 HEAP32[params >> 2] = GLctx.getTexParameter(target, pname);
}
function _glTexGenfv() {
 throw "glTexGenfv: TODO";
}
function _emscripten_glGenerateMipmap(x0) {
 GLctx.generateMipmap(x0);
}
function _emscripten_glSampleCoverage(x0, x1) {
 GLctx.sampleCoverage(x0, x1);
}
function _SDL_EnableUNICODE(on) {
 var ret = SDL.unicode || 0;
 SDL.unicode = on;
 return ret;
}
function __emscripten_push_uncounted_main_loop_blocker(func, arg, name) {
 Browser.mainLoop.queue.push({
  func: (function() {
   Runtime.dynCall("vi", func, [ arg ]);
  }),
  name: Pointer_stringify(name),
  counted: false
 });
 Browser.mainLoop.updateStatus();
}
function _glLoadMatrixf(matrix) {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.set(HEAPF32.subarray(matrix >> 2, matrix + 64 >> 2), GLImmediate.matrix[GLImmediate.currentMatrix]);
}
function _emscripten_glUniform4f(location, v0, v1, v2, v3) {
 location = GL.uniforms[location];
 GLctx.uniform4f(location, v0, v1, v2, v3);
}
function _emscripten_glUseProgram(program) {
 GLctx.useProgram(program ? GL.programs[program] : null);
}
function _glTexCoord4f() {
 throw "glTexCoord4f: TODO";
}
function _sysconf(name) {
 switch (name) {
 case 30:
  return PAGE_SIZE;
 case 85:
  return totalMemory / PAGE_SIZE;
 case 132:
 case 133:
 case 12:
 case 137:
 case 138:
 case 15:
 case 235:
 case 16:
 case 17:
 case 18:
 case 19:
 case 20:
 case 149:
 case 13:
 case 10:
 case 236:
 case 153:
 case 9:
 case 21:
 case 22:
 case 159:
 case 154:
 case 14:
 case 77:
 case 78:
 case 139:
 case 80:
 case 81:
 case 82:
 case 68:
 case 67:
 case 164:
 case 11:
 case 29:
 case 47:
 case 48:
 case 95:
 case 52:
 case 51:
 case 46:
  return 200809;
 case 79:
  return 0;
 case 27:
 case 246:
 case 127:
 case 128:
 case 23:
 case 24:
 case 160:
 case 161:
 case 181:
 case 182:
 case 242:
 case 183:
 case 184:
 case 243:
 case 244:
 case 245:
 case 165:
 case 178:
 case 179:
 case 49:
 case 50:
 case 168:
 case 169:
 case 175:
 case 170:
 case 171:
 case 172:
 case 97:
 case 76:
 case 32:
 case 173:
 case 35:
  return -1;
 case 176:
 case 177:
 case 7:
 case 155:
 case 8:
 case 157:
 case 125:
 case 126:
 case 92:
 case 93:
 case 129:
 case 130:
 case 131:
 case 94:
 case 91:
  return 1;
 case 74:
 case 60:
 case 69:
 case 70:
 case 4:
  return 1024;
 case 31:
 case 42:
 case 72:
  return 32;
 case 87:
 case 26:
 case 33:
  return 2147483647;
 case 34:
 case 1:
  return 47839;
 case 38:
 case 36:
  return 99;
 case 43:
 case 37:
  return 2048;
 case 0:
  return 2097152;
 case 3:
  return 65536;
 case 28:
  return 32768;
 case 44:
  return 32767;
 case 75:
  return 16384;
 case 39:
  return 1e3;
 case 89:
  return 700;
 case 71:
  return 256;
 case 40:
  return 255;
 case 2:
  return 100;
 case 180:
  return 64;
 case 25:
  return 20;
 case 5:
  return 16;
 case 6:
  return 6;
 case 73:
  return 4;
 case 84:
  {
   if (typeof navigator === "object") return navigator["hardwareConcurrency"] || 1;
   return 1;
  }
 }
 ___setErrNo(ERRNO_CODES.EINVAL);
 return -1;
}
function _emscripten_glFramebufferTexture2D(target, attachment, textarget, texture, level) {
 GLctx.framebufferTexture2D(target, attachment, textarget, GL.textures[texture], level);
}
function _emscripten_glUniform2fv(location, count, value) {
 location = GL.uniforms[location];
 var view;
 if (2 * count <= GL.MINI_TEMP_BUFFER_SIZE) {
  view = GL.miniTempBufferViews[2 * count - 1];
  for (var i = 0; i < 2 * count; i += 2) {
   view[i] = HEAPF32[value + 4 * i >> 2];
   view[i + 1] = HEAPF32[value + (4 * i + 4) >> 2];
  }
 } else {
  view = HEAPF32.subarray(value >> 2, value + count * 8 >> 2);
 }
 GLctx.uniform2fv(location, view);
}
function _glColor4ubv(p) {
 _emscripten_glColor4ub(HEAP8[p >> 0], HEAP8[p + 1 >> 0], HEAP8[p + 2 >> 0], HEAP8[p + 3 >> 0]);
}
function _emscripten_glMatrixMode(mode) {
 if (mode == 5888) {
  GLImmediate.currentMatrix = 0;
 } else if (mode == 5889) {
  GLImmediate.currentMatrix = 1;
 } else if (mode == 5890) {
  GLImmediate.useTextureMatrix = true;
  GLImmediate.currentMatrix = 2 + GLImmediate.clientActiveTexture;
 } else {
  throw "Wrong mode " + mode + " passed to glMatrixMode";
 }
}
function _SDL_CondBroadcast() {
 throw "SDL_CondBroadcast: TODO";
}
function _abort() {
 Module["abort"]();
}
function _emscripten_glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {
 GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget, GL.renderbuffers[renderbuffer]);
}
function _emscripten_glPolygonOffset(x0, x1) {
 GLctx.polygonOffset(x0, x1);
}
function _Mix_LoadMUS(filename) {
 var rwops = _SDL_RWFromFile(filename);
 var result = _Mix_LoadMUS_RW(rwops);
 _SDL_FreeRW(rwops);
 return result;
}
function _emscripten_glIsBuffer(buffer) {
 var b = GL.buffers[buffer];
 if (!b) return 0;
 return GLctx.isBuffer(b);
}
function _emscripten_glUniform2iv(location, count, value) {
 location = GL.uniforms[location];
 count *= 2;
 value = HEAP32.subarray(value >> 2, value + count * 4 >> 2);
 GLctx.uniform2iv(location, value);
}
Module["_i64Add"] = _i64Add;
function _emscripten_glVertexAttrib1fv(index, v) {
 var view = GL.miniTempBufferViews[0];
 view[0] = HEAPF32[v >> 2];
 GLctx.vertexAttrib1fv(index, view);
}
function _glColor4fv(p) {
 _emscripten_glColor4f(HEAPF32[p >> 2], HEAPF32[p + 4 >> 2], HEAPF32[p + 8 >> 2], HEAPF32[p + 12 >> 2]);
}
function _emscripten_glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {
 var pixelData;
 if (pixels) {
  pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, -1).pixels;
 } else {
  pixelData = null;
 }
 GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);
}
function _emscripten_glUniform2f(location, v0, v1) {
 location = GL.uniforms[location];
 GLctx.uniform2f(location, v0, v1);
}
function _emscripten_run_script_int(ptr) {
 return eval(Pointer_stringify(ptr)) | 0;
}
function _emulGlBindVertexArray(vao) {
 GLEmulation.currentVao = null;
 if (GLImmediate.lastRenderer) GLImmediate.lastRenderer.cleanup();
 _glBindBuffer(GLctx.ARRAY_BUFFER, 0);
 _glBindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, 0);
 for (var vaa in GLEmulation.enabledVertexAttribArrays) {
  GLctx.disableVertexAttribArray(vaa);
 }
 GLEmulation.enabledVertexAttribArrays = {};
 GLImmediate.enabledClientAttributes = [ 0, 0 ];
 GLImmediate.totalEnabledClientAttributes = 0;
 GLImmediate.modifiedClientAttributes = true;
 if (vao) {
  var info = GLEmulation.vaos[vao];
  _glBindBuffer(GLctx.ARRAY_BUFFER, info.arrayBuffer);
  _glBindBuffer(GLctx.ELEMENT_ARRAY_BUFFER, info.elementArrayBuffer);
  for (var vaa in info.enabledVertexAttribArrays) {
   _glEnableVertexAttribArray(vaa);
  }
  for (var vaa in info.vertexAttribPointers) {
   _glVertexAttribPointer.apply(null, info.vertexAttribPointers[vaa]);
  }
  for (var attrib in info.enabledClientStates) {
   _glEnableClientState(attrib | 0);
  }
  GLEmulation.currentVao = info;
 }
}
function _emscripten_glBindVertexArray(vao) {
 _emulGlBindVertexArray(vao);
}
function _Mix_PlayingMusic() {
 return SDL.music.audio && !SDL.music.audio.paused ? 1 : 0;
}
function _emscripten_glUniform2i(location, v0, v1) {
 location = GL.uniforms[location];
 GLctx.uniform2i(location, v0, v1);
}
function _glBlendFunc(x0, x1) {
 GLctx.blendFunc(x0, x1);
}
function _emscripten_glDeleteRenderbuffers(n, renderbuffers) {
 for (var i = 0; i < n; i++) {
  var id = HEAP32[renderbuffers + i * 4 >> 2];
  var renderbuffer = GL.renderbuffers[id];
  if (!renderbuffer) continue;
  GLctx.deleteRenderbuffer(renderbuffer);
  renderbuffer.name = 0;
  GL.renderbuffers[id] = null;
 }
}
function ___cxa_pure_virtual() {
 ABORT = true;
 throw "Pure virtual function called!";
}
function emscriptenWebGLGetUniform(program, location, params, type) {
 if (!params) {
  GL.recordError(1281);
  return;
 }
 var data = GLctx.getUniform(GL.programs[program], GL.uniforms[location]);
 if (typeof data == "number" || typeof data == "boolean") {
  switch (type) {
  case "Integer":
   HEAP32[params >> 2] = data;
   break;
  case "Float":
   HEAPF32[params >> 2] = data;
   break;
  default:
   throw "internal emscriptenWebGLGetUniform() error, bad type: " + type;
  }
 } else {
  for (var i = 0; i < data.length; i++) {
   switch (type) {
   case "Integer":
    HEAP32[params + i >> 2] = data[i];
    break;
   case "Float":
    HEAPF32[params + i >> 2] = data[i];
    break;
   default:
    throw "internal emscriptenWebGLGetUniform() error, bad type: " + type;
   }
  }
 }
}
function _emscripten_glGetUniformiv(program, location, params) {
 emscriptenWebGLGetUniform(program, location, params, "Integer");
}
function _Mix_PausedMusic() {
 return SDL.music.audio && SDL.music.audio.paused ? 1 : 0;
}
function _emscripten_glDepthMask(x0) {
 GLctx.depthMask(x0);
}
function _emscripten_glDepthRange(x0, x1) {
 GLctx.depthRange(x0, x1);
}
function _glPolygonOffset(x0, x1) {
 GLctx.polygonOffset(x0, x1);
}
function _Mix_AllocateChannels(num) {
 SDL.allocateChannels(num);
 return num;
}
function _glDepthRange(x0, x1) {
 GLctx.depthRange(x0, x1);
}
function _glFrustum(left, right, bottom, top_, nearVal, farVal) {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.multiply(GLImmediate.matrix[GLImmediate.currentMatrix], GLImmediate.matrixLib.mat4.frustum(left, right, bottom, top_, nearVal, farVal));
}
function _SDL_WaitThread() {
 throw "SDL_WaitThread";
}
function _SDL_CreateMutex() {
 return 0;
}
function _emscripten_glGetShaderPrecisionFormat() {
 throw "glGetShaderPrecisionFormat: TODO";
}
function _glPushMatrix() {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixStack[GLImmediate.currentMatrix].push(Array.prototype.slice.call(GLImmediate.matrix[GLImmediate.currentMatrix]));
}
var SOCKFS = {
 mount: (function(mount) {
  Module["websocket"] = Module["websocket"] && "object" === typeof Module["websocket"] ? Module["websocket"] : {};
  Module["websocket"]._callbacks = {};
  Module["websocket"]["on"] = (function(event, callback) {
   if ("function" === typeof callback) {
    this._callbacks[event] = callback;
   }
   return this;
  });
  Module["websocket"].emit = (function(event, param) {
   if ("function" === typeof this._callbacks[event]) {
    this._callbacks[event].call(this, param);
   }
  });
  return FS.createNode(null, "/", 16384 | 511, 0);
 }),
 createSocket: (function(family, type, protocol) {
  var streaming = type == 1;
  if (protocol) {
   assert(streaming == (protocol == 6));
  }
  var sock = {
   family: family,
   type: type,
   protocol: protocol,
   server: null,
   error: null,
   peers: {},
   pending: [],
   recv_queue: [],
   sock_ops: SOCKFS.websocket_sock_ops
  };
  var name = SOCKFS.nextname();
  var node = FS.createNode(SOCKFS.root, name, 49152, 0);
  node.sock = sock;
  var stream = FS.createStream({
   path: name,
   node: node,
   flags: FS.modeStringToFlags("r+"),
   seekable: false,
   stream_ops: SOCKFS.stream_ops
  });
  sock.stream = stream;
  return sock;
 }),
 getSocket: (function(fd) {
  var stream = FS.getStream(fd);
  if (!stream || !FS.isSocket(stream.node.mode)) {
   return null;
  }
  return stream.node.sock;
 }),
 stream_ops: {
  poll: (function(stream) {
   var sock = stream.node.sock;
   return sock.sock_ops.poll(sock);
  }),
  ioctl: (function(stream, request, varargs) {
   var sock = stream.node.sock;
   return sock.sock_ops.ioctl(sock, request, varargs);
  }),
  read: (function(stream, buffer, offset, length, position) {
   var sock = stream.node.sock;
   var msg = sock.sock_ops.recvmsg(sock, length);
   if (!msg) {
    return 0;
   }
   buffer.set(msg.buffer, offset);
   return msg.buffer.length;
  }),
  write: (function(stream, buffer, offset, length, position) {
   var sock = stream.node.sock;
   return sock.sock_ops.sendmsg(sock, buffer, offset, length);
  }),
  close: (function(stream) {
   var sock = stream.node.sock;
   sock.sock_ops.close(sock);
  })
 },
 nextname: (function() {
  if (!SOCKFS.nextname.current) {
   SOCKFS.nextname.current = 0;
  }
  return "socket[" + SOCKFS.nextname.current++ + "]";
 }),
 websocket_sock_ops: {
  createPeer: (function(sock, addr, port) {
   var ws;
   if (typeof addr === "object") {
    ws = addr;
    addr = null;
    port = null;
   }
   if (ws) {
    if (ws._socket) {
     addr = ws._socket.remoteAddress;
     port = ws._socket.remotePort;
    } else {
     var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
     if (!result) {
      throw new Error("WebSocket URL must be in the format ws(s)://address:port");
     }
     addr = result[1];
     port = parseInt(result[2], 10);
    }
   } else {
    try {
     var runtimeConfig = Module["websocket"] && "object" === typeof Module["websocket"];
     var url = "ws:#".replace("#", "//");
     if (runtimeConfig) {
      if ("string" === typeof Module["websocket"]["url"]) {
       url = Module["websocket"]["url"];
      }
     }
     if (url === "ws://" || url === "wss://") {
      var parts = addr.split("/");
      url = url + parts[0] + ":" + port + "/" + parts.slice(1).join("/");
     }
     var subProtocols = "binary";
     if (runtimeConfig) {
      if ("string" === typeof Module["websocket"]["subprotocol"]) {
       subProtocols = Module["websocket"]["subprotocol"];
      }
     }
     subProtocols = subProtocols.replace(/^ +| +$/g, "").split(/ *, */);
     var opts = ENVIRONMENT_IS_NODE ? {
      "protocol": subProtocols.toString()
     } : subProtocols;
     var WebSocketConstructor;
     if (ENVIRONMENT_IS_NODE) {
      WebSocketConstructor = require("ws");
     } else if (ENVIRONMENT_IS_WEB) {
      WebSocketConstructor = window["WebSocket"];
     } else {
      WebSocketConstructor = WebSocket;
     }
     ws = new WebSocketConstructor(url, opts);
     ws.binaryType = "arraybuffer";
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
    }
   }
   var peer = {
    addr: addr,
    port: port,
    socket: ws,
    dgram_send_queue: []
   };
   SOCKFS.websocket_sock_ops.addPeer(sock, peer);
   SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
   if (sock.type === 2 && typeof sock.sport !== "undefined") {
    peer.dgram_send_queue.push(new Uint8Array([ 255, 255, 255, 255, "p".charCodeAt(0), "o".charCodeAt(0), "r".charCodeAt(0), "t".charCodeAt(0), (sock.sport & 65280) >> 8, sock.sport & 255 ]));
   }
   return peer;
  }),
  getPeer: (function(sock, addr, port) {
   return sock.peers[addr + ":" + port];
  }),
  addPeer: (function(sock, peer) {
   sock.peers[peer.addr + ":" + peer.port] = peer;
  }),
  removePeer: (function(sock, peer) {
   delete sock.peers[peer.addr + ":" + peer.port];
  }),
  handlePeerEvents: (function(sock, peer) {
   var first = true;
   var handleOpen = (function() {
    Module["websocket"].emit("open", sock.stream.fd);
    try {
     var queued = peer.dgram_send_queue.shift();
     while (queued) {
      peer.socket.send(queued);
      queued = peer.dgram_send_queue.shift();
     }
    } catch (e) {
     peer.socket.close();
    }
   });
   function handleMessage(data) {
    assert(typeof data !== "string" && data.byteLength !== undefined);
    data = new Uint8Array(data);
    var wasfirst = first;
    first = false;
    if (wasfirst && data.length === 10 && data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 && data[4] === "p".charCodeAt(0) && data[5] === "o".charCodeAt(0) && data[6] === "r".charCodeAt(0) && data[7] === "t".charCodeAt(0)) {
     var newport = data[8] << 8 | data[9];
     SOCKFS.websocket_sock_ops.removePeer(sock, peer);
     peer.port = newport;
     SOCKFS.websocket_sock_ops.addPeer(sock, peer);
     return;
    }
    sock.recv_queue.push({
     addr: peer.addr,
     port: peer.port,
     data: data
    });
    Module["websocket"].emit("message", sock.stream.fd);
   }
   if (ENVIRONMENT_IS_NODE) {
    peer.socket.on("open", handleOpen);
    peer.socket.on("message", (function(data, flags) {
     if (!flags.binary) {
      return;
     }
     handleMessage((new Uint8Array(data)).buffer);
    }));
    peer.socket.on("close", (function() {
     Module["websocket"].emit("close", sock.stream.fd);
    }));
    peer.socket.on("error", (function(error) {
     sock.error = ERRNO_CODES.ECONNREFUSED;
     Module["websocket"].emit("error", [ sock.stream.fd, sock.error, "ECONNREFUSED: Connection refused" ]);
    }));
   } else {
    peer.socket.onopen = handleOpen;
    peer.socket.onclose = (function() {
     Module["websocket"].emit("close", sock.stream.fd);
    });
    peer.socket.onmessage = function peer_socket_onmessage(event) {
     handleMessage(event.data);
    };
    peer.socket.onerror = (function(error) {
     sock.error = ERRNO_CODES.ECONNREFUSED;
     Module["websocket"].emit("error", [ sock.stream.fd, sock.error, "ECONNREFUSED: Connection refused" ]);
    });
   }
  }),
  poll: (function(sock) {
   if (sock.type === 1 && sock.server) {
    return sock.pending.length ? 64 | 1 : 0;
   }
   var mask = 0;
   var dest = sock.type === 1 ? SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) : null;
   if (sock.recv_queue.length || !dest || dest && dest.socket.readyState === dest.socket.CLOSING || dest && dest.socket.readyState === dest.socket.CLOSED) {
    mask |= 64 | 1;
   }
   if (!dest || dest && dest.socket.readyState === dest.socket.OPEN) {
    mask |= 4;
   }
   if (dest && dest.socket.readyState === dest.socket.CLOSING || dest && dest.socket.readyState === dest.socket.CLOSED) {
    mask |= 16;
   }
   return mask;
  }),
  ioctl: (function(sock, request, arg) {
   switch (request) {
   case 21531:
    var bytes = 0;
    if (sock.recv_queue.length) {
     bytes = sock.recv_queue[0].data.length;
    }
    HEAP32[arg >> 2] = bytes;
    return 0;
   default:
    return ERRNO_CODES.EINVAL;
   }
  }),
  close: (function(sock) {
   if (sock.server) {
    try {
     sock.server.close();
    } catch (e) {}
    sock.server = null;
   }
   var peers = Object.keys(sock.peers);
   for (var i = 0; i < peers.length; i++) {
    var peer = sock.peers[peers[i]];
    try {
     peer.socket.close();
    } catch (e) {}
    SOCKFS.websocket_sock_ops.removePeer(sock, peer);
   }
   return 0;
  }),
  bind: (function(sock, addr, port) {
   if (typeof sock.saddr !== "undefined" || typeof sock.sport !== "undefined") {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   sock.saddr = addr;
   sock.sport = port;
   if (sock.type === 2) {
    if (sock.server) {
     sock.server.close();
     sock.server = null;
    }
    try {
     sock.sock_ops.listen(sock, 0);
    } catch (e) {
     if (!(e instanceof FS.ErrnoError)) throw e;
     if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
    }
   }
  }),
  connect: (function(sock, addr, port) {
   if (sock.server) {
    throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
   }
   if (typeof sock.daddr !== "undefined" && typeof sock.dport !== "undefined") {
    var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
    if (dest) {
     if (dest.socket.readyState === dest.socket.CONNECTING) {
      throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
     } else {
      throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
     }
    }
   }
   var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
   sock.daddr = peer.addr;
   sock.dport = peer.port;
   throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
  }),
  listen: (function(sock, backlog) {
   if (!ENVIRONMENT_IS_NODE) {
    throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
   }
   if (sock.server) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   var WebSocketServer = require("ws").Server;
   var host = sock.saddr;
   sock.server = new WebSocketServer({
    host: host,
    port: sock.sport
   });
   Module["websocket"].emit("listen", sock.stream.fd);
   sock.server.on("connection", (function(ws) {
    if (sock.type === 1) {
     var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
     var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
     newsock.daddr = peer.addr;
     newsock.dport = peer.port;
     sock.pending.push(newsock);
     Module["websocket"].emit("connection", newsock.stream.fd);
    } else {
     SOCKFS.websocket_sock_ops.createPeer(sock, ws);
     Module["websocket"].emit("connection", sock.stream.fd);
    }
   }));
   sock.server.on("closed", (function() {
    Module["websocket"].emit("close", sock.stream.fd);
    sock.server = null;
   }));
   sock.server.on("error", (function(error) {
    sock.error = ERRNO_CODES.EHOSTUNREACH;
    Module["websocket"].emit("error", [ sock.stream.fd, sock.error, "EHOSTUNREACH: Host is unreachable" ]);
   }));
  }),
  accept: (function(listensock) {
   if (!listensock.server) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   var newsock = listensock.pending.shift();
   newsock.stream.flags = listensock.stream.flags;
   return newsock;
  }),
  getname: (function(sock, peer) {
   var addr, port;
   if (peer) {
    if (sock.daddr === undefined || sock.dport === undefined) {
     throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
    }
    addr = sock.daddr;
    port = sock.dport;
   } else {
    addr = sock.saddr || 0;
    port = sock.sport || 0;
   }
   return {
    addr: addr,
    port: port
   };
  }),
  sendmsg: (function(sock, buffer, offset, length, addr, port) {
   if (sock.type === 2) {
    if (addr === undefined || port === undefined) {
     addr = sock.daddr;
     port = sock.dport;
    }
    if (addr === undefined || port === undefined) {
     throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
    }
   } else {
    addr = sock.daddr;
    port = sock.dport;
   }
   var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
   if (sock.type === 1) {
    if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
     throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
    } else if (dest.socket.readyState === dest.socket.CONNECTING) {
     throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
    }
   }
   var data;
   if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
    data = buffer.slice(offset, offset + length);
   } else {
    data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
   }
   if (sock.type === 2) {
    if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
     if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
      dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
     }
     dest.dgram_send_queue.push(data);
     return length;
    }
   }
   try {
    dest.socket.send(data);
    return length;
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
  }),
  recvmsg: (function(sock, length) {
   if (sock.type === 1 && sock.server) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
   }
   var queued = sock.recv_queue.shift();
   if (!queued) {
    if (sock.type === 1) {
     var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
     if (!dest) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
     } else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
      return null;
     } else {
      throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
     }
    } else {
     throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
    }
   }
   var queuedLength = queued.data.byteLength || queued.data.length;
   var queuedOffset = queued.data.byteOffset || 0;
   var queuedBuffer = queued.data.buffer || queued.data;
   var bytesRead = Math.min(length, queuedLength);
   var res = {
    buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
    addr: queued.addr,
    port: queued.port
   };
   if (sock.type === 1 && bytesRead < queuedLength) {
    var bytesRemaining = queuedLength - bytesRead;
    queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
    sock.recv_queue.unshift(queued);
   }
   return res;
  })
 }
};
function __inet_pton4_raw(str) {
 var b = str.split(".");
 for (var i = 0; i < 4; i++) {
  var tmp = Number(b[i]);
  if (isNaN(tmp)) return null;
  b[i] = tmp;
 }
 return (b[0] | b[1] << 8 | b[2] << 16 | b[3] << 24) >>> 0;
}
var _htons = undefined;
Module["_htons"] = _htons;
function __inet_pton6_raw(str) {
 var words;
 var w, offset, z;
 var valid6regx = /^((?=.*::)(?!.*::.+::)(::)?([\dA-F]{1,4}:(:|\b)|){5}|([\dA-F]{1,4}:){6})((([\dA-F]{1,4}((?!\3)::|:\b|$))|(?!\2\3)){2}|(((2[0-4]|1\d|[1-9])?\d|25[0-5])\.?\b){4})$/i;
 var parts = [];
 if (!valid6regx.test(str)) {
  return null;
 }
 if (str === "::") {
  return [ 0, 0, 0, 0, 0, 0, 0, 0 ];
 }
 if (str.indexOf("::") === 0) {
  str = str.replace("::", "Z:");
 } else {
  str = str.replace("::", ":Z:");
 }
 if (str.indexOf(".") > 0) {
  str = str.replace(new RegExp("[.]", "g"), ":");
  words = str.split(":");
  words[words.length - 4] = parseInt(words[words.length - 4]) + parseInt(words[words.length - 3]) * 256;
  words[words.length - 3] = parseInt(words[words.length - 2]) + parseInt(words[words.length - 1]) * 256;
  words = words.slice(0, words.length - 2);
 } else {
  words = str.split(":");
 }
 offset = 0;
 z = 0;
 for (w = 0; w < words.length; w++) {
  if (typeof words[w] === "string") {
   if (words[w] === "Z") {
    for (z = 0; z < 8 - words.length + 1; z++) {
     parts[w + z] = 0;
    }
    offset = z - 1;
   } else {
    parts[w + offset] = _htons(parseInt(words[w], 16));
   }
  } else {
   parts[w + offset] = words[w];
  }
 }
 return [ parts[1] << 16 | parts[0], parts[3] << 16 | parts[2], parts[5] << 16 | parts[4], parts[7] << 16 | parts[6] ];
}
var DNS = {
 address_map: {
  id: 1,
  addrs: {},
  names: {}
 },
 lookup_name: (function(name) {
  var res = __inet_pton4_raw(name);
  if (res !== null) {
   return name;
  }
  res = __inet_pton6_raw(name);
  if (res !== null) {
   return name;
  }
  var addr;
  if (DNS.address_map.addrs[name]) {
   addr = DNS.address_map.addrs[name];
  } else {
   var id = DNS.address_map.id++;
   assert(id < 65535, "exceeded max address mappings of 65535");
   addr = "172.29." + (id & 255) + "." + (id & 65280);
   DNS.address_map.names[addr] = name;
   DNS.address_map.addrs[name] = addr;
  }
  return addr;
 }),
 lookup_addr: (function(addr) {
  if (DNS.address_map.names[addr]) {
   return DNS.address_map.names[addr];
  }
  return null;
 })
};
var Sockets = {
 BUFFER_SIZE: 10240,
 MAX_BUFFER_SIZE: 10485760,
 nextFd: 1,
 fds: {},
 nextport: 1,
 maxport: 65535,
 peer: null,
 connections: {},
 portmap: {},
 localAddr: 4261412874,
 addrPool: [ 33554442, 50331658, 67108874, 83886090, 100663306, 117440522, 134217738, 150994954, 167772170, 184549386, 201326602, 218103818, 234881034 ]
};
function __inet_ntop4_raw(addr) {
 return (addr & 255) + "." + (addr >> 8 & 255) + "." + (addr >> 16 & 255) + "." + (addr >> 24 & 255);
}
var _ntohs = undefined;
Module["_ntohs"] = _ntohs;
function __inet_ntop6_raw(ints) {
 var str = "";
 var word = 0;
 var longest = 0;
 var lastzero = 0;
 var zstart = 0;
 var len = 0;
 var i = 0;
 var parts = [ ints[0] & 65535, ints[0] >> 16, ints[1] & 65535, ints[1] >> 16, ints[2] & 65535, ints[2] >> 16, ints[3] & 65535, ints[3] >> 16 ];
 var hasipv4 = true;
 var v4part = "";
 for (i = 0; i < 5; i++) {
  if (parts[i] !== 0) {
   hasipv4 = false;
   break;
  }
 }
 if (hasipv4) {
  v4part = __inet_ntop4_raw(parts[6] | parts[7] << 16);
  if (parts[5] === -1) {
   str = "::ffff:";
   str += v4part;
   return str;
  }
  if (parts[5] === 0) {
   str = "::";
   if (v4part === "0.0.0.0") v4part = "";
   if (v4part === "0.0.0.1") v4part = "1";
   str += v4part;
   return str;
  }
 }
 for (word = 0; word < 8; word++) {
  if (parts[word] === 0) {
   if (word - lastzero > 1) {
    len = 0;
   }
   lastzero = word;
   len++;
  }
  if (len > longest) {
   longest = len;
   zstart = word - longest + 1;
  }
 }
 for (word = 0; word < 8; word++) {
  if (longest > 1) {
   if (parts[word] === 0 && word >= zstart && word < zstart + longest) {
    if (word === zstart) {
     str += ":";
     if (zstart === 0) str += ":";
    }
    continue;
   }
  }
  str += Number(_ntohs(parts[word] & 65535)).toString(16);
  str += word < 7 ? ":" : "";
 }
 return str;
}
function __read_sockaddr(sa, salen) {
 var family = HEAP16[sa >> 1];
 var port = _ntohs(HEAP16[sa + 2 >> 1]);
 var addr;
 switch (family) {
 case 2:
  if (salen !== 16) {
   return {
    errno: ERRNO_CODES.EINVAL
   };
  }
  addr = HEAP32[sa + 4 >> 2];
  addr = __inet_ntop4_raw(addr);
  break;
 case 10:
  if (salen !== 28) {
   return {
    errno: ERRNO_CODES.EINVAL
   };
  }
  addr = [ HEAP32[sa + 8 >> 2], HEAP32[sa + 12 >> 2], HEAP32[sa + 16 >> 2], HEAP32[sa + 20 >> 2] ];
  addr = __inet_ntop6_raw(addr);
  break;
 default:
  return {
   errno: ERRNO_CODES.EAFNOSUPPORT
  };
 }
 return {
  family: family,
  addr: addr,
  port: port
 };
}
function __write_sockaddr(sa, family, addr, port) {
 switch (family) {
 case 2:
  addr = __inet_pton4_raw(addr);
  HEAP16[sa >> 1] = family;
  HEAP32[sa + 4 >> 2] = addr;
  HEAP16[sa + 2 >> 1] = _htons(port);
  break;
 case 10:
  addr = __inet_pton6_raw(addr);
  HEAP32[sa >> 2] = family;
  HEAP32[sa + 8 >> 2] = addr[0];
  HEAP32[sa + 12 >> 2] = addr[1];
  HEAP32[sa + 16 >> 2] = addr[2];
  HEAP32[sa + 20 >> 2] = addr[3];
  HEAP16[sa + 2 >> 1] = _htons(port);
  HEAP32[sa + 4 >> 2] = 0;
  HEAP32[sa + 24 >> 2] = 0;
  break;
 default:
  return {
   errno: ERRNO_CODES.EAFNOSUPPORT
  };
 }
 return {};
}
function ___syscall102(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var call = SYSCALLS.get(), socketvararg = SYSCALLS.get();
  SYSCALLS.varargs = socketvararg;
  switch (call) {
  case 1:
   {
    var domain = SYSCALLS.get(), type = SYSCALLS.get(), protocol = SYSCALLS.get();
    var sock = SOCKFS.createSocket(domain, type, protocol);
    assert(sock.stream.fd < 64);
    return sock.stream.fd;
   }
  case 2:
   {
    var sock = SYSCALLS.getSocketFromFD(), info = SYSCALLS.getSocketAddress();
    sock.sock_ops.bind(sock, info.addr, info.port);
    return 0;
   }
  case 3:
   {
    var sock = SYSCALLS.getSocketFromFD(), info = SYSCALLS.getSocketAddress();
    sock.sock_ops.connect(sock, info.addr, info.port);
    return 0;
   }
  case 4:
   {
    var sock = SYSCALLS.getSocketFromFD(), backlog = SYSCALLS.get();
    sock.sock_ops.listen(sock, backlog);
    return 0;
   }
  case 5:
   {
    var sock = SYSCALLS.getSocketFromFD(), addr = SYSCALLS.get(), addrlen = SYSCALLS.get();
    var newsock = sock.sock_ops.accept(sock);
    if (addr) {
     var res = __write_sockaddr(addr, newsock.family, DNS.lookup_name(newsock.daddr), newsock.dport);
     assert(!res.errno);
    }
    return newsock.stream.fd;
   }
  case 6:
   {
    var sock = SYSCALLS.getSocketFromFD(), addr = SYSCALLS.get(), addrlen = SYSCALLS.get();
    var res = __write_sockaddr(addr, sock.family, DNS.lookup_name(sock.saddr || "0.0.0.0"), sock.sport);
    assert(!res.errno);
    return 0;
   }
  case 7:
   {
    var sock = SYSCALLS.getSocketFromFD(), addr = SYSCALLS.get(), addrlen = SYSCALLS.get();
    if (!sock.daddr) {
     return -ERRNO_CODES.ENOTCONN;
    }
    var res = __write_sockaddr(addr, sock.family, DNS.lookup_name(sock.daddr), sock.dport);
    assert(!res.errno);
    return 0;
   }
  case 11:
   {
    var sock = SYSCALLS.getSocketFromFD(), message = SYSCALLS.get(), length = SYSCALLS.get(), flags = SYSCALLS.get(), dest = SYSCALLS.getSocketAddress(true);
    if (!dest) {
     return FS.write(sock.stream, HEAP8, message, length);
    } else {
     return sock.sock_ops.sendmsg(sock, HEAP8, message, length, dest.addr, dest.port);
    }
   }
  case 12:
   {
    var sock = SYSCALLS.getSocketFromFD(), buf = SYSCALLS.get(), len = SYSCALLS.get(), flags = SYSCALLS.get(), addr = SYSCALLS.get(), addrlen = SYSCALLS.get();
    var msg = sock.sock_ops.recvmsg(sock, len);
    if (!msg) return 0;
    if (addr) {
     var res = __write_sockaddr(addr, sock.family, DNS.lookup_name(msg.addr), msg.port);
     assert(!res.errno);
    }
    HEAPU8.set(msg.buffer, buf);
    return msg.buffer.byteLength;
   }
  case 14:
   {
    return -ERRNO_CODES.ENOPROTOOPT;
   }
  case 15:
   {
    var sock = SYSCALLS.getSocketFromFD(), level = SYSCALLS.get(), optname = SYSCALLS.get(), optval = SYSCALLS.get(), optlen = SYSCALLS.get();
    if (level === 1) {
     if (optname === 4) {
      HEAP32[optval >> 2] = sock.error;
      HEAP32[optlen >> 2] = 4;
      sock.error = null;
      return 0;
     }
    }
    return -ERRNO_CODES.ENOPROTOOPT;
   }
  case 16:
   {
    var sock = SYSCALLS.getSocketFromFD(), message = SYSCALLS.get(), flags = SYSCALLS.get();
    var iov = HEAP32[message + 8 >> 2];
    var num = HEAP32[message + 12 >> 2];
    var addr, port;
    var name = HEAP32[message >> 2];
    var namelen = HEAP32[message + 4 >> 2];
    if (name) {
     var info = __read_sockaddr(name, namelen);
     if (info.errno) return -info.errno;
     port = info.port;
     addr = DNS.lookup_addr(info.addr) || info.addr;
    }
    var total = 0;
    for (var i = 0; i < num; i++) {
     total += HEAP32[iov + (8 * i + 4) >> 2];
    }
    var view = new Uint8Array(total);
    var offset = 0;
    for (var i = 0; i < num; i++) {
     var iovbase = HEAP32[iov + (8 * i + 0) >> 2];
     var iovlen = HEAP32[iov + (8 * i + 4) >> 2];
     for (var j = 0; j < iovlen; j++) {
      view[offset++] = HEAP8[iovbase + j >> 0];
     }
    }
    return sock.sock_ops.sendmsg(sock, view, 0, total, addr, port);
   }
  case 17:
   {
    var sock = SYSCALLS.getSocketFromFD(), message = SYSCALLS.get(), flags = SYSCALLS.get();
    var iov = HEAP32[message + 8 >> 2];
    var num = HEAP32[message + 12 >> 2];
    var total = 0;
    for (var i = 0; i < num; i++) {
     total += HEAP32[iov + (8 * i + 4) >> 2];
    }
    var msg = sock.sock_ops.recvmsg(sock, total);
    if (!msg) return 0;
    var name = HEAP32[message >> 2];
    if (name) {
     var res = __write_sockaddr(name, sock.family, DNS.lookup_name(msg.addr), msg.port);
     assert(!res.errno);
    }
    var bytesRead = 0;
    var bytesRemaining = msg.buffer.byteLength;
    for (var i = 0; bytesRemaining > 0 && i < num; i++) {
     var iovbase = HEAP32[iov + (8 * i + 0) >> 2];
     var iovlen = HEAP32[iov + (8 * i + 4) >> 2];
     if (!iovlen) {
      continue;
     }
     var length = Math.min(iovlen, bytesRemaining);
     var buf = msg.buffer.subarray(bytesRead, bytesRead + length);
     HEAPU8.set(buf, iovbase + bytesRead);
     bytesRead += length;
     bytesRemaining -= length;
    }
    return bytesRead;
   }
  default:
   abort("unsupported socketcall syscall " + call);
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _glEnd() {
 GLImmediate.prepareClientAttributes(GLImmediate.rendererComponents[GLImmediate.VERTEX], true);
 GLImmediate.firstVertex = 0;
 GLImmediate.lastVertex = GLImmediate.vertexCounter / (GLImmediate.stride >> 2);
 GLImmediate.flush();
 GLImmediate.disableBeginEndClientAttributes();
 GLImmediate.mode = -1;
 GLImmediate.enabledClientAttributes = GLImmediate.enabledClientAttributes_preBegin;
 GLImmediate.clientAttributes = GLImmediate.clientAttributes_preBegin;
 GLImmediate.currentRenderer = null;
 GLImmediate.modifiedClientAttributes = true;
}
function _glOrtho(left, right, bottom, top_, nearVal, farVal) {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.multiply(GLImmediate.matrix[GLImmediate.currentMatrix], GLImmediate.matrixLib.mat4.ortho(left, right, bottom, top_, nearVal, farVal));
}
function _glScissor(x0, x1, x2, x3) {
 GLctx.scissor(x0, x1, x2, x3);
}
function _emscripten_glBindProgramARB(type, id) {}
function _glMaterialfv() {
 throw "glMaterialfv: TODO";
}
function _emscripten_glCheckFramebufferStatus(x0) {
 return GLctx.checkFramebufferStatus(x0);
}
function _emscripten_glDeleteProgram(id) {
 if (!id) return;
 var program = GL.programs[id];
 if (!program) {
  GL.recordError(1281);
  return;
 }
 GLctx.deleteProgram(program);
 program.name = 0;
 GL.programs[id] = null;
 GL.programInfos[id] = null;
}
function _emscripten_glDisable(x0) {
 GLctx.disable(x0);
}
function _emscripten_glVertexAttrib3fv(index, v) {
 var view = GL.miniTempBufferViews[2];
 view[0] = HEAPF32[v >> 2];
 view[1] = HEAPF32[v + 4 >> 2];
 view[2] = HEAPF32[v + 8 >> 2];
 GLctx.vertexAttrib3fv(index, view);
}
function _glFlush() {
 GLctx.flush();
}
function _glClearColor(x0, x1, x2, x3) {
 GLctx.clearColor(x0, x1, x2, x3);
}
function _emscripten_glGetActiveAttrib(program, index, bufSize, length, size, type, name) {
 program = GL.programs[program];
 var info = GLctx.getActiveAttrib(program, index);
 if (!info) return;
 var infoname = info.name.slice(0, Math.max(0, bufSize - 1));
 if (bufSize > 0 && name) {
  writeStringToMemory(infoname, name);
  if (length) HEAP32[length >> 2] = infoname.length;
 } else {
  if (length) HEAP32[length >> 2] = 0;
 }
 if (size) HEAP32[size >> 2] = info.size;
 if (type) HEAP32[type >> 2] = info.type;
}
function _emscripten_glIsFramebuffer(framebuffer) {
 var fb = GL.framebuffers[framebuffer];
 if (!fb) return 0;
 return GLctx.isFramebuffer(fb);
}
function _emscripten_glLineWidth(x0) {
 GLctx.lineWidth(x0);
}
function _emscripten_glGetString(name_) {
 if (GL.stringCache[name_]) return GL.stringCache[name_];
 var ret;
 switch (name_) {
 case 7936:
 case 7937:
 case 7938:
  ret = allocate(intArrayFromString(GLctx.getParameter(name_)), "i8", ALLOC_NORMAL);
  break;
 case 7939:
  var exts = GLctx.getSupportedExtensions();
  var gl_exts = [];
  for (var i in exts) {
   gl_exts.push(exts[i]);
   gl_exts.push("GL_" + exts[i]);
  }
  ret = allocate(intArrayFromString(gl_exts.join(" ")), "i8", ALLOC_NORMAL);
  break;
 case 35724:
  var glslVersion = GLctx.getParameter(GLctx.SHADING_LANGUAGE_VERSION);
  if (glslVersion.indexOf("WebGL GLSL ES 1.0") != -1) glslVersion = "OpenGL ES GLSL ES 1.00 (WebGL)";
  ret = allocate(intArrayFromString(glslVersion), "i8", ALLOC_NORMAL);
  break;
 default:
  GL.recordError(1280);
  return 0;
 }
 GL.stringCache[name_] = ret;
 return ret;
}
function _emscripten_glGetAttribLocation(program, name) {
 program = GL.programs[program];
 name = Pointer_stringify(name);
 return GLctx.getAttribLocation(program, name);
}
function _emscripten_glRotatef(angle, x, y, z) {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.rotate(GLImmediate.matrix[GLImmediate.currentMatrix], angle * Math.PI / 180, [ x, y, z ]);
}
function _emscripten_glGetIntegerv(name_, p) {
 emscriptenWebGLGet(name_, p, "Integer");
}
function _emscripten_glGetFramebufferAttachmentParameteriv(target, attachment, pname, params) {
 var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);
 HEAP32[params >> 2] = result;
}
function _SDL_AddTimer(interval, callback, param) {
 return window.setTimeout((function() {
  Runtime.dynCall("iii", callback, [ interval, param ]);
 }), interval);
}
function _emscripten_glClientActiveTexture(texture) {
 GLImmediate.clientActiveTexture = texture - 33984;
}
function _glGetTexLevelParameteriv() {
 throw "glGetTexLevelParameteriv: TODO";
}
function _emscripten_glGetShaderInfoLog(shader, maxLength, length, infoLog) {
 var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
 if (log === null) log = "(unknown error)";
 log = log.substr(0, maxLength - 1);
 if (maxLength > 0 && infoLog) {
  writeStringToMemory(log, infoLog);
  if (length) HEAP32[length >> 2] = log.length;
 } else {
  if (length) HEAP32[length >> 2] = 0;
 }
}
function _SDL_WarpMouse(x, y) {
 return;
 var rect = Module["canvas"].getBoundingClientRect();
 SDL.events.push({
  type: "mousemove",
  pageX: x + (window.scrollX + rect.left),
  pageY: y + (window.scrollY + rect.top)
 });
}
function _emscripten_glGetRenderbufferParameteriv(target, pname, params) {
 if (!params) {
  GL.recordError(1281);
  return;
 }
 HEAP32[params >> 2] = GLctx.getRenderbufferParameter(target, pname);
}
function _emscripten_glStencilOpSeparate(x0, x1, x2, x3) {
 GLctx.stencilOpSeparate(x0, x1, x2, x3);
}
function _emscripten_glReadPixels(x, y, width, height, format, type, pixels) {
 var data = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);
 if (!data.pixels) {
  GL.recordError(1280);
  return;
 }
 GLctx.readPixels(x, y, width, height, format, type, data.pixels);
}
function _emscripten_glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data) {
 var heapView;
 if (data) {
  heapView = HEAPU8.subarray(data, data + imageSize);
 } else {
  heapView = null;
 }
 GLctx["compressedTexSubImage2D"](target, level, xoffset, yoffset, width, height, format, heapView);
}
function _SDL_UnlockAudio() {}
function _emscripten_glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) {
 GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7);
}
function ___syscall39(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var path = SYSCALLS.getStr(), mode = SYSCALLS.get();
  return SYSCALLS.doMkdir(path, mode);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall38(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var old_path = SYSCALLS.getStr(), new_path = SYSCALLS.getStr();
  FS.rename(old_path, new_path);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _SDL_Init(initFlags) {
 SDL.startTime = Date.now();
 SDL.initFlags = initFlags;
 if (!Module["doNotCaptureKeyboard"]) {
  var keyboardListeningElement = Module["keyboardListeningElement"] || document;
  keyboardListeningElement.addEventListener("keydown", SDL.receiveEvent);
  keyboardListeningElement.addEventListener("keyup", SDL.receiveEvent);
  keyboardListeningElement.addEventListener("keypress", SDL.receiveEvent);
  window.addEventListener("focus", SDL.receiveEvent);
  window.addEventListener("blur", SDL.receiveEvent);
  document.addEventListener("visibilitychange", SDL.receiveEvent);
 }
 if (initFlags & 512) {
  addEventListener("gamepadconnected", (function() {}));
 }
 window.addEventListener("unload", SDL.receiveEvent);
 SDL.keyboardState = _malloc(65536);
 _memset(SDL.keyboardState, 0, 65536);
 SDL.DOMEventToSDLEvent["keydown"] = 768;
 SDL.DOMEventToSDLEvent["keyup"] = 769;
 SDL.DOMEventToSDLEvent["keypress"] = 771;
 SDL.DOMEventToSDLEvent["mousedown"] = 1025;
 SDL.DOMEventToSDLEvent["mouseup"] = 1026;
 SDL.DOMEventToSDLEvent["mousemove"] = 1024;
 SDL.DOMEventToSDLEvent["wheel"] = 1027;
 SDL.DOMEventToSDLEvent["touchstart"] = 1792;
 SDL.DOMEventToSDLEvent["touchend"] = 1793;
 SDL.DOMEventToSDLEvent["touchmove"] = 1794;
 SDL.DOMEventToSDLEvent["unload"] = 256;
 SDL.DOMEventToSDLEvent["resize"] = 28673;
 SDL.DOMEventToSDLEvent["visibilitychange"] = 512;
 SDL.DOMEventToSDLEvent["focus"] = 512;
 SDL.DOMEventToSDLEvent["blur"] = 512;
 SDL.DOMEventToSDLEvent["joystick_axis_motion"] = 1536;
 SDL.DOMEventToSDLEvent["joystick_button_down"] = 1539;
 SDL.DOMEventToSDLEvent["joystick_button_up"] = 1540;
 return 0;
}
function _SDL_WasInit() {
 if (SDL.startTime === null) {
  _SDL_Init();
 }
 return 1;
}
function ___syscall33(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var path = SYSCALLS.getStr(), amode = SYSCALLS.get();
  return SYSCALLS.doAccess(path, amode);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _pthread_cleanup_push(routine, arg) {
 __ATEXIT__.push((function() {
  Runtime.dynCall("vi", routine, [ arg ]);
 }));
 _pthread_cleanup_push.level = __ATEXIT__.length;
}
function _SDL_SetGamma(r, g, b) {
 return -1;
}
function _Mix_HaltChannel(channel) {
 function halt(channel) {
  var info = SDL.channels[channel];
  if (info.audio) {
   info.audio.pause();
   info.audio = null;
  }
  if (SDL.channelFinished) {
   Runtime.getFuncWrapper(SDL.channelFinished, "vi")(channel);
  }
 }
 if (channel != -1) {
  halt(channel);
 } else {
  for (var i = 0; i < SDL.channels.length; ++i) halt(i);
 }
 return 0;
}
function _emscripten_glIsEnabled(x0) {
 return GLctx.isEnabled(x0);
}
function _emscripten_hide_mouse() {
 var styleSheet = document.styleSheets[0];
 var rules = styleSheet.cssRules;
 for (var i = 0; i < rules.length; i++) {
  if (rules[i].cssText.substr(0, 6) == "canvas") {
   styleSheet.deleteRule(i);
   i--;
  }
 }
 styleSheet.insertRule("canvas.emscripten { border: 1px solid black; cursor: none; }", 0);
}
STATICTOP += 48;
function _mktime(tmPtr) {
 _tzset();
 var date = new Date(HEAP32[tmPtr + 20 >> 2] + 1900, HEAP32[tmPtr + 16 >> 2], HEAP32[tmPtr + 12 >> 2], HEAP32[tmPtr + 8 >> 2], HEAP32[tmPtr + 4 >> 2], HEAP32[tmPtr >> 2], 0);
 var dst = HEAP32[tmPtr + 32 >> 2];
 var guessedOffset = date.getTimezoneOffset();
 var start = new Date(date.getFullYear(), 0, 1);
 var summerOffset = (new Date(2e3, 6, 1)).getTimezoneOffset();
 var winterOffset = start.getTimezoneOffset();
 var dstOffset = Math.min(winterOffset, summerOffset);
 if (dst < 0) {
  HEAP32[tmPtr + 32 >> 2] = Number(dstOffset == guessedOffset);
 } else if (dst > 0 != (dstOffset == guessedOffset)) {
  var nonDstOffset = Math.max(winterOffset, summerOffset);
  var trueOffset = dst > 0 ? dstOffset : nonDstOffset;
  date.setTime(date.getTime() + (trueOffset - guessedOffset) * 6e4);
 }
 HEAP32[tmPtr + 24 >> 2] = date.getDay();
 var yday = (date.getTime() - start.getTime()) / (1e3 * 60 * 60 * 24) | 0;
 HEAP32[tmPtr + 28 >> 2] = yday;
 return date.getTime() / 1e3 | 0;
}
function _asctime_r(tmPtr, buf) {
 var date = {
  tm_sec: HEAP32[tmPtr >> 2],
  tm_min: HEAP32[tmPtr + 4 >> 2],
  tm_hour: HEAP32[tmPtr + 8 >> 2],
  tm_mday: HEAP32[tmPtr + 12 >> 2],
  tm_mon: HEAP32[tmPtr + 16 >> 2],
  tm_year: HEAP32[tmPtr + 20 >> 2],
  tm_wday: HEAP32[tmPtr + 24 >> 2]
 };
 var days = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ];
 var months = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
 var s = days[date.tm_wday] + " " + months[date.tm_mon] + (date.tm_mday < 10 ? "  " : " ") + date.tm_mday + (date.tm_hour < 10 ? " 0" : " ") + date.tm_hour + (date.tm_min < 10 ? ":0" : ":") + date.tm_min + (date.tm_sec < 10 ? ":0" : ":") + date.tm_sec + " " + (1900 + date.tm_year) + "\n";
 writeStringToMemory(s, buf);
 return buf;
}
function _ctime_r(time, buf) {
 var stack = Runtime.stackSave();
 var rv = _asctime_r(_localtime_r(time, Runtime.stackAlloc(44)), buf);
 Runtime.stackRestore(stack);
 return rv;
}
function _ctime(timer) {
 return _ctime_r(timer, ___tm_current);
}
Module["_memmove"] = _memmove;
function _glGenTextures(n, textures) {
 for (var i = 0; i < n; i++) {
  var texture = GLctx.createTexture();
  if (!texture) {
   GL.recordError(1282);
   while (i < n) HEAP32[textures + i++ * 4 >> 2] = 0;
   return;
  }
  var id = GL.getNewId(GL.textures);
  texture.name = id;
  GL.textures[id] = texture;
  HEAP32[textures + i * 4 >> 2] = id;
 }
}
function _emscripten_glVertexAttrib4f(x0, x1, x2, x3, x4) {
 GLctx.vertexAttrib4f(x0, x1, x2, x3, x4);
}
function _glDepthFunc(x0) {
 GLctx.depthFunc(x0);
}
function _SDL_LockAudio() {}
function _emscripten_glClearDepthf(x0) {
 GLctx.clearDepth(x0);
}
function _glColor3ub(r, g, b) {
 _emscripten_glColor4ub(r, g, b, 255);
}
function _emscripten_glClear(x0) {
 GLctx.clear(x0);
}
function ___syscall40(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var path = SYSCALLS.getStr();
  FS.rmdir(path);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _glVertex2f(x, y, z) {
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = x;
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = y;
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = z || 0;
 GLImmediate.addRendererComponent(GLImmediate.VERTEX, 3, GLctx.FLOAT);
}
function _emscripten_glBindBuffer(target, buffer) {
 var bufferObj = buffer ? GL.buffers[buffer] : null;
 if (target == GLctx.ARRAY_BUFFER) {
  GL.currArrayBuffer = buffer;
  GLImmediate.lastArrayBuffer = buffer;
 } else if (target == GLctx.ELEMENT_ARRAY_BUFFER) {
  GL.currElementArrayBuffer = buffer;
 }
 GLctx.bindBuffer(target, bufferObj);
}
function _SDL_EnableKeyRepeat(delay, interval) {}
function _emscripten_glCompileShader(shader) {
 GLctx.compileShader(GL.shaders[shader]);
}
function _emscripten_glGetUniformfv(program, location, params) {
 emscriptenWebGLGetUniform(program, location, params, "Float");
}
function _glVertex2i(x, y, z) {
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = x;
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = y;
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = z || 0;
 GLImmediate.addRendererComponent(GLImmediate.VERTEX, 3, GLctx.FLOAT);
}
function _glColorMask(x0, x1, x2, x3) {
 GLctx.colorMask(x0, x1, x2, x3);
}
Module["_bitshift64Shl"] = _bitshift64Shl;
function _emscripten_glGetBufferParameteriv(target, value, data) {
 if (!data) {
  GL.recordError(1281);
  return;
 }
 HEAP32[data >> 2] = GLctx.getBufferParameter(target, value);
}
function _SDL_CondSignal() {}
function _emscripten_glVertex3f(x, y, z) {
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = x;
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = y;
 GLImmediate.vertexData[GLImmediate.vertexCounter++] = z || 0;
 GLImmediate.addRendererComponent(GLImmediate.VERTEX, 3, GLctx.FLOAT);
}
function _glVertex3fv(p) {
 _emscripten_glVertex3f(HEAPF32[p >> 2], HEAPF32[p + 4 >> 2], HEAPF32[p + 8 >> 2]);
}
function _emscripten_glGetAttachedShaders(program, maxCount, count, shaders) {
 var result = GLctx.getAttachedShaders(GL.programs[program]);
 var len = result.length;
 if (len > maxCount) {
  len = maxCount;
 }
 HEAP32[count >> 2] = len;
 for (var i = 0; i < len; ++i) {
  var id = GL.shaders.indexOf(result[i]);
  HEAP32[shaders + i * 4 >> 2] = id;
 }
}
function _emscripten_glFinish() {
 GLctx.finish();
}
function _emscripten_glFrontFace(x0) {
 GLctx.frontFace(x0);
}
function _emscripten_glActiveTexture(x0) {
 GLctx.activeTexture(x0);
}
function _emscripten_glUniform1iv(location, count, value) {
 location = GL.uniforms[location];
 value = HEAP32.subarray(value >> 2, value + count * 4 >> 2);
 GLctx.uniform1iv(location, value);
}
function _emscripten_glTexCoordPointer(size, type, stride, pointer) {
 GLImmediate.setClientAttribute(GLImmediate.TEXTURE0 + GLImmediate.clientActiveTexture, size, type, stride, pointer);
}
function _emscripten_glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {
 var pixelData;
 if (pixels) {
  var data = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat);
  pixelData = data.pixels;
  internalFormat = data.internalFormat;
 } else {
  pixelData = null;
 }
 GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixelData);
}
function _SDL_AllocRW() {
 throw "SDL_AllocRW: TODO";
}
function _emscripten_glGetProgramInfoLog(program, maxLength, length, infoLog) {
 var log = GLctx.getProgramInfoLog(GL.programs[program]);
 if (log === null) log = "(unknown error)";
 log = log.substr(0, maxLength - 1);
 if (maxLength > 0 && infoLog) {
  writeStringToMemory(log, infoLog);
  if (length) HEAP32[length >> 2] = log.length;
 } else {
  if (length) HEAP32[length >> 2] = 0;
 }
}
function _emscripten_glGetInfoLogARB(id, maxLength, length, infoLog) {
 if (GL.programs[id]) {
  _emscripten_glGetProgramInfoLog(id, maxLength, length, infoLog);
 } else if (GL.shaders[id]) {
  _emscripten_glGetShaderInfoLog(id, maxLength, length, infoLog);
 } else {
  Module.printErr("WARNING: getObjectParameteriv received invalid id: " + id);
 }
}
function _glDrawArrays(mode, first, count) {
 GLctx.drawArrays(mode, first, count);
}
function _SDL_PeepEvents(events, requestedEventCount, action, from, to) {
 switch (action) {
 case 2:
  {
   assert(requestedEventCount == 1);
   var index = 0;
   var retrievedEventCount = 0;
   while (index < SDL.events.length && retrievedEventCount < requestedEventCount) {
    var event = SDL.events[index];
    var type = SDL.DOMEventToSDLEvent[event.type];
    if (from <= type && type <= to) {
     if (SDL.makeCEvent(event, events) === false) {
      index++;
     } else {
      SDL.events.splice(index, 1);
      retrievedEventCount++;
     }
    } else {
     index++;
    }
   }
   return retrievedEventCount;
  }
 default:
  throw "SDL_PeepEvents does not yet support that action: " + action;
 }
}
function __exit(status) {
 Module["exit"](status);
}
function _exit(status) {
 __exit(status);
}
function _emscripten_glRenderbufferStorage(x0, x1, x2, x3) {
 GLctx.renderbufferStorage(x0, x1, x2, x3);
}
function _emscripten_glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) {
 GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7);
}
function _Mix_SetPostMix() {
 Runtime.warnOnce("Mix_SetPostMix: TODO");
}
function ___syscall10(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var path = SYSCALLS.getStr();
  FS.unlink(path);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function _glTexEnvi() {
 Runtime.warnOnce("glTexEnvi: TODO");
}
function _emscripten_glShaderBinary() {
 GL.recordError(1280);
}
function _emscripten_glIsProgram(program) {
 var program = GL.programs[program];
 if (!program) return 0;
 return GLctx.isProgram(program);
}
function _emscripten_glBlendColor(x0, x1, x2, x3) {
 GLctx.blendColor(x0, x1, x2, x3);
}
function _emscripten_glUniformMatrix3fv(location, count, transpose, value) {
 location = GL.uniforms[location];
 var view;
 if (9 * count <= GL.MINI_TEMP_BUFFER_SIZE) {
  view = GL.miniTempBufferViews[9 * count - 1];
  for (var i = 0; i < 9 * count; i += 9) {
   view[i] = HEAPF32[value + 4 * i >> 2];
   view[i + 1] = HEAPF32[value + (4 * i + 4) >> 2];
   view[i + 2] = HEAPF32[value + (4 * i + 8) >> 2];
   view[i + 3] = HEAPF32[value + (4 * i + 12) >> 2];
   view[i + 4] = HEAPF32[value + (4 * i + 16) >> 2];
   view[i + 5] = HEAPF32[value + (4 * i + 20) >> 2];
   view[i + 6] = HEAPF32[value + (4 * i + 24) >> 2];
   view[i + 7] = HEAPF32[value + (4 * i + 28) >> 2];
   view[i + 8] = HEAPF32[value + (4 * i + 32) >> 2];
  }
 } else {
  view = HEAPF32.subarray(value >> 2, value + count * 36 >> 2);
 }
 GLctx.uniformMatrix3fv(location, transpose, view);
}
function _emscripten_glVertexAttrib2f(x0, x1, x2) {
 GLctx.vertexAttrib2f(x0, x1, x2);
}
function _emscripten_glUniform4fv(location, count, value) {
 location = GL.uniforms[location];
 var view;
 if (4 * count <= GL.MINI_TEMP_BUFFER_SIZE) {
  view = GL.miniTempBufferViews[4 * count - 1];
  for (var i = 0; i < 4 * count; i += 4) {
   view[i] = HEAPF32[value + 4 * i >> 2];
   view[i + 1] = HEAPF32[value + (4 * i + 4) >> 2];
   view[i + 2] = HEAPF32[value + (4 * i + 8) >> 2];
   view[i + 3] = HEAPF32[value + (4 * i + 12) >> 2];
  }
 } else {
  view = HEAPF32.subarray(value >> 2, value + count * 16 >> 2);
 }
 GLctx.uniform4fv(location, view);
}
function _glMatrixMode(mode) {
 if (mode == 5888) {
  GLImmediate.currentMatrix = 0;
 } else if (mode == 5889) {
  GLImmediate.currentMatrix = 1;
 } else if (mode == 5890) {
  GLImmediate.useTextureMatrix = true;
  GLImmediate.currentMatrix = 2 + GLImmediate.clientActiveTexture;
 } else {
  throw "Wrong mode " + mode + " passed to glMatrixMode";
 }
}
function _emscripten_glGenFramebuffers(n, ids) {
 for (var i = 0; i < n; ++i) {
  var framebuffer = GLctx.createFramebuffer();
  if (!framebuffer) {
   GL.recordError(1282);
   while (i < n) HEAP32[ids + i++ * 4 >> 2] = 0;
   return;
  }
  var id = GL.getNewId(GL.framebuffers);
  framebuffer.name = id;
  GL.framebuffers[id] = framebuffer;
  HEAP32[ids + i * 4 >> 2] = id;
 }
}
function _SDL_mutexV() {
 return 0;
}
function _SDL_CondWaitTimeout() {
 throw "SDL_CondWaitTimeout: TODO";
}
function _emulGlGenVertexArrays(n, vaos) {
 for (var i = 0; i < n; i++) {
  var id = GL.getNewId(GLEmulation.vaos);
  GLEmulation.vaos[id] = {
   id: id,
   arrayBuffer: 0,
   elementArrayBuffer: 0,
   enabledVertexAttribArrays: {},
   vertexAttribPointers: {},
   enabledClientStates: {}
  };
  HEAP32[vaos + i * 4 >> 2] = id;
 }
}
function _emscripten_glGenVertexArrays(n, arrays) {
 _emulGlGenVertexArrays(n, arrays);
}
function _emscripten_glBlendEquationSeparate(x0, x1) {
 GLctx.blendEquationSeparate(x0, x1);
}
function _emscripten_glBindTexture(target, texture) {
 GLctx.bindTexture(target, texture ? GL.textures[texture] : null);
}
function _emscripten_glDrawElements(mode, count, type, indices) {
 GLctx.drawElements(mode, count, type, indices);
}
function _emscripten_glDrawRangeElements(mode, start, end, count, type, indices) {
 _emscripten_glDrawElements(mode, count, type, indices, start, end);
}
function _emscripten_glGenTextures(n, textures) {
 for (var i = 0; i < n; i++) {
  var texture = GLctx.createTexture();
  if (!texture) {
   GL.recordError(1282);
   while (i < n) HEAP32[textures + i++ * 4 >> 2] = 0;
   return;
  }
  var id = GL.getNewId(GL.textures);
  texture.name = id;
  GL.textures[id] = texture;
  HEAP32[textures + i * 4 >> 2] = id;
 }
}
function _emscripten_glVertexAttrib2fv(index, v) {
 var view = GL.miniTempBufferViews[1];
 view[0] = HEAPF32[v >> 2];
 view[1] = HEAPF32[v + 4 >> 2];
 GLctx.vertexAttrib2fv(index, view);
}
function _emscripten_glGetActiveUniform(program, index, bufSize, length, size, type, name) {
 program = GL.programs[program];
 var info = GLctx.getActiveUniform(program, index);
 if (!info) return;
 var infoname = info.name.slice(0, Math.max(0, bufSize - 1));
 if (bufSize > 0 && name) {
  writeStringToMemory(infoname, name);
  if (length) HEAP32[length >> 2] = infoname.length;
 } else {
  if (length) HEAP32[length >> 2] = 0;
 }
 if (size) HEAP32[size >> 2] = info.size;
 if (type) HEAP32[type >> 2] = info.type;
}
function _emscripten_glDeleteObjectARB(id) {
 if (GL.programs[id]) {
  _emscripten_glDeleteProgram(id);
 } else if (GL.shaders[id]) {
  _emscripten_glDeleteShader(id);
 } else {
  Module.printErr("WARNING: deleteObject received invalid id: " + id);
 }
}
function _SDL_ThreadID() {
 return 0;
}
function _emscripten_glUniform1f(location, v0) {
 location = GL.uniforms[location];
 GLctx.uniform1f(location, v0);
}
function _emscripten_glVertexAttribPointer(index, size, type, normalized, stride, ptr) {
 GLctx.vertexAttribPointer(index, size, type, normalized, stride, ptr);
}
function _SDL_SetVideoMode(width, height, depth, flags) {
 [ "touchstart", "touchend", "touchmove", "mousedown", "mouseup", "mousemove", "DOMMouseScroll", "mousewheel", "wheel", "mouseout" ].forEach((function(event) {
  Module["canvas"].addEventListener(event, SDL.receiveEvent, true);
 }));
 var canvas = Module["canvas"];
 if (width == 0 && height == 0) {
  width = canvas.width;
  height = canvas.height;
 }
 if (!SDL.addedResizeListener) {
  SDL.addedResizeListener = true;
  Browser.resizeListeners.push((function(w, h) {
   if (!SDL.settingVideoMode) {
    SDL.receiveEvent({
     type: "resize",
     w: w,
     h: h
    });
   }
  }));
 }
 if (width !== canvas.width || height !== canvas.height) {
  SDL.settingVideoMode = true;
  Browser.setCanvasSize(width, height);
  SDL.settingVideoMode = false;
 }
 if (SDL.screen) {
  SDL.freeSurface(SDL.screen);
  assert(!SDL.screen);
 }
 if (SDL.GL) flags = flags | 67108864;
 SDL.screen = SDL.makeSurface(width, height, flags, true, "screen");
 return SDL.screen;
}
function _Mix_PlayChannelTimed() {
 return _Mix_PlayChannel.apply(null, arguments);
}
function _emscripten_glDrawArrays(mode, first, count) {
 GLctx.drawArrays(mode, first, count);
}
function _emscripten_glGenBuffers(n, buffers) {
 for (var i = 0; i < n; i++) {
  var buffer = GLctx.createBuffer();
  if (!buffer) {
   GL.recordError(1282);
   while (i < n) HEAP32[buffers + i++ * 4 >> 2] = 0;
   return;
  }
  var id = GL.getNewId(GL.buffers);
  buffer.name = id;
  GL.buffers[id] = buffer;
  HEAP32[buffers + i * 4 >> 2] = id;
 }
}
function _emscripten_glClearDepth(x0) {
 GLctx.clearDepth(x0);
}
function _SDL_PollEvent(ptr) {
 return SDL.pollEvent(ptr);
}
function _SDL_GetVideoInfo() {
 var ret = _malloc(5 * Runtime.QUANTUM_SIZE);
 HEAP32[ret + Runtime.QUANTUM_SIZE * 0 >> 2] = 0;
 HEAP32[ret + Runtime.QUANTUM_SIZE * 1 >> 2] = 0;
 HEAP32[ret + Runtime.QUANTUM_SIZE * 2 >> 2] = 0;
 HEAP32[ret + Runtime.QUANTUM_SIZE * 3 >> 2] = Module["canvas"].width;
 HEAP32[ret + Runtime.QUANTUM_SIZE * 4 >> 2] = Module["canvas"].height;
 return ret;
}
function _SDL_RemoveTimer(id) {
 window.clearTimeout(id);
 return true;
}
function _emscripten_glDeleteTextures(n, textures) {
 for (var i = 0; i < n; i++) {
  var id = HEAP32[textures + i * 4 >> 2];
  var texture = GL.textures[id];
  if (!texture) continue;
  GLctx.deleteTexture(texture);
  texture.name = 0;
  GL.textures[id] = null;
 }
}
function _emscripten_glGetUniformLocation(program, name) {
 name = Pointer_stringify(name);
 var arrayOffset = 0;
 if (name.indexOf("]", name.length - 1) !== -1) {
  var ls = name.lastIndexOf("[");
  var arrayIndex = name.slice(ls + 1, -1);
  if (arrayIndex.length > 0) {
   arrayOffset = parseInt(arrayIndex);
   if (arrayOffset < 0) {
    return -1;
   }
  }
  name = name.slice(0, ls);
 }
 var ptable = GL.programInfos[program];
 if (!ptable) {
  return -1;
 }
 var utable = ptable.uniforms;
 var uniformInfo = utable[name];
 if (uniformInfo && arrayOffset < uniformInfo[0]) {
  return uniformInfo[1] + arrayOffset;
 } else {
  return -1;
 }
}
function _emscripten_glCullFace(x0) {
 GLctx.cullFace(x0);
}
function _emscripten_glEnable(x0) {
 GLctx.enable(x0);
}
function _emscripten_glScissor(x0, x1, x2, x3) {
 GLctx.scissor(x0, x1, x2, x3);
}
Module["_bitshift64Lshr"] = _bitshift64Lshr;
function _emscripten_glLinkProgram(program) {
 GLctx.linkProgram(GL.programs[program]);
 GL.programInfos[program] = null;
 GL.populateUniformTable(program);
}
function _glRotatef(angle, x, y, z) {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.rotate(GLImmediate.matrix[GLImmediate.currentMatrix], angle * Math.PI / 180, [ x, y, z ]);
}
function _glTexCoord3f() {
 throw "glTexCoord3f: TODO";
}
function _emscripten_glValidateProgram(program) {
 GLctx.validateProgram(GL.programs[program]);
}
function _emscripten_glDrawBuffers(n, bufs) {
 var bufArray = [];
 for (var i = 0; i < n; i++) bufArray.push(HEAP32[bufs + i * 4 >> 2]);
 if (n == 0) {
  if (GLctx.getParameter(GLctx["DRAW_FRAMEBUFFER_BINDING"]) != 0) bufArray.push(GLctx["NONE"]); else {
   GL.recordError(1282);
   return;
  }
 }
 GLctx["drawBuffers"](bufArray);
}
function _SDL_CondWait() {}
function _emscripten_glBindFramebuffer(target, framebuffer) {
 GLctx.bindFramebuffer(target, framebuffer ? GL.framebuffers[framebuffer] : null);
}
function _gethostbyname(name) {
 name = Pointer_stringify(name);
 var ret = _malloc(20);
 var nameBuf = _malloc(name.length + 1);
 writeStringToMemory(name, nameBuf);
 HEAP32[ret >> 2] = nameBuf;
 var aliasesBuf = _malloc(4);
 HEAP32[aliasesBuf >> 2] = 0;
 HEAP32[ret + 4 >> 2] = aliasesBuf;
 var afinet = 2;
 HEAP32[ret + 8 >> 2] = afinet;
 HEAP32[ret + 12 >> 2] = 4;
 var addrListBuf = _malloc(12);
 HEAP32[addrListBuf >> 2] = addrListBuf + 8;
 HEAP32[addrListBuf + 4 >> 2] = 0;
 HEAP32[addrListBuf + 8 >> 2] = __inet_pton4_raw(DNS.lookup_name(name));
 HEAP32[ret + 16 >> 2] = addrListBuf;
 return ret;
}
function _gethostbyname_r(name, ret, buf, buflen, out, err) {
 var data = _gethostbyname(name);
 _memcpy(ret, data, 20);
 _free(data);
 HEAP32[err >> 2] = 0;
 HEAP32[out >> 2] = ret;
 return 0;
}
function _emscripten_glBlendEquation(x0) {
 GLctx.blendEquation(x0);
}
function _emscripten_glBufferSubData(target, offset, size, data) {
 GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data + size));
}
function _glPolygonMode() {}
function _SDL_mutexP() {
 return 0;
}
function _emscripten_glBufferData(target, size, data, usage) {
 switch (usage) {
 case 35041:
 case 35042:
  usage = 35040;
  break;
 case 35045:
 case 35046:
  usage = 35044;
  break;
 case 35049:
 case 35050:
  usage = 35048;
  break;
 }
 if (!data) {
  GLctx.bufferData(target, size, usage);
 } else {
  GLctx.bufferData(target, HEAPU8.subarray(data, data + size), usage);
 }
}
function _sbrk(bytes) {
 var self = _sbrk;
 if (!self.called) {
  DYNAMICTOP = alignMemoryPage(DYNAMICTOP);
  self.called = true;
  assert(Runtime.dynamicAlloc);
  self.alloc = Runtime.dynamicAlloc;
  Runtime.dynamicAlloc = (function() {
   abort("cannot dynamically allocate, sbrk now has control");
  });
 }
 var ret = DYNAMICTOP;
 if (bytes != 0) {
  var success = self.alloc(bytes);
  if (!success) return -1 >>> 0;
 }
 return ret;
}
function _atexit(func, arg) {
 __ATEXIT__.unshift({
  func: func,
  arg: arg
 });
}
function _emscripten_glVertexAttrib4fv(index, v) {
 var view = GL.miniTempBufferViews[3];
 view[0] = HEAPF32[v >> 2];
 view[1] = HEAPF32[v + 4 >> 2];
 view[2] = HEAPF32[v + 8 >> 2];
 view[3] = HEAPF32[v + 12 >> 2];
 GLctx.vertexAttrib4fv(index, view);
}
function _emscripten_glDeleteFramebuffers(n, framebuffers) {
 for (var i = 0; i < n; ++i) {
  var id = HEAP32[framebuffers + i * 4 >> 2];
  var framebuffer = GL.framebuffers[id];
  if (!framebuffer) continue;
  GLctx.deleteFramebuffer(framebuffer);
  framebuffer.name = 0;
  GL.framebuffers[id] = null;
 }
}
function _emscripten_glGetShaderSource(shader, bufSize, length, source) {
 var result = GLctx.getShaderSource(GL.shaders[shader]);
 if (!result) return;
 result = result.slice(0, Math.max(0, bufSize - 1));
 if (bufSize > 0 && source) {
  writeStringToMemory(result, source);
  if (length) HEAP32[length >> 2] = result.length;
 } else {
  if (length) HEAP32[length >> 2] = 0;
 }
}
function _SDL_AudioQuit() {
 for (var i = 0; i < SDL.numChannels; ++i) {
  if (SDL.channels[i].audio) {
   SDL.channels[i].audio.pause();
   SDL.channels[i].audio = undefined;
  }
 }
 if (SDL.music.audio) SDL.music.audio.pause();
 SDL.music.audio = undefined;
}
function _SDL_Quit() {
 _SDL_AudioQuit();
 Module.print("SDL_Quit called (and ignored)");
}
Module["_llvm_bswap_i32"] = _llvm_bswap_i32;
function _glDrawBuffer() {
 throw "glDrawBuffer: TODO";
}
function _emscripten_run_script(ptr) {
 eval(Pointer_stringify(ptr));
}
function _emscripten_glUniform1fv(location, count, value) {
 location = GL.uniforms[location];
 var view;
 if (count <= GL.MINI_TEMP_BUFFER_SIZE) {
  view = GL.miniTempBufferViews[count - 1];
  for (var i = 0; i < count; ++i) {
   view[i] = HEAPF32[value + 4 * i >> 2];
  }
 } else {
  view = HEAPF32.subarray(value >> 2, value + count * 4 >> 2);
 }
 GLctx.uniform1fv(location, view);
}
function _emscripten_glGetFloatv(name_, p) {
 emscriptenWebGLGet(name_, p, "Float");
}
function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {
 var pixelData;
 if (pixels) {
  var data = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat);
  pixelData = data.pixels;
  internalFormat = data.internalFormat;
 } else {
  pixelData = null;
 }
 GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixelData);
}
function ___assert_fail(condition, filename, line, func) {
 ABORT = true;
 throw "Assertion failed: " + Pointer_stringify(condition) + ", at: " + [ filename ? Pointer_stringify(filename) : "unknown filename", line, func ? Pointer_stringify(func) : "unknown function" ] + " at " + stackTrace();
}
function _Mix_ChannelFinished(func) {
 SDL.channelFinished = func;
}
function _emscripten_glVertexAttribDivisor(index, divisor) {
 GLctx["vertexAttribDivisor"](index, divisor);
}
function _emscripten_glDrawElementsInstanced(mode, count, type, indices, primcount) {
 GLctx["drawElementsInstanced"](mode, count, type, indices, primcount);
}
function _SDL_WM_ToggleFullScreen(surf) {
 if (Browser.isFullScreen) {
  Module["canvas"].cancelFullScreen();
  return 1;
 } else {
  if (!SDL.canRequestFullscreen) {
   return 0;
  }
  SDL.isRequestingFullscreen = true;
  return 1;
 }
}
function _glMultMatrixf(matrix) {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.multiply(GLImmediate.matrix[GLImmediate.currentMatrix], HEAPF32.subarray(matrix >> 2, matrix + 64 >> 2));
}
function _glColor4f(r, g, b, a) {
 r = Math.max(Math.min(r, 1), 0);
 g = Math.max(Math.min(g, 1), 0);
 b = Math.max(Math.min(b, 1), 0);
 a = Math.max(Math.min(a, 1), 0);
 if (GLImmediate.mode >= 0) {
  var start = GLImmediate.vertexCounter << 2;
  GLImmediate.vertexDataU8[start + 0] = r * 255;
  GLImmediate.vertexDataU8[start + 1] = g * 255;
  GLImmediate.vertexDataU8[start + 2] = b * 255;
  GLImmediate.vertexDataU8[start + 3] = a * 255;
  GLImmediate.vertexCounter++;
  GLImmediate.addRendererComponent(GLImmediate.COLOR, 4, GLctx.UNSIGNED_BYTE);
 } else {
  GLImmediate.clientColor[0] = r;
  GLImmediate.clientColor[1] = g;
  GLImmediate.clientColor[2] = b;
  GLImmediate.clientColor[3] = a;
 }
}
function _emscripten_glCreateProgram() {
 var id = GL.getNewId(GL.programs);
 var program = GLctx.createProgram();
 program.name = id;
 GL.programs[id] = program;
 return id;
}
function _emscripten_glCompressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data) {
 var heapView;
 if (data) {
  heapView = HEAPU8.subarray(data, data + imageSize);
 } else {
  heapView = null;
 }
 GLctx["compressedTexImage2D"](target, level, internalFormat, width, height, border, heapView);
}
function _emscripten_glClearColor(x0, x1, x2, x3) {
 GLctx.clearColor(x0, x1, x2, x3);
}
function ___unlock() {}
function ___syscall146(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doWritev(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
var _llvm_fabs_f64 = Math_abs;
function _SDL_VideoModeOK(width, height, depth, flags) {
 return depth;
}
function _emscripten_glLoadMatrixf(matrix) {
 GLImmediate.matricesModified = true;
 GLImmediate.matrixVersion[GLImmediate.currentMatrix] = GLImmediate.matrixVersion[GLImmediate.currentMatrix] + 1 | 0;
 GLImmediate.matrixLib.mat4.set(HEAPF32.subarray(matrix >> 2, matrix + 64 >> 2), GLImmediate.matrix[GLImmediate.currentMatrix]);
}
function _SDL_GetModState() {
 return SDL.modState;
}
function _SDL_CreateRGBSurface(flags, width, height, depth, rmask, gmask, bmask, amask) {
 return SDL.makeSurface(width, height, flags, false, "CreateRGBSurface", rmask, gmask, bmask, amask);
}
function _glCullFace(x0) {
 GLctx.cullFace(x0);
}
function _SDL_ListModes(format, flags) {
 return -1;
}
function _SDL_FreeSurface(surf) {
 if (surf) SDL.freeSurface(surf);
}
function _emscripten_glColorPointer(size, type, stride, pointer) {
 GLImmediate.setClientAttribute(GLImmediate.COLOR, size, type, stride, pointer);
}
function _glViewport(x0, x1, x2, x3) {
 GLctx.viewport(x0, x1, x2, x3);
}
function __emscripten_push_main_loop_blocker(func, arg, name) {
 Browser.mainLoop.queue.push({
  func: (function() {
   Runtime.dynCall("vi", func, [ arg ]);
  }),
  name: Pointer_stringify(name),
  counted: true
 });
 Browser.mainLoop.updateStatus();
}
function _emscripten_glFlush() {
 GLctx.flush();
}
function _SDL_Delay(delay) {
 if (!ENVIRONMENT_IS_WORKER) abort("SDL_Delay called on the main thread! Potential infinite loop, quitting.");
 var now = Date.now();
 while (Date.now() - now < delay) {}
}
function _glDepthMask(x0) {
 GLctx.depthMask(x0);
}
function _emscripten_glCreateShader(shaderType) {
 var id = GL.getNewId(GL.shaders);
 GL.shaders[id] = GLctx.createShader(shaderType);
 return id;
}
function _emscripten_glColor3f(r, g, b) {
 _emscripten_glColor4f(r, g, b, 1);
}
function _glColor3fv(p) {
 _emscripten_glColor3f(HEAPF32[p >> 2], HEAPF32[p + 4 >> 2], HEAPF32[p + 8 >> 2]);
}
function _glClearDepth(x0) {
 GLctx.clearDepth(x0);
}
function _emscripten_glIsShader(shader) {
 var s = GL.shaders[shader];
 if (!s) return 0;
 return GLctx.isShader(s);
}
function _glColorPointer(size, type, stride, pointer) {
 GLImmediate.setClientAttribute(GLImmediate.COLOR, size, type, stride, pointer);
}
function _Mix_FadeOutChannel() {
 throw "Mix_FadeOutChannel";
}
function _glTexParameteri(x0, x1, x2) {
 GLctx.texParameteri(x0, x1, x2);
}
function _glFrontFace(x0) {
 GLctx.frontFace(x0);
}
function _emscripten_glColorMask(x0, x1, x2, x3) {
 GLctx.colorMask(x0, x1, x2, x3);
}
function _emscripten_glPixelStorei(pname, param) {
 if (pname == 3333) {
  GL.packAlignment = param;
 } else if (pname == 3317) {
  GL.unpackAlignment = param;
 }
 GLctx.pixelStorei(pname, param);
}
function _pthread_cleanup_pop() {
 assert(_pthread_cleanup_push.level == __ATEXIT__.length, "cannot pop if something else added meanwhile!");
 __ATEXIT__.pop();
 _pthread_cleanup_push.level = __ATEXIT__.length;
}
function _Mix_ResumeMusic() {
 var audio = SDL.music.audio;
 if (audio) audio.play();
 return 0;
}
function _glPixelStorei(pname, param) {
 if (pname == 3333) {
  GL.packAlignment = param;
 } else if (pname == 3317) {
  GL.unpackAlignment = param;
 }
 GLctx.pixelStorei(pname, param);
}
function _time(ptr) {
 var ret = Date.now() / 1e3 | 0;
 if (ptr) {
  HEAP32[ptr >> 2] = ret;
 }
 return ret;
}
function _pthread_self() {
 return 0;
}
function _emscripten_glGetBooleanv(name_, p) {
 emscriptenWebGLGet(name_, p, "Boolean");
}
function ___syscall221(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
  switch (cmd) {
  case 0:
   {
    var arg = SYSCALLS.get();
    if (arg < 0) {
     return -ERRNO_CODES.EINVAL;
    }
    var newStream;
    newStream = FS.open(stream.path, stream.flags, 0, arg);
    return newStream.fd;
   }
  case 1:
  case 2:
   return 0;
  case 3:
   return stream.flags;
  case 4:
   {
    var arg = SYSCALLS.get();
    stream.flags |= arg;
    return 0;
   }
  case 12:
  case 12:
   {
    var arg = SYSCALLS.get();
    var offset = 0;
    HEAP16[arg + offset >> 1] = 2;
    return 0;
   }
  case 13:
  case 14:
  case 13:
  case 14:
   return 0;
  case 16:
  case 8:
   return -ERRNO_CODES.EINVAL;
  case 9:
   ___setErrNo(ERRNO_CODES.EINVAL);
   return -1;
  default:
   {
    return -ERRNO_CODES.EINVAL;
   }
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall220(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), dirp = SYSCALLS.get(), count = SYSCALLS.get();
  if (!stream.getdents) {
   stream.getdents = FS.readdir(stream.path);
  }
  var pos = 0;
  while (stream.getdents.length > 0 && pos + 268 < count) {
   var id;
   var type;
   var name = stream.getdents.pop();
   assert(name.length < 256);
   if (name[0] === ".") {
    id = 1;
    type = 4;
   } else {
    var child = FS.lookupNode(stream.node, name);
    id = child.id;
    type = FS.isChrdev(child.mode) ? 2 : FS.isDir(child.mode) ? 4 : FS.isLink(child.mode) ? 10 : 8;
   }
   HEAP32[dirp + pos >> 2] = id;
   HEAP32[dirp + pos + 4 >> 2] = stream.position;
   HEAP16[dirp + pos + 8 >> 1] = 268;
   HEAP8[dirp + pos + 10 >> 0] = type;
   for (var i = 0; i < name.length; i++) {
    HEAP8[dirp + pos + (11 + i) >> 0] = name.charCodeAt(i);
   }
   HEAP8[dirp + pos + (11 + i) >> 0] = 0;
   pos += 268;
  }
  return pos;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
var GLctx;
GL.init();
FS.staticInit();
__ATINIT__.unshift((function() {
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
}));
__ATMAIN__.push((function() {
 FS.ignorePermissions = false;
}));
__ATEXIT__.push((function() {
 FS.quit();
}));
Module["FS_createFolder"] = FS.createFolder;
Module["FS_createPath"] = FS.createPath;
Module["FS_createDataFile"] = FS.createDataFile;
Module["FS_createPreloadedFile"] = FS.createPreloadedFile;
Module["FS_createLazyFile"] = FS.createLazyFile;
Module["FS_createLink"] = FS.createLink;
Module["FS_createDevice"] = FS.createDevice;
Module["FS_unlink"] = FS.unlink;
__ATINIT__.unshift((function() {
 TTY.init();
}));
__ATEXIT__.push((function() {
 TTY.shutdown();
}));
if (ENVIRONMENT_IS_NODE) {
 var fs = require("fs");
 var NODEJS_PATH = require("path");
 NODEFS.staticInit();
}
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) {
 Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice);
};
Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) {
 Browser.requestAnimationFrame(func);
};
Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) {
 Browser.setCanvasSize(width, height, noUpdates);
};
Module["pauseMainLoop"] = function Module_pauseMainLoop() {
 Browser.mainLoop.pause();
};
Module["resumeMainLoop"] = function Module_resumeMainLoop() {
 Browser.mainLoop.resume();
};
Module["getUserMedia"] = function Module_getUserMedia() {
 Browser.getUserMedia();
};
Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) {
 return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes);
};
___buildEnvironment(ENV);
GLEmulation.init();
GLImmediate.setupFuncs();
Browser.moduleContextCreatedCallbacks.push((function() {
 GLImmediate.init();
}));
__ATINIT__.push((function() {
 SOCKFS.root = FS.mount(SOCKFS, {}, null);
}));
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true;
STACK_MAX = STACK_BASE + TOTAL_STACK;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
var cttz_i8 = allocate([ 8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0 ], "i8", ALLOC_DYNAMIC);
function invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  return Module["dynCall_iiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiii(index, a1, a2, a3, a4, a5) {
 try {
  Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vd(index, a1) {
 try {
  Module["dynCall_vd"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vid(index, a1, a2) {
 try {
  Module["dynCall_vid"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiidi(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_iiidi"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vi(index, a1) {
 try {
  Module["dynCall_vi"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vii(index, a1, a2) {
 try {
  Module["dynCall_vii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_iiiiiii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_ii(index, a1) {
 try {
  return Module["dynCall_ii"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viidiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  Module["dynCall_viidiiii"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viddd(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_viddd"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_iiiiii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viddi(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_viddi"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vidd(index, a1, a2, a3) {
 try {
  Module["dynCall_vidd"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiii(index, a1, a2, a3) {
 try {
  return Module["dynCall_iiii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiidi(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  Module["dynCall_viiiiidi"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vdddd(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_vdddd"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 try {
  Module["dynCall_viiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 try {
  Module["dynCall_viiiiii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viii(index, a1, a2, a3) {
 try {
  Module["dynCall_viii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiiddiiiid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {
 try {
  Module["dynCall_viiiiiddiiiid"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vidddd(index, a1, a2, a3, a4, a5) {
 try {
  Module["dynCall_vidddd"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viid(index, a1, a2, a3) {
 try {
  Module["dynCall_viid"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  Module["dynCall_viiiiiii"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 try {
  Module["dynCall_viiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 try {
  Module["dynCall_viiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iii(index, a1, a2) {
 try {
  return Module["dynCall_iii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viidii(index, a1, a2, a3, a4, a5) {
 try {
  Module["dynCall_viidii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_i(index) {
 try {
  return Module["dynCall_i"](index);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiii(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vdddddd(index, a1, a2, a3, a4, a5, a6) {
 try {
  Module["dynCall_vdddddd"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_iiiiiidi(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  return Module["dynCall_iiiiiidi"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vdd(index, a1, a2) {
 try {
  Module["dynCall_vdd"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_v(index) {
 try {
  Module["dynCall_v"](index);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_vdi(index, a1, a2) {
 try {
  Module["dynCall_vdi"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
function invoke_viiii(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_viiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  asm["setThrew"](1, 0);
 }
}
Module.asmGlobalArg = {
 "Math": Math,
 "Int8Array": Int8Array,
 "Int16Array": Int16Array,
 "Int32Array": Int32Array,
 "Uint8Array": Uint8Array,
 "Uint16Array": Uint16Array,
 "Uint32Array": Uint32Array,
 "Float32Array": Float32Array,
 "Float64Array": Float64Array,
 "NaN": NaN,
 "Infinity": Infinity
};
Module.asmLibraryArg = {
 "abort": abort,
 "assert": assert,
 "invoke_iiiiiiii": invoke_iiiiiiii,
 "invoke_viiiii": invoke_viiiii,
 "invoke_vd": invoke_vd,
 "invoke_vid": invoke_vid,
 "invoke_iiidi": invoke_iiidi,
 "invoke_vi": invoke_vi,
 "invoke_vii": invoke_vii,
 "invoke_iiiiiii": invoke_iiiiiii,
 "invoke_ii": invoke_ii,
 "invoke_viidiiii": invoke_viidiiii,
 "invoke_viddd": invoke_viddd,
 "invoke_iiiiii": invoke_iiiiii,
 "invoke_viddi": invoke_viddi,
 "invoke_vidd": invoke_vidd,
 "invoke_iiii": invoke_iiii,
 "invoke_viiiiidi": invoke_viiiiidi,
 "invoke_vdddd": invoke_vdddd,
 "invoke_viiiiiiii": invoke_viiiiiiii,
 "invoke_viiiiii": invoke_viiiiii,
 "invoke_viii": invoke_viii,
 "invoke_viiiiiddiiiid": invoke_viiiiiddiiiid,
 "invoke_vidddd": invoke_vidddd,
 "invoke_viid": invoke_viid,
 "invoke_viiiiiii": invoke_viiiiiii,
 "invoke_viiiiiiiii": invoke_viiiiiiiii,
 "invoke_viiiiiiiiii": invoke_viiiiiiiiii,
 "invoke_iii": invoke_iii,
 "invoke_viidii": invoke_viidii,
 "invoke_i": invoke_i,
 "invoke_iiiii": invoke_iiiii,
 "invoke_vdddddd": invoke_vdddddd,
 "invoke_iiiiiidi": invoke_iiiiiidi,
 "invoke_vdd": invoke_vdd,
 "invoke_v": invoke_v,
 "invoke_vdi": invoke_vdi,
 "invoke_viiii": invoke_viiii,
 "_emscripten_glGetTexParameterfv": _emscripten_glGetTexParameterfv,
 "___syscall221": ___syscall221,
 "__inet_ntop6_raw": __inet_ntop6_raw,
 "___syscall220": ___syscall220,
 "_emscripten_glBlendFuncSeparate": _emscripten_glBlendFuncSeparate,
 "_emscripten_glGetIntegerv": _emscripten_glGetIntegerv,
 "_glClearColor": _glClearColor,
 "___assert_fail": ___assert_fail,
 "_emscripten_glDepthFunc": _emscripten_glDepthFunc,
 "_glTranslatef": _glTranslatef,
 "_glDisableVertexAttribArray": _glDisableVertexAttribArray,
 "_emscripten_memcpy_big": _emscripten_memcpy_big,
 "_emscripten_glUniform1f": _emscripten_glUniform1f,
 "emscriptenWebGLComputeImageSize": emscriptenWebGLComputeImageSize,
 "_emscripten_glUniform1i": _emscripten_glUniform1i,
 "_emscripten_glIsProgram": _emscripten_glIsProgram,
 "_glScalef": _glScalef,
 "_glOrtho": _glOrtho,
 "_emscripten_glTexParameteriv": _emscripten_glTexParameteriv,
 "___syscall140": ___syscall140,
 "___syscall142": ___syscall142,
 "___syscall145": ___syscall145,
 "___syscall146": ___syscall146,
 "_emscripten_glAttachShader": _emscripten_glAttachShader,
 "_SDL_CreateCond": _SDL_CreateCond,
 "_emscripten_glTexParameterfv": _emscripten_glTexParameterfv,
 "__inet_ntop4_raw": __inet_ntop4_raw,
 "_emscripten_glUniformMatrix2fv": _emscripten_glUniformMatrix2fv,
 "_glColor3fv": _glColor3fv,
 "_SDL_GetTicks": _SDL_GetTicks,
 "_emscripten_glDrawArraysInstanced": _emscripten_glDrawArraysInstanced,
 "_glDepthMask": _glDepthMask,
 "_emscripten_glVertexAttrib2fv": _emscripten_glVertexAttrib2fv,
 "_glViewport": _glViewport,
 "_emscripten_glFlush": _emscripten_glFlush,
 "_SDL_WarpMouse": _SDL_WarpMouse,
 "_glFogi": _glFogi,
 "_emscripten_glGetAttribLocation": _emscripten_glGetAttribLocation,
 "_glTexCoord4f": _glTexCoord4f,
 "_glAttachShader": _glAttachShader,
 "_emscripten_glTexCoordPointer": _emscripten_glTexCoordPointer,
 "_SDL_ListModes": _SDL_ListModes,
 "__emscripten_push_main_loop_blocker": __emscripten_push_main_loop_blocker,
 "_Mix_Volume": _Mix_Volume,
 "_emscripten_glLoadMatrixf": _emscripten_glLoadMatrixf,
 "_emscripten_glStencilFuncSeparate": _emscripten_glStencilFuncSeparate,
 "_emscripten_glVertexAttrib3f": _emscripten_glVertexAttrib3f,
 "_glColor3f": _glColor3f,
 "_glFogfv": _glFogfv,
 "_emscripten_run_script": _emscripten_run_script,
 "_glCullFace": _glCullFace,
 "_SDL_SetAlpha": _SDL_SetAlpha,
 "_SDL_CreateMutex": _SDL_CreateMutex,
 "_Mix_PausedMusic": _Mix_PausedMusic,
 "_SDL_UnlockAudio": _SDL_UnlockAudio,
 "_SDL_EnableUNICODE": _SDL_EnableUNICODE,
 "_emscripten_glUniform1iv": _emscripten_glUniform1iv,
 "emscriptenWebGLGetUniform": emscriptenWebGLGetUniform,
 "_Mix_LoadMUS": _Mix_LoadMUS,
 "_glPolygonMode": _glPolygonMode,
 "_SDL_CreateThread": _SDL_CreateThread,
 "_emscripten_glVertexAttrib4fv": _emscripten_glVertexAttrib4fv,
 "_glDrawArrays": _glDrawArrays,
 "_glCreateShader": _glCreateShader,
 "_emscripten_glDepthRange": _emscripten_glDepthRange,
 "_glActiveTexture": _glActiveTexture,
 "_glTexGeni": _glTexGeni,
 "_emscripten_asm_const_iii": _emscripten_asm_const_iii,
 "_Mix_ChannelFinished": _Mix_ChannelFinished,
 "_emscripten_glCopyTexImage2D": _emscripten_glCopyTexImage2D,
 "_emscripten_glFramebufferTexture2D": _emscripten_glFramebufferTexture2D,
 "_glEnableVertexAttribArray": _glEnableVertexAttribArray,
 "_emscripten_glStencilFunc": _emscripten_glStencilFunc,
 "_Mix_VolumeMusic": _Mix_VolumeMusic,
 "_localtime": _localtime,
 "_emscripten_glUniform1fv": _emscripten_glUniform1fv,
 "_emscripten_glRenderbufferStorage": _emscripten_glRenderbufferStorage,
 "_Mix_PlayMusic": _Mix_PlayMusic,
 "___syscall5": ___syscall5,
 "_emscripten_glVertexPointer": _emscripten_glVertexPointer,
 "__read_sockaddr": __read_sockaddr,
 "_glLinkProgram": _glLinkProgram,
 "_emscripten_glGetUniformfv": _emscripten_glGetUniformfv,
 "_SDL_FreeRW": _SDL_FreeRW,
 "_Mix_LoadWAV_RW": _Mix_LoadWAV_RW,
 "_emscripten_glStencilOp": _emscripten_glStencilOp,
 "_emscripten_glBlendEquation": _emscripten_glBlendEquation,
 "_glVertex3f": _glVertex3f,
 "_pthread_self": _pthread_self,
 "_SDL_AddTimer": _SDL_AddTimer,
 "_glClearDepth": _glClearDepth,
 "_TTF_SizeText": _TTF_SizeText,
 "_emscripten_glBufferSubData": _emscripten_glBufferSubData,
 "_emscripten_glGetProgramInfoLog": _emscripten_glGetProgramInfoLog,
 "_emscripten_glUniform4fv": _emscripten_glUniform4fv,
 "_SDL_DestroyCond": _SDL_DestroyCond,
 "_emscripten_glUniform2fv": _emscripten_glUniform2fv,
 "_emscripten_glBindBuffer": _emscripten_glBindBuffer,
 "_emscripten_glGetFloatv": _emscripten_glGetFloatv,
 "_SDL_EnableKeyRepeat": _SDL_EnableKeyRepeat,
 "_glTexSubImage2D": _glTexSubImage2D,
 "_glUseProgram": _glUseProgram,
 "_emscripten_glColor3f": _emscripten_glColor3f,
 "_emscripten_glCullFace": _emscripten_glCullFace,
 "_llvm_fabs_f64": _llvm_fabs_f64,
 "_glColor3ubv": _glColor3ubv,
 "_emscripten_glStencilMaskSeparate": _emscripten_glStencilMaskSeparate,
 "_emscripten_glUniform3fv": _emscripten_glUniform3fv,
 "_glBindBuffer": _glBindBuffer,
 "_emscripten_glDisableVertexAttribArray": _emscripten_glDisableVertexAttribArray,
 "_TTF_RenderText_Solid": _TTF_RenderText_Solid,
 "_glPolygonOffset": _glPolygonOffset,
 "_Mix_QuerySpec": _Mix_QuerySpec,
 "_glLoadMatrixf": _glLoadMatrixf,
 "_emscripten_glGetBooleanv": _emscripten_glGetBooleanv,
 "_emscripten_glVertexAttribDivisor": _emscripten_glVertexAttribDivisor,
 "_emscripten_glGenBuffers": _emscripten_glGenBuffers,
 "_glLoadIdentity": _glLoadIdentity,
 "_IMG_Load": _IMG_Load,
 "_emscripten_glVertexAttribPointer": _emscripten_glVertexAttribPointer,
 "__write_sockaddr": __write_sockaddr,
 "_emscripten_glIsEnabled": _emscripten_glIsEnabled,
 "_Mix_HaltMusic": _Mix_HaltMusic,
 "_emulGlDeleteVertexArrays": _emulGlDeleteVertexArrays,
 "_emscripten_glColor4ub": _emscripten_glColor4ub,
 "_emscripten_glGetActiveAttrib": _emscripten_glGetActiveAttrib,
 "_SDL_WaitThread": _SDL_WaitThread,
 "_glHint": _glHint,
 "_SDL_GL_SetAttribute": _SDL_GL_SetAttribute,
 "_SDL_CreateRGBSurfaceFrom": _SDL_CreateRGBSurfaceFrom,
 "_ctime": _ctime,
 "_glGetTexLevelParameteriv": _glGetTexLevelParameteriv,
 "_Mix_CloseAudio": _Mix_CloseAudio,
 "_SDL_CondWaitTimeout": _SDL_CondWaitTimeout,
 "_SDL_LockAudio": _SDL_LockAudio,
 "_emscripten_glClear": _emscripten_glClear,
 "_glDrawElements": _glDrawElements,
 "___cxa_guard_release": ___cxa_guard_release,
 "_emscripten_glValidateProgram": _emscripten_glValidateProgram,
 "_emscripten_glUniform4iv": _emscripten_glUniform4iv,
 "___setErrNo": ___setErrNo,
 "_emscripten_glVertexAttrib2f": _emscripten_glVertexAttrib2f,
 "_mktime": _mktime,
 "_emscripten_glGetError": _emscripten_glGetError,
 "_emscripten_glBufferData": _emscripten_glBufferData,
 "_SDL_SetGamma": _SDL_SetGamma,
 "_emscripten_glVertexAttrib1fv": _emscripten_glVertexAttrib1fv,
 "_glGenTextures": _glGenTextures,
 "_glGetIntegerv": _glGetIntegerv,
 "_emscripten_glClearStencil": _emscripten_glClearStencil,
 "emscriptenWebGLGet": emscriptenWebGLGet,
 "_Mix_SetPostMix": _Mix_SetPostMix,
 "_emscripten_glFinish": _emscripten_glFinish,
 "_emscripten_glClearDepth": _emscripten_glClearDepth,
 "_SDL_SetVideoMode": _SDL_SetVideoMode,
 "_SDL_UpperBlitScaled": _SDL_UpperBlitScaled,
 "_emscripten_glUniform4i": _emscripten_glUniform4i,
 "_llvm_pow_f64": _llvm_pow_f64,
 "_emscripten_glUniform4f": _emscripten_glUniform4f,
 "_emscripten_glBlendFunc": _emscripten_glBlendFunc,
 "_emscripten_glStencilMask": _emscripten_glStencilMask,
 "_SDL_PumpEvents": _SDL_PumpEvents,
 "_Mix_FreeMusic": _Mix_FreeMusic,
 "_localtime_r": _localtime_r,
 "_glBindTexture": _glBindTexture,
 "_SDL_WM_GrabInput": _SDL_WM_GrabInput,
 "_glGetFloatv": _glGetFloatv,
 "_Mix_PlayingMusic": _Mix_PlayingMusic,
 "_strftime": _strftime,
 "_emscripten_glGetVertexAttribiv": _emscripten_glGetVertexAttribiv,
 "_glReadPixels": _glReadPixels,
 "_emulGlGenVertexArrays": _emulGlGenVertexArrays,
 "_emscripten_glUniformMatrix3fv": _emscripten_glUniformMatrix3fv,
 "___syscall33": ___syscall33,
 "___syscall39": ___syscall39,
 "___syscall38": ___syscall38,
 "_SDL_GL_GetProcAddress": _SDL_GL_GetProcAddress,
 "_SDL_PeepEvents": _SDL_PeepEvents,
 "_glFrontFace": _glFrontFace,
 "_emscripten_glGetObjectParameterivARB": _emscripten_glGetObjectParameterivARB,
 "_emscripten_glGetUniformiv": _emscripten_glGetUniformiv,
 "_Mix_PlayChannelTimed": _Mix_PlayChannelTimed,
 "___syscall168": ___syscall168,
 "_glScissor": _glScissor,
 "_SDL_CondBroadcast": _SDL_CondBroadcast,
 "_emscripten_glTexSubImage2D": _emscripten_glTexSubImage2D,
 "_emscripten_glDeleteTextures": _emscripten_glDeleteTextures,
 "_emscripten_glTexCoord2i": _emscripten_glTexCoord2i,
 "_SDL_GetVideoInfo": _SDL_GetVideoInfo,
 "_SDL_PollEvent": _SDL_PollEvent,
 "_Mix_OpenAudio": _Mix_OpenAudio,
 "__exit": __exit,
 "_IMG_Load_RW": _IMG_Load_RW,
 "_SDL_AllocRW": _SDL_AllocRW,
 "_glBindAttribLocation": _glBindAttribLocation,
 "_emscripten_glColor4f": _emscripten_glColor4f,
 "_emscripten_glBindTexture": _emscripten_glBindTexture,
 "_emscripten_glGenRenderbuffers": _emscripten_glGenRenderbuffers,
 "_glEnd": _glEnd,
 "_emscripten_set_main_loop": _emscripten_set_main_loop,
 "_emscripten_glIsShader": _emscripten_glIsShader,
 "_glColor3ub": _glColor3ub,
 "_emscripten_glCompressedTexImage2D": _emscripten_glCompressedTexImage2D,
 "_glMultMatrixf": _glMultMatrixf,
 "_glDisable": _glDisable,
 "_emscripten_glGetInfoLogARB": _emscripten_glGetInfoLogARB,
 "_ctime_r": _ctime_r,
 "_atexit": _atexit,
 "_emscripten_glDeleteVertexArrays": _emscripten_glDeleteVertexArrays,
 "_emscripten_glReleaseShaderCompiler": _emscripten_glReleaseShaderCompiler,
 "_SDL_RemoveTimer": _SDL_RemoveTimer,
 "___cxa_guard_acquire": ___cxa_guard_acquire,
 "_SDL_RWFromFile": _SDL_RWFromFile,
 "_emscripten_glFrontFace": _emscripten_glFrontFace,
 "_glDeleteProgram": _glDeleteProgram,
 "_glDepthRange": _glDepthRange,
 "_emscripten_glUseProgram": _emscripten_glUseProgram,
 "_Mix_AllocateChannels": _Mix_AllocateChannels,
 "__addDays": __addDays,
 "_glLightfv": _glLightfv,
 "_SDL_GetError": _SDL_GetError,
 "_glDeleteTextures": _glDeleteTextures,
 "_glBlendFunc": _glBlendFunc,
 "_emscripten_glUniform3iv": _emscripten_glUniform3iv,
 "_Mix_PlayChannel": _Mix_PlayChannel,
 "_glTexGenfv": _glTexGenfv,
 "_emscripten_glReadPixels": _emscripten_glReadPixels,
 "_sysconf": _sysconf,
 "_glTexCoord2f": _glTexCoord2f,
 "_emscripten_run_script_int": _emscripten_run_script_int,
 "_glMaterialfv": _glMaterialfv,
 "_SDL_GetModState": _SDL_GetModState,
 "_glShaderSource": _glShaderSource,
 "_emscripten_glScissor": _emscripten_glScissor,
 "_Mix_FadeOutChannel": _Mix_FadeOutChannel,
 "_pthread_cleanup_push": _pthread_cleanup_push,
 "_glVertexPointer": _glVertexPointer,
 "_glGetBooleanv": _glGetBooleanv,
 "_glVertex3fv": _glVertex3fv,
 "_SDL_WasInit": _SDL_WasInit,
 "_emscripten_glIsBuffer": _emscripten_glIsBuffer,
 "_emscripten_glVertexAttrib1f": _emscripten_glVertexAttrib1f,
 "_Mix_Linked_Version": _Mix_Linked_Version,
 "_glVertexAttribPointer": _glVertexAttribPointer,
 "_emscripten_glCompressedTexSubImage2D": _emscripten_glCompressedTexSubImage2D,
 "_emscripten_glGetAttachedShaders": _emscripten_glGetAttachedShaders,
 "_emscripten_glGenTextures": _emscripten_glGenTextures,
 "_SDL_LockSurface": _SDL_LockSurface,
 "_emscripten_glGetTexParameteriv": _emscripten_glGetTexParameteriv,
 "_glTexImage1D": _glTexImage1D,
 "_SDL_ThreadID": _SDL_ThreadID,
 "_emscripten_glClientActiveTexture": _emscripten_glClientActiveTexture,
 "_SDL_SaveBMP_RW": _SDL_SaveBMP_RW,
 "_emscripten_glCheckFramebufferStatus": _emscripten_glCheckFramebufferStatus,
 "_Mix_FadingChannel": _Mix_FadingChannel,
 "_emscripten_glUniform3f": _emscripten_glUniform3f,
 "_emscripten_glUniform3i": _emscripten_glUniform3i,
 "_emscripten_glDeleteShader": _emscripten_glDeleteShader,
 "_glEnable": _glEnable,
 "_glGetString": _glGetString,
 "_SDL_GetThreadID": _SDL_GetThreadID,
 "_emscripten_glGetUniformLocation": _emscripten_glGetUniformLocation,
 "_glPushMatrix": _glPushMatrix,
 "_emscripten_glEnableVertexAttribArray": _emscripten_glEnableVertexAttribArray,
 "_SDL_CreateRGBSurface": _SDL_CreateRGBSurface,
 "_emscripten_set_main_loop_expected_blockers": _emscripten_set_main_loop_expected_blockers,
 "_emscripten_glColor3ub": _emscripten_glColor3ub,
 "emscriptenWebGLGetTexPixelData": emscriptenWebGLGetTexPixelData,
 "_glDetachShader": _glDetachShader,
 "_gettimeofday": _gettimeofday,
 "_emscripten_glEnableClientState": _emscripten_glEnableClientState,
 "_SDL_ShowCursor": _SDL_ShowCursor,
 "_gethostbyname_r": _gethostbyname_r,
 "_TTF_FontHeight": _TTF_FontHeight,
 "_Mix_ResumeMusic": _Mix_ResumeMusic,
 "_SDL_Delay": _SDL_Delay,
 "_emscripten_glDrawElements": _emscripten_glDrawElements,
 "___buildEnvironment": ___buildEnvironment,
 "_glDrawBuffer": _glDrawBuffer,
 "_emulGlBindVertexArray": _emulGlBindVertexArray,
 "_Mix_LoadWAV": _Mix_LoadWAV,
 "_tzset": _tzset,
 "_glIsEnabled": _glIsEnabled,
 "_SDL_Init": _SDL_Init,
 "_emscripten_glDisable": _emscripten_glDisable,
 "_glFogf": _glFogf,
 "_emscripten_glDeleteRenderbuffers": _emscripten_glDeleteRenderbuffers,
 "_emscripten_glDrawElementsInstanced": _emscripten_glDrawElementsInstanced,
 "_emscripten_glVertexAttrib4f": _emscripten_glVertexAttrib4f,
 "_emscripten_glPixelStorei": _emscripten_glPixelStorei,
 "_asctime_r": _asctime_r,
 "_getenv": _getenv,
 "_SDL_CondWait": _SDL_CondWait,
 "__emscripten_push_uncounted_main_loop_blocker": __emscripten_push_uncounted_main_loop_blocker,
 "_glTexCoordPointer": _glTexCoordPointer,
 "_gethostbyname": _gethostbyname,
 "_emscripten_glFramebufferRenderbuffer": _emscripten_glFramebufferRenderbuffer,
 "_glReadBuffer": _glReadBuffer,
 "_emscripten_glRotatef": _emscripten_glRotatef,
 "_emscripten_glGetShaderiv": _emscripten_glGetShaderiv,
 "___cxa_pure_virtual": ___cxa_pure_virtual,
 "_emscripten_glUniformMatrix4fv": _emscripten_glUniformMatrix4fv,
 "_emscripten_glGetPointerv": _emscripten_glGetPointerv,
 "_emscripten_glIsRenderbuffer": _emscripten_glIsRenderbuffer,
 "_emscripten_glFogf": _emscripten_glFogf,
 "___syscall40": ___syscall40,
 "__inet_pton6_raw": __inet_pton6_raw,
 "_emscripten_glGetVertexAttribfv": _emscripten_glGetVertexAttribfv,
 "_SDL_PauseAudio": _SDL_PauseAudio,
 "_emscripten_glVertexAttrib3fv": _emscripten_glVertexAttrib3fv,
 "_emscripten_glCompileShader": _emscripten_glCompileShader,
 "_glClear": _glClear,
 "_glPopMatrix": _glPopMatrix,
 "_glLightModelfv": _glLightModelfv,
 "_SDL_WM_SetCaption": _SDL_WM_SetCaption,
 "__arraySum": __arraySum,
 "_emscripten_glLinkProgram": _emscripten_glLinkProgram,
 "_Mix_HaltChannel": _Mix_HaltChannel,
 "_emscripten_glDrawRangeElements": _emscripten_glDrawRangeElements,
 "_SDL_DestroyMutex": _SDL_DestroyMutex,
 "___unlock": ___unlock,
 "_glColor4ub": _glColor4ub,
 "_emscripten_glDeleteFramebuffers": _emscripten_glDeleteFramebuffers,
 "_glColorMask": _glColorMask,
 "_emscripten_glClearColor": _emscripten_glClearColor,
 "_glCopyTexSubImage2D": _glCopyTexSubImage2D,
 "_emscripten_glCreateProgram": _emscripten_glCreateProgram,
 "_SDL_VideoModeOK": _SDL_VideoModeOK,
 "_glTexParameteri": _glTexParameteri,
 "_glFrustum": _glFrustum,
 "_emscripten_glDetachShader": _emscripten_glDetachShader,
 "_SDL_RWFromConstMem": _SDL_RWFromConstMem,
 "_glColor4ubv": _glColor4ubv,
 "_emscripten_glGetShaderPrecisionFormat": _emscripten_glGetShaderPrecisionFormat,
 "_glLineWidth": _glLineWidth,
 "_glTexCoord3f": _glTexCoord3f,
 "_emscripten_glDrawArrays": _emscripten_glDrawArrays,
 "_emscripten_glPolygonOffset": _emscripten_glPolygonOffset,
 "_emscripten_glBlendColor": _emscripten_glBlendColor,
 "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing,
 "_sbrk": _sbrk,
 "_SDL_FreeSurface": _SDL_FreeSurface,
 "_emscripten_glGetProgramiv": _emscripten_glGetProgramiv,
 "_emscripten_glGetShaderSource": _emscripten_glGetShaderSource,
 "_Mix_LoadMUS_RW": _Mix_LoadMUS_RW,
 "_emscripten_glTexImage2D": _emscripten_glTexImage2D,
 "__isLeapYear": __isLeapYear,
 "_Mix_SetPanning": _Mix_SetPanning,
 "_emscripten_glBlendEquationSeparate": _emscripten_glBlendEquationSeparate,
 "_emscripten_glGetString": _emscripten_glGetString,
 "_emscripten_glIsFramebuffer": _emscripten_glIsFramebuffer,
 "_emscripten_glBindProgramARB": _emscripten_glBindProgramARB,
 "_emscripten_glUniform2i": _emscripten_glUniform2i,
 "_emscripten_glUniform2f": _emscripten_glUniform2f,
 "_glBegin": _glBegin,
 "_emscripten_glTexParameterf": _emscripten_glTexParameterf,
 "_emscripten_glTexParameteri": _emscripten_glTexParameteri,
 "_glTexEnvfv": _glTexEnvfv,
 "_emscripten_glColorMask": _emscripten_glColorMask,
 "_glTexCoord2fv": _glTexCoord2fv,
 "_emscripten_hide_mouse": _emscripten_hide_mouse,
 "_emscripten_glGenVertexArrays": _emscripten_glGenVertexArrays,
 "_emscripten_glStencilOpSeparate": _emscripten_glStencilOpSeparate,
 "_emscripten_glBindAttribLocation": _emscripten_glBindAttribLocation,
 "_glDepthFunc": _glDepthFunc,
 "_Mix_FadeInChannelTimed": _Mix_FadeInChannelTimed,
 "_emscripten_glClearDepthf": _emscripten_glClearDepthf,
 "_emscripten_glMatrixMode": _emscripten_glMatrixMode,
 "___syscall10": ___syscall10,
 "_emscripten_glNormalPointer": _emscripten_glNormalPointer,
 "_emscripten_glBindVertexArray": _emscripten_glBindVertexArray,
 "_emscripten_glEnable": _emscripten_glEnable,
 "___lock": ___lock,
 "_emscripten_glBindFramebuffer": _emscripten_glBindFramebuffer,
 "___syscall6": ___syscall6,
 "_SDL_CondSignal": _SDL_CondSignal,
 "_emscripten_glBindRenderbuffer": _emscripten_glBindRenderbuffer,
 "_time": _time,
 "_emscripten_glGetFramebufferAttachmentParameteriv": _emscripten_glGetFramebufferAttachmentParameteriv,
 "_exit": _exit,
 "_glVertex2i": _glVertex2i,
 "_pthread_cleanup_pop": _pthread_cleanup_pop,
 "__inet_pton4_raw": __inet_pton4_raw,
 "_putenv": _putenv,
 "___syscall102": ___syscall102,
 "___syscall265": ___syscall265,
 "_glColor4f": _glColor4f,
 "_glVertex2f": _glVertex2f,
 "_emscripten_glShaderBinary": _emscripten_glShaderBinary,
 "_emscripten_glGetShaderInfoLog": _emscripten_glGetShaderInfoLog,
 "_emscripten_glGetVertexAttribPointerv": _emscripten_glGetVertexAttribPointerv,
 "_glNormalPointer": _glNormalPointer,
 "_emscripten_glGetActiveUniform": _emscripten_glGetActiveUniform,
 "emscriptenWebGLGetVertexAttrib": emscriptenWebGLGetVertexAttrib,
 "_emscripten_glDeleteProgram": _emscripten_glDeleteProgram,
 "_glColor4fv": _glColor4fv,
 "_emscripten_glCreateShader": _emscripten_glCreateShader,
 "_emscripten_glColorPointer": _emscripten_glColorPointer,
 "_emscripten_glGetBufferParameteriv": _emscripten_glGetBufferParameteriv,
 "_emscripten_glViewport": _emscripten_glViewport,
 "_emscripten_glDepthMask": _emscripten_glDepthMask,
 "_emscripten_glDrawBuffers": _emscripten_glDrawBuffers,
 "_emscripten_glLineWidth": _emscripten_glLineWidth,
 "_glCompileShader": _glCompileShader,
 "_glRotatef": _glRotatef,
 "_abort": _abort,
 "_emscripten_glGenerateMipmap": _emscripten_glGenerateMipmap,
 "_glTexImage2D": _glTexImage2D,
 "_emscripten_glGenFramebuffers": _emscripten_glGenFramebuffers,
 "_SDL_Quit": _SDL_Quit,
 "_glDisableClientState": _glDisableClientState,
 "_glFlush": _glFlush,
 "_emscripten_glLoadIdentity": _emscripten_glLoadIdentity,
 "_glEnableClientState": _glEnableClientState,
 "_emscripten_glVertex3f": _emscripten_glVertex3f,
 "_emscripten_glShaderSource": _emscripten_glShaderSource,
 "_SDL_CloseAudio": _SDL_CloseAudio,
 "_glMatrixMode": _glMatrixMode,
 "_glTexEnvi": _glTexEnvi,
 "_emscripten_glGetRenderbufferParameteriv": _emscripten_glGetRenderbufferParameteriv,
 "_glColorPointer": _glColorPointer,
 "_emscripten_glSampleCoverage": _emscripten_glSampleCoverage,
 "_emscripten_glFrustum": _emscripten_glFrustum,
 "_Mix_FreeChunk": _Mix_FreeChunk,
 "_emscripten_glDepthRangef": _emscripten_glDepthRangef,
 "_glPixelStorei": _glPixelStorei,
 "_glCopyTexImage2D": _glCopyTexImage2D,
 "_emscripten_glIsTexture": _emscripten_glIsTexture,
 "_SDL_WM_ToggleFullScreen": _SDL_WM_ToggleFullScreen,
 "_emscripten_glHint": _emscripten_glHint,
 "_glShadeModel": _glShadeModel,
 "_emscripten_glDeleteObjectARB": _emscripten_glDeleteObjectARB,
 "_emscripten_glActiveTexture": _emscripten_glActiveTexture,
 "_emscripten_glDeleteBuffers": _emscripten_glDeleteBuffers,
 "___syscall54": ___syscall54,
 "_SDL_mutexP": _SDL_mutexP,
 "_SDL_AudioQuit": _SDL_AudioQuit,
 "_emscripten_glUniform2iv": _emscripten_glUniform2iv,
 "_SDL_mutexV": _SDL_mutexV,
 "_glAlphaFunc": _glAlphaFunc,
 "_SDL_GL_SwapBuffers": _SDL_GL_SwapBuffers,
 "_emscripten_glCopyTexSubImage2D": _emscripten_glCopyTexSubImage2D,
 "_SDL_UpperBlit": _SDL_UpperBlit,
 "STACKTOP": STACKTOP,
 "STACK_MAX": STACK_MAX,
 "tempDoublePtr": tempDoublePtr,
 "ABORT": ABORT,
 "cttz_i8": cttz_i8
};
// EMSCRIPTEN_START_ASM

var asm =Module["asm"]// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var __GLOBAL__sub_I_client_cpp_2999 = Module["__GLOBAL__sub_I_client_cpp_2999"] = asm["__GLOBAL__sub_I_client_cpp_2999"];
var __GLOBAL__sub_I_movie_cpp = Module["__GLOBAL__sub_I_movie_cpp"] = asm["__GLOBAL__sub_I_movie_cpp"];
var _main = Module["_main"] = asm["_main"];
var __GLOBAL__sub_I_serverbrowser_cpp = Module["__GLOBAL__sub_I_serverbrowser_cpp"] = asm["__GLOBAL__sub_I_serverbrowser_cpp"];
var __GLOBAL__sub_I_dynlight_cpp = Module["__GLOBAL__sub_I_dynlight_cpp"] = asm["__GLOBAL__sub_I_dynlight_cpp"];
var __GLOBAL__sub_I_console_cpp = Module["__GLOBAL__sub_I_console_cpp"] = asm["__GLOBAL__sub_I_console_cpp"];
var __GLOBAL__sub_I_stream_cpp = Module["__GLOBAL__sub_I_stream_cpp"] = asm["__GLOBAL__sub_I_stream_cpp"];
var __GLOBAL__sub_I_renderva_cpp = Module["__GLOBAL__sub_I_renderva_cpp"] = asm["__GLOBAL__sub_I_renderva_cpp"];
var __GLOBAL__sub_I_material_cpp = Module["__GLOBAL__sub_I_material_cpp"] = asm["__GLOBAL__sub_I_material_cpp"];
var __GLOBAL__sub_I_3dgui_cpp = Module["__GLOBAL__sub_I_3dgui_cpp"] = asm["__GLOBAL__sub_I_3dgui_cpp"];
var __GLOBAL__sub_I_rendergl_cpp = Module["__GLOBAL__sub_I_rendergl_cpp"] = asm["__GLOBAL__sub_I_rendergl_cpp"];
var __GLOBAL__sub_I_octarender_cpp = Module["__GLOBAL__sub_I_octarender_cpp"] = asm["__GLOBAL__sub_I_octarender_cpp"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var __GLOBAL__sub_I_shader_cpp = Module["__GLOBAL__sub_I_shader_cpp"] = asm["__GLOBAL__sub_I_shader_cpp"];
var ___cxx_global_var_init_178 = Module["___cxx_global_var_init_178"] = asm["___cxx_global_var_init_178"];
var ___cxx_global_var_init_179 = Module["___cxx_global_var_init_179"] = asm["___cxx_global_var_init_179"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var __GLOBAL__sub_I_pvs_cpp = Module["__GLOBAL__sub_I_pvs_cpp"] = asm["__GLOBAL__sub_I_pvs_cpp"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var __Z10executestrPKc = Module["__Z10executestrPKc"] = asm["__Z10executestrPKc"];
var __GLOBAL__sub_I_zip_cpp = Module["__GLOBAL__sub_I_zip_cpp"] = asm["__GLOBAL__sub_I_zip_cpp"];
var __GLOBAL__sub_I_server_cpp = Module["__GLOBAL__sub_I_server_cpp"] = asm["__GLOBAL__sub_I_server_cpp"];
var __ZN4game18setplayermodelinfoEPKcS1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_b = Module["__ZN4game18setplayermodelinfoEPKcS1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_b"] = asm["__ZN4game18setplayermodelinfoEPKcS1_S1_S1_S1_S1_S1_S1_S1_S1_S1_S1_b"];
var __GLOBAL__sub_I_octaedit_cpp = Module["__GLOBAL__sub_I_octaedit_cpp"] = asm["__GLOBAL__sub_I_octaedit_cpp"];
var __GLOBAL__sub_I_worldio_cpp = Module["__GLOBAL__sub_I_worldio_cpp"] = asm["__GLOBAL__sub_I_worldio_cpp"];
var _memset = Module["_memset"] = asm["_memset"];
var __GLOBAL__sub_I_blob_cpp = Module["__GLOBAL__sub_I_blob_cpp"] = asm["__GLOBAL__sub_I_blob_cpp"];
var __GLOBAL__sub_I_rendersky_cpp = Module["__GLOBAL__sub_I_rendersky_cpp"] = asm["__GLOBAL__sub_I_rendersky_cpp"];
var __GLOBAL__sub_I_cubeloader_cpp = Module["__GLOBAL__sub_I_cubeloader_cpp"] = asm["__GLOBAL__sub_I_cubeloader_cpp"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var __GLOBAL__sub_I_fps_cpp = Module["__GLOBAL__sub_I_fps_cpp"] = asm["__GLOBAL__sub_I_fps_cpp"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var _fileno = Module["_fileno"] = asm["_fileno"];
var __GLOBAL__sub_I_decal_cpp = Module["__GLOBAL__sub_I_decal_cpp"] = asm["__GLOBAL__sub_I_decal_cpp"];
var __GLOBAL__sub_I_water_cpp = Module["__GLOBAL__sub_I_water_cpp"] = asm["__GLOBAL__sub_I_water_cpp"];
var __GLOBAL__sub_I_normal_cpp = Module["__GLOBAL__sub_I_normal_cpp"] = asm["__GLOBAL__sub_I_normal_cpp"];
var _bb_splash = Module["_bb_splash"] = asm["_bb_splash"];
var __GLOBAL__sub_I_glare_cpp = Module["__GLOBAL__sub_I_glare_cpp"] = asm["__GLOBAL__sub_I_glare_cpp"];
var __GLOBAL__sub_I_weapon_cpp = Module["__GLOBAL__sub_I_weapon_cpp"] = asm["__GLOBAL__sub_I_weapon_cpp"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var __GLOBAL__sub_I_movable_cpp = Module["__GLOBAL__sub_I_movable_cpp"] = asm["__GLOBAL__sub_I_movable_cpp"];
var __GLOBAL__sub_I_crypto_cpp = Module["__GLOBAL__sub_I_crypto_cpp"] = asm["__GLOBAL__sub_I_crypto_cpp"];
var _ntohs = Module["_ntohs"] = asm["_ntohs"];
var _htonl = Module["_htonl"] = asm["_htonl"];
var __GLOBAL__sub_I_octa_cpp = Module["__GLOBAL__sub_I_octa_cpp"] = asm["__GLOBAL__sub_I_octa_cpp"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var __GLOBAL__sub_I_shadowmap_cpp = Module["__GLOBAL__sub_I_shadowmap_cpp"] = asm["__GLOBAL__sub_I_shadowmap_cpp"];
var __GLOBAL__sub_I_rendermodel_cpp = Module["__GLOBAL__sub_I_rendermodel_cpp"] = asm["__GLOBAL__sub_I_rendermodel_cpp"];
var __GLOBAL__sub_I_render_cpp = Module["__GLOBAL__sub_I_render_cpp"] = asm["__GLOBAL__sub_I_render_cpp"];
var __GLOBAL__sub_I_grass_cpp = Module["__GLOBAL__sub_I_grass_cpp"] = asm["__GLOBAL__sub_I_grass_cpp"];
var __GLOBAL__sub_I_main_cpp = Module["__GLOBAL__sub_I_main_cpp"] = asm["__GLOBAL__sub_I_main_cpp"];
var __GLOBAL__sub_I_monster_cpp = Module["__GLOBAL__sub_I_monster_cpp"] = asm["__GLOBAL__sub_I_monster_cpp"];
var __GLOBAL__sub_I_physics_cpp = Module["__GLOBAL__sub_I_physics_cpp"] = asm["__GLOBAL__sub_I_physics_cpp"];
var __GLOBAL__sub_I_world_cpp = Module["__GLOBAL__sub_I_world_cpp"] = asm["__GLOBAL__sub_I_world_cpp"];
var _setforcecamera = Module["_setforcecamera"] = asm["_setforcecamera"];
var _htons = Module["_htons"] = asm["_htons"];
var _emscripten_GetProcAddress = Module["_emscripten_GetProcAddress"] = asm["_emscripten_GetProcAddress"];
var __GLOBAL__sub_I_menus_cpp = Module["__GLOBAL__sub_I_menus_cpp"] = asm["__GLOBAL__sub_I_menus_cpp"];
var __GLOBAL__sub_I_command_cpp = Module["__GLOBAL__sub_I_command_cpp"] = asm["__GLOBAL__sub_I_command_cpp"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___cxx_global_var_init_180 = Module["___cxx_global_var_init_180"] = asm["___cxx_global_var_init_180"];
var __Z7executePKc = Module["__Z7executePKc"] = asm["__Z7executePKc"];
var __GLOBAL__sub_I_entities_cpp = Module["__GLOBAL__sub_I_entities_cpp"] = asm["__GLOBAL__sub_I_entities_cpp"];
var _free = Module["_free"] = asm["_free"];
var __GLOBAL__sub_I_rendertext_cpp = Module["__GLOBAL__sub_I_rendertext_cpp"] = asm["__GLOBAL__sub_I_rendertext_cpp"];
var __GLOBAL__sub_I_server_cpp_3934 = Module["__GLOBAL__sub_I_server_cpp_3934"] = asm["__GLOBAL__sub_I_server_cpp_3934"];
var __GLOBAL__sub_I_scoreboard_cpp = Module["__GLOBAL__sub_I_scoreboard_cpp"] = asm["__GLOBAL__sub_I_scoreboard_cpp"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _strstr = Module["_strstr"] = asm["_strstr"];
var __GLOBAL__sub_I_renderparticles_cpp = Module["__GLOBAL__sub_I_renderparticles_cpp"] = asm["__GLOBAL__sub_I_renderparticles_cpp"];
var __GLOBAL__sub_I_blend_cpp = Module["__GLOBAL__sub_I_blend_cpp"] = asm["__GLOBAL__sub_I_blend_cpp"];
var _bb_playsoundname = Module["_bb_playsoundname"] = asm["_bb_playsoundname"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var __GLOBAL__sub_I_texture_cpp = Module["__GLOBAL__sub_I_texture_cpp"] = asm["__GLOBAL__sub_I_texture_cpp"];
var __GLOBAL__sub_I_waypoint_cpp = Module["__GLOBAL__sub_I_waypoint_cpp"] = asm["__GLOBAL__sub_I_waypoint_cpp"];
var __GLOBAL__sub_I_lightmap_cpp = Module["__GLOBAL__sub_I_lightmap_cpp"] = asm["__GLOBAL__sub_I_lightmap_cpp"];
var __GLOBAL__sub_I_client_cpp = Module["__GLOBAL__sub_I_client_cpp"] = asm["__GLOBAL__sub_I_client_cpp"];
var __GLOBAL__sub_I_sound_cpp = Module["__GLOBAL__sub_I_sound_cpp"] = asm["__GLOBAL__sub_I_sound_cpp"];
var __GLOBAL__sub_I_ai_cpp = Module["__GLOBAL__sub_I_ai_cpp"] = asm["__GLOBAL__sub_I_ai_cpp"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vd = Module["dynCall_vd"] = asm["dynCall_vd"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_iiidi = Module["dynCall_iiidi"] = asm["dynCall_iiidi"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viidiiii = Module["dynCall_viidiiii"] = asm["dynCall_viidiiii"];
var dynCall_viddd = Module["dynCall_viddd"] = asm["dynCall_viddd"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viddi = Module["dynCall_viddi"] = asm["dynCall_viddi"];
var dynCall_vidd = Module["dynCall_vidd"] = asm["dynCall_vidd"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiidi = Module["dynCall_viiiiidi"] = asm["dynCall_viiiiidi"];
var dynCall_vdddd = Module["dynCall_vdddd"] = asm["dynCall_vdddd"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiiiiddiiiid = Module["dynCall_viiiiiddiiiid"] = asm["dynCall_viiiiiddiiiid"];
var dynCall_vidddd = Module["dynCall_vidddd"] = asm["dynCall_vidddd"];
var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_viidii = Module["dynCall_viidii"] = asm["dynCall_viidii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_vdddddd = Module["dynCall_vdddddd"] = asm["dynCall_vdddddd"];
var dynCall_iiiiiidi = Module["dynCall_iiiiiidi"] = asm["dynCall_iiiiiidi"];
var dynCall_vdd = Module["dynCall_vdd"] = asm["dynCall_vdd"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_vdi = Module["dynCall_vdi"] = asm["dynCall_vdi"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = asm["stackAlloc"];
Runtime.stackSave = asm["stackSave"];
Runtime.stackRestore = asm["stackRestore"];
Runtime.establishStackSpace = asm["establishStackSpace"];
Runtime.setTempRet0 = asm["setTempRet0"];
Runtime.getTempRet0 = asm["getTempRet0"];
if (memoryInitializer) {
 if (typeof Module["locateFile"] === "function") {
  memoryInitializer = Module["locateFile"](memoryInitializer);
 } else if (Module["memoryInitializerPrefixURL"]) {
  memoryInitializer = Module["memoryInitializerPrefixURL"] + memoryInitializer;
 }
 if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
  var data = Module["readBinary"](memoryInitializer);
  HEAPU8.set(data, Runtime.GLOBAL_BASE);
 } else {
  addRunDependency("memory initializer");
  var applyMemoryInitializer = (function(data) {
   if (data.byteLength) data = new Uint8Array(data);
   HEAPU8.set(data, Runtime.GLOBAL_BASE);
   if (Module["memoryInitializerRequest"]) delete Module["memoryInitializerRequest"].response;
   removeRunDependency("memory initializer");
  });
  function doBrowserLoad() {
   Module["readAsync"](memoryInitializer, applyMemoryInitializer, (function() {
    throw "could not load memory initializer " + memoryInitializer;
   }));
  }
  if (Module["memoryInitializerRequest"]) {
   function useRequest() {
    var request = Module["memoryInitializerRequest"];
    if (request.status !== 200 && request.status !== 0) {
     console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: " + request.status + ", retrying " + memoryInitializer);
     doBrowserLoad();
     return;
    }
    applyMemoryInitializer(request.response);
   }
   if (Module["memoryInitializerRequest"].response) {
    setTimeout(useRequest, 0);
   } else {
    Module["memoryInitializerRequest"].addEventListener("load", useRequest);
   }
  } else {
   doBrowserLoad();
  }
 }
}
function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = "Program terminated with exit(" + status + ")";
 this.status = status;
}
ExitStatus.prototype = new Error;
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
 if (!Module["calledRun"]) run();
 if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
};
Module["callMain"] = Module.callMain = function callMain(args) {
 args = args || [];
 ensureInitRuntime();
 var argc = args.length + 1;
 function pad() {
  for (var i = 0; i < 4 - 1; i++) {
   argv.push(0);
  }
 }
 var argv = [ allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL) ];
 pad();
 for (var i = 0; i < argc - 1; i = i + 1) {
  argv.push(allocate(intArrayFromString(args[i]), "i8", ALLOC_NORMAL));
  pad();
 }
 argv.push(0);
 argv = allocate(argv, "i32", ALLOC_NORMAL);
 try {
  var ret = Module["_main"](argc, argv, 0);
  exit(ret, true);
 } catch (e) {
  if (e instanceof ExitStatus) {
   return;
  } else if (e == "SimulateInfiniteLoop") {
   Module["noExitRuntime"] = true;
   return;
  } else {
   if (e && typeof e === "object" && e.stack) Module.printErr("exception thrown: " + [ e, e.stack ]);
   throw e;
  }
 } finally {
  calledMain = true;
 }
};
function run(args) {
 args = args || Module["arguments"];
 if (preloadStartTime === null) preloadStartTime = Date.now();
 if (runDependencies > 0) {
  return;
 }
 preRun();
 if (runDependencies > 0) return;
 if (Module["calledRun"]) return;
 function doRun() {
  if (Module["calledRun"]) return;
  Module["calledRun"] = true;
  if (ABORT) return;
  ensureInitRuntime();
  preMain();
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  if (Module["_main"] && shouldRunNow) Module["callMain"](args);
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout((function() {
   setTimeout((function() {
    Module["setStatus"]("");
   }), 1);
   doRun();
  }), 1);
 } else {
  doRun();
 }
}
Module["run"] = Module.run = run;
function exit(status, implicit) {
 if (implicit && Module["noExitRuntime"]) {
  return;
 }
 if (Module["noExitRuntime"]) {} else {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  exitRuntime();
  if (Module["onExit"]) Module["onExit"](status);
 }
 if (ENVIRONMENT_IS_NODE) {
  process["exit"](status);
 } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
  quit(status);
 }
 throw new ExitStatus(status);
}
Module["exit"] = Module.exit = exit;
var abortDecorators = [];
function abort(what) {
 if (what !== undefined) {
  Module.print(what);
  Module.printErr(what);
  what = JSON.stringify(what);
 } else {
  what = "";
 }
 ABORT = true;
 EXITSTATUS = 1;
 var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";
 var output = "abort(" + what + ") at " + stackTrace() + extra;
 if (abortDecorators) {
  abortDecorators.forEach((function(decorator) {
   output = decorator(output, what);
  }));
 }
 throw output;
}
Module["abort"] = Module.abort = abort;
if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}
var shouldRunNow = true;
if (Module["noInitialRun"]) {
 shouldRunNow = false;
}
Module["noExitRuntime"] = true;
run();




